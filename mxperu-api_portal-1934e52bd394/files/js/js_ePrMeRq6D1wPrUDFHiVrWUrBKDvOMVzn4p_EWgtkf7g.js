/*!
Waypoints - 4.0.0
Copyright Â© 2011-2015 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blog/master/licenses.txt
*/
!function(){"use strict";function t(o){if(!o)throw new Error("No options passed to Waypoint constructor");if(!o.element)throw new Error("No element option passed to Waypoint constructor");if(!o.handler)throw new Error("No handler option passed to Waypoint constructor");this.key="waypoint-"+e,this.options=t.Adapter.extend({},t.defaults,o),this.element=this.options.element,this.adapter=new t.Adapter(this.element),this.callback=o.handler,this.axis=this.options.horizontal?"horizontal":"vertical",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=t.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=t.Context.findOrCreateByElement(this.options.context),t.offsetAliases[this.options.offset]&&(this.options.offset=t.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),i[this.key]=this,e+=1}var e=0,i={};t.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},t.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},t.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete i[this.key]},t.prototype.disable=function(){return this.enabled=!1,this},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},t.prototype.next=function(){return this.group.next(this)},t.prototype.previous=function(){return this.group.previous(this)},t.invokeAll=function(t){var e=[];for(var o in i)e.push(i[o]);for(var n=0,r=e.length;r>n;n++)e[n][t]()},t.destroyAll=function(){t.invokeAll("destroy")},t.disableAll=function(){t.invokeAll("disable")},t.enableAll=function(){t.invokeAll("enable")},t.refreshAll=function(){t.Context.refreshAll()},t.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},t.viewportWidth=function(){return document.documentElement.clientWidth},t.adapters=[],t.defaults={context:window,continuous:!0,enabled:!0,group:"default",horizontal:!1,offset:0},t.offsetAliases={"bottom-in-view":function(){return this.context.innerHeight()-this.adapter.outerHeight()},"right-in-view":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=t}(),function(){"use strict";function t(t){window.setTimeout(t,1e3/60)}function e(t){this.element=t,this.Adapter=n.Adapter,this.adapter=new this.Adapter(t),this.key="waypoint-context-"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,o[t.waypointContextKey]=this,i+=1,this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var i=0,o={},n=window.Waypoint,r=window.onload;e.prototype.add=function(t){var e=t.options.horizontal?"horizontal":"vertical";this.waypoints[e][t.key]=t,this.refresh()},e.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical);t&&e&&(this.adapter.off(".waypoints"),delete o[this.key])},e.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on("resize.waypoints",function(){e.didResize||(e.didResize=!0,n.requestAnimationFrame(t))})},e.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on("scroll.waypoints",function(){(!e.didScroll||n.isTouch)&&(e.didScroll=!0,n.requestAnimationFrame(t))})},e.prototype.handleResize=function(){n.Context.refreshAll()},e.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:"right",backward:"left"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:"down",backward:"up"}};for(var i in e){var o=e[i],n=o.newScroll>o.oldScroll,r=n?o.forward:o.backward;for(var s in this.waypoints[i]){var a=this.waypoints[i][s],l=o.oldScroll<a.triggerPoint,h=o.newScroll>=a.triggerPoint,p=l&&h,u=!l&&!h;(p||u)&&(a.queueTrigger(r),t[a.group.id]=a.group)}}for(var c in t)t[c].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.innerHeight=function(){return this.element==this.element.window?n.viewportHeight():this.adapter.innerHeight()},e.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},e.prototype.innerWidth=function(){return this.element==this.element.window?n.viewportWidth():this.adapter.innerWidth()},e.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var o=0,n=t.length;n>o;o++)t[o].destroy()},e.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),o={};this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:"right",backward:"left",offsetProp:"left"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:"down",backward:"up",offsetProp:"top"}};for(var r in t){var s=t[r];for(var a in this.waypoints[r]){var l,h,p,u,c,d=this.waypoints[r][a],f=d.options.offset,w=d.triggerPoint,y=0,g=null==w;d.element!==d.element.window&&(y=d.adapter.offset()[s.offsetProp]),"function"==typeof f?f=f.apply(d):"string"==typeof f&&(f=parseFloat(f),d.options.offset.indexOf("%")>-1&&(f=Math.ceil(s.contextDimension*f/100))),l=s.contextScroll-s.contextOffset,d.triggerPoint=y+l-f,h=w<s.oldScroll,p=d.triggerPoint>=s.oldScroll,u=h&&p,c=!h&&!p,!g&&u?(d.queueTrigger(s.backward),o[d.group.id]=d.group):!g&&c?(d.queueTrigger(s.forward),o[d.group.id]=d.group):g&&s.oldScroll>=d.triggerPoint&&(d.queueTrigger(s.forward),o[d.group.id]=d.group)}}return n.requestAnimationFrame(function(){for(var t in o)o[t].flushTriggers()}),this},e.findOrCreateByElement=function(t){return e.findByElement(t)||new e(t)},e.refreshAll=function(){for(var t in o)o[t].refresh()},e.findByElement=function(t){return o[t.waypointContextKey]},window.onload=function(){r&&r(),e.refreshAll()},n.requestAnimationFrame=function(e){var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t;i.call(window,e)},n.Context=e}(),function(){"use strict";function t(t,e){return t.triggerPoint-e.triggerPoint}function e(t,e){return e.triggerPoint-t.triggerPoint}function i(t){this.name=t.name,this.axis=t.axis,this.id=this.name+"-"+this.axis,this.waypoints=[],this.clearTriggerQueues(),o[this.axis][this.name]=this}var o={vertical:{},horizontal:{}},n=window.Waypoint;i.prototype.add=function(t){this.waypoints.push(t)},i.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},i.prototype.flushTriggers=function(){for(var i in this.triggerQueues){var o=this.triggerQueues[i],n="up"===i||"left"===i;o.sort(n?e:t);for(var r=0,s=o.length;s>r;r+=1){var a=o[r];(a.options.continuous||r===o.length-1)&&a.trigger([i])}}this.clearTriggerQueues()},i.prototype.next=function(e){this.waypoints.sort(t);var i=n.Adapter.inArray(e,this.waypoints),o=i===this.waypoints.length-1;return o?null:this.waypoints[i+1]},i.prototype.previous=function(e){this.waypoints.sort(t);var i=n.Adapter.inArray(e,this.waypoints);return i?this.waypoints[i-1]:null},i.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},i.prototype.remove=function(t){var e=n.Adapter.inArray(t,this.waypoints);e>-1&&this.waypoints.splice(e,1)},i.prototype.first=function(){return this.waypoints[0]},i.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},i.findOrCreate=function(t){return o[t.axis][t.name]||new i(t)},n.Group=i}(),function(){"use strict";function t(t){this.$element=e(t)}var e=window.jQuery,i=window.Waypoint;e.each(["innerHeight","innerWidth","off","offset","on","outerHeight","outerWidth","scrollLeft","scrollTop"],function(e,i){t.prototype[i]=function(){var t=Array.prototype.slice.call(arguments);return this.$element[i].apply(this.$element,t)}}),e.each(["extend","inArray","isEmptyObject"],function(i,o){t[o]=e[o]}),i.adapters.push({name:"jquery",Adapter:t}),i.Adapter=t}(),function(){"use strict";function t(t){return function(){var i=[],o=arguments[0];return t.isFunction(arguments[0])&&(o=t.extend({},arguments[1]),o.handler=arguments[0]),this.each(function(){var n=t.extend({},o,{element:this});"string"==typeof n.context&&(n.context=t(this).closest(n.context)[0]),i.push(new e(n))}),i}}var e=window.Waypoint;window.jQuery&&(window.jQuery.fn.waypoint=t(window.jQuery)),window.Zepto&&(window.Zepto.fn.waypoint=t(window.Zepto))}();;
/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 *
 * (C) Copyright IBM Corporation 2016, 2019
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
(function e(t, n, r) {
    function s(o, u) {
        if (!n[o]) {
            if (!t[o]) {
                var a = typeof require == "function" && require;
                if (!u && a)return a(o, !0);
                if (i)return i(o, !0);
                var f = new Error("Cannot find module '" + o + "'");
                throw f.code = "MODULE_NOT_FOUND", f
            }
            var l = n[o] = {exports: {}};
            t[o][0].call(l.exports, function (e) {
                var n = t[o][1][e];
                return s(n ? n : e)
            }, l, l.exports, e, t, n, r)
        }
        return n[o].exports
    }

    var i = typeof require == "function" && require;
    for (var o = 0; o < r.length; o++)s(r[o]);
    return s
})({
    1: [function (require, module, exports) {

        /**
         * This is the web browser implementation of `debug()`.
         *
         * Expose `debug()` as the module.
         */

        exports = module.exports = require('./debug');
        exports.log = log;
        exports.formatArgs = formatArgs;
        exports.save = save;
        exports.load = load;
        exports.useColors = useColors;
        exports.storage = 'undefined' != typeof chrome
        && 'undefined' != typeof chrome.storage
            ? chrome.storage.local
            : localstorage();

        /**
         * Colors.
         */

        exports.colors = [
            'lightseagreen',
            'forestgreen',
            'goldenrod',
            'dodgerblue',
            'darkorchid',
            'crimson'
        ];

        /**
         * Currently only WebKit-based Web Inspectors, Firefox >= v31,
         * and the Firebug extension (any Firefox version) are known
         * to support "%c" CSS customizations.
         *
         * TODO: add a `localStorage` variable to explicitly enable/disable colors
         */

        function useColors() {
            // is webkit? http://stackoverflow.com/a/16459606/376773
            return ('WebkitAppearance' in document.documentElement.style) ||
                    // is firebug? http://stackoverflow.com/a/398120/376773
                (window.console && (console.firebug || (console.exception && console.table))) ||
                    // is firefox >= v31?
                    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
                (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31);
        }

        /**
         * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
         */

        exports.formatters.j = function (v) {
            return JSON.stringify(v);
        };


        /**
         * Colorize log arguments if enabled.
         *
         * @api public
         */

        function formatArgs() {
            var args = arguments;
            var useColors = this.useColors;

            args[0] = (useColors ? '%c' : '')
                + this.namespace
                + (useColors ? ' %c' : ' ')
                + args[0]
                + (useColors ? '%c ' : ' ')
                + '+' + exports.humanize(this.diff);

            if (!useColors) return args;

            var c = 'color: ' + this.color;
            args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));

            // the final "%c" is somewhat tricky, because there could be other
            // arguments passed either before or after the %c, so we need to
            // figure out the correct index to insert the CSS into
            var index = 0;
            var lastC = 0;
            args[0].replace(/%[a-z%]/g, function (match) {
                if ('%%' === match) return;
                index++;
                if ('%c' === match) {
                    // we only are interested in the *last* %c
                    // (the user may have provided their own)
                    lastC = index;
            }
            });

            args.splice(lastC, 0, c);
            return args;
    }

        /**
         * Invokes `console.log()` when available.
         * No-op when `console.log` is not a "function".
         *
         * @api public
         */

        function log() {
            // this hackery is required for IE8/9, where
            // the `console.log` function doesn't have 'apply'
            return 'object' === typeof console
                && console.log
                && Function.prototype.apply.call(console.log, console, arguments);
        }

        /**
         * Save `namespaces`.
         *
         * @param {String} namespaces
         * @api private
         */

        function save(namespaces) {
            try {
                if (null == namespaces) {
                    exports.storage.removeItem('debug');
                } else {
                    exports.storage.debug = namespaces;
                }
            } catch (e) {
            }
        }

        /**
         * Load `namespaces`.
         *
         * @return {String} returns the previously persisted debug modes
         * @api private
         */

        function load() {
            var r;
            try {
                r = exports.storage.debug;
            } catch (e) {
            }
            return r;
        }

        /**
         * Enable namespaces listed in `localStorage.debug` initially.
         */

        exports.enable(load());

        /**
         * Localstorage attempts to return the localstorage.
         *
         * This is necessary because safari throws
         * when a user disables cookies/localstorage
         * and you attempt to access it.
         *
         * @return {LocalStorage}
         * @api private
         */

        function localstorage() {
            try {
                return window.localStorage;
            } catch (e) {
            }
        }

    }, {"./debug": 2}],
    2: [function (require, module, exports) {

        /**
         * This is the common logic for both the Node.js and web browser
         * implementations of `debug()`.
         *
         * Expose `debug()` as the module.
         */

        exports = module.exports = debug;
        exports.coerce = coerce;
        exports.disable = disable;
        exports.enable = enable;
        exports.enabled = enabled;
        exports.humanize = require('ms');

        /**
         * The currently active debug mode names, and names to skip.
         */

        exports.names = [];
        exports.skips = [];

        /**
         * Map of special "%n" handling functions, for the debug "format" argument.
         *
         * Valid key names are a single, lowercased letter, i.e. "n".
         */

        exports.formatters = {};

        /**
         * Previously assigned color.
         */

        var prevColor = 0;

        /**
         * Previous log timestamp.
         */

        var prevTime;

        /**
         * Select a color.
         *
         * @return {Number}
         * @api private
         */

        function selectColor() {
            return exports.colors[prevColor++ % exports.colors.length];
        }

        /**
         * Create a debugger with the given `namespace`.
         *
         * @param {String} namespace
         * @return {Function}
         * @api public
         */

        function debug(namespace) {

            // define the `disabled` version
            function disabled() {
            }

            disabled.enabled = false;

            // define the `enabled` version
            function enabled() {

                var self = enabled;

                // set `diff` timestamp
                var curr = +new Date();
                var ms = curr - (prevTime || curr);
                self.diff = ms;
                self.prev = prevTime;
                self.curr = curr;
                prevTime = curr;

                // add the `color` if not set
                if (null == self.useColors) self.useColors = exports.useColors();
                if (null == self.color && self.useColors) self.color = selectColor();

                var args = Array.prototype.slice.call(arguments);

                args[0] = exports.coerce(args[0]);

                if ('string' !== typeof args[0]) {
                    // anything else let's inspect with %o
                    args = ['%o'].concat(args);
                }

                // apply any `formatters` transformations
            var index = 0;
                args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {
                    // if we encounter an escaped % then don't increase the array index
                    if (match === '%%') return match;
                index++;
                    var formatter = exports.formatters[format];
                    if ('function' === typeof formatter) {
                        var val = args[index];
                        match = formatter.call(self, val);

                        // now we need to remove `args[index]` since it's inlined in the `format`
                        args.splice(index, 1);
                        index--;
                }
                    return match;
            });

                if ('function' === typeof exports.formatArgs) {
                    args = exports.formatArgs.apply(self, args);
            }
                var logFn = enabled.log || exports.log || console.log.bind(console);
                logFn.apply(self, args);
        }

            enabled.enabled = true;

            var fn = exports.enabled(namespace) ? enabled : disabled;

            fn.namespace = namespace;

            return fn;
        }

        /**
         * Enables a debug mode by namespaces. This can include modes
         * separated by a colon and wildcards.
         *
         * @param {String} namespaces
         * @api public
         */

        function enable(namespaces) {
            exports.save(namespaces);

            var split = (namespaces || '').split(/[\s,]+/);
            var len = split.length;

            for (var i = 0; i < len; i++) {
                if (!split[i]) continue; // ignore empty strings
                namespaces = split[i].replace(/\*/g, '.*?');
                if (namespaces[0] === '-') {
                    exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
                } else {
                    exports.names.push(new RegExp('^' + namespaces + '$'));
            }
        }
        }

        /**
         * Disable debug output.
         *
         * @api public
         */

        function disable() {
            exports.enable('');
        }

        /**
         * Returns true if the given mode name is enabled, false otherwise.
         *
         * @param {String} name
         * @return {Boolean}
         * @api public
         */

        function enabled(name) {
            var i, len;
            for (i = 0, len = exports.skips.length; i < len; i++) {
                if (exports.skips[i].test(name)) {
                    return false;
            }
        }
            for (i = 0, len = exports.names.length; i < len; i++) {
                if (exports.names[i].test(name)) {
                    return true;
            }
        }
            return false;
        }

        /**
         * Coerce `val`.
         *
         * @param {Mixed} val
         * @return {Mixed}
         * @api private
         */

        function coerce(val) {
            if (val instanceof Error) return val.stack || val.message;
            return val;
        }

    }, {"ms": 3}],
    3: [function (require, module, exports) {
        /**
         * Helpers.
         */

        var s = 1000;
        var m = s * 60;
        var h = m * 60;
        var d = h * 24;
        var y = d * 365.25;

        /**
         * Parse or format the given `val`.
         *
         * Options:
         *
         *  - `long` verbose formatting [false]
         *
         * @param {String|Number} val
         * @param {Object} options
         * @return {String|Number}
         * @api public
         */

        module.exports = function (val, options) {
            options = options || {};
            if ('string' == typeof val) return parse(val);
            return options.long
                ? long(val)
                : short(val);
        };

        /**
         * Parse the given `str` and return milliseconds.
         *
         * @param {String} str
         * @return {Number}
         * @api private
         */

        function parse(str) {
            str = '' + str;
            if (str.length > 10000) return;
            var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);
            if (!match) return;
            var n = parseFloat(match[1]);
            var type = (match[2] || 'ms').toLowerCase();
            switch (type) {
                case 'years':
                case 'year':
                case 'yrs':
                case 'yr':
                case 'y':
                    return n * y;
                case 'days':
                case 'day':
                case 'd':
                    return n * d;
                case 'hours':
                case 'hour':
                case 'hrs':
                case 'hr':
                case 'h':
                    return n * h;
                case 'minutes':
                case 'minute':
                case 'mins':
                case 'min':
                case 'm':
                    return n * m;
                case 'seconds':
                case 'second':
                case 'secs':
                case 'sec':
                case 's':
                    return n * s;
                case 'milliseconds':
                case 'millisecond':
                case 'msecs':
                case 'msec':
                case 'ms':
                    return n;
        }
        }

        /**
         * Short format for `ms`.
         *
         * @param {Number} ms
         * @return {String}
         * @api private
         */

        function short(ms) {
            if (ms >= d) return Math.round(ms / d) + 'd';
            if (ms >= h) return Math.round(ms / h) + 'h';
            if (ms >= m) return Math.round(ms / m) + 'm';
            if (ms >= s) return Math.round(ms / s) + 's';
            return ms + 'ms';
        }

        /**
         * Long format for `ms`.
         *
         * @param {Number} ms
         * @return {String}
         * @api private
         */

        function long(ms) {
            return plural(ms, d, 'day')
                || plural(ms, h, 'hour')
                || plural(ms, m, 'minute')
                || plural(ms, s, 'second')
                || ms + ' ms';
        }

        /**
         * Pluralization helper.
         */

        function plural(ms, n, name) {
            if (ms < n) return;
            if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;
            return Math.ceil(ms / n) + ' ' + name + 's';
        }

    }, {}],
    4: [function (require, module, exports) {
        (function (process, global, Buffer) {
//filter will reemit the data if cb(err,pass) pass is truthy

// reduce is more tricky
// maybe we want to group the reductions or emit progress updates occasionally
// the most basic reduce just emits one 'data' event after it has recieved 'end'

            var Stream = require('stream').Stream
                , es = exports
                , through = require('through')
                , from = require('from')
                , duplex = require('duplexer')
                , map = require('map-stream')
                , pause = require('pause-stream')
                , split = require('split')
                , pipeline = require('stream-combiner')
                , immediately = global.setImmediate || process.nextTick;

            es.Stream = Stream //re-export Stream from core
            es.through = through
            es.from = from
            es.duplex = duplex
            es.map = map
            es.pause = pause
            es.split = split
            es.pipeline = es.connect = es.pipe = pipeline
// merge / concat
//
// combine multiple streams into a single stream.
// will emit end only once

            es.concat = //actually this should be called concat
                es.merge = function (/*streams...*/) {
                    var toMerge = [].slice.call(arguments)
                    if (toMerge.length === 1 && (toMerge[0] instanceof Array)) {
                        toMerge = toMerge[0] //handle array as arguments object
                    }
                    var stream = new Stream()
                    stream.setMaxListeners(0) // allow adding more than 11 streams
                    var endCount = 0
                    stream.writable = stream.readable = true

                    toMerge.forEach(function (e) {
                        e.pipe(stream, {end: false})
                        var ended = false
                        e.on('end', function () {
                            if (ended) return
                            ended = true
                            endCount++
                            if (endCount == toMerge.length)
                                stream.emit('end')
                        })
                    })
                    stream.write = function (data) {
                        this.emit('data', data)
                    }
                    stream.destroy = function () {
                    toMerge.forEach(function (e) {
                        if (e.destroy) e.destroy()
                    })
                }
                    return stream
                }


// writable stream, collects all events into an array
// and calls back when 'end' occurs
// mainly I'm using this to test the other functions

            es.writeArray = function (done) {
                if ('function' !== typeof done)
                    throw new Error('function writeArray (done): done must be function')

                var a = new Stream()
                    , array = [], isDone = false
                a.write = function (l) {
                    array.push(l)
            }
                a.end = function () {
                    isDone = true
                    done(null, array)
                }
                a.writable = true
                a.readable = false
                a.destroy = function () {
                    a.writable = a.readable = false
                    if (isDone) return
                    done(new Error('destroyed before end'), array)
                }
                return a
            }

//return a Stream that reads the properties of an object
//respecting pause() and resume()

            es.readArray = function (array) {
                var stream = new Stream()
                    , i = 0
                    , paused = false
                    , ended = false

                stream.readable = true
                stream.writable = false

                if (!Array.isArray(array))
                    throw new Error('event-stream.read expects an array')

                stream.resume = function () {
                    if (ended) return
                    paused = false
                    var l = array.length
                    while (i < l && !paused && !ended) {
                        stream.emit('data', array[i++])
                }
                    if (i == l && !ended)
                        ended = true, stream.readable = false, stream.emit('end')
            }
                process.nextTick(stream.resume)
                stream.pause = function () {
                    paused = true
                }
                stream.destroy = function () {
                    ended = true
                    stream.emit('close')
                }
                return stream
            }

//
// readable (asyncFunction)
// return a stream that calls an async function while the stream is not paused.
//
// the function must take: (count, callback) {...
//

            es.readable =
                function (func, continueOnError) {
                    var stream = new Stream()
                        , i = 0
                        , paused = false
                        , ended = false
                        , reading = false

                    stream.readable = true
                    stream.writable = false

                    if ('function' !== typeof func)
                        throw new Error('event-stream.readable expects async function')

                    stream.on('end', function () {
                        ended = true
                    })

                    function get(err, data) {

                        if (err) {
                            stream.emit('error', err)
                            if (!continueOnError) stream.emit('end')
                        } else if (arguments.length > 1)
                            stream.emit('data', data)

                        immediately(function () {
                            if (ended || paused || reading) return
                            try {
                                reading = true
                                func.call(stream, i++, function () {
                                    reading = false
                                    get.apply(null, arguments)
                                })
                            } catch (err) {
                            stream.emit('error', err)
                            }
                        })
                }

                    stream.resume = function () {
                        paused = false
                        get()
                    }
                    process.nextTick(get)
                    stream.pause = function () {
                        paused = true
                    }
                    stream.destroy = function () {
                        stream.emit('end')
                        stream.emit('close')
                        ended = true
                    }
                    return stream
                }


//
// map sync
//

            es.mapSync = function (sync) {
                return es.through(function write(data) {
                    var mappedData = sync(data)
                    if (typeof mappedData !== 'undefined')
                        this.emit('data', mappedData)
                })
            }

//
// log just print out what is coming through the stream, for debugging
//

            es.log = function (name) {
                return es.through(function (data) {
                    var args = [].slice.call(arguments)
                    if (name) console.error(name, data)
                    else     console.error(data)
                    this.emit('data', data)
                })
            }


//
// child -- pipe through a child process
//

            es.child = function (child) {

                return es.duplex(child.stdin, child.stdout)

            }

//
// parse
//
// must be used after es.split() to ensure that each chunk represents a line
// source.pipe(es.split()).pipe(es.parse())

            es.parse = function (options) {
                var emitError = !!(options ? options.error : false)
                return es.through(function (data) {
                    var obj
                    try {
                        if (data) //ignore empty lines
                            obj = JSON.parse(data.toString())
                    } catch (err) {
                        if (emitError)
                            return this.emit('error', err)
                        return console.error(err, 'attempting to parse:', data)
                    }
                    //ignore lines that where only whitespace.
                    if (obj !== undefined)
                        this.emit('data', obj)
                })
            }
//
// stringify
//

            es.stringify = function () {
                var Buffer = require('buffer').Buffer
                return es.mapSync(function (e) {
                    return JSON.stringify(Buffer.isBuffer(e) ? e.toString() : e) + '\n'
                })
            }

//
// replace a string within a stream.
//
// warn: just concatenates the string and then does str.split().join().
// probably not optimal.
// for smallish responses, who cares?
// I need this for shadow-npm so it's only relatively small json files.

            es.replace = function (from, to) {
                return es.pipeline(es.split(from), es.join(to))
            }

//
// join chunks with a joiner. just like Array#join
// also accepts a callback that is passed the chunks appended together
// this is still supported for legacy reasons.
//

            es.join = function (str) {

                //legacy api
                if ('function' === typeof str)
                    return es.wait(str)

                var first = true
                return es.through(function (data) {
                    if (!first)
                        this.emit('data', str)
                    first = false
                    this.emit('data', data)
                    return true
                })
            }


//
// wait. callback when 'end' is emitted, with all chunks appended as string.
//

            es.wait = function (callback) {
                var arr = []
                return es.through(function (data) {
                        arr.push(data)
                    },
                    function () {
                        var body = Buffer.isBuffer(arr[0]) ? Buffer.concat(arr)
                            : arr.join('')
                        this.emit('data', body)
                        this.emit('end')
                        if (callback) callback(null, body)
                    })
            }

            es.pipeable = function () {
                throw new Error('[EVENT-STREAM] es.pipeable is deprecated')
            }

        }).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, require("buffer").Buffer)
    }, {
        "_process": 92,
        "buffer": 84,
        "duplexer": 5,
        "from": 6,
        "map-stream": 7,
        "pause-stream": 8,
        "split": 9,
        "stream": 110,
        "stream-combiner": 10,
        "through": 11
    }],
    5: [function (require, module, exports) {
        var Stream = require("stream")
        var writeMethods = ["write", "end", "destroy"]
        var readMethods = ["resume", "pause"]
        var readEvents = ["data", "close"]
        var slice = Array.prototype.slice

        module.exports = duplex

        function forEach(arr, fn) {
            if (arr.forEach) {
                return arr.forEach(fn)
            }

            for (var i = 0; i < arr.length; i++) {
                fn(arr[i], i)
        }
        }

        function duplex(writer, reader) {
            var stream = new Stream()
            var ended = false

            forEach(writeMethods, proxyWriter)

            forEach(readMethods, proxyReader)

            forEach(readEvents, proxyStream)

            reader.on("end", handleEnd)

            writer.on("drain", function () {
                stream.emit("drain")
            })

            writer.on("error", reemit)
            reader.on("error", reemit)

            stream.writable = writer.writable
            stream.readable = reader.readable

            return stream

            function proxyWriter(methodName) {
                stream[methodName] = method

                function method() {
                    return writer[methodName].apply(writer, arguments)
            }
            }

            function proxyReader(methodName) {
                stream[methodName] = method

                function method() {
                    stream.emit(methodName)
                    var func = reader[methodName]
                    if (func) {
                        return func.apply(reader, arguments)
                }
                    reader.emit(methodName)
            }
            }

            function proxyStream(methodName) {
                reader.on(methodName, reemit)

                function reemit() {
                var args = slice.call(arguments)
                    args.unshift(methodName)
                stream.emit.apply(stream, args)
            }
            }

            function handleEnd() {
                if (ended) {
                    return
            }
                ended = true
                var args = slice.call(arguments)
                args.unshift("end")
                stream.emit.apply(stream, args)
        }

            function reemit(err) {
                stream.emit("error", err)
            }
        }

    }, {"stream": 110}],
    6: [function (require, module, exports) {
        (function (process) {

            'use strict';

            var Stream = require('stream')

// from
//
// a stream that reads from an source.
// source may be an array, or a function.
// from handles pause behaviour for you.

            module.exports =
                function from(source) {
                    if (Array.isArray(source)) {
                        source = source.slice()
                        return from(function (i) {
                            if (source.length)
                                this.emit('data', source.shift())
                            else
                                this.emit('end')
                            return true
                        })
                    }
                    var s = new Stream(), i = 0
                    s.ended = false
                    s.started = false
                    s.readable = true
                    s.writable = false
                    s.paused = false
                    s.ended = false
                    s.pause = function () {
                        s.started = true
                        s.paused = true
                    }
                    function next() {
                        s.started = true
                        if (s.ended) return
                        while (!s.ended && !s.paused && source.call(s, i++, function () {
                            if (!s.ended && !s.paused)
                                next()
                        }))
                            ;
                    }

                    s.resume = function () {
                        s.started = true
                    s.paused = false
                        next()
                }
                    s.on('end', function () {
                        s.ended = true
                        s.readable = false
                        process.nextTick(s.destroy)
                    })
                    s.destroy = function () {
                        s.ended = true
                        s.emit('close')
                    }
                    /*
                     by default, the stream will start emitting at nextTick
                     if you want, you can pause it, after pipeing.
                     you can also resume before next tick, and that will also
                     work.
                     */
                    process.nextTick(function () {
                        if (!s.started) s.resume()
                    })
                    return s
                }

        }).call(this, require('_process'))
    }, {"_process": 92, "stream": 110}],
    7: [function (require, module, exports) {
        (function (process) {
//filter will reemit the data if cb(err,pass) pass is truthy

// reduce is more tricky
// maybe we want to group the reductions or emit progress updates occasionally
// the most basic reduce just emits one 'data' event after it has recieved 'end'


            var Stream = require('stream').Stream


//create an event stream and apply function to each .write
//emitting each response as data
//unless it's an empty callback

            module.exports = function (mapper, opts) {

                var stream = new Stream()
                    , self = this
                    , inputs = 0
                    , outputs = 0
                    , ended = false
                    , paused = false
                    , destroyed = false
                    , lastWritten = 0
                    , inNext = false

                this.opts = opts || {};
                var errorEventName = this.opts.failures ? 'failure' : 'error';

                // Items that are not ready to be written yet (because they would come out of
                // order) get stuck in a queue for later.
                var writeQueue = {}

                stream.writable = true
                stream.readable = true

                function queueData(data, number) {
                    var nextToWrite = lastWritten + 1

                    if (number === nextToWrite) {
                        // If it's next, and its not undefined write it
                    if (data !== undefined) {
                        stream.emit.apply(stream, ['data', data])
                    }
                        lastWritten++
                        nextToWrite++
                    } else {
                        // Otherwise queue it for later.
                        writeQueue[number] = data
                }

                    // If the next value is in the queue, write it
                    if (writeQueue.hasOwnProperty(nextToWrite)) {
                        var dataToWrite = writeQueue[nextToWrite]
                        delete writeQueue[nextToWrite]
                        return queueData(dataToWrite, nextToWrite)
                }

                    outputs++
                    if (inputs === outputs) {
                        if (paused) paused = false, stream.emit('drain') //written all the incoming events
                        if (ended) end()
                }
                }

                function next(err, data, number) {
                    if (destroyed) return
                    inNext = true

                    if (!err || self.opts.failures) {
                        queueData(data, number)
                }

                    if (err) {
                        stream.emit.apply(stream, [errorEventName, err]);
                }

                    inNext = false;
            }

                // Wrap the mapper function by calling its callback with the order number of
                // the item in the stream.
                function wrappedMapper(input, number, callback) {
                    return mapper.call(null, input, function (err, data) {
                        callback(err, data, number)
                    })
                }

                stream.write = function (data) {
                    if (ended) throw new Error('map stream is not writable')
                    inNext = false
                    inputs++

                    try {
                        //catch sync errors and handle them like async errors
                        var written = wrappedMapper(data, inputs, next)
                        paused = (written === false)
                        return !paused
                    } catch (err) {
                        //if the callback has been called syncronously, and the error
                        //has occured in an listener, throw it again.
                        if (inNext)
                            throw err
                        next(err)
                        return !paused
                    }
                }

                function end(data) {
                    //if end was called with args, write it,
                    ended = true //write will emit 'end' if ended is true
                    stream.writable = false
                    if (data !== undefined) {
                        return queueData(data, inputs)
                    } else if (inputs == outputs) { //wait for processing
                        stream.readable = false, stream.emit('end'), stream.destroy()
                    }
                }

                stream.end = function (data) {
                    if (ended) return
                    end()
                }

                stream.destroy = function () {
                    ended = destroyed = true
                    stream.writable = stream.readable = paused = false
                    process.nextTick(function () {
                        stream.emit('close')
                    })
                }
                stream.pause = function () {
                    paused = true
                }

                stream.resume = function () {
                    paused = false
                }

                return stream
            }


        }).call(this, require('_process'))
    }, {"_process": 92, "stream": 110}],
    8: [function (require, module, exports) {
//through@2 handles this by default!
        module.exports = require('through')


    }, {"through": 11}],
    9: [function (require, module, exports) {
//filter will reemit the data if cb(err,pass) pass is truthy

// reduce is more tricky
// maybe we want to group the reductions or emit progress updates occasionally
// the most basic reduce just emits one 'data' event after it has recieved 'end'


        var through = require('through')
        var Decoder = require('string_decoder').StringDecoder

        module.exports = split

//TODO pass in a function to map across the lines.

        function split(matcher, mapper, options) {
            var decoder = new Decoder()
            var soFar = ''
            var maxLength = options && options.maxLength;
            if ('function' === typeof matcher)
                mapper = matcher, matcher = null
            if (!matcher)
                matcher = /\r?\n/

            function emit(stream, piece) {
                if (mapper) {
                    try {
                        piece = mapper(piece)
                }
                    catch (err) {
                        return stream.emit('error', err)
                    }
                    if ('undefined' !== typeof piece)
                    stream.queue(piece)
            }
                else
                    stream.queue(piece)
            }

            function next(stream, buffer) {
                var pieces = ((soFar != null ? soFar : '') + buffer).split(matcher)
                soFar = pieces.pop()

                if (maxLength && soFar.length > maxLength)
                    stream.emit('error', new Error('maximum buffer reached'))

                for (var i = 0; i < pieces.length; i++) {
                    var piece = pieces[i]
                    emit(stream, piece)
            }
        }

            return through(function (b) {
                    next(this, decoder.write(b))
                },
                function () {
                    if (decoder.end)
                        next(this, decoder.end())
                    if (soFar != null)
                        emit(this, soFar)
                    this.queue(null)
                })
        }


    }, {"string_decoder": 111, "through": 11}],
    10: [function (require, module, exports) {
        var duplexer = require('duplexer')

        module.exports = function () {

            var streams = [].slice.call(arguments)
                , first = streams[0]
                , last = streams[streams.length - 1]
                , thepipe = duplexer(first, last)

            if (streams.length == 1)
                return streams[0]
            else if (!streams.length)
                throw new Error('connect called with empty args')

            //pipe all the streams together

            function recurse(streams) {
                if (streams.length < 2)
                    return
                streams[0].pipe(streams[1])
                recurse(streams.slice(1))
            }

            recurse(streams)

            function onerror() {
                var args = [].slice.call(arguments)
                args.unshift('error')
                thepipe.emit.apply(thepipe, args)
        }

            //es.duplex already reemits the error from the first and last stream.
            //add a listener for the inner streams in the pipeline.
            for (var i = 1; i < streams.length - 1; i++)
                streams[i].on('error', onerror)

            return thepipe
        }


    }, {"duplexer": 5}],
    11: [function (require, module, exports) {
        (function (process) {
            var Stream = require('stream')

// through
//
// a stream that does nothing but re-emit the input.
// useful for aggregating a series of changing but not ending streams into one stream)

            exports = module.exports = through
            through.through = through

//create a readable writable stream.

            function through(write, end, opts) {
                write = write || function (data) {
                        this.queue(data)
                    }
                end = end || function () {
                        this.queue(null)
                    }

                var ended = false, destroyed = false, buffer = [], _ended = false
                var stream = new Stream()
                stream.readable = stream.writable = true
                stream.paused = false

//  stream.autoPause   = !(opts && opts.autoPause   === false)
                stream.autoDestroy = !(opts && opts.autoDestroy === false)

                stream.write = function (data) {
                    write.call(this, data)
                    return !stream.paused
                }

                function drain() {
                    while (buffer.length && !stream.paused) {
                        var data = buffer.shift()
                        if (null === data)
                            return stream.emit('end')
                        else
                            stream.emit('data', data)
                }
                }

                stream.queue = stream.push = function (data) {
//    console.error(ended)
                    if (_ended) return stream
                    if (data === null) _ended = true
                    buffer.push(data)
                    drain()
                    return stream
                }

                //this will be registered as the first 'end' listener
                //must call destroy next tick, to make sure we're after any
                //stream piped from here.
                //this is only a problem if end is not emitted synchronously.
                //a nicer way to do this is to make sure this is the last listener for 'end'

                stream.on('end', function () {
                    stream.readable = false
                    if (!stream.writable && stream.autoDestroy)
                        process.nextTick(function () {
                        stream.destroy()
                        })
            })

                function _end() {
                    stream.writable = false
                    end.call(stream)
                    if (!stream.readable && stream.autoDestroy)
                        stream.destroy()
                }

                stream.end = function (data) {
                    if (ended) return
                    ended = true
                    if (arguments.length) stream.write(data)
                    _end() // will emit or queue
                    return stream
            }

                stream.destroy = function () {
                    if (destroyed) return
                    destroyed = true
                    ended = true
                    buffer.length = 0
                    stream.writable = stream.readable = false
                    stream.emit('close')
                    return stream
            }

                stream.pause = function () {
                    if (stream.paused) return
                    stream.paused = true
                    return stream
                }

                stream.resume = function () {
                    if (stream.paused) {
                        stream.paused = false
                        stream.emit('resume')
                    }
                    drain()
                    //may have become paused again,
                    //as drain emits 'data'.
                    if (!stream.paused)
                        stream.emit('drain')
                    return stream
                }
                return stream
            }


        }).call(this, require('_process'))
    }, {"_process": 92, "stream": 110}],
    12: [function (require, module, exports) {
        module.exports = FormData;
    }, {}],
    13: [function (require, module, exports) {
        'use strict'

        function ValidationError(errors) {
            this.name = 'ValidationError'
            this.errors = errors
        }

        ValidationError.prototype = Error.prototype

        module.exports = ValidationError

    }, {}],
    14: [function (require, module, exports) {
        'use strict'

        var schemas = require('./schemas')
        var ValidationError = require('./error')
        var validator = require('is-my-json-valid')

        var runner = function (schema, data, cb) {
            var validate = validator(schema, {
                greedy: true,
                verbose: true,
                schemas: schemas
            })

            var valid = false

            if (data !== undefined) {
                // execute is-my-json-valid
                valid = validate(data)
            }

            // callback?
            if (!cb) {
            return valid
            } else {
                return cb(validate.errors ? new ValidationError(validate.errors) : null, valid)
        }

            return valid
        }

        module.exports = function (data, cb) {
            return runner(schemas.har, data, cb)
        }

        Object.keys(schemas).map(function (name) {
            module.exports[name] = function (data, cb) {
                return runner(schemas[name], data, cb)
        }
        })

    }, {"./error": 13, "./schemas": 22, "is-my-json-valid": 32}],
    15: [function (require, module, exports) {
        module.exports = {
            "properties": {
                "beforeRequest": {
                    "$ref": "#cacheEntry"
                },
                "afterRequest": {
                    "$ref": "#cacheEntry"
                },
                "comment": {
                    "type": "string"
            }
            }
        }

    }, {}],
    16: [function (require, module, exports) {
        module.exports = {
            "oneOf": [{
                "type": "object",
                "optional": true,
                "required": [
                    "lastAccess",
                    "eTag",
                    "hitCount"
                ],
            "properties": {
                "expires": {
                    "type": "string"
                },
                "lastAccess": {
                    "type": "string"
                },
                "eTag": {
                    "type": "string"
                },
                "hitCount": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                }
            }
            }, {
                "type": null,
                "additionalProperties": false
            }]
        }

    }, {}],
    17: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "required": [
                "size",
                "mimeType"
            ],
            "properties": {
                "size": {
                    "type": "integer"
                },
                "compression": {
                    "type": "integer"
                },
                "mimeType": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
        }
        }

    }, {}],
    18: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "expires": {
                    "type": ["string", "null"],
                    "format": "date-time"
                },
                "httpOnly": {
                    "type": "boolean"
                },
                "secure": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                }
            }
        }

    }, {}],
    19: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            }
        }

    }, {}],
    20: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "optional": true,
            "required": [
                "startedDateTime",
                "time",
                "request",
                "response",
                "cache",
                "timings"
            ],
            "properties": {
                "pageref": {
                    "type": "string"
                },
                "startedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "pattern": "^(\\d{4})(-)?(\\d\\d)(-)?(\\d\\d)(T)?(\\d\\d)(:)?(\\d\\d)(:)?(\\d\\d)(\\.\\d+)?(Z|([+-])(\\d\\d)(:)?(\\d\\d))"
                },
                "time": {
                    "type": "number",
                    "min": 0
                },
                "request": {
                    "$ref": "#request"
                },
                "response": {
                    "$ref": "#response"
                },
                "cache": {
                    "$ref": "#cache"
                },
                "timings": {
                    "$ref": "#timings"
                },
                "serverIPAddress": {
                    "type": "string",
                    "oneOf": [
                        {"format": "ipv4"},
                        {"format": "ipv6"}
                    ]
                },
                "connection": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                }
            }
        }

    }, {}],
    21: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "required": [
                "log"
            ],
            "properties": {
                "log": {
                    "$ref": "#log"
                }
            }
        }

    }, {}],
    22: [function (require, module, exports) {
        'use strict'

        var schemas = {
            cache: require('./cache.json'),
            cacheEntry: require('./cacheEntry.json'),
            content: require('./content.json'),
            cookie: require('./cookie.json'),
            creator: require('./creator.json'),
            entry: require('./entry.json'),
            har: require('./har.json'),
            log: require('./log.json'),
            page: require('./page.json'),
            pageTimings: require('./pageTimings.json'),
            postData: require('./postData.json'),
            record: require('./record.json'),
            request: require('./request.json'),
            response: require('./response.json'),
            timings: require('./timings.json')
        }

// is-my-json-valid does not provide meaningful error messages for external schemas
// this is a workaround
        schemas.cache.properties.beforeRequest = schemas.cacheEntry
        schemas.cache.properties.afterRequest = schemas.cacheEntry

        schemas.page.properties.pageTimings = schemas.pageTimings

        schemas.request.properties.cookies.items = schemas.cookie
        schemas.request.properties.headers.items = schemas.record
        schemas.request.properties.queryString.items = schemas.record
        schemas.request.properties.postData = schemas.postData

        schemas.response.properties.cookies.items = schemas.cookie
        schemas.response.properties.headers.items = schemas.record
        schemas.response.properties.content = schemas.content

        schemas.entry.properties.request = schemas.request
        schemas.entry.properties.response = schemas.response
        schemas.entry.properties.cache = schemas.cache
        schemas.entry.properties.timings = schemas.timings

        schemas.log.properties.creator = schemas.creator
        schemas.log.properties.browser = schemas.creator
        schemas.log.properties.pages.items = schemas.page
        schemas.log.properties.entries.items = schemas.entry

        schemas.har.properties.log = schemas.log

        module.exports = schemas

    }, {
        "./cache.json": 15,
        "./cacheEntry.json": 16,
        "./content.json": 17,
        "./cookie.json": 18,
        "./creator.json": 19,
        "./entry.json": 20,
        "./har.json": 21,
        "./log.json": 23,
        "./page.json": 24,
        "./pageTimings.json": 25,
        "./postData.json": 26,
        "./record.json": 27,
        "./request.json": 28,
        "./response.json": 29,
        "./timings.json": 30
    }],
    23: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "required": [
                "version",
                "creator",
                "entries"
            ],
            "properties": {
                "version": {
                    "type": "string"
                },
                "creator": {
                    "$ref": "#creator"
                },
                "browser": {
                    "$ref": "#creator"
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#page"
                    }
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#entry"
                    }
                },
                "comment": {
                    "type": "string"
                }
            }
        }

    }, {}],
    24: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "optional": true,
            "required": [
                "startedDateTime",
                "id",
                "title",
                "pageTimings"
            ],
            "properties": {
                "startedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "pattern": "^(\\d{4})(-)?(\\d\\d)(-)?(\\d\\d)(T)?(\\d\\d)(:)?(\\d\\d)(:)?(\\d\\d)(\\.\\d+)?(Z|([+-])(\\d\\d)(:)?(\\d\\d))"
                },
                "id": {
                    "type": "string",
                    "unique": true
                },
                "title": {
                    "type": "string"
                },
                "pageTimings": {
                    "$ref": "#pageTimings"
                },
                "comment": {
                    "type": "string"
                }
            }
        }

    }, {}],
    25: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "properties": {
                "onContentLoad": {
                    "type": "number",
                    "min": -1
                },
                "onLoad": {
                    "type": "number",
                    "min": -1
                },
                "comment": {
                    "type": "string"
                }
            }
        }

    }, {}],
    26: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "optional": true,
            "required": [
                "mimeType"
            ],
            "properties": {
                "mimeType": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    }
                }
                },
                "comment": {
                    "type": "string"
            }
        }
        }

    }, {}],
    27: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
            }
        }
        }

    }, {}],
    28: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "required": [
                "method",
                "url",
                "httpVersion",
                "cookies",
                "headers",
                "queryString",
                "headersSize",
                "bodySize"
            ],
            "properties": {
                "method": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "uri"
                },
                "httpVersion": {
                    "type": "string"
                },
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#cookie"
                }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#record"
                }
                },
                "queryString": {
                    "type": "array",
                    "items": {
                        "$ref": "#record"
                }
                },
                "postData": {
                    "$ref": "#postData"
                },
                "headersSize": {
                    "type": "integer"
                },
                "bodySize": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
            }
        }
        }

    }, {}],
    29: [function (require, module, exports) {
        module.exports = {
            "type": "object",
            "required": [
                "status",
                "statusText",
                "httpVersion",
                "cookies",
                "headers",
                "content",
                "redirectURL",
                "headersSize",
                "bodySize"
            ],
            "properties": {
                "status": {
                    "type": "integer"
                },
                "statusText": {
                    "type": "string"
                },
                "httpVersion": {
                    "type": "string"
                },
                "cookies": {
                    "type": "array",
                    "items": {
                        "$ref": "#cookie"
                }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#record"
                }
                },
                "content": {
                    "$ref": "#content"
                },
                "redirectURL": {
                    "type": "string"
                },
                "headersSize": {
                    "type": "integer"
                },
                "bodySize": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
            }
        }
        }

    }, {}],
    30: [function (require, module, exports) {
        module.exports = {
            "required": [
                "send",
                "wait",
                "receive"
            ],
            "properties": {
                "dns": {
                    "type": "number",
                    "min": -1
                },
                "connect": {
                    "type": "number",
                    "min": -1
                },
                "blocked": {
                    "type": "number",
                    "min": -1
                },
                "send": {
                    "type": "number",
                    "min": -1
                },
                "wait": {
                    "type": "number",
                    "min": -1
                },
                "receive": {
                    "type": "number",
                    "min": -1
                },
                "ssl": {
                    "type": "number",
                    "min": -1
                },
                "comment": {
                    "type": "string"
            }
        }
        }

    }, {}],
    31: [function (require, module, exports) {
        exports['date-time'] = /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}[tT ]\d{2}:\d{2}:\d{2}(\.\d+)?([zZ]|[+-]\d{2}:\d{2})$/
        exports['date'] = /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}$/
        exports['time'] = /^\d{2}:\d{2}:\d{2}$/
        exports['email'] = /^\S+@\S+$/
        exports['ip-address'] = exports['ipv4'] = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/
        exports['ipv6'] = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/
        exports['uri'] = /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\s]*$/
        exports['color'] = /(#?([0-9A-Fa-f]{3,6})\b)|(aqua)|(black)|(blue)|(fuchsia)|(gray)|(green)|(lime)|(maroon)|(navy)|(olive)|(orange)|(purple)|(red)|(silver)|(teal)|(white)|(yellow)|(rgb\(\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*\))|(rgb\(\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*\))/
        exports['hostname'] = /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$/
        exports['alpha'] = /^[a-zA-Z]+$/
        exports['alphanumeric'] = /^[a-zA-Z0-9]+$/
        exports['style'] = /\s*(.+?):\s*([^;]+);?/g
        exports['phone'] = /^\+(?:[0-9] ?){6,14}[0-9]$/
        exports['utc-millisec'] = /^[0-9]{1,15}\.?[0-9]{0,15}$/

    }, {}],
    32: [function (require, module, exports) {
        var genobj = require('generate-object-property')
        var genfun = require('generate-function')
        var jsonpointer = require('jsonpointer')
        var xtend = require('xtend')
        var formats = require('./formats')

        var get = function (obj, additionalSchemas, ptr) {
            if (/^https?:\/\//.test(ptr)) return null

            var visit = function (sub) {
                if (sub && sub.id === ptr) return sub
                if (typeof sub !== 'object' || !sub) return null
                return Object.keys(sub).reduce(function (res, k) {
                    return res || visit(sub[k])
                }, null)
        }

            var res = visit(obj)
            if (res) return res

            ptr = ptr.replace(/^#/, '')
            ptr = ptr.replace(/\/$/, '')

            try {
                return jsonpointer.get(obj, decodeURI(ptr))
            } catch (err) {
                var end = ptr.indexOf('#')
                var other
                // external reference
                if (end !== 0) {
                    // fragment doesn't exist.
                    if (end === -1) {
                    other = additionalSchemas[ptr]
                } else {
                        var ext = ptr.slice(0, end)
                        other = additionalSchemas[ext]
                        var fragment = ptr.slice(end).replace(/^#/, '')
                        try {
                            return jsonpointer.get(other, fragment)
                        } catch (err) {
                        }
                }
                } else {
                    other = additionalSchemas[ptr]
                }
                return other || null
            }
        }

        var formatName = function (field) {
            field = JSON.stringify(field)
            var pattern = /\[([^\[\]"]+)\]/
            while (pattern.test(field)) field = field.replace(pattern, '."+$1+"')
            return field
        }

        var types = {}

        types.any = function () {
            return 'true'
        }

        types.null = function (name) {
            return name + ' === null'
        }

        types.boolean = function (name) {
            return 'typeof ' + name + ' === "boolean"'
        }

        types.array = function (name) {
            return 'Array.isArray(' + name + ')'
        }

        types.object = function (name) {
            return 'typeof ' + name + ' === "object" && ' + name + ' && !Array.isArray(' + name + ')'
        }

        types.number = function (name) {
            return 'typeof ' + name + ' === "number"'
        }

        types.integer = function (name) {
            return 'typeof ' + name + ' === "number" && (Math.floor(' + name + ') === ' + name + ' || ' + name + ' > 9007199254740992 || ' + name + ' < -9007199254740992)'
        }

        types.string = function (name) {
            return 'typeof ' + name + ' === "string"'
        }

        var unique = function (array) {
            var list = []
            for (var i = 0; i < array.length; i++) {
                list.push(typeof array[i] === 'object' ? JSON.stringify(array[i]) : array[i])
            }
            for (var i = 1; i < list.length; i++) {
                if (list.indexOf(list[i]) !== i) return false
            }
            return true
        }

        var toType = function (node) {
            return node.type
        }

        var compile = function (schema, cache, root, reporter, opts) {
            var fmts = opts ? xtend(formats, opts.formats) : formats
            var scope = {unique: unique, formats: fmts}
            var verbose = opts ? !!opts.verbose : false;
            var greedy = opts && opts.greedy !== undefined ?
                opts.greedy : false;

            var syms = {}
            var gensym = function (name) {
                return name + (syms[name] = (syms[name] || 0) + 1)
            }

            var reversePatterns = {}
            var patterns = function (p) {
                if (reversePatterns[p]) return reversePatterns[p]
                var n = gensym('pattern')
                scope[n] = new RegExp(p)
                reversePatterns[p] = n
                return n
            }

            var vars = ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'x', 'y', 'z']
            var genloop = function () {
                var v = vars.shift()
                vars.push(v + v[0])
                return v
            }

            var visit = function (name, node, reporter, filter) {
                var properties = node.properties
                var type = node.type
                var tuple = false

                if (Array.isArray(node.items)) { // tuple type
                    properties = {}
                    node.items.forEach(function (item, i) {
                        properties[i] = item
                    })
                    type = 'array'
                    tuple = true
                }

                var indent = 0
                var error = function (msg, prop, value) {
                    validate('errors++')
                    if (reporter === true) {
                        validate('if (validate.errors === null) validate.errors = []')
                        if (verbose) {
                            validate('validate.errors.push({field:%s,message:%s,value:%s})', formatName(prop || name), JSON.stringify(msg), value || name)
                        } else {
                            validate('validate.errors.push({field:%s,message:%s})', formatName(prop || name), JSON.stringify(msg))
                        }
                }
                }

                if (node.required === true) {
                    indent++
                    validate('if (%s === undefined) {', name)
                    error('is required')
                    validate('} else {')
                } else {
                    indent++
                    validate('if (%s !== undefined) {', name)
                }

                var valid = [].concat(type)
                        .map(function (t) {
                            return types[t || 'any'](name)
                        })
                        .join(' || ') || 'true'

                if (valid !== 'true') {
                    indent++
                    validate('if (!(%s)) {', valid)
                    error('is the wrong type')
                    validate('} else {')
                }

                if (tuple) {
                    if (node.additionalItems === false) {
                        validate('if (%s.length > %d) {', name, node.items.length)
                        error('has additional items')
                        validate('}')
                    } else if (node.additionalItems) {
                    var i = genloop()
                        validate('for (var %s = %d; %s < %s.length; %s++) {', i, node.items.length, i, name, i)
                        visit(name + '[' + i + ']', node.additionalItems, reporter, filter)
                        validate('}')
                    }
                }

                if (node.format && fmts[node.format]) {
                    if (type !== 'string' && formats[node.format]) validate('if (%s) {', types.string(name))
                    var n = gensym('format')
                    scope[n] = fmts[node.format]

                    if (typeof scope[n] === 'function') validate('if (!%s(%s)) {', n, name)
                    else validate('if (!%s.test(%s)) {', n, name)
                    error('must be ' + node.format + ' format')
                    validate('}')
                    if (type !== 'string' && formats[node.format]) validate('}')
                }

                if (Array.isArray(node.required)) {
                    var isUndefined = function (req) {
                        return genobj(name, req) + ' === undefined'
                    }

                    var checkRequired = function (req) {
                        var prop = genobj(name, req);
                        validate('if (%s === undefined) {', prop)
                        error('is required', prop)
                        validate('missing++')
                        validate('}')
                    }
                    validate('if ((%s)) {', type !== 'object' ? types.object(name) : 'true')
                    validate('var missing = 0')
                    node.required.map(checkRequired)
                    validate('}');
                    if (!greedy) {
                        validate('if (missing === 0) {')
                        indent++
                    }
                }

                if (node.uniqueItems) {
                    if (type !== 'array') validate('if (%s) {', types.array(name))
                    validate('if (!(unique(%s))) {', name)
                    error('must be unique')
                    validate('}')
                    if (type !== 'array') validate('}')
                }

                if (node.enum) {
                    var complex = node.enum.some(function (e) {
                        return typeof e === 'object'
                    })

                    var compare = complex ?
                        function (e) {
                            return 'JSON.stringify(' + name + ')' + ' !== JSON.stringify(' + JSON.stringify(e) + ')'
                        } :
                        function (e) {
                            return name + ' !== ' + JSON.stringify(e)
                    }

                    validate('if (%s) {', node.enum.map(compare).join(' && ') || 'false')
                    error('must be an enum value')
                    validate('}')
                }

                if (node.dependencies) {
                    if (type !== 'object') validate('if (%s) {', types.object(name))

                    Object.keys(node.dependencies).forEach(function (key) {
                        var deps = node.dependencies[key]
                        if (typeof deps === 'string') deps = [deps]

                        var exists = function (k) {
                            return genobj(name, k) + ' !== undefined'
                    }

                        if (Array.isArray(deps)) {
                            validate('if (%s !== undefined && !(%s)) {', genobj(name, key), deps.map(exists).join(' && ') || 'true')
                            error('dependencies not set')
                            validate('}')
                        }
                        if (typeof deps === 'object') {
                            validate('if (%s !== undefined) {', genobj(name, key))
                            visit(name, deps, reporter, filter)
                            validate('}')
                        }
                    })

                    if (type !== 'object') validate('}')
                }

                if (node.additionalProperties || node.additionalProperties === false) {
                    if (type !== 'object') validate('if (%s) {', types.object(name))

                    var i = genloop()
                    var keys = gensym('keys')

                    var toCompare = function (p) {
                        return keys + '[' + i + '] !== ' + JSON.stringify(p)
                }

                    var toTest = function (p) {
                        return '!' + patterns(p) + '.test(' + keys + '[' + i + '])'
                    }

                    var additionalProp = Object.keys(properties || {}).map(toCompare)
                            .concat(Object.keys(node.patternProperties || {}).map(toTest))
                            .join(' && ') || 'true'

                    validate('var %s = Object.keys(%s)', keys, name)
                    ('for (var %s = 0; %s < %s.length; %s++) {', i, i, keys, i)
                    ('if (%s) {', additionalProp)

                    if (node.additionalProperties === false) {
                        if (filter) validate('delete %s', name + '[' + keys + '[' + i + ']]')
                        error('has additional properties', null, JSON.stringify(name + '.') + ' + ' + keys + '[' + i + ']')
                    } else {
                        visit(name + '[' + keys + '[' + i + ']]', node.additionalProperties, reporter, filter)
                    }

                    validate
                    ('}')
                    ('}')

                    if (type !== 'object') validate('}')
                }

                if (node.$ref) {
                    var sub = get(root, opts && opts.schemas || {}, node.$ref)
                    if (sub) {
                        var fn = cache[node.$ref]
                        if (!fn) {
                            cache[node.$ref] = function proxy(data) {
                                return fn(data)
                        }
                            fn = compile(sub, cache, root, false, opts)
                    }
                        var n = gensym('ref')
                        scope[n] = fn
                        validate('if (!(%s(%s))) {', n, name)
                        error('referenced schema does not match')
                        validate('}')
                }
                }

                if (node.not) {
                    var prev = gensym('prev')
                    validate('var %s = errors', prev)
                    visit(name, node.not, false, filter)
                    validate('if (%s === errors) {', prev)
                    error('negative schema matches')
                    validate('} else {')
                    ('errors = %s', prev)
                    ('}')
                }

                if (node.items && !tuple) {
                    if (type !== 'array') validate('if (%s) {', types.array(name))

                    var i = genloop()
                    validate('for (var %s = 0; %s < %s.length; %s++) {', i, i, name, i)
                    visit(name + '[' + i + ']', node.items, reporter, filter)
                    validate('}')

                    if (type !== 'array') validate('}')
                }

                if (node.patternProperties) {
                    if (type !== 'object') validate('if (%s) {', types.object(name))
                    var keys = gensym('keys')
                    var i = genloop()
                    validate
                    ('var %s = Object.keys(%s)', keys, name)
                    ('for (var %s = 0; %s < %s.length; %s++) {', i, i, keys, i)

                    Object.keys(node.patternProperties).forEach(function (key) {
                        var p = patterns(key)
                        validate('if (%s.test(%s)) {', p, keys + '[' + i + ']')
                        visit(name + '[' + keys + '[' + i + ']]', node.patternProperties[key], reporter, filter)
                        validate('}')
                    })

                    validate('}')
                    if (type !== 'object') validate('}')
                }

                if (node.pattern) {
                    var p = patterns(node.pattern)
                    if (type !== 'string') validate('if (%s) {', types.string(name))
                    validate('if (!(%s.test(%s))) {', p, name)
                    error('pattern mismatch')
                    validate('}')
                    if (type !== 'string') validate('}')
                }

                if (node.allOf) {
                    node.allOf.forEach(function (sch) {
                        visit(name, sch, reporter, filter)
                    })
                }

                if (node.anyOf && node.anyOf.length) {
                    var prev = gensym('prev')

                    node.anyOf.forEach(function (sch, i) {
                        if (i === 0) {
                            validate('var %s = errors', prev)
                        } else {
                            validate('if (errors !== %s) {', prev)
                            ('errors = %s', prev)
                        }
                        visit(name, sch, false, false)
                    })
                    node.anyOf.forEach(function (sch, i) {
                        if (i) validate('}')
                    })
                    validate('if (%s !== errors) {', prev)
                    error('no schemas match')
                    validate('}')
                }

                if (node.oneOf && node.oneOf.length) {
                    var prev = gensym('prev')
                    var passes = gensym('passes')

                    validate
                    ('var %s = errors', prev)
                    ('var %s = 0', passes)

                    node.oneOf.forEach(function (sch, i) {
                        visit(name, sch, false, false)
                    validate('if (%s === errors) {', prev)
                    ('%s++', passes)
                    ('} else {')
                    ('errors = %s', prev)
                    ('}')
                    })

                    validate('if (%s !== 1) {', passes)
                    error('no (or more than one) schemas match')
                    validate('}')
                }

                if (node.multipleOf !== undefined) {
                    if (type !== 'number' && type !== 'integer') validate('if (%s) {', types.number(name))

                    var factor = ((node.multipleOf | 0) !== node.multipleOf) ? Math.pow(10, node.multipleOf.toString().split('.').pop().length) : 1
                    if (factor > 1) validate('if ((%d*%s) % %d) {', factor, name, factor * node.multipleOf)
                    else validate('if (%s % %d) {', name, node.multipleOf)

                    error('has a remainder')
                    validate('}')

                    if (type !== 'number' && type !== 'integer') validate('}')
                }

                if (node.maxProperties !== undefined) {
                    if (type !== 'object') validate('if (%s) {', types.object(name))

                    validate('if (Object.keys(%s).length > %d) {', name, node.maxProperties)
                    error('has more properties than allowed')
                    validate('}')

                    if (type !== 'object') validate('}')
                }

                if (node.minProperties !== undefined) {
                    if (type !== 'object') validate('if (%s) {', types.object(name))

                    validate('if (Object.keys(%s).length < %d) {', name, node.minProperties)
                    error('has less properties than allowed')
                    validate('}')

                    if (type !== 'object') validate('}')
                }

                if (node.maxItems !== undefined) {
                    if (type !== 'array') validate('if (%s) {', types.array(name))

                    validate('if (%s.length > %d) {', name, node.maxItems)
                    error('has more items than allowed')
                    validate('}')

                    if (type !== 'array') validate('}')
                }

                if (node.minItems !== undefined) {
                    if (type !== 'array') validate('if (%s) {', types.array(name))

                    validate('if (%s.length < %d) {', name, node.minItems)
                    error('has less items than allowed')
                    validate('}')

                    if (type !== 'array') validate('}')
                }

                if (node.maxLength !== undefined) {
                    if (type !== 'string') validate('if (%s) {', types.string(name))

                    validate('if (%s.length > %d) {', name, node.maxLength)
                    error('has longer length than allowed')
                    validate('}')

                    if (type !== 'string') validate('}')
                }

                if (node.minLength !== undefined) {
                    if (type !== 'string') validate('if (%s) {', types.string(name))

                    validate('if (%s.length < %d) {', name, node.minLength)
                    error('has less length than allowed')
                    validate('}')

                    if (type !== 'string') validate('}')
                }

                if (node.minimum !== undefined) {
                    validate('if (%s %s %d) {', name, node.exclusiveMinimum ? '<=' : '<', node.minimum)
                    error('is less than minimum')
                    validate('}')
                }

                if (node.maximum !== undefined) {
                    validate('if (%s %s %d) {', name, node.exclusiveMaximum ? '>=' : '>', node.maximum)
                    error('is more than maximum')
                    validate('}')
                }

                if (properties) {
                    Object.keys(properties).forEach(function (p) {
                        if (Array.isArray(type) && type.indexOf('null') !== -1) validate('if (%s !== null) {', name)

                        visit(genobj(name, p), properties[p], reporter, filter)

                        if (Array.isArray(type) && type.indexOf('null') !== -1) validate('}')
                    })
                }

                while (indent--) validate('}')
            }

            var validate = genfun
            ('function validate(data) {')
            ('validate.errors = null')
            ('var errors = 0')

            visit('data', schema, reporter, opts && opts.filter)

            validate
            ('return errors === 0')
            ('}')

            validate = validate.toFunction(scope)
            validate.errors = null

            if (Object.defineProperty) {
                Object.defineProperty(validate, 'error', {
                    get: function () {
                        if (!validate.errors) return ''
                        return validate.errors.map(function (err) {
                            return err.field + ' ' + err.message;
                        }).join('\n')
                }
                })
            }

            validate.toJSON = function () {
                return schema
            }

            return validate
        }

        module.exports = function (schema, opts) {
            if (typeof schema === 'string') schema = JSON.parse(schema)
            return compile(schema, {}, schema, true, opts)
        }

        module.exports.filter = function (schema, opts) {
            var validate = module.exports(schema, xtend(opts, {filter: true}))
            return function (sch) {
                validate(sch)
                return sch
            }
        }

    }, {"./formats": 31, "generate-function": 33, "generate-object-property": 34, "jsonpointer": 36, "xtend": 37}],
    33: [function (require, module, exports) {
        var util = require('util')

        var INDENT_START = /[\{\[]/
        var INDENT_END = /[\}\]]/

        module.exports = function () {
            var lines = []
            var indent = 0

            var push = function (str) {
                var spaces = ''
                while (spaces.length < indent * 2) spaces += '  '
                lines.push(spaces + str)
        }

            var line = function (fmt) {
                if (!fmt) return line

                if (INDENT_END.test(fmt.trim()[0]) && INDENT_START.test(fmt[fmt.length - 1])) {
                    indent--
                    push(util.format.apply(util, arguments))
                    indent++
                    return line
            }
                if (INDENT_START.test(fmt[fmt.length - 1])) {
                    push(util.format.apply(util, arguments))
                    indent++
                    return line
            }
                if (INDENT_END.test(fmt.trim()[0])) {
                    indent--
                push(util.format.apply(util, arguments))
                return line
            }

                push(util.format.apply(util, arguments))
            return line
        }

            line.toString = function () {
                return lines.join('\n')
        }

            line.toFunction = function (scope) {
                var src = 'return (' + line.toString() + ')'

                var keys = Object.keys(scope || {}).map(function (key) {
                    return key
                })

                var vals = keys.map(function (key) {
                    return scope[key]
                })

                return Function.apply(null, keys.concat(src)).apply(null, vals)
        }

            if (arguments.length) line.apply(null, arguments)

            return line
        }

    }, {"util": 114}],
    34: [function (require, module, exports) {
        var isProperty = require('is-property')

        var gen = function (obj, prop) {
            return isProperty(prop) ? obj + '.' + prop : obj + '[' + JSON.stringify(prop) + ']'
        }

        gen.valid = isProperty
        gen.property = function (prop) {
            return isProperty(prop) ? prop : JSON.stringify(prop)
        }

        module.exports = gen

    }, {"is-property": 35}],
    35: [function (require, module, exports) {
        "use strict"
        function isProperty(str) {
            return /^[$A-Z\_a-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc][$A-Z\_a-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc0-9\u0300-\u036f\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08e4-\u08fe\u0900-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d02\u0d03\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19b0-\u19c0\u19c8\u19c9\u19d0-\u19d9\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf2-\u1cf4\u1dc0-\u1de6\u1dfc-\u1dff\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua8b4-\ua8c4\ua8d0-\ua8d9\ua8e0-\ua8f1\ua900-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f]*$/.test(str)
        }

        module.exports = isProperty
    }, {}],
    36: [function (require, module, exports) {
        var untilde = function (str) {
            return str.replace(/~./g, function (m) {
                switch (m) {
                    case "~0":
                        return "~";
                    case "~1":
                        return "/";
            }
                throw new Error("Invalid tilde escape: " + m);
            });
        }

        var traverse = function (obj, pointer, value) {
            // assert(isArray(pointer))
            var part = untilde(pointer.shift());
            if (!obj.hasOwnProperty(part)) {
                return null;
        }
            if (pointer.length !== 0) { // keep traversin!
                return traverse(obj[part], pointer, value);
            }
            // we're done
            if (typeof value === "undefined") {
                // just reading
                return obj[part];
            }
            // set new value, return old value
            var old_value = obj[part];
            if (value === null) {
                delete obj[part];
            } else {
                obj[part] = value;
            }
            return old_value;
        }

        var validate_input = function (obj, pointer) {
            if (typeof obj !== "object") {
                throw new Error("Invalid input object.");
        }

            if (pointer === "") {
                return [];
        }

            if (!pointer) {
                throw new Error("Invalid JSON pointer.");
            }

            pointer = pointer.split("/");
            var first = pointer.shift();
            if (first !== "") {
                throw new Error("Invalid JSON pointer.");
            }

            return pointer;
        }

        var get = function (obj, pointer) {
            pointer = validate_input(obj, pointer);
            if (pointer.length === 0) {
                return obj;
            }
            return traverse(obj, pointer);
        }

        var set = function (obj, pointer, value) {
            pointer = validate_input(obj, pointer);
            if (pointer.length === 0) {
                throw new Error("Invalid JSON pointer for set.")
            }
            return traverse(obj, pointer, value);
        }

        exports.get = get
        exports.set = set

    }, {}],
    37: [function (require, module, exports) {
        module.exports = extend

        var hasOwnProperty = Object.prototype.hasOwnProperty;

        function extend() {
            var target = {}

            for (var i = 0; i < arguments.length; i++) {
                var source = arguments[i]

                for (var key in source) {
                    if (hasOwnProperty.call(source, key)) {
                        target[key] = source[key]
                    }
            }
            }

            return target
        }

    }, {}],
    38: [function (require, module, exports) {
        'use strict'

        var util = require('util')

        /**
         * Helper object to format and aggragate lines of code.
         * Lines are aggregated in a `code` array, and need to be joined to obtain a proper code snippet.
         *
         * @class
         *
         * @param {string} indentation Desired indentation character for aggregated lines of code
         * @param {string} join Desired character to join each line of code
         */
        var CodeBuilder = function (indentation, join) {
            this.code = []
            this.indentation = indentation
            this.lineJoin = join ? join : '\n'
        }

        /**
         * Add given indentation level to given string and format the string (variadic)
         * @param {number} [indentationLevel=0] - Desired level of indentation for this line
         * @param {string} line - Line of code. Can contain formatting placeholders
         * @param {...anyobject} - Parameter to bind to `line`'s formatting placeholders
         * @return {string}
         *
         * @example
         *   var builder = CodeBuilder('\t')
         *
         *   builder.buildLine('console.log("hello world")')
         *   // returns: 'console.log("hello world")'
         *
         *   builder.buildLine(2, 'console.log("hello world")')
         *   // returns: 'console.log("\t\thello world")'
         *
         *   builder.buildLine(2, 'console.log("%s %s")', 'hello', 'world')
         *   // returns: 'console.log("\t\thello world")'
         */
        CodeBuilder.prototype.buildLine = function (indentationLevel, line) {
            var lineIndentation = ''
            var slice = 2
            if (Object.prototype.toString.call(indentationLevel) === '[object String]') {
                slice = 1
                line = indentationLevel
                indentationLevel = 0
            } else if (indentationLevel === null) {
                return null
        }

            while (indentationLevel) {
                lineIndentation += this.indentation
                indentationLevel--
        }

            var format = Array.prototype.slice.call(arguments, slice, arguments.length)
            format.unshift(lineIndentation + line)

            return util.format.apply(this, format)
        }

        /**
         * Invoke buildLine() and add the line at the top of current lines
         * @param {number} [indentationLevel=0] Desired level of indentation for this line
         * @param {string} line Line of code
         * @return {this}
         */
        CodeBuilder.prototype.unshift = function () {
            this.code.unshift(this.buildLine.apply(this, arguments))

            return this
        }

        /**
         * Invoke buildLine() and add the line at the bottom of current lines
         * @param {number} [indentationLevel=0] Desired level of indentation for this line
         * @param {string} line Line of code
         * @return {this}
         */
        CodeBuilder.prototype.push = function () {
            this.code.push(this.buildLine.apply(this, arguments))

            return this
        }

        /**
         * Add an empty line at the end of current lines
         * @return {this}
         */
        CodeBuilder.prototype.blank = function () {
            this.code.push(null)

            return this
        }

        /**
         * Concatenate all current lines using the given lineJoin
         * @return {string}
         */
        CodeBuilder.prototype.join = function () {
            return this.code.join(this.lineJoin)
        }

        module.exports = CodeBuilder

    }, {"util": 114}],
    39: [function (require, module, exports) {
        'use strict'

        module.exports = function (obj, pair) {
            if (obj[pair.name] === undefined) {
                obj[pair.name] = pair.value
            return obj
        }

            // convert to array
            var arr = [
                obj[pair.name],
                pair.value
            ]

            obj[pair.name] = arr

            return obj
        }

    }, {}],
    40: [function (require, module, exports) {
        'use strict'

        var util = require('util')

        module.exports = {
            /**
             * Use 'strong quoting' using single quotes so that we only need
             * to deal with nested single quote characters.
             * http://wiki.bash-hackers.org/syntax/quoting#strong_quoting
             */
            quote: function (value) {
                var safe = /^[a-z0-9-_/.@%^=:]+$/i

                // Unless `value` is a simple shell-safe string, quote it.
                if (!safe.test(value)) {
                    return util.format('\'%s\'', value.replace(/'/g, "\'\\'\'"))
            }

                return value
            },

            escape: function (value) {
                return value.replace(/\r/g, '\\r').replace(/\n/g, '\\n')
        }
        }

    }, {"util": 114}],
    41: [function (require, module, exports) {
        'use strict'

        var debug = require('debug')('httpsnippet')
        var es = require('event-stream')
        var MultiPartForm = require('form-data')
        var qs = require('querystring')
        var reducer = require('./helpers/reducer')
        var targets = require('./targets')
        var url = require('url')
        var util = require('util')
        var validate = require('har-validator')

// constructor
        var HTTPSnippet = function (data) {
            var entries
            var self = this
            var input = util._extend({}, data)

            // prep the main container
            self.requests = []

            // is it har?
            if (input.log && input.log.entries) {
                entries = input.log.entries
            } else {
                entries = [{
                    request: input
                }]
            }

            entries.forEach(function (entry) {
                // add optional properties to make validation successful
                entry.request.httpVersion = entry.request.httpVersion || 'HTTP/1.1'
                entry.request.queryString = entry.request.queryString || []
                entry.request.headers = entry.request.headers || []
                entry.request.cookies = entry.request.cookies || []
                entry.request.postData = entry.request.postData || {}
                entry.request.postData.mimeType = entry.request.postData.mimeType || 'application/octet-stream'

                entry.request.bodySize = 0
                entry.request.headersSize = 0
                entry.request.postData.size = 0

                validate.request(entry.request, function (err, valid) {
                    if (!valid) {
                        throw err
                    }

                    self.requests.push(self.prepare(entry.request))
            })
            })
        }

        HTTPSnippet.prototype.prepare = function (request) {
            // construct utility properties
            request.queryObj = {}
            request.headersObj = {}
            request.cookiesObj = {}
            request.allHeaders = {}
            request.postData.jsonObj = false
            request.postData.paramsObj = false

            // construct query objects
            if (request.queryString && request.queryString.length) {
                debug('queryString found, constructing queryString pair map')

                request.queryObj = request.queryString.reduce(reducer, {})
        }

            // construct headers objects
            if (request.headers && request.headers.length) {
                // loweCase header keys
                request.headersObj = request.headers.reduceRight(function (headers, header) {
                    headers[header.name.toLowerCase()] = header.value
                    return headers
                }, {})
            }

            // construct headers objects
            if (request.cookies && request.cookies.length) {
                request.cookiesObj = request.cookies.reduceRight(function (cookies, cookie) {
                    cookies[cookie.name] = cookie.value
                    return cookies
                }, {})
            }

            // construct Cookie header
            var cookies = request.cookies.map(function (cookie) {
                return encodeURIComponent(cookie.name) + '=' + encodeURIComponent(cookie.value)
            })

            if (cookies.length) {
                request.allHeaders.cookie = cookies.join('; ')
            }

            switch (request.postData.mimeType) {
                case 'multipart/mixed':
                case 'multipart/related':
                case 'multipart/form-data':
                case 'multipart/alternative':
                    // reset values
                    request.postData.text = ''
                    request.postData.mimeType = 'multipart/form-data'

                    if (request.postData.params) {
                        var form = new MultiPartForm()

                        // easter egg
                        form._boundary = '---011000010111000001101001'

                        request.postData.params.forEach(function (param) {
                            form.append(param.name, param.value || '', {
                                filename: param.fileName || null,
                                contentType: param.contentType || null
                            })
                        })

                        es.pipe(es.map(function (data, cb) {
                            request.postData.text += data
                        }))

                        request.postData.boundary = form._boundary
                        request.headersObj['content-type'] = 'multipart/form-data; boundary=' + form._boundary
                    }
                    break

                case 'application/x-www-form-urlencoded':
                    if (!request.postData.params) {
                    request.postData.text = ''
                    } else {
                        request.postData.paramsObj = request.postData.params.reduce(reducer, {})

                        // always overwrite
                        request.postData.text = qs.stringify(request.postData.paramsObj)
                    }
                    break

                case 'text/json':
                case 'text/x-json':
                case 'application/json':
                case 'application/x-json':
                    request.postData.mimeType = 'application/json'

                    if (request.postData.text) {
                        try {
                            request.postData.jsonObj = JSON.parse(request.postData.text)
                        } catch (e) {
                            debug(e)

                            // force back to text/plain
                            // if headers have proper content-type value, then this should also work
                            request.postData.mimeType = 'text/plain'
                    }
                    }
                    break
            }

            // create allHeaders object
            request.allHeaders = util._extend(request.allHeaders, request.headersObj)

            // deconstruct the uri
            request.uriObj = url.parse(request.url, true, true)

            // merge all possible queryString values
            request.queryObj = util._extend(request.queryObj, request.uriObj.query)

            // reset uriObj values for a clean url
            request.uriObj.query = null
            request.uriObj.search = null
            request.uriObj.path = request.uriObj.pathname

            // keep the base url clean of queryString
            request.url = url.format(request.uriObj)

            // update the uri object
            request.uriObj.query = request.queryObj
            request.uriObj.search = qs.stringify(request.queryObj)

            if (request.uriObj.search) {
                request.uriObj.path = request.uriObj.pathname + '?' + request.uriObj.search
            }

            // construct a full url
            request.fullUrl = url.format(request.uriObj)

            return request
        }

        HTTPSnippet.prototype.convert = function (target, client, opts) {
            if (!opts && client) {
                opts = client
            }

            var func = this._matchTarget(target, client)

            if (func) {
                var results = this.requests.map(function (request) {
                    return func(request, opts)
                })

                return results.length === 1 ? results[0] : results
        }

            return false
        }

        HTTPSnippet.prototype._matchTarget = function (target, client) {
            // does it exist?
            if (!targets.hasOwnProperty(target)) {
            return false
        }

            // shorthand
            if (typeof client === 'string' && typeof targets[target][client] === 'function') {
                return targets[target][client]
        }

            // default target
            return targets[target][targets[target].info.default]
        }

// exports
        module.exports = HTTPSnippet

        module.exports.availableTargets = function () {
            return Object.keys(targets).map(function (key) {
                var target = util._extend({}, targets[key].info)
                var clients = Object.keys(targets[key])

                    .filter(function (prop) {
                        return !~['info', 'index'].indexOf(prop)
                    })

                    .map(function (client) {
                        return targets[key][client].info
                    })

                if (clients.length) {
                    target.clients = clients
                }

                return target
            })
        }

        module.exports.extname = function (target) {
            return targets[target] ? targets[target].info.extname : ''
        }

    }, {
        "./helpers/reducer": 39,
        "./targets": 48,
        "debug": 1,
        "event-stream": 4,
        "form-data": 12,
        "har-validator": 14,
        "querystring": 96,
        "url": 112,
        "util": 114
    }],
    42: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'c',
                title: 'C',
                extname: '.c',
                default: 'libcurl'
            },

            libcurl: require('./libcurl')
        }

    }, {"./libcurl": 43}],
    43: [function (require, module, exports) {
        'use strict'

        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var code = new CodeBuilder()

            code.push('CURL *hnd = curl_easy_init();')
                .blank()
                .push('curl_easy_setopt(hnd, CURLOPT_CUSTOMREQUEST, "%s");', source.method.toUpperCase())
                .push('curl_easy_setopt(hnd, CURLOPT_URL, "%s");', source.fullUrl)

            // Add headers, including the cookies
            var headers = Object.keys(source.headersObj)

            // construct headers
            if (headers.length) {
                code.blank()
                    .push('struct curl_slist *headers = NULL;')

                headers.forEach(function (key) {
                    code.push('headers = curl_slist_append(headers, "%s: %s");', key, source.headersObj[key])
                })

                code.push('curl_easy_setopt(hnd, CURLOPT_HTTPHEADER, headers);')
            }

            // construct cookies
            if (source.allHeaders.cookie) {
            code.blank()
                .push('curl_easy_setopt(hnd, CURLOPT_COOKIE, "%s");', source.allHeaders.cookie)
        }

            if (source.postData.text) {
                code.blank()
                    .push('curl_easy_setopt(hnd, CURLOPT_POSTFIELDS, %s);', JSON.stringify(source.postData.text))
        }

            code.blank()
                .push('CURLcode ret = curl_easy_perform(hnd);')

            return code.join()
        }

        module.exports.info = {
            key: 'libcurl',
            title: 'Libcurl',
            link: 'http://curl.haxx.se/libcurl/',
            description: 'Simple REST and HTTP API Client for C'
        }

    }, {"../../helpers/code-builder": 38}],
    44: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'csharp',
                title: 'C#',
                extname: '.cs',
                default: 'restsharp'
            },

            restsharp: require('./restsharp')
        }

    }, {"./restsharp": 45}],
    45: [function (require, module, exports) {
        'use strict'

        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var code = new CodeBuilder()
            var methods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD', 'OPTIONS']

            if (methods.indexOf(source.method.toUpperCase()) === -1) {
                return 'Method not supported'
            } else {
                code.push('var client = new RestClient("%s");', source.fullUrl)
                code.push('var request = new RestRequest(Method.%s);', source.method.toUpperCase())
            }

            // Add headers, including the cookies
            var headers = Object.keys(source.headersObj)

            // construct headers
            if (headers.length) {
                headers.forEach(function (key) {
                    if (key == "accept"){
                        code.push('request.AddHeader("Accept", "%s");', source.headersObj[key])
                     } else {
                        code.push('request.AddHeader("%s", "%s");', key, source.headersObj[key])
                     }
                })
        }

            // construct cookies
            if (source.cookies.length) {
                source.cookies.forEach(function (cookie) {
                    code.push('request.AddCookie("%s", "%s");', cookie.name, cookie.value)
                })
        }

            if (source.postData.text) {
                code.push('request.AddParameter("%s", %s, ParameterType.RequestBody);', source.allHeaders['content-type'], JSON.stringify(source.postData.text))
        }

            code.push('IRestResponse response = client.Execute(request);')
            return code.join()
        }

        module.exports.info = {
            key: 'restsharp',
            title: 'RestSharp',
            link: 'http://restsharp.org/',
            description: 'Simple REST and HTTP API Client for .NET'
        }

    }, {"../../helpers/code-builder": 38}],
    46: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'go',
                title: 'Go',
                extname: '.go',
                default: 'native'
            },

            native: require('./native')
        }

    }, {"./native": 47}],
    47: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for native Go.
         *
         * @author
         * @montanaflynn
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            // Let's Go!
            var code = new CodeBuilder('\t')

            // Define Options
            var opts = util._extend({
                showBoilerplate: true,
                checkErrors: false,
                printBody: true,
                timeout: -1
            }, options)

            var errorPlaceholder = opts.checkErrors ? 'err' : '_'

            var indent = opts.showBoilerplate ? 1 : 0

            var errorCheck = function () {
                if (opts.checkErrors) {
                    code.push(indent, 'if err != nil {')
                        .push(indent + 1, 'panic(err)')
                    .push(indent, '}')
            }
            }

            // Create boilerplate
            if (opts.showBoilerplate) {
                code.push('package main')
                .blank()
                    .push('import (')
                    .push(indent, '"fmt"')

                if (opts.timeout > 0) {
                    code.push(indent, '"time"')
            }

                if (source.postData.text) {
                    code.push(indent, '"strings"')
            }

                code.push(indent, '"net/http"')

            if (opts.printBody) {
                code.push(indent, '"io/ioutil"')
            }

                code.push(')')
                    .blank()
                    .push('func main() {')
                    .blank()
            }

            // Create client
            var client
            if (opts.timeout > 0) {
                client = 'client'
                code.push(indent, 'client := http.Client{')
                    .push(indent + 1, 'Timeout: time.Duration(%s * time.Second),', opts.timeout)
                    .push(indent, '}')
                    .blank()
            } else {
                client = 'http.DefaultClient'
            }

            code.push(indent, 'url := "%s"', source.fullUrl)
                .blank()

            // If we have body content or not create the var and reader or nil
            if (source.postData.text) {
                code.push(indent, 'payload := strings.NewReader(%s)', JSON.stringify(source.postData.text))
                    .blank()
                    .push(indent, 'req, %s := http.NewRequest("%s", url, payload)', errorPlaceholder, source.method)
                    .blank()
            } else {
                code.push(indent, 'req, %s := http.NewRequest("%s", url, nil)', errorPlaceholder, source.method)
                    .blank()
        }

            errorCheck()

            // Add headers
            if (Object.keys(source.allHeaders).length) {
                Object.keys(source.allHeaders).forEach(function (key) {
                    code.push(indent, 'req.Header.Add("%s", "%s")', key, source.allHeaders[key])
                })

                code.blank()
        }

            // Make request
            code.push(indent, 'res, %s := %s.Do(req)', errorPlaceholder, client)
            errorCheck()

            // Get Body
            if (opts.printBody) {
                code.blank()
                    .push(indent, 'defer res.Body.Close()')
                    .push(indent, 'body, %s := ioutil.ReadAll(res.Body)', errorPlaceholder)
                errorCheck()
        }

            // Print it
            code.blank()
                .push(indent, 'fmt.Println(res)')

            if (opts.printBody) {
                code.push(indent, 'fmt.Println(string(body))')
            }

            // End main block
            if (opts.showBoilerplate) {
                code.blank()
                    .push('}')
        }

            return code.join()
        }

        module.exports.info = {
            key: 'native',
            title: 'NewRequest',
            link: 'http://golang.org/pkg/net/http/#NewRequest',
            description: 'Golang HTTP client request'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    48: [function (require, module, exports) {
        'use strict'

        module.exports = {
            c: require('./c'),
            csharp: require('./csharp'),
            go: require('./go'),
            java: require('./java'),
            javascript: require('./javascript'),
            node: require('./node'),
            objc: require('./objc'),
            ocaml: require('./ocaml'),
            php: require('./php'),
            python: require('./python'),
            ruby: require('./ruby'),
            shell: require('./shell'),
            swift: require('./swift')
        }

    }, {
        "./c": 42,
        "./csharp": 44,
        "./go": 46,
        "./java": 49,
        "./javascript": 53,
        "./node": 56,
        "./objc": 61,
        "./ocaml": 64,
        "./php": 69,
        "./python": 70,
        "./ruby": 73,
        "./shell": 77,
        "./swift": 80
    }],
    49: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'java',
                title: 'Java',
                extname: '.java',
                default: 'unirest'
            },

            okhttp: require('./okhttp'),
            unirest: require('./unirest'),
            restlet: require('./restlet')
        }

    }, {"./okhttp": 50, "./restlet": 51, "./unirest": 52}],
    50: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for Java using OkHttp.
         *
         * @author
         * @shashiranjan84
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  '
            }, options)

            var code = new CodeBuilder(opts.indent)

            var methods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD']

            var methodsWithBody = ['POST', 'PUT', 'DELETE', 'PATCH']

            code.push('// OkHttpClient from http://square.github.io/okhttp/')
                .blank()
            code.push('OkHttpClient client = new OkHttpClient();')
                .blank()

            if (source.postData.text) {
                if (source.postData.boundary) {
                    code.push('MediaType mediaType = MediaType.parse("%s; boundary=%s");', source.postData.mimeType, source.postData.boundary)
            } else {
                    code.push('MediaType mediaType = MediaType.parse("%s");', source.postData.mimeType)
            }
                code.push('RequestBody body = RequestBody.create(mediaType, %s);', JSON.stringify(source.postData.text))
            }

            code.push('Request request = new Request.Builder()')
            code.push(1, '.url("%s")', source.fullUrl)
            if (methods.indexOf(source.method.toUpperCase()) === -1) {
                if (source.postData.text) {
                    code.push(1, '.method("%s", body)', source.method.toUpperCase())
                } else {
                    code.push(1, '.method("%s", null)', source.method.toUpperCase())
            }
            } else if (methodsWithBody.indexOf(source.method.toUpperCase()) >= 0) {
                if (source.postData.text) {
                    code.push(1, '.%s(body)', source.method.toLowerCase())
                } else {
                    code.push(1, '.%s(null)', source.method.toLowerCase())
                }
            } else {
                code.push(1, '.%s()', source.method.toLowerCase())
            }

            // Add headers, including the cookies
            var headers = Object.keys(source.allHeaders)

            // construct headers
            if (headers.length) {
                headers.forEach(function (key) {
                    code.push(1, '.addHeader("%s", "%s")', key, source.allHeaders[key])
                })
        }

            code.push(1, '.build();')
                .blank()
                .push('Response response = client.newCall(request).execute();')

            return code.join()
        }

        module.exports.info = {
            key: 'okhttp',
            title: 'OkHttp',
            link: 'http://square.github.io/okhttp/',
            description: 'An HTTP Request Client Library'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    51: [function (require, module, exports) {
        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var service = {}

            service.setAccept = setAccept
            service.setAuthorization = setAuthorization
            service.setCookies = setCookies

            service.setUnknownMethod = setUnknownMethod
            service.isUnknownMethod = isUnknownMethod
            service.isMethodWithPostData = isMethodWithPostData
            service.setMethodWithPostData = setMethodWithPostData

            var opts = util._extend({
                indent: '  '
            }, options)

            var code = new CodeBuilder(opts.indent)

            var mimeTypes = {
                'application/json': 'MediaType.APPLICATION_JSON',
                'application/x-json': 'MediaType.APPLICATION_JSON',

                'application/xml': 'MediaType.APPLICATION_XML',
                'text/xml': 'MediaType.APPLICATION_XML',

                'application/yaml': 'MediaType.APPLICATION_YAML',
                'application/x-yaml': 'MediaType.APPLICATION_YAML',
                'text/yaml': 'MediaType.APPLICATION_YAML',

                'text/plain': 'MediaType.TEXT_PLAIN'
        }

            var methods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD']
            // var knownHeaders = ['accept', 'content-type', 'authorization']

            var headers = source.allHeaders

            code.push('import org.restlet.resource.*;')

            code.push('ClientResource cr = new ClientResource("%s");', source.fullUrl)

            service.setAccept(code, headers['accept'], mimeTypes)

            service.setAuthorization(code, headers['authorization'])

            service.setCookies(code, source['cookies'])

            code.push('try {')

            if (service.isUnknownMethod(source.method)) {
                service.setUnknownMethod(code, source.method)

            } else {
                if (service.isMethodWithPostData(source.method)) {
                    service.setMethodWithPostData(code, source.method, source.postData, mimeTypes)

            } else {
                    code.push(2, 'Representation representation = cr.' + source.method.toLowerCase() + '();')

            }
            }

            code.push(2, 'System.out.println(representation.getText());')
            code.push('} catch (ResourceException e) {')
            code.push(2, 'System.err.println("Status: " + e.getStatus() + ". Response: " + cr.getResponse().getEntityAsText());')
            code.push('}')

            return code.join()

            // TODO: implement other types of authentication
            function setAuthorization(code, authorization) {
                if (authorization) {
                    code.push('ChallengeResponse credentials = new ChallengeResponse(ChallengeScheme.HTTP_BASIC);')
                    code.push(4, 'credentials')
                    code.push(8, '.setRawValue("%s");', authorization.replace('Basic ', ''))
                    code.push(4, 'cr.setChallengeResponse(credentials);')
                }
            }

            function setCookies(code, cookies) {
                if (cookies.length > 0) {
                    cookies.forEach(function (cookie) {
                        code.push('cr.getCookies().add(new Cookie("%s", "%s"));', cookie.name, cookie.value)
                })

            }
            }

            function setAccept(code, accept, mimeTypes) {
                if (mimeTypes[accept]) {
                    code.push('cr.accept(' + mimeTypes[accept] + ');')
            }
            }

            function setUnknownMethod(code, method) {
                code.push(2, 'cr.getRequest().setMethod(new Method("%s"));', method.toUpperCase())
                code.push(2, 'Representation representation = cr.handle();')
            }

            function setMethodWithPostData(code, method, postData, mimeTypes) {
                if (postData.text) {
                    code.push(2, 'Representation representation = cr')
                    code.push(6, '.%s(new StringRepresentation(', method.toLowerCase())
                    code.push(10, '%s,', JSON.stringify(postData.text))

                    if (mimeTypes[postData.mimeType]) {
                        code.push(10, '%s));', mimeTypes[postData.mimeType])
                    } else {
                        code.push(10, 'MediaType.TEXT_PLAIN));')
                    }

                } else {
                    code.push(2, 'Representation representation = cr.%s(null);', method.toLowerCase())
                }

        }

            function isMethodWithPostData(method) {
                return ['POST', 'PUT', 'PATCH'].indexOf(method.toUpperCase()) !== -1
        }

            function isUnknownMethod(method) {
                return methods.indexOf(method.toUpperCase()) === -1
            }
        }

        module.exports.info = {
            key: 'restlet',
            title: 'Restlet Framework',
            link: 'http://restlet.com/products/restlet-framework/',
            description: 'The most widely used open source solution for Java developers who want to create and use APIs'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    52: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for Java using Unirest.
         *
         * @author
         * @shashiranjan84
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  '
            }, options)

            var code = new CodeBuilder(opts.indent)

            var methods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD', 'OPTIONS']

            if (methods.indexOf(source.method.toUpperCase()) === -1) {
                code.push('HttpResponse<String> response = Unirest.customMethod("%s","%s")', source.method.toUpperCase(), source.fullUrl)
            } else {
                code.push('HttpResponse<String> response = Unirest.%s("%s")', source.method.toLowerCase(), source.fullUrl)
        }

            // Add headers, including the cookies
            var headers = Object.keys(source.allHeaders)

            // construct headers
            if (headers.length) {
                headers.forEach(function (key) {
                    code.push(1, '.header("%s", "%s")', key, source.allHeaders[key])
                })
            }

            if (source.postData.text) {
                code.push(1, '.body(%s)', JSON.stringify(source.postData.text))
            }

            code.push(1, '.asString();')

            return code.join()
        }

        module.exports.info = {
            key: 'unirest',
            title: 'Unirest',
            link: 'http://unirest.io/java.html',
            description: 'Lightweight HTTP Request Client Library'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    53: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'javascript',
                title: 'JavaScript',
                extname: '.js',
                default: 'xhr'
            },

            jquery: require('./jquery'),
            xhr: require('./xhr')
        }

    }, {"./jquery": 54, "./xhr": 55}],
    54: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for native XMLHttpRequest
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  '
            }, options)

            var code = new CodeBuilder(opts.indent)

            var settings = {
                async: true,
                crossDomain: true,
                url: source.fullUrl,
                method: source.method,
                headers: source.allHeaders
            }

            switch (source.postData.mimeType) {
                case 'application/x-www-form-urlencoded':
                    settings.data = source.postData.paramsObj ? source.postData.paramsObj : source.postData.text
                    break

                case 'application/json':
                    settings.processData = false
                    settings.data = source.postData.text
                    break

                case 'multipart/form-data':
                    code.push('var form = new FormData();')

                    source.postData.params.forEach(function (param) {
                        code.push('form.append(%s, %s);', JSON.stringify(param.name), JSON.stringify(param.value || param.fileName || ''))
                    })

                    settings.processData = false
                    settings.contentType = false
                    settings.mimeType = 'multipart/form-data'
                    settings.data = '[form]'

                    // remove the contentType header
                    if (~settings.headers['content-type'].indexOf('boundary')) {
                        delete settings.headers['content-type']
                    }
                    code.blank()
                    break

                default:
                    if (source.postData.text) {
                    settings.data = source.postData.text
                    }
        }

            code.push('var settings = ' + JSON.stringify(settings, null, opts.indent).replace('"[form]"', 'form'))
                .blank()
                .push('$.ajax(settings).done(function (response) {')
                .push(1, 'console.log(response);')
                .push('});')

            return code.join()
        }

        module.exports.info = {
            key: 'jquery',
            title: 'jQuery',
            link: 'http://api.jquery.com/jquery.ajax/',
            description: 'Perform an asynchronous HTTP (Ajax) requests with jQuery'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    55: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for native XMLHttpRequest
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  ',
                cors: true
            }, options)

            var code = new CodeBuilder(opts.indent)

            switch (source.postData.mimeType) {
                case 'application/json':
                    code.push('var data = JSON.stringify(%s);', JSON.stringify(source.postData.jsonObj, null, opts.indent))
                        .push(null)
                    break

                case 'multipart/form-data':
                    code.push('var data = new FormData();')

                    source.postData.params.forEach(function (param) {
                        code.push('data.append(%s, %s);', JSON.stringify(param.name), JSON.stringify(param.value || param.fileName || ''))
                })

                    // remove the contentType header
                    if (source.allHeaders['content-type'].indexOf('boundary')) {
                        delete source.allHeaders['content-type']
                    }

                code.blank()
                    break

                default:
                    code.push('var data = %s;', JSON.stringify(source.postData.text || null))
                        .blank()
            }

            code.push('var xhr = new XMLHttpRequest();')

            if (opts.cors) {
                code.push('xhr.withCredentials = true;')
            }

            code.blank()
                .push('xhr.addEventListener("readystatechange", function () {')
                .push(1, 'if (this.readyState === this.DONE) {')
                .push(2, 'console.log(this.responseText);')
                .push(1, '}')
                .push('});')
                .blank()
                .push('xhr.open(%s, %s);', JSON.stringify(source.method), JSON.stringify(source.fullUrl))

            Object.keys(source.allHeaders).forEach(function (key) {
                code.push('xhr.setRequestHeader(%s, %s);', JSON.stringify(key), JSON.stringify(source.allHeaders[key]))
            })

            code.blank()
                .push('xhr.send(data);')

            return code.join()
        }

        module.exports.info = {
            key: 'xhr',
            title: 'XMLHttpRequest',
            link: 'https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest',
            description: 'W3C Standard API that provides scripted client functionality'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    56: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'node',
                title: 'Node.js',
                extname: '.js',
                default: 'native'
            },

            native: require('./native'),
            request: require('./request'),
            unirest: require('./unirest')
        }

    }, {"./native": 57, "./request": 58, "./unirest": 59}],
    57: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for native Node.js.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  '
            }, options)

            var code = new CodeBuilder(opts.indent)

            var reqOpts = {
                method: source.method,
                hostname: source.uriObj.hostname,
                port: source.uriObj.port,
                path: source.uriObj.path,
                headers: source.allHeaders
        }

            code.push('var http = require("%s");', source.uriObj.protocol.replace(':', ''))

            code.blank()
                .push('var options = %s;', JSON.stringify(reqOpts, null, opts.indent))
                .blank()
                .push('var req = http.request(options, function (res) {')
                .push(1, 'var chunks = [];')
                .blank()
                .push(1, 'res.on("data", function (chunk) {')
                .push(2, 'chunks.push(chunk);')
                .push(1, '});')
                .blank()
                .push(1, 'res.on("end", function () {')
                .push(2, 'var body = Buffer.concat(chunks);')
                .push(2, 'console.log(body.toString());')
                .push(1, '});')
                .push('});')
                .blank()

            switch (source.postData.mimeType) {
                case 'application/x-www-form-urlencoded':
                    if (source.postData.paramsObj) {
                        code.unshift('var qs = require("querystring");')
                        code.push('req.write(qs.stringify(%s));', util.inspect(source.postData.paramsObj, {
                            depth: null
                        }))
                    }
                    break

                case 'application/json':
                    if (source.postData.jsonObj) {
                        code.push('req.write(JSON.stringify(%s));', util.inspect(source.postData.jsonObj, {
                            depth: null
                        }))
                    }
                    break

                default:
                    if (source.postData.text) {
                        code.push('req.write(%s);', JSON.stringify(source.postData.text, null, opts.indent))
                    }
        }

            code.push('req.end();')

            return code.join()
        }

        module.exports.info = {
            key: 'native',
            title: 'HTTP',
            link: 'http://nodejs.org/api/http.html#http_http_request_options_callback',
            description: 'Node.js native HTTP interface'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    58: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for Node.js using Request.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  '
            }, options)

            var includeFS = false
            var code = new CodeBuilder(opts.indent)
            code.push('// Install request by running "npm install --save request"')
            code.push('var request = require("request");')
                .blank()

            var reqOpts = {
                method: source.method,
                url: source.url
            }

            if (Object.keys(source.queryObj).length) {
                reqOpts.qs = source.queryObj
            }

            if (Object.keys(source.headersObj).length) {
                reqOpts.headers = source.headersObj
            }

            switch (source.postData.mimeType) {
                case 'application/x-www-form-urlencoded':
                    reqOpts.form = source.postData.paramsObj
                    break

                case 'application/json':
                    if (source.postData.jsonObj) {
                        reqOpts.body = source.postData.jsonObj
                        reqOpts.json = true
                    }
                    break

                case 'multipart/form-data':
                    reqOpts.formData = {}

                    source.postData.params.forEach(function (param) {
                        var attachement = {}

                        if (!param.fileName && !param.fileName && !param.contentType) {
                            reqOpts.formData[param.name] = param.value
                            return
                        }

                        if (param.fileName && !param.value) {
                            includeFS = true

                            attachement.value = 'fs.createReadStream("' + param.fileName + '")'
                        } else if (param.value) {
                            attachement.value = param.value
                        }

                        if (param.fileName) {
                            attachement.options = {
                                filename: param.fileName,
                                contentType: param.contentType ? param.contentType : null
                            }
                        }

                        reqOpts.formData[param.name] = attachement
                })
                    break

                default:
                    if (source.postData.text) {
                        reqOpts.body = source.postData.text
                    }
            }

            // construct cookies argument
            if (source.cookies.length) {
                reqOpts.jar = 'JAR'

                code.push('var jar = request.jar();')

                var url = source.url

                source.cookies.forEach(function (cookie) {
                    code.push('jar.setCookie(request.cookie("%s=%s"), "%s");', encodeURIComponent(cookie.name), encodeURIComponent(cookie.value), url)
                })
            code.blank()
            }

            if (includeFS) {
                code.unshift('var fs = require("fs");')
            }

            code.push('var options = %s;', util.inspect(reqOpts, {depth: null}))
                .blank()

            code.push(util.format('request(options, %s', 'function (error, response, body) {'))

                .push(1, 'if (error) return console.error(\'Failed: %s\', error.message);')
                .blank()
                .push(1, 'console.log(\'Success: \', body);')
                .push('});')
                .blank()

            return code.join().replace('"JAR"', 'jar').replace(/"fs\.createReadStream\(\\\"(.+)\\\"\)\"/, 'fs.createReadStream("$1")')
        }

        module.exports.info = {
            key: 'request',
            title: 'Request',
            link: 'https://github.com/request/request',
            description: 'Simplified HTTP request client'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    59: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for Node.js using Unirest.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  '
            }, options)

            var includeFS = false
            var code = new CodeBuilder(opts.indent)

            code.push('var unirest = require("unirest");')
                .blank()
                .push('var req = unirest("%s", "%s");', source.method, source.url)
                .blank()

            if (source.cookies.length) {
                code.push('var CookieJar = unirest.jar();')

                source.cookies.forEach(function (cookie) {
                    code.push('CookieJar.add("%s=%s","%s");', encodeURIComponent(cookie.name), encodeURIComponent(cookie.value), source.url)
                })

                code.push('req.jar(CookieJar);')
                .blank()
            }

            if (Object.keys(source.queryObj).length) {
                code.push('req.query(%s);', JSON.stringify(source.queryObj, null, opts.indent))
                .blank()
            }

            if (Object.keys(source.headersObj).length) {
                code.push('req.headers(%s);', JSON.stringify(source.headersObj, null, opts.indent))
                    .blank()
        }

            switch (source.postData.mimeType) {
                case 'application/x-www-form-urlencoded':
                    if (source.postData.paramsObj) {
                        code.push('req.form(%s);', JSON.stringify(source.postData.paramsObj, null, opts.indent))
                    }
                    break

                case 'application/json':
                    if (source.postData.jsonObj) {
                        code.push('req.type("json");')
                            .push('req.send(%s);', JSON.stringify(source.postData.jsonObj, null, opts.indent))
                    }
                    break

                case 'multipart/form-data':
                    var multipart = []

                    source.postData.params.forEach(function (param) {
                        var part = {}

                        if (param.fileName && !param.value) {
                            includeFS = true

                            part.body = 'fs.createReadStream("' + param.fileName + '")'
                        } else if (param.value) {
                            part.body = param.value
                        }

                        if (part.body) {
                            if (param.contentType) {
                                part['content-type'] = param.contentType
                            }

                            multipart.push(part)
                        }
                    })

                    code.push('req.multipart(%s);', JSON.stringify(multipart, null, opts.indent))
                    break

                default:
                    if (source.postData.text) {
                        code.push(opts.indent + 'req.send(%s);', JSON.stringify(source.postData.text, null, opts.indent))
                    }
        }

            if (includeFS) {
                code.unshift('var fs = require("fs");')
            }

            code.blank()
                .push('req.end(function (res) {')
                .push(1, 'if (res.error) throw new Error(res.error);')
                .blank()
                .push(1, 'console.log(res.body);')
                .push('});')
                .blank()

            return code.join().replace(/"fs\.createReadStream\(\\\"(.+)\\\"\)\"/, 'fs.createReadStream("$1")')
        }

        module.exports.info = {
            key: 'unirest',
            title: 'Unirest',
            link: 'http://unirest.io/nodejs.html',
            description: 'Lightweight HTTP Request Client Library'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    60: [function (require, module, exports) {
        'use strict'

        var util = require('util')

        module.exports = {
            /**
             * Create an string of given length filled with blank spaces
             *
             * @param {number} length Length of the array to return
             * @return {string}
             */
            blankString: function (length) {
                return Array.apply(null, new Array(length)).map(String.prototype.valueOf, ' ').join('')
            },

            /**
             * Create a string corresponding to a valid declaration and initialization of an Objective-C object literal.
             *
             * @param {string} nsClass Class of the litteral
             * @param {string} name Desired name of the instance
             * @param {Object} parameters Key-value object of parameters to translate to an Objective-C object litearal
             * @param {boolean} indent If true, will declare the litteral by indenting each new key/value pair.
             * @return {string} A valid Objective-C declaration and initialization of an Objective-C object litteral.
             *
             * @example
             *   nsDeclaration('NSDictionary', 'params', {a: 'b', c: 'd'}, true)
             *   // returns:
             *   NSDictionary *params = @{ @"a": @"b",
   *                             @"c": @"d" };
         *
             *   nsDeclaration('NSDictionary', 'params', {a: 'b', c: 'd'})
             *   // returns:
             *   NSDictionary *params = @{ @"a": @"b", @"c": @"d" };
         */
            nsDeclaration: function (nsClass, name, parameters, indent) {
                var opening = nsClass + ' *' + name + ' = '
                var literal = this.literalRepresentation(parameters, indent ? opening.length : undefined)
                return opening + literal + ';'
            },

        /**
         * Create a valid Objective-C string of a literal value according to its type.
         *
         * @param {*} value Any JavaScript literal
         * @return {string}
         */
        literalRepresentation: function (value, indentation) {
            var join = indentation === undefined ? ', ' : ',\n   ' + this.blankString(indentation)

            switch (Object.prototype.toString.call(value)) {
                case '[object Number]':
                    return '@' + value
                case '[object Array]':
                    var values_representation = value.map(function (v) {
                        return this.literalRepresentation(v)
                    }.bind(this))
                    return '@[ ' + values_representation.join(join) + ' ]'
                case '[object Object]':
                    var keyValuePairs = []
                    for (var k in value) {
                        keyValuePairs.push(util.format('@"%s": %s', k, this.literalRepresentation(value[k])))
                    }
                    return '@{ ' + keyValuePairs.join(join) + ' }'
                case '[object Boolean]':
                    return value ? '@YES' : '@NO'
                default:
                    return '@"' + value.toString().replace(/"/g, '\\"') + '"'
            }
        }
        }

    }, {"util": 114}],
    61: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'objc',
                title: 'Objective-C',
                extname: '.m',
                default: 'nsurlsession'
            },

            nsurlsession: require('./nsurlsession')
        }

    }, {"./nsurlsession": 62}],
    62: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for Objective-C using NSURLSession.
         *
         * @author
         * @thibaultCha
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var helpers = require('./helpers')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '    ',
                pretty: true,
                timeout: '10'
            }, options)

            var code = new CodeBuilder(opts.indent)
            // Markers for headers to be created as litteral objects and later be set on the NSURLRequest if exist
            var req = {
                hasHeaders: false,
                hasBody: false
            }

            // We just want to make sure people understand that is the only dependency
            code.push('#import <Foundation/Foundation.h>')

            if (Object.keys(source.allHeaders).length) {
                req.hasHeaders = true
            code.blank()
                .push(helpers.nsDeclaration('NSDictionary', 'headers', source.allHeaders, opts.pretty))
            }

            if (source.postData.text || source.postData.jsonObj || source.postData.params) {
                req.hasBody = true

            switch (source.postData.mimeType) {
                case 'application/x-www-form-urlencoded':
                    // By appending parameters one by one in the resulting snippet,
                    // we make it easier for the user to edit it according to his or her needs after pasting.
                    // The user can just add/remove lines adding/removing body parameters.
                    code.blank()
                        .push('NSMutableData *postData = [[NSMutableData alloc] initWithData:[@"%s=%s" dataUsingEncoding:NSUTF8StringEncoding]];',
                            source.postData.params[0].name, source.postData.params[0].value)
                    for (var i = 1, len = source.postData.params.length; i < len; i++) {
                        code.push('[postData appendData:[@"&%s=%s" dataUsingEncoding:NSUTF8StringEncoding]];',
                            source.postData.params[i].name, source.postData.params[i].value)
                    }
                    break

                case 'application/json':
                    if (source.postData.jsonObj) {
                        code.push(helpers.nsDeclaration('NSDictionary', 'parameters', source.postData.jsonObj, opts.pretty))
                            .blank()
                            .push('NSData *postData = [NSJSONSerialization dataWithJSONObject:parameters options:0 error:nil];')
                    }
                    break

                case 'multipart/form-data':
                    // By appending multipart parameters one by one in the resulting snippet,
                    // we make it easier for the user to edit it according to his or her needs after pasting.
                    // The user can just edit the parameters NSDictionary or put this part of a snippet in a multipart builder method.
                    code.push(helpers.nsDeclaration('NSArray', 'parameters', source.postData.params, opts.pretty))
                        .push('NSString *boundary = @"%s";', source.postData.boundary)
                        .blank()
                        .push('NSError *error;')
                        .push('NSMutableString *body = [NSMutableString string];')
                        .push('for (NSDictionary *param in parameters) {')
                        .push(1, '[body appendFormat:@"--%@\\r\\n", boundary];')
                        .push(1, 'if (param[@"fileName"]) {')
                        .push(2, '[body appendFormat:@"Content-Disposition:form-data; name=\\"%@\\"; filename=\\"%@\\"\\r\\n", param[@"name"], param[@"fileName"]];')
                        .push(2, '[body appendFormat:@"Content-Type: %@\\r\\n\\r\\n", param[@"contentType"]];')
                        .push(2, '[body appendFormat:@"%@", [NSString stringWithContentsOfFile:param[@"fileName"] encoding:NSUTF8StringEncoding error:&error]];')
                        .push(2, 'if (error) {')
                        .push(3, 'NSLog(@"%@", error);')
                        .push(2, '}')
                        .push(1, '} else {')
                        .push(2, '[body appendFormat:@"Content-Disposition:form-data; name=\\"%@\\"\\r\\n\\r\\n", param[@"name"]];')
                        .push(2, '[body appendFormat:@"%@", param[@"value"]];')
                        .push(1, '}')
                        .push('}')
                        .push('[body appendFormat:@"\\r\\n--%@--\\r\\n", boundary];')
                        .push('NSData *postData = [body dataUsingEncoding:NSUTF8StringEncoding];')
                    break

                default:
                    code.blank()
                        .push('NSData *postData = [[NSData alloc] initWithData:[@"' + source.postData.text + '" dataUsingEncoding:NSUTF8StringEncoding]];')
            }
            }

            code.blank()
                .push('NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:@"' + source.fullUrl + '"]')
                // NSURLRequestUseProtocolCachePolicy is the default policy, let's just always set it to avoid confusion.
                .push('                                                       cachePolicy:NSURLRequestUseProtocolCachePolicy')
                .push('                                                   timeoutInterval:' + parseInt(opts.timeout, 10).toFixed(1) + '];')
                .push('[request setHTTPMethod:@"' + source.method + '"];')

            if (req.hasHeaders) {
                code.push('[request setAllHTTPHeaderFields:headers];')
            }

            if (req.hasBody) {
                code.push('[request setHTTPBody:postData];')
            }

            code.blank()
                // Retrieving the shared session will be less verbose than creating a new one.
                .push('NSURLSession *session = [NSURLSession sharedSession];')
                .push('NSURLSessionDataTask *dataTask = [session dataTaskWithRequest:request')
                .push('                                            completionHandler:^(NSData *data, NSURLResponse *response, NSError *error) {')
                .push(1, '                                            if (error) {')
                .push(2, '                                            NSLog(@"%@", error);')
                .push(1, '                                            } else {')
                // Casting the NSURLResponse to NSHTTPURLResponse so the user can see the status     .
                .push(2, '                                            NSHTTPURLResponse *httpResponse = (NSHTTPURLResponse *) response;')
                .push(2, '                                            NSLog(@"%@", httpResponse);')
                .push(1, '                                            }')
                .push('                                            }];')
                .push('[dataTask resume];')

            return code.join()
        }

        module.exports.info = {
            key: 'nsurlsession',
            title: 'NSURLSession',
            link: 'https://developer.apple.com/library/mac/documentation/Foundation/Reference/NSURLSession_class/index.html',
            description: 'Foundation\'s NSURLSession request'
        }

    }, {"../../helpers/code-builder": 38, "./helpers": 60, "util": 114}],
    63: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for OCaml using CoHTTP.
         *
         * @author
         * @SGrondin
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  '
            }, options)

            var methods = ['get', 'post', 'head', 'delete', 'patch', 'put', 'options']
            var code = new CodeBuilder(opts.indent)

            code.push('open Cohttp_lwt_unix')
                .push('open Cohttp')
                .push('open Lwt')
                .blank()
                .push('let uri = Uri.of_string "%s" in', source.fullUrl)

            // Add headers, including the cookies
            var headers = Object.keys(source.allHeaders)

            if (headers.length === 1) {
                code.push('let headers = Header.add (Header.init ()) "%s" "%s" in', headers[0], source.allHeaders[headers[0]])
            } else if (headers.length > 1) {
                code.push('let headers = Header.add_list (Header.init ()) [')

                headers.forEach(function (key) {
                    code.push(1, '("%s", "%s");', key, source.allHeaders[key])
                })

                code.push('] in')
            }

            // Add body
            if (source.postData.text) {
                // Just text
                code.push('let body = Cohttp_lwt_body.of_string %s in', JSON.stringify(source.postData.text))
            }

            // Do the request
            code.blank()

            code.push('Client.call %s%s%s uri',
                headers.length ? '~headers ' : '',
                source.postData.text ? '~body ' : '',
                (methods.indexOf(source.method.toLowerCase()) >= 0 ? ('`' + source.method.toUpperCase()) : '(Code.method_of_string "' + source.method + '")')
            )

            // Catch result
            code.push('>>= fun (res, body_stream) ->')
                .push(1, '(* Do stuff with the result *)')

            return code.join()
        }

        module.exports.info = {
            key: 'cohttp',
            title: 'CoHTTP',
            link: 'https://github.com/mirage/ocaml-cohttp',
            description: 'Cohttp is a very lightweight HTTP server using Lwt or Async for OCaml'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    64: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'ocaml',
                title: 'OCaml',
                extname: '.ml',
                default: 'cohttp'
            },

            cohttp: require('./cohttp')
        }

    }, {"./cohttp": 63}],
    65: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for PHP using curl-ext.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                closingTag: false,
                indent: '  ',
                maxRedirects: 10,
                namedErrors: false,
                noTags: false,
                shortTags: false,
                timeout: 30
            }, options)

            var code = new CodeBuilder(opts.indent)

            if (!opts.noTags) {
                code.push(opts.shortTags ? '<?' : '<?php')
                .blank()
            }

            code.push('$curl = curl_init();')
                .blank()

            var curlOptions = [{
                escape: true,
                name: 'CURLOPT_PORT',
                value: source.uriObj.port
            }, {
                escape: true,
                name: 'CURLOPT_URL',
                value: source.fullUrl
            }, {
                escape: false,
                name: 'CURLOPT_RETURNTRANSFER',
                value: 'true'
            }, {
                escape: true,
                name: 'CURLOPT_ENCODING',
                value: ''
            }, {
                escape: false,
                name: 'CURLOPT_MAXREDIRS',
                value: opts.maxRedirects
            }, {
                escape: false,
                name: 'CURLOPT_TIMEOUT',
                value: opts.timeout
            }, {
                escape: false,
                name: 'CURLOPT_HTTP_VERSION',
                value: source.httpVersion === 'HTTP/1.0' ? 'CURL_HTTP_VERSION_1_0' : 'CURL_HTTP_VERSION_1_1'
            }, {
                escape: true,
                name: 'CURLOPT_CUSTOMREQUEST',
                value: source.method
            }, {
                escape: true,
                name: 'CURLOPT_POSTFIELDS',
                value: source.postData ? source.postData.text : undefined
            }]

            code.push('curl_setopt_array($curl, array(')

            var curlopts = new CodeBuilder(opts.indent, '\n' + opts.indent)

            curlOptions.forEach(function (option) {
                if (!~[null, undefined].indexOf(option.value)) {
                    curlopts.push(util.format('%s => %s,', option.name, option.escape ? JSON.stringify(option.value) : option.value))
            }
            })

            // construct cookies
            var cookies = source.cookies.map(function (cookie) {
                return encodeURIComponent(cookie.name) + '=' + encodeURIComponent(cookie.value)
            })

            if (cookies.length) {
                curlopts.push(util.format('CURLOPT_COOKIE => "%s",', cookies.join('; ')))
        }

            // construct cookies
            var headers = Object.keys(source.headersObj).sort().map(function (key) {
                return util.format('"%s: %s"', key, source.headersObj[key])
            })

            if (headers.length) {
                curlopts.push('CURLOPT_HTTPHEADER => array(')
                    .push(1, headers.join(',\n' + opts.indent + opts.indent))
                    .push('),')
        }

            code.push(1, curlopts.join())
                .push('));')
                .blank()
                .push('$response = curl_exec($curl);')
                .push('$err = curl_error($curl);')
                .blank()
                .push('curl_close($curl);')
                .blank()
                .push('if ($err) {')

            if (opts.namedErrors) {
                code.push(1, 'echo array_flip(get_defined_constants(true)["curl"])[$err];')
            } else {
                code.push(1, 'echo "cURL Error #:" . $err;')
            }

            code.push('} else {')
                .push(1, 'echo $response;')
                .push('}')

            if (!opts.noTags && opts.closingTag) {
                code.blank()
                    .push('?>')
        }

            return code.join()
        }

        module.exports.info = {
            key: 'curl',
            title: 'cURL',
            link: 'http://php.net/manual/en/book.curl.php',
            description: 'PHP with ext-curl'
        }

    }, {"../../helpers/code-builder": 38, "util": 114}],
    66: [function (require, module, exports) {
        'use strict'

        var convert = function (obj, indent, last_indent) {
            var i, result

            if (!last_indent) {
                last_indent = ''
        }

            switch (Object.prototype.toString.call(obj)) {
                case '[object Null]':
                    result = 'null'
                    break

                case '[object Undefined]':
                    result = 'null'
                    break

                case '[object String]':
                    result = "'" + obj.replace(/\\/g, '\\\\').replace(/\'/g, "\'") + "'"
                    break

                case '[object Number]':
                    result = obj.toString()
                    break

                case '[object Array]':
                    result = []

                    obj.forEach(function (item) {
                        result.push(convert(item, indent + indent, indent))
                    })

                    result = 'array(\n' + indent + result.join(',\n' + indent) + '\n' + last_indent + ')'
                    break

                case '[object Object]':
                    result = []
                    for (i in obj) {
                        if (obj.hasOwnProperty(i)) {
                            result.push(convert(i, indent) + ' => ' + convert(obj[i], indent + indent, indent))
                        }
                    }
                    result = 'array(\n' + indent + result.join(',\n' + indent) + '\n' + last_indent + ')'
                    break

                default:
                    result = 'null'
            }

            return result
        }

        module.exports = {
            convert: convert,
            methods: [
                'ACL',
                'BASELINE_CONTROL',
                'CHECKIN',
                'CHECKOUT',
                'CONNECT',
                'COPY',
                'DELETE',
                'GET',
                'HEAD',
                'LABEL',
                'LOCK',
                'MERGE',
                'MKACTIVITY',
                'MKCOL',
                'MKWORKSPACE',
                'MOVE',
                'OPTIONS',
                'POST',
                'PROPFIND',
                'PROPPATCH',
                'PUT',
                'REPORT',
                'TRACE',
                'UNCHECKOUT',
                'UNLOCK',
                'UPDATE',
                'VERSION_CONTROL'
            ]
        }

    }, {}],
    67: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for PHP using curl-ext.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var helpers = require('./helpers')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                closingTag: false,
                indent: '  ',
                noTags: false,
                shortTags: false
            }, options)

            var code = new CodeBuilder(opts.indent)

            if (!opts.noTags) {
                code.push(opts.shortTags ? '<?' : '<?php')
                .blank()
            }

            if (!~helpers.methods.indexOf(source.method.toUpperCase())) {
                code.push('HttpRequest::methodRegister(\'%s\');', source.method)
            }

            code.push('$request = new HttpRequest();')
                .push('$request->setUrl(%s);', helpers.convert(source.url))

            if (~helpers.methods.indexOf(source.method.toUpperCase())) {
                code.push('$request->setMethod(HTTP_METH_%s);', source.method.toUpperCase())
            } else {
                code.push('$request->setMethod(HttpRequest::HTTP_METH_%s);', source.method.toUpperCase())
            }

            code.blank()

            if (Object.keys(source.queryObj).length) {
                code.push('$request->setQueryData(%s);', helpers.convert(source.queryObj, opts.indent))
                    .blank()
            }

            if (Object.keys(source.headersObj).length) {
                code.push('$request->setHeaders(%s);', helpers.convert(source.headersObj, opts.indent))
                    .blank()
            }

            if (Object.keys(source.cookiesObj).length) {
                code.push('$request->setCookies(%s);', helpers.convert(source.cookiesObj, opts.indent))
                    .blank()
            }

            switch (source.postData.mimeType) {
                case 'application/x-www-form-urlencoded':
                    code.push('$request->setContentType(%s);', helpers.convert(source.postData.mimeType))
                        .push('$request->setPostFields(%s);', helpers.convert(source.postData.paramsObj, opts.indent))
                    .blank()
                    break

                default:
                    if (source.postData.text) {
                        code.push('$request->setBody(%s);', helpers.convert(source.postData.text))
                        .blank()
                }
            }

            code.push('try {')
                .push(1, '$response = $request->send();')
                .blank()
                .push(1, 'echo $response->getBody();')
                .push('} catch (HttpException $ex) {')
                .push(1, 'echo $ex;')
                .push('}')

            if (!opts.noTags && opts.closingTag) {
                code.blank()
                    .push('?>')
            }

            return code.join()
        }

        module.exports.info = {
            key: 'http1',
            title: 'HTTP v1',
            link: 'http://php.net/manual/en/book.http.php',
            description: 'PHP with pecl/http v1'
        }

    }, {"../../helpers/code-builder": 38, "./helpers": 66, "util": 114}],
    68: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for PHP using curl-ext.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var helpers = require('./helpers')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                closingTag: false,
                indent: '  ',
                noTags: false,
                shortTags: false
            }, options)

            var code = new CodeBuilder(opts.indent)
            var hasBody = false

            if (!opts.noTags) {
                code.push(opts.shortTags ? '<?' : '<?php')
                    .blank()
            }

            code.push('$client = new http\\Client;')
                .push('$request = new http\\Client\\Request;')
                .blank()

            switch (source.postData.mimeType) {
                case 'application/x-www-form-urlencoded':
                    code.push('$body = new http\\Message\\Body;')
                        .push('$body->append(new http\\QueryString(%s));', helpers.convert(source.postData.paramsObj, opts.indent))
                        .blank()
                    hasBody = true
                    break

                case 'multipart/form-data':
                    var files = []
                    var fields = {}

                    source.postData.params.forEach(function (param) {
                        if (param.fileName) {
                            files.push({
                                name: param.name,
                                type: param.contentType,
                                file: param.fileName,
                                data: param.value
                            })
                        } else if (param.value) {
                            fields[param.name] = param.value
                    }
                    })

                    code.push('$body = new http\\Message\\Body;')
                        .push('$body->addForm(%s, %s);',
                            Object.keys(fields).length ? helpers.convert(fields, opts.indent) : 'NULL',
                            files.length ? helpers.convert(files, opts.indent) : 'NULL'
                        )

                    // remove the contentType header
                    if (~source.headersObj['content-type'].indexOf('boundary')) {
                        delete source.headersObj['content-type']
                }

                    code.blank()

                    hasBody = true
                    break

                default:
                    if (source.postData.text) {
                        code.push('$body = new http\\Message\\Body;')
                            .push('$body->append(%s);', helpers.convert(source.postData.text))
                            .blank()
                        hasBody = true
                    }
            }

            code.push('$request->setRequestUrl(%s);', helpers.convert(source.url))
                .push('$request->setRequestMethod(%s);', helpers.convert(source.method))

            if (hasBody) {
                code.push('$request->setBody($body);')
                .blank()
            }

            if (Object.keys(source.queryObj).length) {
                code.push('$request->setQuery(new http\\QueryString(%s));', helpers.convert(source.queryObj, opts.indent))
                    .blank()
        }

            if (Object.keys(source.headersObj).length) {
                code.push('$request->setHeaders(%s);', helpers.convert(source.headersObj, opts.indent))
                    .blank()
        }

            if (Object.keys(source.cookiesObj).length) {
                code.blank()
                    .push('$client->setCookies(%s);', helpers.convert(source.cookiesObj, opts.indent))
                    .blank()
            }

            code.push('$client->enqueue($request)->send();')
                .push('$response = $client->getResponse();')
                .blank()
                .push('echo $response->getBody();')

            if (!opts.noTags && opts.closingTag) {
                code.blank()
                    .push('?>')
            }

            return code.join()
        }

        module.exports.info = {
            key: 'http2',
            title: 'HTTP v2',
            link: 'http://devel-m6w6.rhcloud.com/mdref/http',
            description: 'PHP with pecl/http v2'
        }

    }, {"../../helpers/code-builder": 38, "./helpers": 66, "util": 114}],
    69: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'php',
                title: 'PHP',
                extname: '.php',
                default: 'curl'
            },

            curl: require('./curl'),
            http1: require('./http1'),
            http2: require('./http2')
        }

    }, {"./curl": 65, "./http1": 67, "./http2": 68}],
    70: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'python',
                title: 'Python',
                extname: '.py',
                default: 'python3'
            },

            python3: require('./python3'),
            requests: require('./requests')
        }

    }, {"./python3": 71, "./requests": 72}],
    71: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for native Python3.
         *
         * @author
         * @montanaflynn
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var code = new CodeBuilder()
            // Start Request
            code.push('import http.client')
                .blank()

            // Check which protocol to be used for the client connection
            var protocol = source.uriObj.protocol
            if (protocol === 'https:') {
                code.push('conn = http.client.HTTPSConnection("%s")', source.uriObj.host)
                .blank()
            } else {
                code.push('conn = http.client.HTTPConnection("%s")', source.uriObj.host)
                    .blank()
            }

            // Create payload string if it exists
            var payload = JSON.stringify(source.postData.text)
            if (payload) {
                code.push('payload = %s', payload)
                .blank()
            }

            // Create Headers
            var header
            var headers = source.allHeaders
            var headerCount = Object.keys(headers).length
            if (headerCount === 1) {
                for (header in headers) {
                    code.push('headers = { \'%s\': "%s" }', header, headers[header])
                    .blank()
            }
            } else if (headerCount > 1) {
                var count = 1

                code.push('headers = {')

                for (header in headers) {
                    if (count++ !== headerCount) {
                        code.push('    \'%s\': "%s",', header, headers[header])
                    } else {
                        code.push('    \'%s\': "%s"', header, headers[header])
                    }
            }

                code.push('    }')
                    .blank()
            }

            // Make Request
            var method = source.method
            var path = source.uriObj.path
            if (payload && headerCount) {
                code.push('conn.request("%s", "%s", payload, headers)', method, path)
            } else if (payload && !headerCount) {
                code.push('conn.request("%s", "%s", payload)', method, path)
            } else if (!payload && headerCount) {
                code.push('conn.request("%s", "%s", headers=headers)', method, path)
            } else {
                code.push('conn.request("%s", "%s")', method, path)
            }

            // Get Response
            code.blank()
                .push('res = conn.getresponse()')
                .push('data = res.read()')
                .blank()
                .push('print(data.decode("utf-8"))')

            return code.join()
        }

        module.exports.info = {
            key: 'python3',
            title: 'http.client',
            link: 'https://docs.python.org/3/library/http.client.html',
            description: 'Python3 HTTP Client'
        }

    }, {"../../helpers/code-builder": 38}],
    72: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for Python using Requests
         *
         * @author
         * @montanaflynn
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            // Start snippet
            var code = new CodeBuilder('    ')

            // Import requests
            code.push('import requests')
                .blank()

            // Set URL
            code.push('url = "%s"', source.url)
                .blank()

            // Construct query string
            if (source.queryString.length) {
                var qs = 'querystring = ' + JSON.stringify(source.queryObj)

                code.push(qs)
                    .blank()
            }

            // Construct payload
            var payload = JSON.stringify(source.postData.text)

            if (payload) {
                code.push('payload = %s', payload)
            }

            // Construct headers
            var header
            var headers = source.allHeaders
            var headerCount = Object.keys(headers).length

            if (headerCount === 1) {
                for (header in headers) {
                    code.push('headers = {\'%s\': \'%s\'}', header, headers[header])
                        .blank()
            }
            } else if (headerCount > 1) {
                var count = 1

                code.push('headers = {')

                for (header in headers) {
                    if (count++ !== headerCount) {
                        code.push(1, '\'%s\': "%s",', header, headers[header])
                    } else {
                        code.push(1, '\'%s\': "%s"', header, headers[header])
                    }
                }

                code.push(1, '}')
                .blank()
            }

            // Construct request
            var method = source.method
            var request = util.format('response = requests.request("%s", url', method)

            if (payload) {
                request += ', data=payload'
        }

            if (headerCount > 0) {
                request += ', headers=headers'
        }

            if (qs) {
                request += ', params=querystring'
            }

            request += ')'

            code.push(request)
                .blank()

                // Print response
                .push('print(response.text)')

            return code.join()
        }

        module.exports.info = {
            key: 'requests',
            title: 'Requests',
            link: 'http://docs.python-requests.org/en/latest/api/#requests.request',
            description: 'Requests HTTP library'
        }

// response = requests.request("POST", url, data=payload, headers=headers, params=querystring)

    }, {"../../helpers/code-builder": 38, "util": 114}],
    73: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'ruby',
                title: 'Ruby',
                extname: '.rb',
                default: 'native'
            },

            native: require('./native')
        }

    }, {"./native": 74}],
    74: [function (require, module, exports) {
        'use strict'

        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var code = new CodeBuilder()

            code.push('require \'uri\'')
                .push('require \'openssl\'')
                .push('require \'net/http\'')
                .blank()

            // To support custom methods we check for the supported methods
            // and if doesn't exist then we build a custom class for it
            var method = source.method.toUpperCase()
            var methods = ['GET', 'POST', 'HEAD', 'DELETE', 'PATCH', 'PUT', 'OPTIONS', 'COPY', 'LOCK', 'UNLOCK', 'MOVE', 'TRACE']
            var capMethod = method.charAt(0) + method.substring(1).toLowerCase()
            if (methods.indexOf(method) < 0) {
                code.push('class Net::HTTP::%s < Net::HTTPRequest', capMethod)
                    .push('  METHOD = \'%s\'', method.toUpperCase())
                    .push('  REQUEST_HAS_BODY = \'%s\'', source.postData.text ? 'true' : 'false')
                    .push('  RESPONSE_HAS_BODY = true')
                    .push('end')
                .blank()
            }

            code.push('url = URI("%s")', source.fullUrl)
                .blank()
                .push('http = Net::HTTP.new(url.host, url.port)')

            if (source.uriObj.protocol === 'https:') {
                code.push('http.use_ssl = true')
                    .push('http.verify_mode = OpenSSL::SSL::VERIFY_PEER')
            }

            code.blank()
                .push('request = Net::HTTP::%s.new(url)', capMethod)

            var headers = Object.keys(source.allHeaders)
            if (headers.length) {
                headers.forEach(function (key) {
                    code.push('request["%s"] = \'%s\'', key, source.allHeaders[key])
                })
            }

            if (source.postData.text) {
                code.push('request.body = %s', JSON.stringify(source.postData.text))
            }

            code.blank()
                .push('response = http.request(request)')
                .push('puts response.read_body')

            return code.join()
        }

        module.exports.info = {
            key: 'native',
            title: 'net::http',
            link: 'http://ruby-doc.org/stdlib-2.2.1/libdoc/net/http/rdoc/Net/HTTP.html',
            description: 'Ruby HTTP client'
        }

    }, {"../../helpers/code-builder": 38}],
    75: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for the Shell using cURL.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var helpers = require('../../helpers/shell')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  ',
                short: false
            }, options)

            var code = new CodeBuilder(opts.indent, opts.indent !== false ? ' \\\n' + opts.indent : ' ')

            code.push('curl %s %s', opts.short ? '-X' : '--request', source.method)
                .push(util.format('%s%s', opts.short ? '' : '--url ', helpers.quote(source.fullUrl)))

            if (source.httpVersion === 'HTTP/1.0') {
                code.push(opts.short ? '-0' : '--http1.0')
            }

            // construct headers
            Object.keys(source.headersObj).sort().forEach(function (key) {
                var header = util.format('%s: %s', key, source.headersObj[key])
                code.push('%s %s', opts.short ? '-H' : '--header', helpers.quote(header))
            })

            if (source.allHeaders.cookie) {
                code.push('%s %s', opts.short ? '-b' : '--cookie', helpers.quote(source.allHeaders.cookie))
            }

            // construct post params
            switch (source.postData.mimeType) {
                case 'multipart/form-data':
                    source.postData.params.map(function (param) {
                        var post = util.format('%s=%s', param.name, param.value)

                        if (param.fileName && !param.value) {
                            post = util.format('%s=@%s', param.name, param.fileName)
                        }

                        code.push('%s %s', opts.short ? '-F' : '--form', helpers.quote(post))
                })
                    break

                default:
                    // raw request body
                    if (source.postData.text) {
                        code.push('%s %s', opts.short ? '-d' : '--data', helpers.escape(helpers.quote(source.postData.text)))
                    }
            }

            return code.join()
        }

        module.exports.info = {
            key: 'curl',
            title: 'cURL',
            link: 'http://curl.haxx.se/',
            description: 'cURL is a command line tool and library for transferring data with URL syntax'
        }

    }, {"../../helpers/code-builder": 38, "../../helpers/shell": 40, "util": 114}],
    76: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for the Shell using HTTPie.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var shell = require('../../helpers/shell')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                body: false,
                cert: false,
                headers: false,
                indent: '  ',
                pretty: false,
                print: false,
                queryParams: false,
                short: false,
                style: false,
                timeout: false,
                verbose: false,
                verify: false
            }, options)

            var code = new CodeBuilder(opts.indent, opts.indent !== false ? ' \\\n' + opts.indent : ' ')

            var raw = false
            var flags = []

            if (opts.headers) {
                flags.push(opts.short ? '-h' : '--headers')
        }

            if (opts.body) {
                flags.push(opts.short ? '-b' : '--body')
        }

            if (opts.verbose) {
                flags.push(opts.short ? '-v' : '--verbose')
            }

            if (opts.print) {
                flags.push(util.format('%s=%s', opts.short ? '-p' : '--print', opts.print))
            }

            if (opts.verify) {
                flags.push(util.format('--verify=%s', opts.verify))
            }

            if (opts.cert) {
                flags.push(util.format('--cert=%s', opts.cert))
            }

            if (opts.pretty) {
                flags.push(util.format('--pretty=%s', opts.pretty))
            }

            if (opts.style) {
                flags.push(util.format('--style=%s', opts.pretty))
            }

            if (opts.timeout) {
                flags.push(util.format('--timeout=%s', opts.timeout))
            }

            // construct query params
            if (opts.queryParams) {
                var queryStringKeys = Object.keys(source.queryObj)

                queryStringKeys.forEach(function (name) {
                    var value = source.queryObj[name]

                    if (util.isArray(value)) {
                        value.forEach(function (val) {
                            code.push('%s==%s', name, shell.quote(val))
                        })
                    } else {
                        code.push('%s==%s', name, shell.quote(value))
                    }
            })
            }

            // construct headers
            Object.keys(source.allHeaders).sort().forEach(function (key) {
                code.push('%s:%s', key, shell.quote(source.allHeaders[key]))
            })

            if (source.postData.mimeType === 'application/x-www-form-urlencoded') {
            // construct post params
                if (source.postData.params && source.postData.params.length) {
                    flags.push(opts.short ? '-f' : '--form')

                    source.postData.params.forEach(function (param) {
                        code.push('%s=%s', param.name, shell.quote(param.value))
                    })
                }
            } else {
                raw = true
            }

            code.unshift('http %s%s %s', flags.length ? flags.join(' ') + ' ' : '', source.method, shell.quote(opts.queryParams ? source.url : source.fullUrl))

            if (raw && source.postData.text) {
                code.unshift('echo %s | ', shell.quote(source.postData.text))
            }

            return code.join()
        }

        module.exports.info = {
            key: 'httpie',
            title: 'HTTPie',
            link: 'http://httpie.org/',
            description: 'a CLI, cURL-like tool for humans'
        }

    }, {"../../helpers/code-builder": 38, "../../helpers/shell": 40, "util": 114}],
    77: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'shell',
                title: 'Shell',
                extname: '.sh',
                default: 'curl'
            },

            curl: require('./curl'),
            httpie: require('./httpie'),
            wget: require('./wget')
        }

    }, {"./curl": 75, "./httpie": 76, "./wget": 78}],
    78: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for the Shell using Wget.
         *
         * @author
         * @AhmadNassri
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var helpers = require('../../helpers/shell')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  ',
                short: false,
                verbose: false
            }, options)

            var code = new CodeBuilder(opts.indent, opts.indent !== false ? ' \\\n' + opts.indent : ' ')

            if (opts.verbose) {
                code.push('wget %s', opts.short ? '-v' : '--verbose')
            } else {
                code.push('wget %s', opts.short ? '-q' : '--quiet')
            }

            code.push('--method %s', helpers.quote(source.method))

            Object.keys(source.allHeaders).forEach(function (key) {
                var header = util.format('%s: %s', key, source.allHeaders[key])
                code.push('--header %s', helpers.quote(header))
            })

            if (source.postData.text) {
                code.push('--body-data ' + helpers.escape(helpers.quote(source.postData.text)))
            }

            code.push(opts.short ? '-O' : '--output-document')
                .push('- %s', helpers.quote(source.fullUrl))

            return code.join()
        }

        module.exports.info = {
            key: 'wget',
            title: 'Wget',
            link: 'https://www.gnu.org/software/wget/',
            description: 'a free software package for retrieving files using HTTP, HTTPS'
        }

    }, {"../../helpers/code-builder": 38, "../../helpers/shell": 40, "util": 114}],
    79: [function (require, module, exports) {
        'use strict'

        var util = require('util')

        /**
         * Create an string of given length filled with blank spaces
         *
         * @param {number} length Length of the array to return
         * @return {string}
         */
        function buildString(length, str) {
            return Array.apply(null, new Array(length)).map(String.prototype.valueOf, str).join('')
        }

        /**
         * Create a string corresponding to a Dictionary or Array literal representation with pretty option
         * and indentation.
         */
        function concatArray(arr, pretty, indentation, indentLevel) {
            var currentIndent = buildString(indentLevel, indentation)
            var closingBraceIndent = buildString(indentLevel - 1, indentation)
            var join = pretty ? ',\n' + currentIndent : ', '

            if (pretty) {
                return '[\n' + currentIndent + arr.join(join) + '\n' + closingBraceIndent + ']'
            } else {
                return '[' + arr.join(join) + ']'
            }
        }

        module.exports = {
            /**
             * Create a string corresponding to a valid declaration and initialization of a Swift array or dictionary literal
             *
             * @param {string} name Desired name of the instance
             * @param {Object} parameters Key-value object of parameters to translate to a Swift object litearal
             * @param {Object} opts Target options
             * @return {string}
             */
            literalDeclaration: function (name, parameters, opts) {
                return util.format('let %s = %s', name, this.literalRepresentation(parameters, opts))
            },

            /**
             * Create a valid Swift string of a literal value according to its type.
             *
             * @param {*} value Any JavaScript literal
             * @param {Object} opts Target options
             * @return {string}
             */
            literalRepresentation: function (value, opts, indentLevel) {
                indentLevel = indentLevel === undefined ? 1 : indentLevel + 1

                switch (Object.prototype.toString.call(value)) {
                    case '[object Number]':
                        return value
                    case '[object Array]':
                        // Don't prettify arrays nto not take too much space
                        var pretty = false
                        var valuesRepresentation = value.map(function (v) {
                            // Switch to prettify if the value is a dictionary with multiple keys
                            if (Object.prototype.toString.call(v) === '[object Object]') {
                                pretty = Object.keys(v).length > 1
                            }
                            return this.literalRepresentation(v, opts, indentLevel)
                        }.bind(this))
                        return concatArray(valuesRepresentation, pretty, opts.indent, indentLevel)
                    case '[object Object]':
                        var keyValuePairs = []
                        for (var k in value) {
                            keyValuePairs.push(util.format('"%s": %s', k, this.literalRepresentation(value[k], opts, indentLevel)))
                        }
                        return concatArray(keyValuePairs, opts.pretty && keyValuePairs.length > 1, opts.indent, indentLevel)
                    case '[object Boolean]':
                        return value.toString()
                    default:
                        return '"' + value.toString().replace(/"/g, '\\"') + '"'
                }
            }
        }

    }, {"util": 114}],
    80: [function (require, module, exports) {
        'use strict'

        module.exports = {
            info: {
                key: 'swift',
                title: 'Swift',
                extname: '.swift',
                default: 'nsurlsession'
            },

            nsurlsession: require('./nsurlsession')
        }

    }, {"./nsurlsession": 81}],
    81: [function (require, module, exports) {
        /**
         * @description
         * HTTP code snippet generator for Swift using NSURLSession.
         *
         * @author
         * @thibaultCha
         *
         * for any questions or issues regarding the generated code snippet, please open an issue mentioning the author.
         */

        'use strict'

        var util = require('util')
        var helpers = require('./helpers')
        var CodeBuilder = require('../../helpers/code-builder')

        module.exports = function (source, options) {
            var opts = util._extend({
                indent: '  ',
                pretty: true,
                timeout: '10'
            }, options)

            var code = new CodeBuilder(opts.indent)

            // Markers for headers to be created as litteral objects and later be set on the NSURLRequest if exist
            var req = {
                hasHeaders: false,
                hasBody: false
            }

            // We just want to make sure people understand that is the only dependency
            code.push('import Foundation')

            if (Object.keys(source.allHeaders).length) {
                req.hasHeaders = true
                code.blank()
                    .push(helpers.literalDeclaration('headers', source.allHeaders, opts))
            }

            if (source.postData.text || source.postData.jsonObj || source.postData.params) {
                req.hasBody = true

            switch (source.postData.mimeType) {
                case 'application/x-www-form-urlencoded':
                    // By appending parameters one by one in the resulting snippet,
                    // we make it easier for the user to edit it according to his or her needs after pasting.
                    // The user can just add/remove lines adding/removing body parameters.
                    code.blank()
                        .push('var postData = NSMutableData(data: "%s=%s".dataUsingEncoding(NSUTF8StringEncoding)!)', source.postData.params[0].name, source.postData.params[0].value)
                    for (var i = 1, len = source.postData.params.length; i < len; i++) {
                        code.push('postData.appendData("&%s=%s".dataUsingEncoding(NSUTF8StringEncoding)!)', source.postData.params[i].name, source.postData.params[i].value)
                    }
                    break

                case 'application/json':
                    if (source.postData.jsonObj) {
                        code.push(helpers.literalDeclaration('parameters', source.postData.jsonObj, opts))
                            .blank()
                            .push('let postData = NSJSONSerialization.dataWithJSONObject(parameters, options: nil, error: nil)')
                    }
                    break

                case 'multipart/form-data':
                    /**
                     * By appending multipart parameters one by one in the resulting snippet,
                     * we make it easier for the user to edit it according to his or her needs after pasting.
                     * The user can just edit the parameters NSDictionary or put this part of a snippet in a multipart builder method.
                     */
                    code.push(helpers.literalDeclaration('parameters', source.postData.params, opts))
                        .blank()
                        .push('let boundary = "%s"', source.postData.boundary)
                        .blank()
                        .push('var body = ""')
                        .push('var error: NSError? = nil')
                        .push('for param in parameters {')
                        .push(1, 'let paramName = param["name"]!')
                        .push(1, 'body += "--\\(boundary)\\r\\n"')
                        .push(1, 'body += "Content-Disposition:form-data; name=\\"\\(paramName)\\""')
                        .push(1, 'if let filename = param["fileName"] {')
                        .push(2, 'let contentType = param["content-type"]!')
                        .push(2, 'let fileContent = String(contentsOfFile: filename, encoding: NSUTF8StringEncoding, error: &error)')
                        .push(2, 'if (error != nil) {')
                        .push(3, 'print(error)')
                        .push(2, '}')
                        .push(2, 'body += "; filename=\\"\\(filename)\\"\\r\\n"')
                        .push(2, 'body += "Content-Type: \\(contentType)\\r\\n\\r\\n"')
                        .push(2, 'body += fileContent!')
                        .push(1, '} else if let paramValue = param["value"] {')
                        .push(2, 'body += "\\r\\n\\r\\n\\(paramValue)"')
                        .push(1, '}')
                        .push('}')
                    break

                default:
                    code.blank()
                        .push('let postData = NSData(data: "%s".dataUsingEncoding(NSUTF8StringEncoding)!)', source.postData.text)
            }
            }

            code.blank()
                // NSURLRequestUseProtocolCachePolicy is the default policy, let's just always set it to avoid confusion.
                .push('var request = NSMutableURLRequest(URL: NSURL(string: "%s")!,', source.fullUrl)
                .push('                                        cachePolicy: .UseProtocolCachePolicy,')
                .push('                                    timeoutInterval: %s)', parseInt(opts.timeout, 10).toFixed(1))
                .push('request.HTTPMethod = "%s"', source.method)

            if (req.hasHeaders) {
                code.push('request.allHTTPHeaderFields = headers')
        }

            if (req.hasBody) {
                code.push('request.HTTPBody = postData')
        }

            code.blank()
                // Retrieving the shared session will be less verbose than creating a new one.
                .push('let session = NSURLSession.sharedSession()')
                .push('let dataTask = session.dataTaskWithRequest(request, completionHandler: { (data, response, error) -> Void in')
                .push(1, 'if (error != nil) {')
                .push(2, 'print(error)')
                .push(1, '} else {')
                // Casting the NSURLResponse to NSHTTPURLResponse so the user can see the status     .
                .push(2, 'let httpResponse = response as? NSHTTPURLResponse')
                .push(2, 'print(httpResponse)')
                .push(1, '}')
                .push('})')
                .blank()
                .push('dataTask.resume()')

            return code.join()
        }

        module.exports.info = {
            key: 'nsurlsession',
            title: 'NSURLSession',
            link: 'https://developer.apple.com/library/mac/documentation/Foundation/Reference/NSURLSession_class/index.html',
            description: 'Foundation\'s NSURLSession request'
        }

    }, {"../../helpers/code-builder": 38, "./helpers": 79, "util": 114}],
    82: [function (require, module, exports) {
        ;
        (function (window) {
            'use strict';

            var HTTPSnippet = require('httpsnippet');

            window.HTTPSnippetInstance = function (config) {
                return new HTTPSnippet(config);
        }

        })(window);

    }, {"httpsnippet": 41}],
    83: [function (require, module, exports) {

    }, {}],
    84: [function (require, module, exports) {
        (function (global) {
            /*!
             * The buffer module from node.js, for the browser.
         *
             * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
             * @license  MIT
         */
            /* eslint-disable no-proto */

            var base64 = require('base64-js')
            var ieee754 = require('ieee754')
            var isArray = require('is-array')

            exports.Buffer = Buffer
            exports.SlowBuffer = SlowBuffer
            exports.INSPECT_MAX_BYTES = 50
            Buffer.poolSize = 8192 // not used by this implementation

            var rootParent = {}

        /**
         * If `Buffer.TYPED_ARRAY_SUPPORT`:
         *   === true    Use Uint8Array implementation (fastest)
         *   === false   Use Object implementation (most compatible, even IE6)
         *
         * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
         * Opera 11.6+, iOS 4.2+.
         *
         * Due to various browser bugs, sometimes the Object implementation will be used even
         * when the browser supports typed arrays.
         *
         * Note:
         *
         *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
         *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
         *
         *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
         *     on objects.
         *
         *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
         *
         *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
         *     incorrect length in some situations.

         * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
         * get the Object implementation, which is slower but behaves correctly.
         */
        Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
            ? global.TYPED_ARRAY_SUPPORT
            : typedArraySupport()

            function typedArraySupport() {
                function Bar() {
                }

                try {
                    var arr = new Uint8Array(1)
                    arr.foo = function () {
                        return 42
                    }
                    arr.constructor = Bar
                    return arr.foo() === 42 && // typed array instances can be augmented
                        arr.constructor === Bar && // constructor can be set
                        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
                        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
                } catch (e) {
                    return false
            }
        }

            function kMaxLength() {
                return Buffer.TYPED_ARRAY_SUPPORT
                    ? 0x7fffffff
                    : 0x3fffffff
        }

        /**
         * Class: Buffer
         * =============
         *
         * The Buffer constructor returns instances of `Uint8Array` that are augmented
         * with function properties for all the node `Buffer` API functions. We use
         * `Uint8Array` so that square bracket notation works as expected -- it returns
         * a single octet.
         *
         * By augmenting the instances, we can avoid modifying the `Uint8Array`
         * prototype.
         */
        function Buffer(arg) {
            if (!(this instanceof Buffer)) {
                // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
                if (arguments.length > 1) return new Buffer(arg, arguments[1])
                return new Buffer(arg)
            }

            this.length = 0
            this.parent = undefined

            // Common case.
            if (typeof arg === 'number') {
                return fromNumber(this, arg)
            }

            // Slightly less common case.
            if (typeof arg === 'string') {
                return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
            }

            // Unusual.
            return fromObject(this, arg)
        }

            function fromNumber(that, length) {
                that = allocate(that, length < 0 ? 0 : checked(length) | 0)
                if (!Buffer.TYPED_ARRAY_SUPPORT) {
                    for (var i = 0; i < length; i++) {
                        that[i] = 0
                }
            }
                return that
            }

            function fromString(that, string, encoding) {
                if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

                // Assumption: byteLength() return value is always < kMaxLength.
                var length = byteLength(string, encoding) | 0
                that = allocate(that, length)

                that.write(string, encoding)
                return that
        }

            function fromObject(that, object) {
                if (Buffer.isBuffer(object)) return fromBuffer(that, object)

                if (isArray(object)) return fromArray(that, object)

                if (object == null) {
                    throw new TypeError('must start with number, buffer, array or string')
            }

                if (typeof ArrayBuffer !== 'undefined') {
                    if (object.buffer instanceof ArrayBuffer) {
                        return fromTypedArray(that, object)
                }
                    if (object instanceof ArrayBuffer) {
                        return fromArrayBuffer(that, object)
                }
            }

                if (object.length) return fromArrayLike(that, object)

                return fromJsonObject(that, object)
            }

            function fromBuffer(that, buffer) {
                var length = checked(buffer.length) | 0
                that = allocate(that, length)
                buffer.copy(that, 0, 0, length)
                return that
            }

            function fromArray(that, array) {
                var length = checked(array.length) | 0
                that = allocate(that, length)
                for (var i = 0; i < length; i += 1) {
                    that[i] = array[i] & 255
            }
                return that
            }

// Duplicate of fromArray() to keep fromArray() monomorphic.
            function fromTypedArray(that, array) {
                var length = checked(array.length) | 0
                that = allocate(that, length)
                // Truncating the elements is probably not what people expect from typed
                // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
                // of the old Buffer constructor.
                for (var i = 0; i < length; i += 1) {
                    that[i] = array[i] & 255
            }
                return that
            }

            function fromArrayBuffer(that, array) {
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    // Return an augmented `Uint8Array` instance, for best performance
                    array.byteLength
                    that = Buffer._augment(new Uint8Array(array))
                } else {
                    // Fallback: Return an object instance of the Buffer class
                    that = fromTypedArray(that, new Uint8Array(array))
            }
                return that
            }

            function fromArrayLike(that, array) {
                var length = checked(array.length) | 0
                that = allocate(that, length)
                for (var i = 0; i < length; i += 1) {
                    that[i] = array[i] & 255
            }
                return that
            }

// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
// Returns a zero-length buffer for inputs that don't conform to the spec.
            function fromJsonObject(that, object) {
                var array
                var length = 0

                if (object.type === 'Buffer' && isArray(object.data)) {
                    array = object.data
                    length = checked(array.length) | 0
                }
                that = allocate(that, length)

                for (var i = 0; i < length; i += 1) {
                    that[i] = array[i] & 255
            }
                return that
            }

            if (Buffer.TYPED_ARRAY_SUPPORT) {
                Buffer.prototype.__proto__ = Uint8Array.prototype
                Buffer.__proto__ = Uint8Array
            }

            function allocate(that, length) {
            if (Buffer.TYPED_ARRAY_SUPPORT) {
                // Return an augmented `Uint8Array` instance, for best performance
                that = Buffer._augment(new Uint8Array(length))
                that.__proto__ = Buffer.prototype
            } else {
                // Fallback: Return an object instance of the Buffer class
                that.length = length
                that._isBuffer = true
            }

                var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
                if (fromPool) that.parent = rootParent

                return that
            }

            function checked(length) {
                // Note: cannot use `length < kMaxLength` here because that fails when
                // length is NaN (which is otherwise coerced to zero.)
                if (length >= kMaxLength()) {
                    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                        'size: 0x' + kMaxLength().toString(16) + ' bytes')
            }
                return length | 0
            }

            function SlowBuffer(subject, encoding) {
                if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

                var buf = new Buffer(subject, encoding)
                delete buf.parent
                return buf
            }

            Buffer.isBuffer = function isBuffer(b) {
                return !!(b != null && b._isBuffer)
            }

            Buffer.compare = function compare(a, b) {
                if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
                    throw new TypeError('Arguments must be Buffers')
            }

                if (a === b) return 0

                var x = a.length
                var y = b.length

                var i = 0
                var len = Math.min(x, y)
                while (i < len) {
                    if (a[i] !== b[i]) break

                    ++i
            }

                if (i !== len) {
                    x = a[i]
                    y = b[i]
            }

                if (x < y) return -1
                if (y < x) return 1
                return 0
            }

            Buffer.isEncoding = function isEncoding(encoding) {
                switch (String(encoding).toLowerCase()) {
                    case 'hex':
                    case 'utf8':
                    case 'utf-8':
                    case 'ascii':
                    case 'binary':
                    case 'base64':
                    case 'raw':
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return true
                    default:
                        return false
                }
            }

            Buffer.concat = function concat(list, length) {
                if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

                if (list.length === 0) {
                    return new Buffer(0)
                }

                var i
                if (length === undefined) {
                    length = 0
                for (i = 0; i < list.length; i++) {
                    length += list[i].length
                }
            }

                var buf = new Buffer(length)
                var pos = 0
                for (i = 0; i < list.length; i++) {
                    var item = list[i]
                    item.copy(buf, pos)
                    pos += item.length
                }
                return buf
            }

            function byteLength(string, encoding) {
                if (typeof string !== 'string') string = '' + string

                var len = string.length
                if (len === 0) return 0

                // Use a for loop to avoid recursion
                var loweredCase = false
                for (; ;) {
                    switch (encoding) {
                        case 'ascii':
                        case 'binary':
                        // Deprecated
                        case 'raw':
                        case 'raws':
                            return len
                        case 'utf8':
                        case 'utf-8':
                            return utf8ToBytes(string).length
                        case 'ucs2':
                        case 'ucs-2':
                        case 'utf16le':
                        case 'utf-16le':
                            return len * 2
                        case 'hex':
                            return len >>> 1
                        case 'base64':
                            return base64ToBytes(string).length
                        default:
                            if (loweredCase) return utf8ToBytes(string).length // assume utf8
                            encoding = ('' + encoding).toLowerCase()
                            loweredCase = true
                }
            }
            }

            Buffer.byteLength = byteLength

// pre-set for values that may exist in the future
            Buffer.prototype.length = undefined
            Buffer.prototype.parent = undefined

            function slowToString(encoding, start, end) {
                var loweredCase = false

                start = start | 0
                end = end === undefined || end === Infinity ? this.length : end | 0

                if (!encoding) encoding = 'utf8'
                if (start < 0) start = 0
                if (end > this.length) end = this.length
                if (end <= start) return ''

                while (true) {
                    switch (encoding) {
                        case 'hex':
                            return hexSlice(this, start, end)

                        case 'utf8':
                        case 'utf-8':
                            return utf8Slice(this, start, end)

                        case 'ascii':
                            return asciiSlice(this, start, end)

                        case 'binary':
                            return binarySlice(this, start, end)

                        case 'base64':
                            return base64Slice(this, start, end)

                        case 'ucs2':
                        case 'ucs-2':
                        case 'utf16le':
                        case 'utf-16le':
                            return utf16leSlice(this, start, end)

                        default:
                            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
                            encoding = (encoding + '').toLowerCase()
                            loweredCase = true
                }
            }
            }

            Buffer.prototype.toString = function toString() {
                var length = this.length | 0
                if (length === 0) return ''
                if (arguments.length === 0) return utf8Slice(this, 0, length)
                return slowToString.apply(this, arguments)
            }

            Buffer.prototype.equals = function equals(b) {
                if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
                if (this === b) return true
                return Buffer.compare(this, b) === 0
            }

            Buffer.prototype.inspect = function inspect() {
                var str = ''
                var max = exports.INSPECT_MAX_BYTES
                if (this.length > 0) {
                    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
                    if (this.length > max) str += ' ... '
            }
                return '<Buffer ' + str + '>'
            }

            Buffer.prototype.compare = function compare(b) {
                if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
                if (this === b) return 0
                return Buffer.compare(this, b)
            }

            Buffer.prototype.indexOf = function indexOf(val, byteOffset) {
                if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
                else if (byteOffset < -0x80000000) byteOffset = -0x80000000
                byteOffset >>= 0

                if (this.length === 0) return -1
                if (byteOffset >= this.length) return -1

                // Negative offsets start from the end of the buffer
                if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

                if (typeof val === 'string') {
                    if (val.length === 0) return -1 // special case: looking for empty string always fails
                    return String.prototype.indexOf.call(this, val, byteOffset)
                }
                if (Buffer.isBuffer(val)) {
                    return arrayIndexOf(this, val, byteOffset)
                }
                if (typeof val === 'number') {
                    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
                        return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
                }
                    return arrayIndexOf(this, [val], byteOffset)
                }

                function arrayIndexOf(arr, val, byteOffset) {
                    var foundIndex = -1
                    for (var i = 0; byteOffset + i < arr.length; i++) {
                        if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
                            if (foundIndex === -1) foundIndex = i
                            if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
                        } else {
                            foundIndex = -1
                    }
                }
                    return -1
            }

                throw new TypeError('val must be string, number or Buffer')
            }

// `get` is deprecated
            Buffer.prototype.get = function get(offset) {
                console.log('.get() is deprecated. Access using array indexes instead.')
                return this.readUInt8(offset)
            }

// `set` is deprecated
            Buffer.prototype.set = function set(v, offset) {
                console.log('.set() is deprecated. Access using array indexes instead.')
                return this.writeUInt8(v, offset)
            }

            function hexWrite(buf, string, offset, length) {
                offset = Number(offset) || 0
                var remaining = buf.length - offset
                if (!length) {
                    length = remaining
                } else {
                    length = Number(length)
                    if (length > remaining) {
                    length = remaining
                }
                }

                // must be an even number of digits
                var strLen = string.length
                if (strLen % 2 !== 0) throw new Error('Invalid hex string')

                if (length > strLen / 2) {
                    length = strLen / 2
            }
                for (var i = 0; i < length; i++) {
                    var parsed = parseInt(string.substr(i * 2, 2), 16)
                    if (isNaN(parsed)) throw new Error('Invalid hex string')
                    buf[offset + i] = parsed
            }
                return i
            }

            function utf8Write(buf, string, offset, length) {
                return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
            }

            function asciiWrite(buf, string, offset, length) {
                return blitBuffer(asciiToBytes(string), buf, offset, length)
            }

            function binaryWrite(buf, string, offset, length) {
                return asciiWrite(buf, string, offset, length)
            }

            function base64Write(buf, string, offset, length) {
                return blitBuffer(base64ToBytes(string), buf, offset, length)
            }

            function ucs2Write(buf, string, offset, length) {
                return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
            }

            Buffer.prototype.write = function write(string, offset, length, encoding) {
                // Buffer#write(string)
                if (offset === undefined) {
                    encoding = 'utf8'
                    length = this.length
                    offset = 0
                    // Buffer#write(string, encoding)
                } else if (length === undefined && typeof offset === 'string') {
                    encoding = offset
                    length = this.length
                    offset = 0
                    // Buffer#write(string, offset[, length][, encoding])
                } else if (isFinite(offset)) {
                    offset = offset | 0
                    if (isFinite(length)) {
                        length = length | 0
                        if (encoding === undefined) encoding = 'utf8'
                } else {
                        encoding = length
                        length = undefined
                }
                    // legacy write(string, encoding, offset, length) - remove in v0.13
                } else {
                    var swap = encoding
                    encoding = offset
                    offset = length | 0
                    length = swap
                }

                var remaining = this.length - offset
                if (length === undefined || length > remaining) length = remaining

                if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
                    throw new RangeError('attempt to write outside buffer bounds')
                }

                if (!encoding) encoding = 'utf8'

                var loweredCase = false
                for (; ;) {
                    switch (encoding) {
                        case 'hex':
                            return hexWrite(this, string, offset, length)

                        case 'utf8':
                        case 'utf-8':
                            return utf8Write(this, string, offset, length)

                        case 'ascii':
                            return asciiWrite(this, string, offset, length)

                        case 'binary':
                            return binaryWrite(this, string, offset, length)

                        case 'base64':
                            // Warning: maxLength not taken into account in base64Write
                            return base64Write(this, string, offset, length)

                        case 'ucs2':
                        case 'ucs-2':
                        case 'utf16le':
                        case 'utf-16le':
                            return ucs2Write(this, string, offset, length)

                        default:
                            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
                            encoding = ('' + encoding).toLowerCase()
                            loweredCase = true
                }
            }
            }

            Buffer.prototype.toJSON = function toJSON() {
                return {
                    type: 'Buffer',
                    data: Array.prototype.slice.call(this._arr || this, 0)
            }
            }

            function base64Slice(buf, start, end) {
                if (start === 0 && end === buf.length) {
                    return base64.fromByteArray(buf)
                } else {
                    return base64.fromByteArray(buf.slice(start, end))
            }
            }

            function utf8Slice(buf, start, end) {
                end = Math.min(buf.length, end)
                var res = []

                var i = start
                while (i < end) {
                    var firstByte = buf[i]
                    var codePoint = null
                    var bytesPerSequence = (firstByte > 0xEF) ? 4
                        : (firstByte > 0xDF) ? 3
                        : (firstByte > 0xBF) ? 2
                        : 1

                    if (i + bytesPerSequence <= end) {
                        var secondByte, thirdByte, fourthByte, tempCodePoint

                        switch (bytesPerSequence) {
                            case 1:
                                if (firstByte < 0x80) {
                                    codePoint = firstByte
                                }
                                break
                            case 2:
                                secondByte = buf[i + 1]
                                if ((secondByte & 0xC0) === 0x80) {
                                    tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
                                    if (tempCodePoint > 0x7F) {
                                        codePoint = tempCodePoint
                                }
                                }
                                break
                            case 3:
                                secondByte = buf[i + 1]
                                thirdByte = buf[i + 2]
                                if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                                    tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
                                    if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                                        codePoint = tempCodePoint
                                }
                                }
                                break
                            case 4:
                                secondByte = buf[i + 1]
                                thirdByte = buf[i + 2]
                                fourthByte = buf[i + 3]
                                if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                                    tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
                                    if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                                        codePoint = tempCodePoint
                                }
                                }
                    }
                    }

                    if (codePoint === null) {
                        // we did not generate a valid codePoint so insert a
                        // replacement char (U+FFFD) and advance only 1 byte
                        codePoint = 0xFFFD
                        bytesPerSequence = 1
                    } else if (codePoint > 0xFFFF) {
                        // encode to utf16 (surrogate pair dance)
                        codePoint -= 0x10000
                        res.push(codePoint >>> 10 & 0x3FF | 0xD800)
                        codePoint = 0xDC00 | codePoint & 0x3FF
                }

                    res.push(codePoint)
                    i += bytesPerSequence
            }

                return decodeCodePointsArray(res)
            }

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
            var MAX_ARGUMENTS_LENGTH = 0x1000

            function decodeCodePointsArray(codePoints) {
                var len = codePoints.length
                if (len <= MAX_ARGUMENTS_LENGTH) {
                    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
                }

                // Decode in chunks to avoid "call stack size exceeded".
                var res = ''
                var i = 0
                while (i < len) {
                    res += String.fromCharCode.apply(
                        String,
                        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
                    )
            }
                return res
            }

            function asciiSlice(buf, start, end) {
                var ret = ''
                end = Math.min(buf.length, end)

                for (var i = start; i < end; i++) {
                    ret += String.fromCharCode(buf[i] & 0x7F)
            }
                return ret
            }

            function binarySlice(buf, start, end) {
                var ret = ''
                end = Math.min(buf.length, end)

                for (var i = start; i < end; i++) {
                    ret += String.fromCharCode(buf[i])
            }
                return ret
            }

            function hexSlice(buf, start, end) {
                var len = buf.length

                if (!start || start < 0) start = 0
                if (!end || end < 0 || end > len) end = len

                var out = ''
                for (var i = start; i < end; i++) {
                    out += toHex(buf[i])
            }
                return out
            }

            function utf16leSlice(buf, start, end) {
                var bytes = buf.slice(start, end)
                var res = ''
                for (var i = 0; i < bytes.length; i += 2) {
                    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
            }
                return res
            }

            Buffer.prototype.slice = function slice(start, end) {
                var len = this.length
                start = ~~start
                end = end === undefined ? len : ~~end

                if (start < 0) {
                    start += len
                    if (start < 0) start = 0
                } else if (start > len) {
                    start = len
                }

                if (end < 0) {
                    end += len
                    if (end < 0) end = 0
                } else if (end > len) {
                    end = len
                }

                if (end < start) end = start

                var newBuf
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    newBuf = Buffer._augment(this.subarray(start, end))
                } else {
                    var sliceLen = end - start
                    newBuf = new Buffer(sliceLen, undefined)
                    for (var i = 0; i < sliceLen; i++) {
                        newBuf[i] = this[i + start]
                }
                }

                if (newBuf.length) newBuf.parent = this.parent || this

                return newBuf
            }

            /*
             * Need to make sure that buffer isn't trying to write out of bounds.
             */
            function checkOffset(offset, ext, length) {
                if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
                if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
            }

            Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) checkOffset(offset, byteLength, this.length)

                var val = this[offset]
                var mul = 1
                var i = 0
                while (++i < byteLength && (mul *= 0x100)) {
                    val += this[offset + i] * mul
            }

                return val
            }

            Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) {
                    checkOffset(offset, byteLength, this.length)
                }

                var val = this[offset + --byteLength]
                var mul = 1
                while (byteLength > 0 && (mul *= 0x100)) {
                    val += this[offset + --byteLength] * mul
            }

                return val
            }

            Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 1, this.length)
                return this[offset]
            }

            Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 2, this.length)
                return this[offset] | (this[offset + 1] << 8)
            }

            Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 2, this.length)
                return (this[offset] << 8) | this[offset + 1]
            }

            Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 4, this.length)

                return ((this[offset]) |
                    (this[offset + 1] << 8) |
                    (this[offset + 2] << 16)) +
                    (this[offset + 3] * 0x1000000)
            }

            Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 4, this.length)

                return (this[offset] * 0x1000000) +
                    ((this[offset + 1] << 16) |
                    (this[offset + 2] << 8) |
                    this[offset + 3])
            }

            Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) checkOffset(offset, byteLength, this.length)

                var val = this[offset]
                var mul = 1
                var i = 0
                while (++i < byteLength && (mul *= 0x100)) {
                    val += this[offset + i] * mul
            }
                mul *= 0x80

                if (val >= mul) val -= Math.pow(2, 8 * byteLength)

                return val
            }

            Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) checkOffset(offset, byteLength, this.length)

                var i = byteLength
                var mul = 1
                var val = this[offset + --i]
                while (i > 0 && (mul *= 0x100)) {
                    val += this[offset + --i] * mul
            }
                mul *= 0x80

                if (val >= mul) val -= Math.pow(2, 8 * byteLength)

                return val
            }

            Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 1, this.length)
                if (!(this[offset] & 0x80)) return (this[offset])
                return ((0xff - this[offset] + 1) * -1)
            }

            Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 2, this.length)
                var val = this[offset] | (this[offset + 1] << 8)
                return (val & 0x8000) ? val | 0xFFFF0000 : val
            }

            Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 2, this.length)
                var val = this[offset + 1] | (this[offset] << 8)
                return (val & 0x8000) ? val | 0xFFFF0000 : val
            }

            Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 4, this.length)

                return (this[offset]) |
                    (this[offset + 1] << 8) |
                    (this[offset + 2] << 16) |
                    (this[offset + 3] << 24)
            }

            Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 4, this.length)

                return (this[offset] << 24) |
                    (this[offset + 1] << 16) |
                    (this[offset + 2] << 8) |
                    (this[offset + 3])
            }

            Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 4, this.length)
                return ieee754.read(this, offset, true, 23, 4)
            }

            Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 4, this.length)
                return ieee754.read(this, offset, false, 23, 4)
            }

            Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 8, this.length)
                return ieee754.read(this, offset, true, 52, 8)
            }

            Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
                if (!noAssert) checkOffset(offset, 8, this.length)
                return ieee754.read(this, offset, false, 52, 8)
            }

            function checkInt(buf, value, offset, ext, max, min) {
                if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
                if (value > max || value < min) throw new RangeError('value is out of bounds')
                if (offset + ext > buf.length) throw new RangeError('index out of range')
            }

            Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
                value = +value
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

                var mul = 1
                var i = 0
                this[offset] = value & 0xFF
                while (++i < byteLength && (mul *= 0x100)) {
                    this[offset + i] = (value / mul) & 0xFF
            }

                return offset + byteLength
            }

            Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
                value = +value
                offset = offset | 0
                byteLength = byteLength | 0
                if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

                var i = byteLength - 1
                var mul = 1
                this[offset + i] = value & 0xFF
                while (--i >= 0 && (mul *= 0x100)) {
                    this[offset + i] = (value / mul) & 0xFF
            }

                return offset + byteLength
            }

            Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
                this[offset] = (value & 0xff)
                return offset + 1
            }

            function objectWriteUInt16(buf, value, offset, littleEndian) {
                if (value < 0) value = 0xffff + value + 1
                for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
                    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
                        (littleEndian ? i : 1 - i) * 8
            }
            }

            Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = (value & 0xff)
                    this[offset + 1] = (value >>> 8)
                } else {
                    objectWriteUInt16(this, value, offset, true)
            }
                return offset + 2
            }

            Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value >>> 8)
                    this[offset + 1] = (value & 0xff)
                } else {
                    objectWriteUInt16(this, value, offset, false)
            }
                return offset + 2
            }

            function objectWriteUInt32(buf, value, offset, littleEndian) {
                if (value < 0) value = 0xffffffff + value + 1
                for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
                    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
            }
            }

            Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset + 3] = (value >>> 24)
                    this[offset + 2] = (value >>> 16)
                    this[offset + 1] = (value >>> 8)
                    this[offset] = (value & 0xff)
                } else {
                    objectWriteUInt32(this, value, offset, true)
            }
                return offset + 4
            }

            Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value >>> 24)
                    this[offset + 1] = (value >>> 16)
                    this[offset + 2] = (value >>> 8)
                    this[offset + 3] = (value & 0xff)
                } else {
                    objectWriteUInt32(this, value, offset, false)
            }
                return offset + 4
            }

            Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) {
                    var limit = Math.pow(2, 8 * byteLength - 1)

                    checkInt(this, value, offset, byteLength, limit - 1, -limit)
            }

                var i = 0
                var mul = 1
                var sub = value < 0 ? 1 : 0
                this[offset] = value & 0xFF
                while (++i < byteLength && (mul *= 0x100)) {
                    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
            }

                return offset + byteLength
            }

            Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) {
                    var limit = Math.pow(2, 8 * byteLength - 1)

                    checkInt(this, value, offset, byteLength, limit - 1, -limit)
                }

                var i = byteLength - 1
                var mul = 1
                var sub = value < 0 ? 1 : 0
                this[offset + i] = value & 0xFF
                while (--i >= 0 && (mul *= 0x100)) {
                    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
            }

                return offset + byteLength
            }

            Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
                if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
                if (value < 0) value = 0xff + value + 1
                this[offset] = (value & 0xff)
                return offset + 1
            }

            Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                this[offset] = (value & 0xff)
                    this[offset + 1] = (value >>> 8)
                } else {
                    objectWriteUInt16(this, value, offset, true)
            }
                return offset + 2
            }

            Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value >>> 8)
                    this[offset + 1] = (value & 0xff)
                } else {
                    objectWriteUInt16(this, value, offset, false)
            }
                return offset + 2
            }

            Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value & 0xff)
                    this[offset + 1] = (value >>> 8)
                    this[offset + 2] = (value >>> 16)
                    this[offset + 3] = (value >>> 24)
                } else {
                    objectWriteUInt32(this, value, offset, true)
            }
                return offset + 4
            }

            Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
                value = +value
                offset = offset | 0
                if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
                if (value < 0) value = 0xffffffff + value + 1
                if (Buffer.TYPED_ARRAY_SUPPORT) {
                    this[offset] = (value >>> 24)
                    this[offset + 1] = (value >>> 16)
                    this[offset + 2] = (value >>> 8)
                    this[offset + 3] = (value & 0xff)
                } else {
                    objectWriteUInt32(this, value, offset, false)
            }
                return offset + 4
            }

            function checkIEEE754(buf, value, offset, ext, max, min) {
                if (value > max || value < min) throw new RangeError('value is out of bounds')
                if (offset + ext > buf.length) throw new RangeError('index out of range')
                if (offset < 0) throw new RangeError('index out of range')
            }

            function writeFloat(buf, value, offset, littleEndian, noAssert) {
                if (!noAssert) {
                    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
            }
                ieee754.write(buf, value, offset, littleEndian, 23, 4)
                return offset + 4
            }

            Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
                return writeFloat(this, value, offset, true, noAssert)
            }

            Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
                return writeFloat(this, value, offset, false, noAssert)
            }

            function writeDouble(buf, value, offset, littleEndian, noAssert) {
                if (!noAssert) {
                    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
            }
                ieee754.write(buf, value, offset, littleEndian, 52, 8)
                return offset + 8
            }

            Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
                return writeDouble(this, value, offset, true, noAssert)
            }

            Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
                return writeDouble(this, value, offset, false, noAssert)
            }

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
            Buffer.prototype.copy = function copy(target, targetStart, start, end) {
                if (!start) start = 0
                if (!end && end !== 0) end = this.length
                if (targetStart >= target.length) targetStart = target.length
                if (!targetStart) targetStart = 0
                if (end > 0 && end < start) end = start

                // Copy 0 bytes; we're done
                if (end === start) return 0
                if (target.length === 0 || this.length === 0) return 0

                // Fatal error conditions
                if (targetStart < 0) {
                    throw new RangeError('targetStart out of bounds')
                }
                if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
                if (end < 0) throw new RangeError('sourceEnd out of bounds')

                // Are we oob?
                if (end > this.length) end = this.length
                if (target.length - targetStart < end - start) {
                    end = target.length - targetStart + start
                }

                var len = end - start
                var i

                if (this === target && start < targetStart && targetStart < end) {
                    // descending copy from end
                    for (i = len - 1; i >= 0; i--) {
                        target[i + targetStart] = this[i + start]
                }
                } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
                    // ascending copy from start
                    for (i = 0; i < len; i++) {
                        target[i + targetStart] = this[i + start]
                    }
                } else {
                    target._set(this.subarray(start, start + len), targetStart)
            }

                return len
            }

// fill(value, start=0, end=buffer.length)
            Buffer.prototype.fill = function fill(value, start, end) {
                if (!value) value = 0
                if (!start) start = 0
                if (!end) end = this.length

                if (end < start) throw new RangeError('end < start')

                // Fill 0 bytes; we're done
                if (end === start) return
                if (this.length === 0) return

                if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
                if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

                var i
                if (typeof value === 'number') {
                    for (i = start; i < end; i++) {
                        this[i] = value
                }
                } else {
                    var bytes = utf8ToBytes(value.toString())
                    var len = bytes.length
                    for (i = start; i < end; i++) {
                        this[i] = bytes[i % len]
                    }
            }

                return this
            }

            /**
             * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
             * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
             */
            Buffer.prototype.toArrayBuffer = function toArrayBuffer() {
                if (typeof Uint8Array !== 'undefined') {
                    if (Buffer.TYPED_ARRAY_SUPPORT) {
                        return (new Buffer(this)).buffer
                } else {
                        var buf = new Uint8Array(this.length)
                        for (var i = 0, len = buf.length; i < len; i += 1) {
                            buf[i] = this[i]
                        }
                        return buf.buffer
                }
                } else {
                    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
            }
            }

// HELPER FUNCTIONS
// ================

            var BP = Buffer.prototype

            /**
             * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
             */
            Buffer._augment = function _augment(arr) {
                arr.constructor = Buffer
                arr._isBuffer = true

                // save reference to original Uint8Array set method before overwriting
                arr._set = arr.set

                // deprecated
                arr.get = BP.get
                arr.set = BP.set

                arr.write = BP.write
                arr.toString = BP.toString
                arr.toLocaleString = BP.toString
                arr.toJSON = BP.toJSON
                arr.equals = BP.equals
                arr.compare = BP.compare
                arr.indexOf = BP.indexOf
                arr.copy = BP.copy
                arr.slice = BP.slice
                arr.readUIntLE = BP.readUIntLE
                arr.readUIntBE = BP.readUIntBE
                arr.readUInt8 = BP.readUInt8
                arr.readUInt16LE = BP.readUInt16LE
                arr.readUInt16BE = BP.readUInt16BE
                arr.readUInt32LE = BP.readUInt32LE
                arr.readUInt32BE = BP.readUInt32BE
                arr.readIntLE = BP.readIntLE
                arr.readIntBE = BP.readIntBE
                arr.readInt8 = BP.readInt8
                arr.readInt16LE = BP.readInt16LE
                arr.readInt16BE = BP.readInt16BE
                arr.readInt32LE = BP.readInt32LE
                arr.readInt32BE = BP.readInt32BE
                arr.readFloatLE = BP.readFloatLE
                arr.readFloatBE = BP.readFloatBE
                arr.readDoubleLE = BP.readDoubleLE
                arr.readDoubleBE = BP.readDoubleBE
                arr.writeUInt8 = BP.writeUInt8
                arr.writeUIntLE = BP.writeUIntLE
                arr.writeUIntBE = BP.writeUIntBE
                arr.writeUInt16LE = BP.writeUInt16LE
                arr.writeUInt16BE = BP.writeUInt16BE
                arr.writeUInt32LE = BP.writeUInt32LE
                arr.writeUInt32BE = BP.writeUInt32BE
                arr.writeIntLE = BP.writeIntLE
                arr.writeIntBE = BP.writeIntBE
                arr.writeInt8 = BP.writeInt8
                arr.writeInt16LE = BP.writeInt16LE
                arr.writeInt16BE = BP.writeInt16BE
                arr.writeInt32LE = BP.writeInt32LE
                arr.writeInt32BE = BP.writeInt32BE
                arr.writeFloatLE = BP.writeFloatLE
                arr.writeFloatBE = BP.writeFloatBE
                arr.writeDoubleLE = BP.writeDoubleLE
                arr.writeDoubleBE = BP.writeDoubleBE
                arr.fill = BP.fill
                arr.inspect = BP.inspect
                arr.toArrayBuffer = BP.toArrayBuffer

                return arr
            }

            var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

            function base64clean(str) {
                // Node strips out invalid characters like \n and \t from the string, base64-js does not
                str = stringtrim(str).replace(INVALID_BASE64_RE, '')
                // Node converts strings with length < 2 to ''
                if (str.length < 2) return ''
                // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
                while (str.length % 4 !== 0) {
                    str = str + '='
            }
                return str
            }

            function stringtrim(str) {
                if (str.trim) return str.trim()
                return str.replace(/^\s+|\s+$/g, '')
            }

            function toHex(n) {
                if (n < 16) return '0' + n.toString(16)
                return n.toString(16)
            }

            function utf8ToBytes(string, units) {
                units = units || Infinity
                var codePoint
                var length = string.length
                var leadSurrogate = null
                var bytes = []

                for (var i = 0; i < length; i++) {
                    codePoint = string.charCodeAt(i)

                    // is surrogate component
                    if (codePoint > 0xD7FF && codePoint < 0xE000) {
                        // last char was a lead
                        if (!leadSurrogate) {
                            // no lead yet
                            if (codePoint > 0xDBFF) {
                                // unexpected trail
                                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
                            continue
                            } else if (i + 1 === length) {
                                // unpaired lead
                            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
                            continue
                        }

                            // valid lead
                            leadSurrogate = codePoint

                            continue
                        }

                        // 2 leads in a row
                        if (codePoint < 0xDC00) {
                        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
                            leadSurrogate = codePoint
                            continue
                    }

                        // valid surrogate pair
                        codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000
                    } else if (leadSurrogate) {
                        // valid bmp char, but last char was a lead
                        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
                }

                    leadSurrogate = null

                    // encode utf8
                    if (codePoint < 0x80) {
                        if ((units -= 1) < 0) break
                        bytes.push(codePoint)
                    } else if (codePoint < 0x800) {
                    if ((units -= 2) < 0) break
                        bytes.push(
                            codePoint >> 0x6 | 0xC0,
                            codePoint & 0x3F | 0x80
                        )
                    } else if (codePoint < 0x10000) {
                        if ((units -= 3) < 0) break
                        bytes.push(
                            codePoint >> 0xC | 0xE0,
                            codePoint >> 0x6 & 0x3F | 0x80,
                            codePoint & 0x3F | 0x80
                        )
                    } else if (codePoint < 0x110000) {
                        if ((units -= 4) < 0) break
                        bytes.push(
                            codePoint >> 0x12 | 0xF0,
                            codePoint >> 0xC & 0x3F | 0x80,
                            codePoint >> 0x6 & 0x3F | 0x80,
                            codePoint & 0x3F | 0x80
                        )
                    } else {
                        throw new Error('Invalid code point')
                }
                }

                return bytes
            }

            function asciiToBytes(str) {
                var byteArray = []
                for (var i = 0; i < str.length; i++) {
                    // Node's code seems to be doing this and not & 0x7F..
                    byteArray.push(str.charCodeAt(i) & 0xFF)
            }
                return byteArray
            }

            function utf16leToBytes(str, units) {
                var c, hi, lo
                var byteArray = []
                for (var i = 0; i < str.length; i++) {
                    if ((units -= 2) < 0) break

                    c = str.charCodeAt(i)
                    hi = c >> 8
                    lo = c % 256
                    byteArray.push(lo)
                    byteArray.push(hi)
            }

                return byteArray
            }

            function base64ToBytes(str) {
                return base64.toByteArray(base64clean(str))
            }

            function blitBuffer(src, dst, offset, length) {
                for (var i = 0; i < length; i++) {
                    if ((i + offset >= dst.length) || (i >= src.length)) break
                    dst[i + offset] = src[i]
            }
                return i
            }

        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {"base64-js": 85, "ieee754": 86, "is-array": 87}],
    85: [function (require, module, exports) {
        var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

        ;
        (function (exports) {
            'use strict';

            var Arr = (typeof Uint8Array !== 'undefined')
                ? Uint8Array
                : Array

            var PLUS = '+'.charCodeAt(0)
            var SLASH = '/'.charCodeAt(0)
            var NUMBER = '0'.charCodeAt(0)
            var LOWER = 'a'.charCodeAt(0)
            var UPPER = 'A'.charCodeAt(0)
            var PLUS_URL_SAFE = '-'.charCodeAt(0)
            var SLASH_URL_SAFE = '_'.charCodeAt(0)

            function decode(elt) {
                var code = elt.charCodeAt(0)
                if (code === PLUS ||
                    code === PLUS_URL_SAFE)
                    return 62 // '+'
                if (code === SLASH ||
                    code === SLASH_URL_SAFE)
                    return 63 // '/'
                if (code < NUMBER)
                    return -1 //no match
                if (code < NUMBER + 10)
                    return code - NUMBER + 26 + 26
                if (code < UPPER + 26)
                    return code - UPPER
                if (code < LOWER + 26)
                    return code - LOWER + 26
            }

            function b64ToByteArray(b64) {
                var i, j, l, tmp, placeHolders, arr

                if (b64.length % 4 > 0) {
                    throw new Error('Invalid string. Length must be a multiple of 4')
            }

                // the number of equal signs (place holders)
                // if there are two placeholders, than the two characters before it
                // represent one byte
                // if there is only one, then the three characters before it represent 2 bytes
                // this is just a cheap hack to not do indexOf twice
                var len = b64.length
                placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

                // base64 is 4/3 + up to two characters of the original data
                arr = new Arr(b64.length * 3 / 4 - placeHolders)

                // if there are placeholders, only get up to the last complete 4 chars
                l = placeHolders > 0 ? b64.length - 4 : b64.length

                var L = 0

                function push(v) {
                    arr[L++] = v
                }

                for (i = 0, j = 0; i < l; i += 4, j += 3) {
                    tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
                    push((tmp & 0xFF0000) >> 16)
                    push((tmp & 0xFF00) >> 8)
                    push(tmp & 0xFF)
                }

                if (placeHolders === 2) {
                    tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
                    push(tmp & 0xFF)
                } else if (placeHolders === 1) {
                    tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
                    push((tmp >> 8) & 0xFF)
                    push(tmp & 0xFF)
                }

                return arr
            }

            function uint8ToBase64(uint8) {
                var i,
                    extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
                    output = "",
                    temp, length

                function encode(num) {
                    return lookup.charAt(num)
            }

                function tripletToBase64(num) {
                    return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
                }

                // go through the array every three bytes, we'll deal with trailing stuff later
                for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
                    temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
                    output += tripletToBase64(temp)
                }

                // pad the end with zeros, but make sure to not forget the extra bytes
                switch (extraBytes) {
                    case 1:
                        temp = uint8[uint8.length - 1]
                        output += encode(temp >> 2)
                        output += encode((temp << 4) & 0x3F)
                        output += '=='
                        break
                    case 2:
                        temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
                        output += encode(temp >> 10)
                        output += encode((temp >> 4) & 0x3F)
                        output += encode((temp << 2) & 0x3F)
                        output += '='
                        break
                }

                return output
            }

            exports.toByteArray = b64ToByteArray
            exports.fromByteArray = uint8ToBase64
        }(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

    }, {}],
    86: [function (require, module, exports) {
        exports.read = function (buffer, offset, isLE, mLen, nBytes) {
            var e, m
            var eLen = nBytes * 8 - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var nBits = -7
            var i = isLE ? (nBytes - 1) : 0
            var d = isLE ? -1 : 1
            var s = buffer[offset + i]

            i += d

            e = s & ((1 << (-nBits)) - 1)
            s >>= (-nBits)
            nBits += eLen
            for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {
            }

            m = e & ((1 << (-nBits)) - 1)
            e >>= (-nBits)
            nBits += mLen
            for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {
            }

            if (e === 0) {
                e = 1 - eBias
            } else if (e === eMax) {
                return m ? NaN : ((s ? -1 : 1) * Infinity)
            } else {
                m = m + Math.pow(2, mLen)
                e = e - eBias
            }
            return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
        }

        exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
            var e, m, c
            var eLen = nBytes * 8 - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
            var i = isLE ? 0 : (nBytes - 1)
            var d = isLE ? 1 : -1
            var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

            value = Math.abs(value)

            if (isNaN(value) || value === Infinity) {
                m = isNaN(value) ? 1 : 0
                e = eMax
            } else {
                e = Math.floor(Math.log(value) / Math.LN2)
                if (value * (c = Math.pow(2, -e)) < 1) {
                    e--
                    c *= 2
                }
                if (e + eBias >= 1) {
                    value += rt / c
            } else {
                    value += rt * Math.pow(2, 1 - eBias)
            }
                if (value * c >= 2) {
                    e++
                    c /= 2
                }

                if (e + eBias >= eMax) {
                    m = 0
                e = eMax
                } else if (e + eBias >= 1) {
                    m = (value * c - 1) * Math.pow(2, mLen)
                    e = e + eBias
            } else {
                    m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
                    e = 0
            }
        }

            for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {
            }

            e = (e << mLen) | m
            eLen += mLen
            for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {
            }

            buffer[offset + i - d] |= s * 128
        }

    }, {}],
    87: [function (require, module, exports) {

        /**
         * isArray
         */

        var isArray = Array.isArray;

        /**
         * toString
         */

        var str = Object.prototype.toString;

        /**
         * Whether or not the given `val`
         * is an array.
         *
         * example:
         *
         *        isArray([]);
         *        // > true
         *        isArray(arguments);
         *        // > false
         *        isArray('');
         *        // > false
         *
         * @param {mixed} val
         * @return {bool}
         */

        module.exports = isArray || function (val) {
                return !!val && '[object Array]' == str.call(val);
            };

    }, {}],
    88: [function (require, module, exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        function EventEmitter() {
            this._events = this._events || {};
            this._maxListeners = this._maxListeners || undefined;
        }

        module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
        EventEmitter.EventEmitter = EventEmitter;

        EventEmitter.prototype._events = undefined;
        EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
        EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
        EventEmitter.prototype.setMaxListeners = function (n) {
            if (!isNumber(n) || n < 0 || isNaN(n))
                throw TypeError('n must be a positive number');
            this._maxListeners = n;
            return this;
        };

        EventEmitter.prototype.emit = function (type) {
            var er, handler, len, args, i, listeners;

            if (!this._events)
                this._events = {};

            // If there is no 'error' event listener then throw.
            if (type === 'error') {
                if (!this._events.error ||
                    (isObject(this._events.error) && !this._events.error.length)) {
                    er = arguments[1];
                    if (er instanceof Error) {
                        throw er; // Unhandled 'error' event
                }
                    throw TypeError('Uncaught, unspecified "error" event.');
            }
            }

            handler = this._events[type];

            if (isUndefined(handler))
                return false;

            if (isFunction(handler)) {
                switch (arguments.length) {
                    // fast cases
                    case 1:
                        handler.call(this);
                        break;
                    case 2:
                        handler.call(this, arguments[1]);
                        break;
                    case 3:
                        handler.call(this, arguments[1], arguments[2]);
                        break;
                    // slower
                    default:
                        len = arguments.length;
                        args = new Array(len - 1);
                        for (i = 1; i < len; i++)
                            args[i - 1] = arguments[i];
                        handler.apply(this, args);
            }
            } else if (isObject(handler)) {
                len = arguments.length;
                args = new Array(len - 1);
                for (i = 1; i < len; i++)
                    args[i - 1] = arguments[i];

                listeners = handler.slice();
                len = listeners.length;
                for (i = 0; i < len; i++)
                    listeners[i].apply(this, args);
            }

            return true;
        };

        EventEmitter.prototype.addListener = function (type, listener) {
            var m;

            if (!isFunction(listener))
                throw TypeError('listener must be a function');

            if (!this._events)
                this._events = {};

            // To avoid recursion in the case that type === "newListener"! Before
            // adding it to the listeners, first emit "newListener".
            if (this._events.newListener)
                this.emit('newListener', type,
                    isFunction(listener.listener) ?
                        listener.listener : listener);

            if (!this._events[type])
            // Optimize the case of one listener. Don't need the extra array object.
                this._events[type] = listener;
            else if (isObject(this._events[type]))
            // If we've already got an array, just append.
                this._events[type].push(listener);
            else
            // Adding the second element, need to change to array.
                this._events[type] = [this._events[type], listener];

            // Check for listener leak
            if (isObject(this._events[type]) && !this._events[type].warned) {
            var m;
                if (!isUndefined(this._maxListeners)) {
                    m = this._maxListeners;
                } else {
                    m = EventEmitter.defaultMaxListeners;
                }

                if (m && m > 0 && this._events[type].length > m) {
                    this._events[type].warned = true;
                    console.error('(node) warning: possible EventEmitter memory ' +
                        'leak detected. %d listeners added. ' +
                        'Use emitter.setMaxListeners() to increase limit.',
                        this._events[type].length);
                    if (typeof console.trace === 'function') {
                        // not supported in IE 10
                        console.trace();
                }
            }
            }

            return this;
        };

        EventEmitter.prototype.on = EventEmitter.prototype.addListener;

        EventEmitter.prototype.once = function (type, listener) {
            if (!isFunction(listener))
                throw TypeError('listener must be a function');

            var fired = false;

            function g() {
                this.removeListener(type, g);

                if (!fired) {
                    fired = true;
                    listener.apply(this, arguments);
            }
            }

            g.listener = listener;
            this.on(type, g);

            return this;
        };

// emits a 'removeListener' event iff the listener was removed
        EventEmitter.prototype.removeListener = function (type, listener) {
            var list, position, length, i;

            if (!isFunction(listener))
                throw TypeError('listener must be a function');

            if (!this._events || !this._events[type])
            return this;

            list = this._events[type];
            length = list.length;
            position = -1;

            if (list === listener ||
                (isFunction(list.listener) && list.listener === listener)) {
            delete this._events[type];
                if (this._events.removeListener)
                    this.emit('removeListener', type, listener);

            } else if (isObject(list)) {
                for (i = length; i-- > 0;) {
                    if (list[i] === listener ||
                        (list[i].listener && list[i].listener === listener)) {
                        position = i;
                        break;
                    }
                }

                if (position < 0)
                    return this;

                if (list.length === 1) {
                    list.length = 0;
                    delete this._events[type];
                } else {
                    list.splice(position, 1);
                }

                if (this._events.removeListener)
                    this.emit('removeListener', type, listener);
        }

            return this;
        };

        EventEmitter.prototype.removeAllListeners = function (type) {
            var key, listeners;

            if (!this._events)
                return this;

            // not listening for removeListener, no need to emit
            if (!this._events.removeListener) {
                if (arguments.length === 0)
                    this._events = {};
                else if (this._events[type])
                    delete this._events[type];
                return this;
        }

            // emit removeListener for all listeners on all events
            if (arguments.length === 0) {
                for (key in this._events) {
                    if (key === 'removeListener') continue;
                    this.removeAllListeners(key);
                }
                this.removeAllListeners('removeListener');
                this._events = {};
                return this;
        }

            listeners = this._events[type];

            if (isFunction(listeners)) {
                this.removeListener(type, listeners);
        } else {
                // LIFO order
                while (listeners.length)
                    this.removeListener(type, listeners[listeners.length - 1]);
            }
            delete this._events[type];

            return this;
        };

        EventEmitter.prototype.listeners = function (type) {
            var ret;
            if (!this._events || !this._events[type])
                ret = [];
            else if (isFunction(this._events[type]))
                ret = [this._events[type]];
            else
                ret = this._events[type].slice();
            return ret;
        };

        EventEmitter.listenerCount = function (emitter, type) {
            var ret;
            if (!emitter._events || !emitter._events[type])
                ret = 0;
            else if (isFunction(emitter._events[type]))
                ret = 1;
            else
                ret = emitter._events[type].length;
            return ret;
        };

        function isFunction(arg) {
            return typeof arg === 'function';
        }

        function isNumber(arg) {
            return typeof arg === 'number';
        }

        function isObject(arg) {
            return typeof arg === 'object' && arg !== null;
        }

        function isUndefined(arg) {
            return arg === void 0;
        }

    }, {}],
    89: [function (require, module, exports) {
        if (typeof Object.create === 'function') {
            // implementation from standard node.js 'util' module
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor
                ctor.prototype = Object.create(superCtor.prototype, {
                    constructor: {
                        value: ctor,
                        enumerable: false,
                        writable: true,
                        configurable: true
                }
                });
            };
        } else {
            // old school shim for old browsers
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor
                var TempCtor = function () {
                }
                TempCtor.prototype = superCtor.prototype
                ctor.prototype = new TempCtor()
                ctor.prototype.constructor = ctor
        }
        }

    }, {}],
    90: [function (require, module, exports) {
        /**
         * Determine if an object is Buffer
         *
         * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
         * License:  MIT
         *
         * `npm install is-buffer`
         */

        module.exports = function (obj) {
            return !!(obj != null &&
            (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)
                (obj.constructor &&
                typeof obj.constructor.isBuffer === 'function' &&
                obj.constructor.isBuffer(obj))
            ))
        }

    }, {}],
    91: [function (require, module, exports) {
        module.exports = Array.isArray || function (arr) {
                return Object.prototype.toString.call(arr) == '[object Array]';
            };

    }, {}],
    92: [function (require, module, exports) {
// shim for using process in browser

        var process = module.exports = {};
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
        }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = setTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while (len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                }
            }
                queueIndex = -1;
                len = queue.length;
        }
            currentQueue = null;
            draining = false;
            clearTimeout(timeout);
        }

        process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
            }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
                setTimeout(drainQueue, 0);
            }
        };

// v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }

        Item.prototype.run = function () {
            this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {
        }

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;

        process.binding = function (name) {
            throw new Error('process.binding is not supported');
        };

        process.cwd = function () {
            return '/'
        };
        process.chdir = function (dir) {
            throw new Error('process.chdir is not supported');
        };
        process.umask = function () {
            return 0;
        };

    }, {}],
    93: [function (require, module, exports) {
        (function (global) {
            /*! https://mths.be/punycode v1.3.2 by @mathias */
            ;
            (function (root) {

                /** Detect free variables */
                var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
                var freeModule = typeof module == 'object' && module && !module.nodeType && module;
                var freeGlobal = typeof global == 'object' && global;
                if (
                    freeGlobal.global === freeGlobal ||
                    freeGlobal.window === freeGlobal ||
                    freeGlobal.self === freeGlobal
                ) {
                    root = freeGlobal;
                }

                /**
                 * The `punycode` object.
                 * @name punycode
                 * @type Object
                 */
                var punycode,

                    /** Highest positive signed 32-bit float value */
                    maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

                    /** Bootstring parameters */
                    base = 36,
                    tMin = 1,
                    tMax = 26,
                    skew = 38,
                    damp = 700,
                    initialBias = 72,
                    initialN = 128, // 0x80
                    delimiter = '-', // '\x2D'

                    /** Regular expressions */
                    regexPunycode = /^xn--/,
                    regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
                    regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

                    /** Error messages */
                    errors = {
                        'overflow': 'Overflow: input needs wider integers to process',
                        'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
                        'invalid-input': 'Invalid input'
                    },

                    /** Convenience shortcuts */
                    baseMinusTMin = base - tMin,
                    floor = Math.floor,
                    stringFromCharCode = String.fromCharCode,

                    /** Temporary variable */
                    key;

                /*--------------------------------------------------------------------------*/

                /**
                 * A generic error utility function.
                 * @private
                 * @param {String} type The error type.
                 * @returns {Error} Throws a `RangeError` with the applicable error message.
                 */
                function error(type) {
                    throw RangeError(errors[type]);
                }

                /**
                 * A generic `Array#map` utility function.
                 * @private
                 * @param {Array} array The array to iterate over.
                 * @param {Function} callback The function that gets called for every array
                 * item.
                 * @returns {Array} A new array of values returned by the callback function.
                 */
                function map(array, fn) {
                    var length = array.length;
                    var result = [];
                    while (length--) {
                        result[length] = fn(array[length]);
                }
                    return result;
                }

                /**
                 * A simple `Array#map`-like wrapper to work with domain name strings or email
                 * addresses.
                 * @private
                 * @param {String} domain The domain name or email address.
                 * @param {Function} callback The function that gets called for every
                 * character.
                 * @returns {Array} A new string of characters returned by the callback
                 * function.
                 */
                function mapDomain(string, fn) {
                    var parts = string.split('@');
                    var result = '';
                    if (parts.length > 1) {
                        // In email addresses, only the domain name should be punycoded. Leave
                        // the local part (i.e. everything up to `@`) intact.
                        result = parts[0] + '@';
                        string = parts[1];
                }
                    // Avoid `split(regex)` for IE8 compatibility. See #17.
                    string = string.replace(regexSeparators, '\x2E');
                    var labels = string.split('.');
                    var encoded = map(labels, fn).join('.');
                    return result + encoded;
                }

                /**
                 * Creates an array containing the numeric code points of each Unicode
                 * character in the string. While JavaScript uses UCS-2 internally,
                 * this function will convert a pair of surrogate halves (each of which
                 * UCS-2 exposes as separate characters) into a single code point,
                 * matching UTF-16.
                 * @see `punycode.ucs2.encode`
                 * @see <https://mathiasbynens.be/notes/javascript-encoding>
                 * @memberOf punycode.ucs2
                 * @name decode
                 * @param {String} string The Unicode input string (UCS-2).
                 * @returns {Array} The new array of code points.
                 */
                function ucs2decode(string) {
                    var output = [],
                        counter = 0,
                        length = string.length,
                        value,
                        extra;
                    while (counter < length) {
                        value = string.charCodeAt(counter++);
                        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
                            // high surrogate, and there is a next character
                            extra = string.charCodeAt(counter++);
                            if ((extra & 0xFC00) == 0xDC00) { // low surrogate
                                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
                        } else {
                                // unmatched surrogate; only append this code unit, in case the next
                                // code unit is the high surrogate of a surrogate pair
                            output.push(value);
                                counter--;
                        }
                        } else {
                            output.push(value);
                    }
                    }
                    return output;
                }

                /**
                 * Creates a string based on an array of numeric code points.
                 * @see `punycode.ucs2.decode`
                 * @memberOf punycode.ucs2
                 * @name encode
                 * @param {Array} codePoints The array of numeric code points.
                 * @returns {String} The new Unicode string (UCS-2).
                 */
                function ucs2encode(array) {
                    return map(array, function (value) {
                        var output = '';
                        if (value > 0xFFFF) {
                            value -= 0x10000;
                            output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
                            value = 0xDC00 | value & 0x3FF;
                        }
                        output += stringFromCharCode(value);
                    return output;
                    }).join('');
                }

                /**
                 * Converts a basic code point into a digit/integer.
                 * @see `digitToBasic()`
                 * @private
                 * @param {Number} codePoint The basic numeric code point value.
                 * @returns {Number} The numeric value of a basic code point (for use in
                 * representing integers) in the range `0` to `base - 1`, or `base` if
                 * the code point does not represent a value.
                 */
                function basicToDigit(codePoint) {
                    if (codePoint - 48 < 10) {
                        return codePoint - 22;
                }
                    if (codePoint - 65 < 26) {
                        return codePoint - 65;
                    }
                    if (codePoint - 97 < 26) {
                        return codePoint - 97;
                    }
                    return base;
                }

                /**
                 * Converts a digit/integer into a basic code point.
                 * @see `basicToDigit()`
                 * @private
                 * @param {Number} digit The numeric value of a basic code point.
                 * @returns {Number} The basic code point whose value (when used for
                 * representing integers) is `digit`, which needs to be in the range
                 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
                 * used; else, the lowercase form is used. The behavior is undefined
                 * if `flag` is non-zero and `digit` has no uppercase form.
                 */
                function digitToBasic(digit, flag) {
                    //  0..25 map to ASCII a..z or A..Z
                    // 26..35 map to ASCII 0..9
                    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
                }

                /**
                 * Bias adaptation function as per section 3.4 of RFC 3492.
                 * http://tools.ietf.org/html/rfc3492#section-3.4
                 * @private
                 */
                function adapt(delta, numPoints, firstTime) {
                    var k = 0;
                    delta = firstTime ? floor(delta / damp) : delta >> 1;
                    delta += floor(delta / numPoints);
                    for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
                        delta = floor(delta / baseMinusTMin);
                }
                    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
                }

                /**
                 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
                 * symbols.
                 * @memberOf punycode
                 * @param {String} input The Punycode string of ASCII-only symbols.
                 * @returns {String} The resulting string of Unicode symbols.
                 */
                function decode(input) {
                    // Don't use UCS-2
                    var output = [],
                        inputLength = input.length,
                        out,
                        i = 0,
                        n = initialN,
                        bias = initialBias,
                        basic,
                        j,
                        index,
                        oldi,
                        w,
                        k,
                        digit,
                        t,
                        /** Cached calculation results */
                        baseMinusT;

                    // Handle the basic code points: let `basic` be the number of input code
                    // points before the last delimiter, or `0` if there is none, then copy
                    // the first basic code points to the output.

                    basic = input.lastIndexOf(delimiter);
                    if (basic < 0) {
                        basic = 0;
                }

                    for (j = 0; j < basic; ++j) {
                        // if it's not a basic code point
                        if (input.charCodeAt(j) >= 0x80) {
                            error('not-basic');
                    }
                        output.push(input.charCodeAt(j));
                }

                    // Main decoding loop: start just after the last delimiter if any basic code
                    // points were copied; start at the beginning otherwise.

                    for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

                        // `index` is the index of the next character to be consumed.
                        // Decode a generalized variable-length integer into `delta`,
                        // which gets added to `i`. The overflow checking is easier
                        // if we increase `i` as we go, then subtract off its starting
                        // value at the end to obtain `delta`.
                        for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

                            if (index >= inputLength) {
                                error('invalid-input');
                        }

                            digit = basicToDigit(input.charCodeAt(index++));

                            if (digit >= base || digit > floor((maxInt - i) / w)) {
                                error('overflow');
                            }

                            i += digit * w;
                            t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

                            if (digit < t) {
                                break;
                            }

                            baseMinusT = base - t;
                            if (w > floor(maxInt / baseMinusT)) {
                                error('overflow');
                            }

                            w *= baseMinusT;

                        }

                        out = output.length + 1;
                        bias = adapt(i - oldi, out, oldi == 0);

                        // `i` was supposed to wrap around from `out` to `0`,
                        // incrementing `n` each time, so we'll fix that now:
                        if (floor(i / out) > maxInt - n) {
                            error('overflow');
                        }

                        n += floor(i / out);
                        i %= out;

                        // Insert `n` at position `i` of the output
                        output.splice(i++, 0, n);

                    }

                    return ucs2encode(output);
                }

                /**
                 * Converts a string of Unicode symbols (e.g. a domain name label) to a
                 * Punycode string of ASCII-only symbols.
                 * @memberOf punycode
                 * @param {String} input The string of Unicode symbols.
                 * @returns {String} The resulting Punycode string of ASCII-only symbols.
                 */
                function encode(input) {
                    var n,
                        delta,
                        handledCPCount,
                        basicLength,
                        bias,
                        j,
                        m,
                        q,
                        k,
                        t,
                        currentValue,
                        output = [],
                        /** `inputLength` will hold the number of code points in `input`. */
                        inputLength,
                        /** Cached calculation results */
                        handledCPCountPlusOne,
                        baseMinusT,
                        qMinusT;

                    // Convert the input in UCS-2 to Unicode
                    input = ucs2decode(input);

                    // Cache the length
                    inputLength = input.length;

                    // Initialize the state
                    n = initialN;
                    delta = 0;
                    bias = initialBias;

                    // Handle the basic code points
                    for (j = 0; j < inputLength; ++j) {
                        currentValue = input[j];
                        if (currentValue < 0x80) {
                            output.push(stringFromCharCode(currentValue));
                    }
                    }

                    handledCPCount = basicLength = output.length;

                    // `handledCPCount` is the number of code points that have been handled;
                    // `basicLength` is the number of basic code points.

                    // Finish the basic string - if it is not empty - with a delimiter
                    if (basicLength) {
                        output.push(delimiter);
                }

                    // Main encoding loop:
                    while (handledCPCount < inputLength) {

                        // All non-basic code points < n have been handled already. Find the next
                        // larger one:
                        for (m = maxInt, j = 0; j < inputLength; ++j) {
                            currentValue = input[j];
                            if (currentValue >= n && currentValue < m) {
                                m = currentValue;
                            }
                        }

                        // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
                        // but guard against overflow
                        handledCPCountPlusOne = handledCPCount + 1;
                        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
                            error('overflow');
                        }

                        delta += (m - n) * handledCPCountPlusOne;
                        n = m;

                    for (j = 0; j < inputLength; ++j) {
                        currentValue = input[j];

                        if (currentValue < n && ++delta > maxInt) {
                            error('overflow');
                        }

                        if (currentValue == n) {
                            // Represent delta as a generalized variable-length integer
                            for (q = delta, k = base; /* no condition */; k += base) {
                                t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
                                if (q < t) {
                                    break;
                                }
                                qMinusT = q - t;
                                baseMinusT = base - t;
                                output.push(
                                    stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
                                );
                                q = floor(qMinusT / baseMinusT);
                            }

                            output.push(stringFromCharCode(digitToBasic(q, 0)));
                            bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
                            delta = 0;
                            ++handledCPCount;
                        }
                    }

                        ++delta;
                        ++n;

                }
                    return output.join('');
                }

                /**
                 * Converts a Punycode string representing a domain name or an email address
                 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
                 * it doesn't matter if you call it on a string that has already been
                 * converted to Unicode.
                 * @memberOf punycode
                 * @param {String} input The Punycoded domain name or email address to
                 * convert to Unicode.
                 * @returns {String} The Unicode representation of the given Punycode
                 * string.
                 */
                function toUnicode(input) {
                    return mapDomain(input, function (string) {
                        return regexPunycode.test(string)
                            ? decode(string.slice(4).toLowerCase())
                            : string;
                    });
                }

                /**
                 * Converts a Unicode string representing a domain name or an email address to
                 * Punycode. Only the non-ASCII parts of the domain name will be converted,
                 * i.e. it doesn't matter if you call it with a domain that's already in
                 * ASCII.
                 * @memberOf punycode
                 * @param {String} input The domain name or email address to convert, as a
                 * Unicode string.
                 * @returns {String} The Punycode representation of the given domain name or
                 * email address.
                 */
                function toASCII(input) {
                    return mapDomain(input, function (string) {
                        return regexNonASCII.test(string)
                            ? 'xn--' + encode(string)
                            : string;
                    });
                }

                /*--------------------------------------------------------------------------*/

                /** Define the public API */
                punycode = {
                /**
                 * A string representing the current Punycode.js version number.
                 * @memberOf punycode
                 * @type String
                 */
                'version': '1.3.2',
                /**
                 * An object of methods to convert from JavaScript's internal character
                 * representation (UCS-2) to Unicode code points, and back.
                 * @see <https://mathiasbynens.be/notes/javascript-encoding>
                 * @memberOf punycode
                 * @type Object
                 */
                'ucs2': {
                    'decode': ucs2decode,
                    'encode': ucs2encode
                },
                    'decode': decode,
                    'encode': encode,
                    'toASCII': toASCII,
                    'toUnicode': toUnicode
                };

                /** Expose `punycode` */
                // Some AMD build optimizers, like r.js, check for specific condition patterns
                // like the following:
                if (
                    typeof define == 'function' &&
                    typeof define.amd == 'object' &&
                    define.amd
                ) {
                    define('punycode', function () {
                        return punycode;
                    });
                } else if (freeExports && freeModule) {
                    if (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+
                        freeModule.exports = punycode;
                    } else { // in Narwhal or RingoJS v0.7.0-
                        for (key in punycode) {
                            punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
                    }
                }
                } else { // in Rhino or a web browser
                    root.punycode = punycode;
                }

            }(this));

        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {}],
    94: [function (require, module, exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
        function hasOwnProperty(obj, prop) {
            return Object.prototype.hasOwnProperty.call(obj, prop);
        }

        module.exports = function (qs, sep, eq, options) {
            sep = sep || '&';
            eq = eq || '=';
            var obj = {};

            if (typeof qs !== 'string' || qs.length === 0) {
            return obj;
            }

            var regexp = /\+/g;
            qs = qs.split(sep);

            var maxKeys = 1000;
            if (options && typeof options.maxKeys === 'number') {
                maxKeys = options.maxKeys;
            }

            var len = qs.length;
            // maxKeys <= 0 means that we should not limit keys count
            if (maxKeys > 0 && len > maxKeys) {
                len = maxKeys;
            }

            for (var i = 0; i < len; ++i) {
                var x = qs[i].replace(regexp, '%20'),
                    idx = x.indexOf(eq),
                    kstr, vstr, k, v;

                if (idx >= 0) {
                    kstr = x.substr(0, idx);
                    vstr = x.substr(idx + 1);
                } else {
                    kstr = x;
                    vstr = '';
                }

                k = decodeURIComponent(kstr);
                v = decodeURIComponent(vstr);

                if (!hasOwnProperty(obj, k)) {
                    obj[k] = v;
                } else if (isArray(obj[k])) {
                    obj[k].push(v);
                } else {
                    obj[k] = [obj[k], v];
                }
            }

            return obj;
        };

        var isArray = Array.isArray || function (xs) {
                return Object.prototype.toString.call(xs) === '[object Array]';
        };

    }, {}],
    95: [function (require, module, exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        'use strict';

        var stringifyPrimitive = function (v) {
            switch (typeof v) {
                case 'string':
                    return v;

                case 'boolean':
                    return v ? 'true' : 'false';

                case 'number':
                    return isFinite(v) ? v : '';

                default:
                    return '';
            }
        };

        module.exports = function (obj, sep, eq, name) {
            sep = sep || '&';
            eq = eq || '=';
            if (obj === null) {
                obj = undefined;
            }

            if (typeof obj === 'object') {
                return map(objectKeys(obj), function (k) {
                    var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
                    if (isArray(obj[k])) {
                        return map(obj[k], function (v) {
                            return ks + encodeURIComponent(stringifyPrimitive(v));
                        }).join(sep);
                    } else {
                        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
                    }
                }).join(sep);

            }

            if (!name) return '';
            return encodeURIComponent(stringifyPrimitive(name)) + eq +
                encodeURIComponent(stringifyPrimitive(obj));
        };

        var isArray = Array.isArray || function (xs) {
                return Object.prototype.toString.call(xs) === '[object Array]';
        };

        function map(xs, f) {
            if (xs.map) return xs.map(f);
            var res = [];
            for (var i = 0; i < xs.length; i++) {
                res.push(f(xs[i], i));
            }
            return res;
        }

        var objectKeys = Object.keys || function (obj) {
            var res = [];
                for (var key in obj) {
                    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
            }
            return res;
            };

    }, {}],
    96: [function (require, module, exports) {
        'use strict';

        exports.decode = exports.parse = require('./decode');
        exports.encode = exports.stringify = require('./encode');

    }, {"./decode": 94, "./encode": 95}],
    97: [function (require, module, exports) {
        module.exports = require("./lib/_stream_duplex.js")

    }, {"./lib/_stream_duplex.js": 98}],
    98: [function (require, module, exports) {
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

        'use strict';

        /*<replacement>*/
        var objectKeys = Object.keys || function (obj) {
                var keys = [];
                for (var key in obj) keys.push(key);
                return keys;
            }
        /*</replacement>*/


        module.exports = Duplex;

        /*<replacement>*/
        var processNextTick = require('process-nextick-args');
        /*</replacement>*/


        /*<replacement>*/
        var util = require('core-util-is');
        util.inherits = require('inherits');
        /*</replacement>*/

        var Readable = require('./_stream_readable');
        var Writable = require('./_stream_writable');

        util.inherits(Duplex, Readable);

        var keys = objectKeys(Writable.prototype);
        for (var v = 0; v < keys.length; v++) {
            var method = keys[v];
            if (!Duplex.prototype[method])
                Duplex.prototype[method] = Writable.prototype[method];
        }

        function Duplex(options) {
            if (!(this instanceof Duplex))
                return new Duplex(options);

            Readable.call(this, options);
            Writable.call(this, options);

            if (options && options.readable === false)
                this.readable = false;

            if (options && options.writable === false)
                this.writable = false;

            this.allowHalfOpen = true;
            if (options && options.allowHalfOpen === false)
                this.allowHalfOpen = false;

            this.once('end', onend);
        }

// the no-half-open enforcer
        function onend() {
            // if we allow half-open state, or if the writable side ended,
            // then we're ok.
            if (this.allowHalfOpen || this._writableState.ended)
                return;

            // no more data can be written.
            // But allow more writes to happen in this tick.
            processNextTick(onEndNT, this);
        }

        function onEndNT(self) {
            self.end();
        }

        function forEach(xs, f) {
            for (var i = 0, l = xs.length; i < l; i++) {
                f(xs[i], i);
        }
        }

    }, {
        "./_stream_readable": 100,
        "./_stream_writable": 102,
        "core-util-is": 103,
        "inherits": 89,
        "process-nextick-args": 104
    }],
    99: [function (require, module, exports) {
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

        'use strict';

        module.exports = PassThrough;

        var Transform = require('./_stream_transform');

        /*<replacement>*/
        var util = require('core-util-is');
        util.inherits = require('inherits');
        /*</replacement>*/

        util.inherits(PassThrough, Transform);

        function PassThrough(options) {
            if (!(this instanceof PassThrough))
                return new PassThrough(options);

            Transform.call(this, options);
        }

        PassThrough.prototype._transform = function (chunk, encoding, cb) {
            cb(null, chunk);
        };

    }, {"./_stream_transform": 101, "core-util-is": 103, "inherits": 89}],
    100: [function (require, module, exports) {
        (function (process) {
        'use strict';

            module.exports = Readable;

            /*<replacement>*/
            var processNextTick = require('process-nextick-args');
            /*</replacement>*/


        /*<replacement>*/
            var isArray = require('isarray');
            /*</replacement>*/


            /*<replacement>*/
            var Buffer = require('buffer').Buffer;
            /*</replacement>*/

            Readable.ReadableState = ReadableState;

            var EE = require('events').EventEmitter;

            /*<replacement>*/
            if (!EE.listenerCount) EE.listenerCount = function (emitter, type) {
                return emitter.listeners(type).length;
            };
            /*</replacement>*/


            /*<replacement>*/
            var Stream;
            (function () {
                try {
                    Stream = require('st' + 'ream');
                } catch (_) {
                } finally {
                    if (!Stream)
                        Stream = require('events').EventEmitter;
                }
            }())
            /*</replacement>*/

            var Buffer = require('buffer').Buffer;

            /*<replacement>*/
        var util = require('core-util-is');
        util.inherits = require('inherits');
        /*</replacement>*/


            /*<replacement>*/
            var debug = require('util');
            if (debug && debug.debuglog) {
                debug = debug.debuglog('stream');
            } else {
                debug = function () {
                };
        }
            /*</replacement>*/

            var StringDecoder;

            util.inherits(Readable, Stream);

            function ReadableState(options, stream) {
                var Duplex = require('./_stream_duplex');

                options = options || {};

                // object stream flag. Used to make read(n) ignore n and to
                // make all the buffer merging and length checks go away
                this.objectMode = !!options.objectMode;

                if (stream instanceof Duplex)
                    this.objectMode = this.objectMode || !!options.readableObjectMode;

                // the point at which it stops calling _read() to fill the buffer
                // Note: 0 is a valid value, means "don't call _read preemptively ever"
                var hwm = options.highWaterMark;
                var defaultHwm = this.objectMode ? 16 : 16 * 1024;
                this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

                // cast to ints.
                this.highWaterMark = ~~this.highWaterMark;

                this.buffer = [];
                this.length = 0;
                this.pipes = null;
                this.pipesCount = 0;
                this.flowing = null;
                this.ended = false;
                this.endEmitted = false;
                this.reading = false;

                // a flag to be able to tell if the onwrite cb is called immediately,
                // or on a later tick.  We set this to true at first, because any
                // actions that shouldn't happen until "later" should generally also
                // not happen before the first write call.
                this.sync = true;

                // whenever we return null, then we set a flag to say
                // that we're awaiting a 'readable' event emission.
                this.needReadable = false;
                this.emittedReadable = false;
                this.readableListening = false;

                // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.
                this.defaultEncoding = options.defaultEncoding || 'utf8';

                // when piping, we only care about 'readable' events that happen
                // after read()ing all the bytes and not getting any pushback.
                this.ranOut = false;

                // the number of writers that are awaiting a drain event in .pipe()s
                this.awaitDrain = 0;

                // if true, a maybeReadMore has been scheduled
                this.readingMore = false;

                this.decoder = null;
                this.encoding = null;
                if (options.encoding) {
                    if (!StringDecoder)
                        StringDecoder = require('string_decoder/').StringDecoder;
                    this.decoder = new StringDecoder(options.encoding);
                    this.encoding = options.encoding;
            }
            }

            function Readable(options) {
                var Duplex = require('./_stream_duplex');

                if (!(this instanceof Readable))
                    return new Readable(options);

                this._readableState = new ReadableState(options, this);

                // legacy
                this.readable = true;

                if (options && typeof options.read === 'function')
                    this._read = options.read;

                Stream.call(this);
            }

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
            Readable.prototype.push = function (chunk, encoding) {
                var state = this._readableState;

                if (!state.objectMode && typeof chunk === 'string') {
                    encoding = encoding || state.defaultEncoding;
                    if (encoding !== state.encoding) {
                        chunk = new Buffer(chunk, encoding);
                        encoding = '';
                }
                }

                return readableAddChunk(this, state, chunk, encoding, false);
            };

// Unshift should *always* be something directly out of read()
            Readable.prototype.unshift = function (chunk) {
                var state = this._readableState;
                return readableAddChunk(this, state, chunk, '', true);
            };

            Readable.prototype.isPaused = function () {
                return this._readableState.flowing === false;
            };

            function readableAddChunk(stream, state, chunk, encoding, addToFront) {
                var er = chunkInvalid(state, chunk);
                if (er) {
                    stream.emit('error', er);
                } else if (chunk === null) {
                    state.reading = false;
                    onEofChunk(stream, state);
                } else if (state.objectMode || chunk && chunk.length > 0) {
                    if (state.ended && !addToFront) {
                        var e = new Error('stream.push() after EOF');
                        stream.emit('error', e);
                    } else if (state.endEmitted && addToFront) {
                        var e = new Error('stream.unshift() after end event');
                        stream.emit('error', e);
                    } else {
                        if (state.decoder && !addToFront && !encoding)
                            chunk = state.decoder.write(chunk);

                        if (!addToFront)
                            state.reading = false;

                        // if we want the data now, just emit it.
                        if (state.flowing && state.length === 0 && !state.sync) {
                            stream.emit('data', chunk);
                            stream.read(0);
                    } else {
                            // update the buffer info.
                            state.length += state.objectMode ? 1 : chunk.length;
                            if (addToFront)
                                state.buffer.unshift(chunk);
                            else
                                state.buffer.push(chunk);

                            if (state.needReadable)
                                emitReadable(stream);
                    }

                        maybeReadMore(stream, state);
                }
                } else if (!addToFront) {
                    state.reading = false;
            }

                return needMoreData(state);
            }



// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
            function needMoreData(state) {
                return !state.ended &&
                    (state.needReadable ||
                    state.length < state.highWaterMark ||
                    state.length === 0);
            }

// backwards compatibility.
            Readable.prototype.setEncoding = function (enc) {
                if (!StringDecoder)
                    StringDecoder = require('string_decoder/').StringDecoder;
                this._readableState.decoder = new StringDecoder(enc);
                this._readableState.encoding = enc;
                return this;
            };

// Don't raise the hwm > 128MB
            var MAX_HWM = 0x800000;

            function roundUpToNextPowerOf2(n) {
                if (n >= MAX_HWM) {
                    n = MAX_HWM;
                } else {
                    // Get the next highest power of 2
                    n--;
                    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
                    n++;
                }
                return n;
            }

            function howMuchToRead(n, state) {
                if (state.length === 0 && state.ended)
                    return 0;

                if (state.objectMode)
                    return n === 0 ? 0 : 1;

                if (n === null || isNaN(n)) {
                    // only flow one buffer at a time
                    if (state.flowing && state.buffer.length)
                        return state.buffer[0].length;
                    else
                        return state.length;
                }

                if (n <= 0)
                    return 0;

                // If we're asking for more than the target buffer level,
                // then raise the water mark.  Bump up to the next highest
                // power of 2, to prevent increasing it excessively in tiny
                // amounts.
                if (n > state.highWaterMark)
                    state.highWaterMark = roundUpToNextPowerOf2(n);

                // don't have that much.  return null, unless we've ended.
                if (n > state.length) {
                    if (!state.ended) {
                        state.needReadable = true;
                        return 0;
                } else {
                        return state.length;
                }
            }

                return n;
            }

// you can override either this method, or the async _read(n) below.
            Readable.prototype.read = function (n) {
                debug('read', n);
                var state = this._readableState;
                var nOrig = n;

                if (typeof n !== 'number' || n > 0)
                    state.emittedReadable = false;

                // if we're doing read(0) to trigger a readable event, but we
                // already have a bunch of data in the buffer, then just trigger
                // the 'readable' event and move on.
                if (n === 0 &&
                    state.needReadable &&
                    (state.length >= state.highWaterMark || state.ended)) {
                    debug('read: emitReadable', state.length, state.ended);
                    if (state.length === 0 && state.ended)
                        endReadable(this);
                else
                        emitReadable(this);
                    return null;
                }

                n = howMuchToRead(n, state);

                // if we've ended, and we're now clear, then finish it up.
                if (n === 0 && state.ended) {
                    if (state.length === 0)
                    endReadable(this);
                    return null;
                }

                // All the actual chunk generation logic needs to be
                // *below* the call to _read.  The reason is that in certain
                // synthetic stream cases, such as passthrough streams, _read
                // may be a completely synchronous operation which may change
                // the state of the read buffer, providing enough data when
                // before there was *not* enough.
                //
                // So, the steps are:
                // 1. Figure out what the state of things will be after we do
                // a read from the buffer.
                //
                // 2. If that resulting state will trigger a _read, then call _read.
                // Note that this may be asynchronous, or synchronous.  Yes, it is
                // deeply ugly to write APIs this way, but that still doesn't mean
                // that the Readable class should behave improperly, as streams are
                // designed to be sync/async agnostic.
                // Take note if the _read call is sync or async (ie, if the read call
                // has returned yet), so that we know whether or not it's safe to emit
                // 'readable' etc.
                //
                // 3. Actually pull the requested chunks out of the buffer and return.

                // if we need a readable event, then we need to do some reading.
                var doRead = state.needReadable;
                debug('need readable', doRead);

                // if we currently have less than the highWaterMark, then also read some
                if (state.length === 0 || state.length - n < state.highWaterMark) {
                    doRead = true;
                    debug('length less than watermark', doRead);
            }

                // however, if we've ended, then there's no point, and if we're already
                // reading, then it's unnecessary.
                if (state.ended || state.reading) {
                    doRead = false;
                    debug('reading or ended', doRead);
                }

                if (doRead) {
                    debug('do read');
                    state.reading = true;
                    state.sync = true;
                    // if the length is currently zero, then we *need* a readable event.
                    if (state.length === 0)
                        state.needReadable = true;
                    // call internal read method
                    this._read(state.highWaterMark);
                    state.sync = false;
                }

                // If _read pushed data synchronously, then `reading` will be false,
                // and we need to re-evaluate how much data we can return to the user.
                if (doRead && !state.reading)
                    n = howMuchToRead(nOrig, state);

                var ret;
                if (n > 0)
                    ret = fromList(n, state);
                else
                    ret = null;

                if (ret === null) {
                    state.needReadable = true;
                    n = 0;
            }

                state.length -= n;

                // If we have nothing in the buffer, then we want to know
                // as soon as we *do* get something into the buffer.
                if (state.length === 0 && !state.ended)
                    state.needReadable = true;

                // If we tried to read() past the EOF, then emit end on the next tick.
                if (nOrig !== n && state.ended && state.length === 0)
                    endReadable(this);

                if (ret !== null)
                    this.emit('data', ret);

                return ret;
            };

            function chunkInvalid(state, chunk) {
                var er = null;
                if (!(Buffer.isBuffer(chunk)) &&
                    typeof chunk !== 'string' &&
                    chunk !== null &&
                    chunk !== undefined && !state.objectMode) {
                    er = new TypeError('Invalid non-string/buffer chunk');
                }
                return er;
            }


            function onEofChunk(stream, state) {
                if (state.ended) return;
                if (state.decoder) {
                    var chunk = state.decoder.end();
                    if (chunk && chunk.length) {
                        state.buffer.push(chunk);
                        state.length += state.objectMode ? 1 : chunk.length;
                    }
                }
                state.ended = true;

                // emit 'readable' now to make sure it gets picked up.
                emitReadable(stream);
            }

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
            function emitReadable(stream) {
                var state = stream._readableState;
                state.needReadable = false;
                if (!state.emittedReadable) {
                    debug('emitReadable', state.flowing);
                    state.emittedReadable = true;
                    if (state.sync)
                        processNextTick(emitReadable_, stream);
                    else
                        emitReadable_(stream);
            }
            }

            function emitReadable_(stream) {
                debug('emit readable');
                stream.emit('readable');
                flow(stream);
            }


// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
            function maybeReadMore(stream, state) {
                if (!state.readingMore) {
                    state.readingMore = true;
                    processNextTick(maybeReadMore_, stream, state);
            }
            }

            function maybeReadMore_(stream, state) {
                var len = state.length;
                while (!state.reading && !state.flowing && !state.ended &&
                state.length < state.highWaterMark) {
                    debug('maybeReadMore read 0');
                    stream.read(0);
                    if (len === state.length)
                    // didn't get any data, stop spinning.
                        break;
                    else
                        len = state.length;
            }
                state.readingMore = false;
            }

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
            Readable.prototype._read = function (n) {
                this.emit('error', new Error('not implemented'));
            };

            Readable.prototype.pipe = function (dest, pipeOpts) {
                var src = this;
                var state = this._readableState;

                switch (state.pipesCount) {
                    case 0:
                        state.pipes = dest;
                        break;
                    case 1:
                        state.pipes = [state.pipes, dest];
                        break;
                    default:
                        state.pipes.push(dest);
                        break;
                }
                state.pipesCount += 1;
                debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

                var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
                    dest !== process.stdout &&
                    dest !== process.stderr;

                var endFn = doEnd ? onend : cleanup;
                if (state.endEmitted)
                    processNextTick(endFn);
                else
                    src.once('end', endFn);

                dest.on('unpipe', onunpipe);
                function onunpipe(readable) {
                    debug('onunpipe');
                    if (readable === src) {
                        cleanup();
                }
                }

                function onend() {
                    debug('onend');
                    dest.end();
                }

                // when the dest drains, it reduces the awaitDrain counter
                // on the source.  This would be more elegant with a .once()
                // handler in flow(), but adding and removing repeatedly is
                // too slow.
                var ondrain = pipeOnDrain(src);
                dest.on('drain', ondrain);

                function cleanup() {
                    debug('cleanup');
                    // cleanup event handlers once the pipe is broken
                    dest.removeListener('close', onclose);
                    dest.removeListener('finish', onfinish);
                    dest.removeListener('drain', ondrain);
                    dest.removeListener('error', onerror);
                    dest.removeListener('unpipe', onunpipe);
                    src.removeListener('end', onend);
                    src.removeListener('end', cleanup);
                    src.removeListener('data', ondata);

                    // if the reader is waiting for a drain event from this
                    // specific writer, then it would cause it to never start
                    // flowing again.
                    // So, if this is awaiting a drain, then we just call it now.
                    // If we don't know, then assume that we are waiting for one.
                    if (state.awaitDrain &&
                        (!dest._writableState || dest._writableState.needDrain))
                        ondrain();
                }

                src.on('data', ondata);
                function ondata(chunk) {
                    debug('ondata');
                    var ret = dest.write(chunk);
                    if (false === ret) {
                        debug('false write response, pause',
                            src._readableState.awaitDrain);
                        src._readableState.awaitDrain++;
                        src.pause();
                }
                }

                // if the dest has an error, then stop piping into it.
                // however, don't suppress the throwing behavior for this.
                function onerror(er) {
                    debug('onerror', er);
                    unpipe();
                    dest.removeListener('error', onerror);
                    if (EE.listenerCount(dest, 'error') === 0)
                        dest.emit('error', er);
                }

                // This is a brutally ugly hack to make sure that our error handler
                // is attached before any userland ones.  NEVER DO THIS.
                if (!dest._events || !dest._events.error)
                    dest.on('error', onerror);
                else if (isArray(dest._events.error))
                    dest._events.error.unshift(onerror);
                else
                    dest._events.error = [onerror, dest._events.error];


                // Both close and finish should trigger unpipe, but only once.
                function onclose() {
                    dest.removeListener('finish', onfinish);
                    unpipe();
                }

                dest.once('close', onclose);
                function onfinish() {
                    debug('onfinish');
                    dest.removeListener('close', onclose);
                    unpipe();
                }

                dest.once('finish', onfinish);

                function unpipe() {
                    debug('unpipe');
                    src.unpipe(dest);
                }

                // tell the dest that it's being piped to
                dest.emit('pipe', src);

                // start the flow if it hasn't been started already.
                if (!state.flowing) {
                    debug('pipe resume');
                    src.resume();
                }

                return dest;
            };

            function pipeOnDrain(src) {
                return function () {
                    var state = src._readableState;
                    debug('pipeOnDrain', state.awaitDrain);
                    if (state.awaitDrain)
                        state.awaitDrain--;
                    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
                        state.flowing = true;
                        flow(src);
                }
            };
            }


            Readable.prototype.unpipe = function (dest) {
                var state = this._readableState;

                // if we're not piping anywhere, then do nothing.
                if (state.pipesCount === 0)
                    return this;

                // just one destination.  most common case.
                if (state.pipesCount === 1) {
                    // passed in one, but it's not the right one.
                    if (dest && dest !== state.pipes)
                    return this;

                    if (!dest)
                        dest = state.pipes;

                    // got a match.
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;
                    if (dest)
                        dest.emit('unpipe', this);
                    return this;
                }

                // slow case. multiple pipe destinations.

                if (!dest) {
                    // remove all.
                    var dests = state.pipes;
                    var len = state.pipesCount;
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;

                    for (var i = 0; i < len; i++)
                        dests[i].emit('unpipe', this);
                    return this;
                }

                // try to find the right one.
                var i = indexOf(state.pipes, dest);
                if (i === -1)
                    return this;

                state.pipes.splice(i, 1);
                state.pipesCount -= 1;
                if (state.pipesCount === 1)
                    state.pipes = state.pipes[0];

                dest.emit('unpipe', this);

                return this;
            };

// set up data events if they are asked for
// Ensure readable listeners eventually get something
            Readable.prototype.on = function (ev, fn) {
                var res = Stream.prototype.on.call(this, ev, fn);

                // If listening to data, and it has not explicitly been paused,
                // then call resume to start the flow of data on the next tick.
                if (ev === 'data' && false !== this._readableState.flowing) {
                    this.resume();
                }

                if (ev === 'readable' && this.readable) {
                    var state = this._readableState;
                    if (!state.readableListening) {
                        state.readableListening = true;
                        state.emittedReadable = false;
                        state.needReadable = true;
                        if (!state.reading) {
                            processNextTick(nReadingNextTick, this);
                        } else if (state.length) {
                            emitReadable(this, state);
                    }
                }
            }

                return res;
            };
            Readable.prototype.addListener = Readable.prototype.on;

            function nReadingNextTick(self) {
                debug('readable nexttick read 0');
                self.read(0);
            }

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
            Readable.prototype.resume = function () {
                var state = this._readableState;
                if (!state.flowing) {
                    debug('resume');
                    state.flowing = true;
                    resume(this, state);
                }
                return this;
            };

            function resume(stream, state) {
                if (!state.resumeScheduled) {
                    state.resumeScheduled = true;
                    processNextTick(resume_, stream, state);
            }
            }

            function resume_(stream, state) {
                if (!state.reading) {
                    debug('resume read 0');
                    stream.read(0);
            }

                state.resumeScheduled = false;
                stream.emit('resume');
                flow(stream);
                if (state.flowing && !state.reading)
                    stream.read(0);
            }

            Readable.prototype.pause = function () {
                debug('call pause flowing=%j', this._readableState.flowing);
                if (false !== this._readableState.flowing) {
                    debug('pause');
                    this._readableState.flowing = false;
                    this.emit('pause');
            }
                return this;
            };

            function flow(stream) {
                var state = stream._readableState;
                debug('flow', state.flowing);
                if (state.flowing) {
                    do {
                        var chunk = stream.read();
                    } while (null !== chunk && state.flowing);
                }
            }

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
            Readable.prototype.wrap = function (stream) {
                var state = this._readableState;
                var paused = false;

                var self = this;
                stream.on('end', function () {
                    debug('wrapped end');
                    if (state.decoder && !state.ended) {
                        var chunk = state.decoder.end();
                        if (chunk && chunk.length)
                            self.push(chunk);
                    }

                    self.push(null);
                });

                stream.on('data', function (chunk) {
                    debug('wrapped data');
                    if (state.decoder)
                        chunk = state.decoder.write(chunk);

                    // don't skip over falsy values in objectMode
                    if (state.objectMode && (chunk === null || chunk === undefined))
                        return;
                    else if (!state.objectMode && (!chunk || !chunk.length))
                        return;

                    var ret = self.push(chunk);
                    if (!ret) {
                        paused = true;
                        stream.pause();
                    }
                });

                // proxy all the other methods.
                // important when wrapping filters and duplexes.
                for (var i in stream) {
                    if (this[i] === undefined && typeof stream[i] === 'function') {
                        this[i] = function (method) {
                            return function () {
                                return stream[method].apply(stream, arguments);
                            };
                        }(i);
                }
                }

                // proxy certain important events.
                var events = ['error', 'close', 'destroy', 'pause', 'resume'];
                forEach(events, function (ev) {
                    stream.on(ev, self.emit.bind(self, ev));
                });

                // when we try to consume some more bytes, simply unpause the
                // underlying stream.
                self._read = function (n) {
                    debug('wrapped _read', n);
                    if (paused) {
                        paused = false;
                        stream.resume();
                    }
            };

                return self;
            };



// exposed for testing purposes only.
            Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
            function fromList(n, state) {
                var list = state.buffer;
                var length = state.length;
                var stringMode = !!state.decoder;
                var objectMode = !!state.objectMode;
                var ret;

                // nothing in the list, definitely empty.
                if (list.length === 0)
                    return null;

                if (length === 0)
                    ret = null;
                else if (objectMode)
                    ret = list.shift();
                else if (!n || n >= length) {
                    // read it all, truncate the array.
                    if (stringMode)
                        ret = list.join('');
                    else
                        ret = Buffer.concat(list, length);
                    list.length = 0;
                } else {
                    // read just some of it.
                    if (n < list[0].length) {
                        // just take a part of the first list item.
                        // slice is the same for buffers and strings.
                        var buf = list[0];
                        ret = buf.slice(0, n);
                        list[0] = buf.slice(n);
                    } else if (n === list[0].length) {
                        // first list is a perfect match
                    ret = list.shift();
                    } else {
                        // complex case.
                        // we have enough to cover it, but it spans past the first buffer.
                    if (stringMode)
                        ret = '';
                    else
                        ret = new Buffer(n);

                        var c = 0;
                        for (var i = 0, l = list.length; i < l && c < n; i++) {
                        var buf = list[0];
                            var cpy = Math.min(n - c, buf.length);

                        if (stringMode)
                            ret += buf.slice(0, cpy);
                        else
                            buf.copy(ret, c, 0, cpy);

                            if (cpy < buf.length)
                                list[0] = buf.slice(cpy);
                            else
                                list.shift();

                            c += cpy;
                    }
                }
            }

                return ret;
            }

            function endReadable(stream) {
                var state = stream._readableState;

                // If we get here before consuming all the bytes, then that is a
                // bug in node.  Should never happen.
                if (state.length > 0)
                    throw new Error('endReadable called on non-empty stream');

                if (!state.endEmitted) {
                    state.ended = true;
                    processNextTick(endReadableNT, state, stream);
            }
            }

            function endReadableNT(state, stream) {
                // Check that we didn't get one last unshift.
                if (!state.endEmitted && state.length === 0) {
                    state.endEmitted = true;
                    stream.readable = false;
                    stream.emit('end');
            }
            }

            function forEach(xs, f) {
                for (var i = 0, l = xs.length; i < l; i++) {
                    f(xs[i], i);
            }
            }

            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) {
                    if (xs[i] === x) return i;
            }
                return -1;
            }

        }).call(this, require('_process'))
    }, {
        "./_stream_duplex": 98,
        "_process": 92,
        "buffer": 84,
        "core-util-is": 103,
        "events": 88,
        "inherits": 89,
        "isarray": 91,
        "process-nextick-args": 104,
        "string_decoder/": 111,
        "util": 83
    }],
    101: [function (require, module, exports) {
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

        'use strict';

        module.exports = Transform;

        var Duplex = require('./_stream_duplex');

        /*<replacement>*/
        var util = require('core-util-is');
        util.inherits = require('inherits');
        /*</replacement>*/

        util.inherits(Transform, Duplex);


        function TransformState(stream) {
            this.afterTransform = function (er, data) {
                return afterTransform(stream, er, data);
        };

            this.needTransform = false;
            this.transforming = false;
            this.writecb = null;
            this.writechunk = null;
        }

        function afterTransform(stream, er, data) {
            var ts = stream._transformState;
            ts.transforming = false;

            var cb = ts.writecb;

            if (!cb)
                return stream.emit('error', new Error('no writecb in Transform class'));

            ts.writechunk = null;
            ts.writecb = null;

            if (data !== null && data !== undefined)
                stream.push(data);

            if (cb)
                cb(er);

            var rs = stream._readableState;
            rs.reading = false;
            if (rs.needReadable || rs.length < rs.highWaterMark) {
                stream._read(rs.highWaterMark);
            }
        }


        function Transform(options) {
            if (!(this instanceof Transform))
                return new Transform(options);

            Duplex.call(this, options);

            this._transformState = new TransformState(this);

            // when the writable side finishes, then flush out anything remaining.
            var stream = this;

            // start out asking for a readable event once data is transformed.
            this._readableState.needReadable = true;

            // we have implemented the _read method, and done the other things
            // that Readable wants before the first _read call, so unset the
            // sync guard flag.
            this._readableState.sync = false;

            if (options) {
                if (typeof options.transform === 'function')
                    this._transform = options.transform;

                if (typeof options.flush === 'function')
                    this._flush = options.flush;
            }

            this.once('prefinish', function () {
                if (typeof this._flush === 'function')
                    this._flush(function (er) {
                        done(stream, er);
                    });
                else
                    done(stream);
            });
        }

        Transform.prototype.push = function (chunk, encoding) {
            this._transformState.needTransform = false;
            return Duplex.prototype.push.call(this, chunk, encoding);
        };

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
        Transform.prototype._transform = function (chunk, encoding, cb) {
            throw new Error('not implemented');
        };

        Transform.prototype._write = function (chunk, encoding, cb) {
            var ts = this._transformState;
            ts.writecb = cb;
            ts.writechunk = chunk;
            ts.writeencoding = encoding;
            if (!ts.transforming) {
                var rs = this._readableState;
                if (ts.needTransform ||
                    rs.needReadable ||
                    rs.length < rs.highWaterMark)
                    this._read(rs.highWaterMark);
            }
        };

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
        Transform.prototype._read = function (n) {
            var ts = this._transformState;

            if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
                ts.transforming = true;
                this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
            } else {
                // mark that we need a transform, so that any data that comes in
                // will get processed, now that we've asked for it.
                ts.needTransform = true;
        }
        };


        function done(stream, er) {
            if (er)
                return stream.emit('error', er);

            // if there's nothing in the write buffer, then that means
            // that nothing more will ever be provided
            var ws = stream._writableState;
            var ts = stream._transformState;

            if (ws.length)
                throw new Error('calling transform done when ws.length != 0');

            if (ts.transforming)
                throw new Error('calling transform done when still transforming');

            return stream.push(null);
        }

    }, {"./_stream_duplex": 98, "core-util-is": 103, "inherits": 89}],
    102: [function (require, module, exports) {
// A bit simpler than readable streams.
// Implement an async ._write(chunk, cb), and it'll handle all
// the drain event emission and buffering.

        'use strict';

        module.exports = Writable;

        /*<replacement>*/
        var processNextTick = require('process-nextick-args');
        /*</replacement>*/


        /*<replacement>*/
        var Buffer = require('buffer').Buffer;
        /*</replacement>*/

        Writable.WritableState = WritableState;


        /*<replacement>*/
        var util = require('core-util-is');
        util.inherits = require('inherits');
        /*</replacement>*/


        /*<replacement>*/
        var Stream;
        (function () {
            try {
                Stream = require('st' + 'ream');
            } catch (_) {
            } finally {
                if (!Stream)
                    Stream = require('events').EventEmitter;
            }
        }())
        /*</replacement>*/

        var Buffer = require('buffer').Buffer;

        util.inherits(Writable, Stream);

        function nop() {
        }

        function WriteReq(chunk, encoding, cb) {
            this.chunk = chunk;
            this.encoding = encoding;
            this.callback = cb;
            this.next = null;
        }

        function WritableState(options, stream) {
            var Duplex = require('./_stream_duplex');

            options = options || {};

            // object stream flag to indicate whether or not this stream
            // contains buffers or objects.
            this.objectMode = !!options.objectMode;

            if (stream instanceof Duplex)
                this.objectMode = this.objectMode || !!options.writableObjectMode;

            // the point at which write() starts returning false
            // Note: 0 is a valid value, means that we always return false if
            // the entire buffer is not flushed immediately on write()
            var hwm = options.highWaterMark;
            var defaultHwm = this.objectMode ? 16 : 16 * 1024;
            this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

            // cast to ints.
            this.highWaterMark = ~~this.highWaterMark;

            this.needDrain = false;
            // at the start of calling end()
            this.ending = false;
            // when end() has been called, and returned
            this.ended = false;
            // when 'finish' is emitted
            this.finished = false;

            // should we decode strings into buffers before passing to _write?
            // this is here so that some node-core streams can optimize string
            // handling at a lower level.
            var noDecode = options.decodeStrings === false;
            this.decodeStrings = !noDecode;

            // Crypto is kind of old and crusty.  Historically, its default string
            // encoding is 'binary' so we have to make this configurable.
            // Everything else in the universe uses 'utf8', though.
            this.defaultEncoding = options.defaultEncoding || 'utf8';

            // not an actual buffer we keep track of, but a measurement
            // of how much we're waiting to get pushed to some underlying
            // socket or file.
            this.length = 0;

            // a flag to see when we're in the middle of a write.
            this.writing = false;

            // when true all writes will be buffered until .uncork() call
            this.corked = 0;

            // a flag to be able to tell if the onwrite cb is called immediately,
            // or on a later tick.  We set this to true at first, because any
            // actions that shouldn't happen until "later" should generally also
            // not happen before the first write call.
            this.sync = true;

            // a flag to know if we're processing previously buffered items, which
            // may call the _write() callback in the same tick, so that we don't
            // end up in an overlapped onwrite situation.
            this.bufferProcessing = false;

            // the callback that's passed to _write(chunk,cb)
            this.onwrite = function (er) {
                onwrite(stream, er);
        };

            // the callback that the user supplies to write(chunk,encoding,cb)
            this.writecb = null;

            // the amount that is being written when _write is called.
            this.writelen = 0;

            this.bufferedRequest = null;
            this.lastBufferedRequest = null;

            // number of pending user-supplied write callbacks
            // this must be 0 before 'finish' can be emitted
            this.pendingcb = 0;

            // emit prefinish if the only thing we're waiting for is _write cbs
            // This is relevant for synchronous Transform streams
            this.prefinished = false;

            // True if the error was already emitted and should not be thrown again
            this.errorEmitted = false;
        }

        WritableState.prototype.getBuffer = function writableStateGetBuffer() {
            var current = this.bufferedRequest;
            var out = [];
            while (current) {
                out.push(current);
                current = current.next;
            }
            return out;
        };

        (function () {
            try {
                Object.defineProperty(WritableState.prototype, 'buffer', {
                    get: require('util-deprecate')(function () {
                        return this.getBuffer();
                    }, '_writableState.buffer is deprecated. Use ' +
                        '_writableState.getBuffer() instead.')
                });
            } catch (_) {
            }
        }());


        function Writable(options) {
            var Duplex = require('./_stream_duplex');

            // Writable ctor is applied to Duplexes, though they're not
            // instanceof Writable, they're instanceof Readable.
            if (!(this instanceof Writable) && !(this instanceof Duplex))
                return new Writable(options);

            this._writableState = new WritableState(options, this);

            // legacy.
            this.writable = true;

            if (options) {
                if (typeof options.write === 'function')
                    this._write = options.write;

                if (typeof options.writev === 'function')
                    this._writev = options.writev;
        }

            Stream.call(this);
        }

// Otherwise people can pipe Writable streams, which is just wrong.
        Writable.prototype.pipe = function () {
            this.emit('error', new Error('Cannot pipe. Not readable.'));
        };


        function writeAfterEnd(stream, cb) {
            var er = new Error('write after end');
            // TODO: defer error events consistently everywhere, not just the cb
            stream.emit('error', er);
            processNextTick(cb, er);
        }

// If we get something that is not a buffer, string, null, or undefined,
// and we're not in objectMode, then that's an error.
// Otherwise stream chunks are all considered to be of length=1, and the
// watermarks determine how many objects to keep in the buffer, rather than
// how many bytes or characters.
        function validChunk(stream, state, chunk, cb) {
            var valid = true;

            if (!(Buffer.isBuffer(chunk)) &&
                typeof chunk !== 'string' &&
                chunk !== null &&
                chunk !== undefined && !state.objectMode) {
                var er = new TypeError('Invalid non-string/buffer chunk');
                stream.emit('error', er);
                processNextTick(cb, er);
                valid = false;
        }
            return valid;
        }

        Writable.prototype.write = function (chunk, encoding, cb) {
            var state = this._writableState;
            var ret = false;

            if (typeof encoding === 'function') {
                cb = encoding;
                encoding = null;
            }

            if (Buffer.isBuffer(chunk))
                encoding = 'buffer';
            else if (!encoding)
                encoding = state.defaultEncoding;

            if (typeof cb !== 'function')
                cb = nop;

            if (state.ended)
                writeAfterEnd(this, cb);
            else if (validChunk(this, state, chunk, cb)) {
                state.pendingcb++;
                ret = writeOrBuffer(this, state, chunk, encoding, cb);
            }

            return ret;
        };

        Writable.prototype.cork = function () {
            var state = this._writableState;

            state.corked++;
        };

        Writable.prototype.uncork = function () {
            var state = this._writableState;

            if (state.corked) {
                state.corked--;

                if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing &&
                    state.bufferedRequest)
                    clearBuffer(this, state);
            }
        };

        Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
            // node::ParseEncoding() requires lower case.
            if (typeof encoding === 'string')
                encoding = encoding.toLowerCase();
            if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64',
                    'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw']
                    .indexOf((encoding + '').toLowerCase()) > -1))
                throw new TypeError('Unknown encoding: ' + encoding);
            this._writableState.defaultEncoding = encoding;
        };

        function decodeChunk(state, chunk, encoding) {
            if (!state.objectMode &&
                state.decodeStrings !== false &&
                typeof chunk === 'string') {
                chunk = new Buffer(chunk, encoding);
        }
            return chunk;
        }

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
        function writeOrBuffer(stream, state, chunk, encoding, cb) {
            chunk = decodeChunk(state, chunk, encoding);

            if (Buffer.isBuffer(chunk))
                encoding = 'buffer';
            var len = state.objectMode ? 1 : chunk.length;

            state.length += len;

            var ret = state.length < state.highWaterMark;
            // we must ensure that previous needDrain will not be reset to false.
            if (!ret)
                state.needDrain = true;

            if (state.writing || state.corked) {
                var last = state.lastBufferedRequest;
                state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
                if (last) {
                    last.next = state.lastBufferedRequest;
            } else {
                    state.bufferedRequest = state.lastBufferedRequest;
            }
            } else {
                doWrite(stream, state, false, len, chunk, encoding, cb);
        }

            return ret;
        }

        function doWrite(stream, state, writev, len, chunk, encoding, cb) {
            state.writelen = len;
            state.writecb = cb;
            state.writing = true;
            state.sync = true;
            if (writev)
                stream._writev(chunk, state.onwrite);
            else
                stream._write(chunk, encoding, state.onwrite);
            state.sync = false;
        }

        function onwriteError(stream, state, sync, er, cb) {
            --state.pendingcb;
            if (sync)
                processNextTick(cb, er);
            else
                cb(er);

            stream._writableState.errorEmitted = true;
            stream.emit('error', er);
        }

        function onwriteStateUpdate(state) {
            state.writing = false;
            state.writecb = null;
            state.length -= state.writelen;
            state.writelen = 0;
        }

        function onwrite(stream, er) {
            var state = stream._writableState;
            var sync = state.sync;
            var cb = state.writecb;

            onwriteStateUpdate(state);

            if (er)
                onwriteError(stream, state, sync, er, cb);
            else {
                // Check if we're actually ready to finish, but don't emit yet
                var finished = needFinish(state);

                if (!finished && !state.corked && !state.bufferProcessing &&
                    state.bufferedRequest) {
                    clearBuffer(stream, state);
            }

                if (sync) {
                    processNextTick(afterWrite, stream, state, finished, cb);
                } else {
                    afterWrite(stream, state, finished, cb);
                }
        }
        }

        function afterWrite(stream, state, finished, cb) {
            if (!finished)
                onwriteDrain(stream, state);
            state.pendingcb--;
            cb();
            finishMaybe(stream, state);
        }

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
        function onwriteDrain(stream, state) {
            if (state.length === 0 && state.needDrain) {
                state.needDrain = false;
                stream.emit('drain');
        }
        }


// if there's something in the buffer waiting, then process it
        function clearBuffer(stream, state) {
            state.bufferProcessing = true;
            var entry = state.bufferedRequest;

            if (stream._writev && entry && entry.next) {
                // Fast case, write everything using _writev()
                var buffer = [];
                var cbs = [];
                while (entry) {
                    cbs.push(entry.callback);
                    buffer.push(entry);
                    entry = entry.next;
                }

                // count the one we are adding, as well.
                // TODO(isaacs) clean this up
                state.pendingcb++;
                state.lastBufferedRequest = null;
                doWrite(stream, state, true, state.length, buffer, '', function (err) {
                    for (var i = 0; i < cbs.length; i++) {
                        state.pendingcb--;
                        cbs[i](err);
                }
                });

                // Clear buffer
            } else {
                // Slow case, write chunks one-by-one
                while (entry) {
                    var chunk = entry.chunk;
                    var encoding = entry.encoding;
                    var cb = entry.callback;
                    var len = state.objectMode ? 1 : chunk.length;

                    doWrite(stream, state, false, len, chunk, encoding, cb);
                    entry = entry.next;
                    // if we didn't call the onwrite immediately, then
                    // it means that we need to wait until it does.
                    // also, that means that the chunk and cb are currently
                    // being processed, so move the buffer counter past them.
                    if (state.writing) {
                        break;
                    }
                }

                if (entry === null)
                state.lastBufferedRequest = null;
            }
            state.bufferedRequest = entry;
            state.bufferProcessing = false;
        }

        Writable.prototype._write = function (chunk, encoding, cb) {
            cb(new Error('not implemented'));
        };

        Writable.prototype._writev = null;

        Writable.prototype.end = function (chunk, encoding, cb) {
            var state = this._writableState;

            if (typeof chunk === 'function') {
                cb = chunk;
                chunk = null;
                encoding = null;
            } else if (typeof encoding === 'function') {
                cb = encoding;
                encoding = null;
            }

            if (chunk !== null && chunk !== undefined)
                this.write(chunk, encoding);

            // .end() fully uncorks
            if (state.corked) {
                state.corked = 1;
                this.uncork();
            }

            // ignore unnecessary end() calls.
            if (!state.ending && !state.finished)
                endWritable(this, state, cb);
        };


        function needFinish(state) {
            return (state.ending &&
            state.length === 0 &&
            state.bufferedRequest === null && !state.finished && !state.writing);
        }

        function prefinish(stream, state) {
            if (!state.prefinished) {
                state.prefinished = true;
                stream.emit('prefinish');
            }
        }

        function finishMaybe(stream, state) {
            var need = needFinish(state);
            if (need) {
                if (state.pendingcb === 0) {
                    prefinish(stream, state);
                    state.finished = true;
                    stream.emit('finish');
            } else {
                    prefinish(stream, state);
            }
        }
            return need;
        }

        function endWritable(stream, state, cb) {
            state.ending = true;
            finishMaybe(stream, state);
            if (cb) {
                if (state.finished)
                    processNextTick(cb);
                else
                    stream.once('finish', cb);
        }
            state.ended = true;
        }

    }, {
        "./_stream_duplex": 98,
        "buffer": 84,
        "core-util-is": 103,
        "events": 88,
        "inherits": 89,
        "process-nextick-args": 104,
        "util-deprecate": 105
    }],
    103: [function (require, module, exports) {
        (function (Buffer) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
            function isArray(ar) {
                return Array.isArray(ar);
            }

            exports.isArray = isArray;

            function isBoolean(arg) {
                return typeof arg === 'boolean';
            }

            exports.isBoolean = isBoolean;

            function isNull(arg) {
                return arg === null;
            }

            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
                return arg == null;
            }

            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
                return typeof arg === 'number';
            }

            exports.isNumber = isNumber;

            function isString(arg) {
                return typeof arg === 'string';
            }

            exports.isString = isString;

            function isSymbol(arg) {
                return typeof arg === 'symbol';
            }

            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
                return arg === void 0;
            }

            exports.isUndefined = isUndefined;

            function isRegExp(re) {
                return isObject(re) && objectToString(re) === '[object RegExp]';
            }

            exports.isRegExp = isRegExp;

            function isObject(arg) {
                return typeof arg === 'object' && arg !== null;
            }

            exports.isObject = isObject;

            function isDate(d) {
                return isObject(d) && objectToString(d) === '[object Date]';
            }

            exports.isDate = isDate;

            function isError(e) {
                return isObject(e) &&
                    (objectToString(e) === '[object Error]' || e instanceof Error);
            }

            exports.isError = isError;

            function isFunction(arg) {
                return typeof arg === 'function';
            }

            exports.isFunction = isFunction;

            function isPrimitive(arg) {
                return arg === null ||
                    typeof arg === 'boolean' ||
                    typeof arg === 'number' ||
                    typeof arg === 'string' ||
                    typeof arg === 'symbol' ||  // ES6 symbol
                    typeof arg === 'undefined';
            }

            exports.isPrimitive = isPrimitive;

            function isBuffer(arg) {
                return Buffer.isBuffer(arg);
            }

            exports.isBuffer = isBuffer;

            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }
        }).call(this, {"isBuffer": require("/usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js")})
    }, {"/usr/local/lib/node_modules/browserify/node_modules/insert-module-globals/node_modules/is-buffer/index.js": 90}],
    104: [function (require, module, exports) {
        (function (process) {
            'use strict';
            module.exports = nextTick;

            function nextTick(fn) {
                var args = new Array(arguments.length - 1);
                var i = 0;
                while (i < args.length) {
                    args[i++] = arguments[i];
            }
                process.nextTick(function afterTick() {
                    fn.apply(null, args);
                });
            }

        }).call(this, require('_process'))
    }, {"_process": 92}],
    105: [function (require, module, exports) {
        (function (global) {

            /**
             * Module exports.
             */

            module.exports = deprecate;

            /**
             * Mark that a method should not be used.
             * Returns a modified function which warns once by default.
             *
             * If `localStorage.noDeprecation = true` is set, then it is a no-op.
             *
             * If `localStorage.throwDeprecation = true` is set, then deprecated functions
             * will throw an Error when invoked.
             *
             * If `localStorage.traceDeprecation = true` is set, then deprecated functions
             * will invoke `console.trace()` instead of `console.error()`.
             *
             * @param {Function} fn - the function to deprecate
             * @param {String} msg - the string to print to the console when `fn` is invoked
             * @returns {Function} a new "deprecated" version of `fn`
             * @api public
             */

            function deprecate(fn, msg) {
                if (config('noDeprecation')) {
                    return fn;
            }

                var warned = false;

                function deprecated() {
                    if (!warned) {
                        if (config('throwDeprecation')) {
                            throw new Error(msg);
                        } else if (config('traceDeprecation')) {
                            console.trace(msg);
                        } else {
                            console.warn(msg);
                    }
                        warned = true;
                }
                    return fn.apply(this, arguments);
            }

                return deprecated;
            }

            /**
             * Checks `localStorage` for boolean values for the given `name`.
             *
             * @param {String} name
             * @returns {Boolean}
             * @api private
             */

            function config(name) {
                if (!global.localStorage) return false;
                var val = global.localStorage[name];
                if (null == val) return false;
                return String(val).toLowerCase() === 'true';
            }

        }).call(this, typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {}],
    106: [function (require, module, exports) {
        module.exports = require("./lib/_stream_passthrough.js")

    }, {"./lib/_stream_passthrough.js": 99}],
    107: [function (require, module, exports) {
        var Stream = (function () {
            try {
                return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify
            } catch (_) {
            }
        }());
        exports = module.exports = require('./lib/_stream_readable.js');
        exports.Stream = Stream || exports;
        exports.Readable = exports;
        exports.Writable = require('./lib/_stream_writable.js');
        exports.Duplex = require('./lib/_stream_duplex.js');
        exports.Transform = require('./lib/_stream_transform.js');
        exports.PassThrough = require('./lib/_stream_passthrough.js');

    }, {
        "./lib/_stream_duplex.js": 98,
        "./lib/_stream_passthrough.js": 99,
        "./lib/_stream_readable.js": 100,
        "./lib/_stream_transform.js": 101,
        "./lib/_stream_writable.js": 102
    }],
    108: [function (require, module, exports) {
        module.exports = require("./lib/_stream_transform.js")

    }, {"./lib/_stream_transform.js": 101}],
    109: [function (require, module, exports) {
        module.exports = require("./lib/_stream_writable.js")

    }, {"./lib/_stream_writable.js": 102}],
    110: [function (require, module, exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        module.exports = Stream;

        var EE = require('events').EventEmitter;
        var inherits = require('inherits');

        inherits(Stream, EE);
        Stream.Readable = require('readable-stream/readable.js');
        Stream.Writable = require('readable-stream/writable.js');
        Stream.Duplex = require('readable-stream/duplex.js');
        Stream.Transform = require('readable-stream/transform.js');
        Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
        Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

        function Stream() {
            EE.call(this);
        }

        Stream.prototype.pipe = function (dest, options) {
            var source = this;

            function ondata(chunk) {
                if (dest.writable) {
                    if (false === dest.write(chunk) && source.pause) {
                        source.pause();
                }
            }
            }

            source.on('data', ondata);

            function ondrain() {
                if (source.readable && source.resume) {
                    source.resume();
            }
            }

            dest.on('drain', ondrain);

            // If the 'end' option is not supplied, dest.end() will be called when
            // source gets the 'end' or 'close' events.  Only dest.end() once.
            if (!dest._isStdio && (!options || options.end !== false)) {
                source.on('end', onend);
                source.on('close', onclose);
            }

            var didOnEnd = false;

            function onend() {
                if (didOnEnd) return;
                didOnEnd = true;

                dest.end();
            }


            function onclose() {
                if (didOnEnd) return;
                didOnEnd = true;

                if (typeof dest.destroy === 'function') dest.destroy();
            }

            // don't leave dangling pipes when there are errors.
            function onerror(er) {
                cleanup();
                if (EE.listenerCount(this, 'error') === 0) {
                    throw er; // Unhandled stream error in pipe.
            }
            }

            source.on('error', onerror);
            dest.on('error', onerror);

            // remove all the event listeners that were added.
            function cleanup() {
                source.removeListener('data', ondata);
                dest.removeListener('drain', ondrain);

                source.removeListener('end', onend);
                source.removeListener('close', onclose);

                source.removeListener('error', onerror);
                dest.removeListener('error', onerror);

                source.removeListener('end', cleanup);
                source.removeListener('close', cleanup);

                dest.removeListener('close', cleanup);
            }

            source.on('end', cleanup);
            source.on('close', cleanup);

            dest.on('close', cleanup);

            dest.emit('pipe', source);

            // Allow for unix-like usage: A.pipe(B).pipe(C)
            return dest;
        };

    }, {
        "events": 88,
        "inherits": 89,
        "readable-stream/duplex.js": 97,
        "readable-stream/passthrough.js": 106,
        "readable-stream/readable.js": 107,
        "readable-stream/transform.js": 108,
        "readable-stream/writable.js": 109
    }],
    111: [function (require, module, exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        var Buffer = require('buffer').Buffer;

        var isBufferEncoding = Buffer.isEncoding
            || function (encoding) {
                switch (encoding && encoding.toLowerCase()) {
                    case 'hex':
                    case 'utf8':
                    case 'utf-8':
                    case 'ascii':
                    case 'binary':
                    case 'base64':
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                    case 'raw':
                        return true;
                    default:
                        return false;
            }
            }


        function assertEncoding(encoding) {
            if (encoding && !isBufferEncoding(encoding)) {
                throw new Error('Unknown encoding: ' + encoding);
        }
        }

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters. CESU-8 is handled as part of the UTF-8 encoding.
//
// @TODO Handling all encodings inside a single object makes it very difficult
// to reason about this code, so it should be split up in the future.
// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
// points as used by CESU-8.
        var StringDecoder = exports.StringDecoder = function (encoding) {
            this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
            assertEncoding(encoding);
            switch (this.encoding) {
                case 'utf8':
                    // CESU-8 represents each of Surrogate Pair by 3-bytes
                    this.surrogateSize = 3;
                    break;
                case 'ucs2':
                case 'utf16le':
                    // UTF-16 represents each of Surrogate Pair by 2-bytes
                    this.surrogateSize = 2;
                    this.detectIncompleteChar = utf16DetectIncompleteChar;
                    break;
                case 'base64':
                    // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
                    this.surrogateSize = 3;
                    this.detectIncompleteChar = base64DetectIncompleteChar;
                    break;
                default:
                    this.write = passThroughWrite;
                    return;
            }

            // Enough space to store all bytes of a single character. UTF-8 needs 4
            // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
            this.charBuffer = new Buffer(6);
            // Number of bytes received for the current incomplete multi-byte character.
            this.charReceived = 0;
            // Number of bytes expected for the current incomplete multi-byte character.
            this.charLength = 0;
        };


// write decodes the given buffer and returns it as JS string that is
// guaranteed to not contain any partial multi-byte characters. Any partial
// character found at the end of the buffer is buffered up, and will be
// returned when calling write again with the remaining bytes.
//
// Note: Converting a Buffer containing an orphan surrogate to a String
// currently works, but converting a String to a Buffer (via `new Buffer`, or
// Buffer#write) will replace incomplete surrogates with the unicode
// replacement character. See https://codereview.chromium.org/121173009/ .
        StringDecoder.prototype.write = function (buffer) {
            var charStr = '';
            // if our last write ended with an incomplete multibyte character
            while (this.charLength) {
                // determine how many remaining bytes this buffer has to offer for this char
                var available = (buffer.length >= this.charLength - this.charReceived) ?
                this.charLength - this.charReceived :
                    buffer.length;

                // add the new bytes to the char buffer
                buffer.copy(this.charBuffer, this.charReceived, 0, available);
                this.charReceived += available;

                if (this.charReceived < this.charLength) {
                    // still not enough chars in this buffer? wait for more ...
                    return '';
            }

                // remove bytes belonging to the current character from the buffer
                buffer = buffer.slice(available, buffer.length);

                // get the character that was split
                charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

            // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
                var charCode = charStr.charCodeAt(charStr.length - 1);
            if (charCode >= 0xD800 && charCode <= 0xDBFF) {
                this.charLength += this.surrogateSize;
                charStr = '';
                continue;
            }
                this.charReceived = this.charLength = 0;

                // if there are no more bytes in this buffer, just emit our char
                if (buffer.length === 0) {
                    return charStr;
                }
                break;
            }

            // determine and set charLength / charReceived
            this.detectIncompleteChar(buffer);

            var end = buffer.length;
            if (this.charLength) {
                // buffer the incomplete character bytes we got
                buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
                end -= this.charReceived;
            }

            charStr += buffer.toString(this.encoding, 0, end);

            var end = charStr.length - 1;
            var charCode = charStr.charCodeAt(end);
            // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
            if (charCode >= 0xD800 && charCode <= 0xDBFF) {
                var size = this.surrogateSize;
                this.charLength += size;
                this.charReceived += size;
                this.charBuffer.copy(this.charBuffer, size, 0, size);
                buffer.copy(this.charBuffer, 0, 0, size);
                return charStr.substring(0, end);
            }

            // or just emit the charStr
            return charStr;
        };

// detectIncompleteChar determines if there is an incomplete UTF-8 character at
// the end of the given buffer. If so, it sets this.charLength to the byte
// length that character, and sets this.charReceived to the number of bytes
// that are available for this character.
        StringDecoder.prototype.detectIncompleteChar = function (buffer) {
            // determine how many bytes we have to check at the end of this buffer
            var i = (buffer.length >= 3) ? 3 : buffer.length;

            // Figure out if one of the last i bytes of our buffer announces an
            // incomplete char.
            for (; i > 0; i--) {
                var c = buffer[buffer.length - i];

                // See http://en.wikipedia.org/wiki/UTF-8#Description

                // 110XXXXX
                if (i == 1 && c >> 5 == 0x06) {
                    this.charLength = 2;
                    break;
                }

                // 1110XXXX
                if (i <= 2 && c >> 4 == 0x0E) {
                    this.charLength = 3;
                    break;
            }

                // 11110XXX
                if (i <= 3 && c >> 3 == 0x1E) {
                    this.charLength = 4;
                    break;
            }
            }
            this.charReceived = i;
        };

        StringDecoder.prototype.end = function (buffer) {
            var res = '';
            if (buffer && buffer.length)
                res = this.write(buffer);

            if (this.charReceived) {
                var cr = this.charReceived;
                var buf = this.charBuffer;
                var enc = this.encoding;
                res += buf.slice(0, cr).toString(enc);
        }

            return res;
        };

        function passThroughWrite(buffer) {
            return buffer.toString(this.encoding);
        }

        function utf16DetectIncompleteChar(buffer) {
            this.charReceived = buffer.length % 2;
            this.charLength = this.charReceived ? 2 : 0;
        }

        function base64DetectIncompleteChar(buffer) {
            this.charReceived = buffer.length % 3;
            this.charLength = this.charReceived ? 3 : 0;
        }

    }, {"buffer": 84}],
    112: [function (require, module, exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        var punycode = require('punycode');

        exports.parse = urlParse;
        exports.resolve = urlResolve;
        exports.resolveObject = urlResolveObject;
        exports.format = urlFormat;

        exports.Url = Url;

        function Url() {
            this.protocol = null;
            this.slashes = null;
            this.auth = null;
            this.host = null;
            this.port = null;
            this.hostname = null;
            this.hash = null;
            this.search = null;
            this.query = null;
            this.pathname = null;
            this.path = null;
            this.href = null;
        }

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
        var protocolPattern = /^([a-z0-9.+-]+:)/i,
            portPattern = /:[0-9]*$/,

        // RFC 2396: characters reserved for delimiting URLs.
        // We actually just auto-escape these.
            delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

        // RFC 2396: characters not allowed for various reasons.
            unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

        // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
            autoEscape = ['\''].concat(unwise),
        // Characters that are never ever allowed in a hostname.
        // Note that any invalid chars are also handled, but these
        // are the ones that are *expected* to be seen, so we fast-path
        // them.
            nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
            hostEndingChars = ['/', '?', '#'],
            hostnameMaxLen = 255,
            hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,
            hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,
        // protocols that can allow "unsafe" and "unwise" chars.
            unsafeProtocol = {
                'javascript': true,
                'javascript:': true
            },
        // protocols that never have a hostname.
            hostlessProtocol = {
                'javascript': true,
                'javascript:': true
            },
        // protocols that always contain a // bit.
            slashedProtocol = {
                'http': true,
                'https': true,
                'ftp': true,
                'gopher': true,
                'file': true,
                'http:': true,
                'https:': true,
                'ftp:': true,
                'gopher:': true,
                'file:': true
            },
            querystring = require('querystring');

        function urlParse(url, parseQueryString, slashesDenoteHost) {
            if (url && isObject(url) && url instanceof Url) return url;

            var u = new Url;
            u.parse(url, parseQueryString, slashesDenoteHost);
            return u;
        }

        Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {
            if (!isString(url)) {
                throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
        }

            var rest = url;

            // trim before proceeding.
            // This is to support parse stuff like "  http://foo.com  \n"
            rest = rest.trim();

            var proto = protocolPattern.exec(rest);
            if (proto) {
                proto = proto[0];
                var lowerProto = proto.toLowerCase();
                this.protocol = lowerProto;
                rest = rest.substr(proto.length);
            }

            // figure out if it's got a host
            // user@server is *always* interpreted as a hostname, and url
            // resolution will treat //foo/bar as host=foo,path=bar because that's
            // how the browser resolves relative URLs.
            if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                var slashes = rest.substr(0, 2) === '//';
                if (slashes && !(proto && hostlessProtocol[proto])) {
                    rest = rest.substr(2);
                    this.slashes = true;
            }
            }

            if (!hostlessProtocol[proto] &&
                (slashes || (proto && !slashedProtocol[proto]))) {

                // there's a hostname.
                // the first instance of /, ?, ;, or # ends the host.
                //
                // If there is an @ in the hostname, then non-host chars *are* allowed
                // to the left of the last @ sign, unless some host-ending character
                // comes *before* the @-sign.
                // URLs are obnoxious.
                //
                // ex:
                // http://a@b@c/ => user:a@b host:c
                // http://a@b?@c => user:a host:c path:/?@c

                // v0.12 TODO(isaacs): This is not quite how Chrome does things.
                // Review our test case against browsers more comprehensively.

                // find the first instance of any hostEndingChars
                var hostEnd = -1;
                for (var i = 0; i < hostEndingChars.length; i++) {
                    var hec = rest.indexOf(hostEndingChars[i]);
                    if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                        hostEnd = hec;
                }

                // at this point, either we have an explicit point where the
                // auth portion cannot go past, or the last @ char is the decider.
                var auth, atSign;
                if (hostEnd === -1) {
                    // atSign can be anywhere.
                    atSign = rest.lastIndexOf('@');
                } else {
                    // atSign must be in auth portion.
                    // http://a@b/c@d => host:b auth:a path:/c@d
                    atSign = rest.lastIndexOf('@', hostEnd);
                }

                // Now we have a portion which is definitely the auth.
                // Pull that off.
                if (atSign !== -1) {
                    auth = rest.slice(0, atSign);
                    rest = rest.slice(atSign + 1);
                    this.auth = decodeURIComponent(auth);
                }

                // the host is the remaining to the left of the first non-host char
                hostEnd = -1;
                for (var i = 0; i < nonHostChars.length; i++) {
                    var hec = rest.indexOf(nonHostChars[i]);
                    if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                        hostEnd = hec;
                }
                // if we still have not hit it, then the entire thing is a host.
                if (hostEnd === -1)
                    hostEnd = rest.length;

                this.host = rest.slice(0, hostEnd);
                rest = rest.slice(hostEnd);

                // pull out port.
                this.parseHost();

                // we've indicated that there is a hostname,
                // so even if it's empty, it has to be present.
                this.hostname = this.hostname || '';

                // if hostname begins with [ and ends with ]
                // assume that it's an IPv6 address.
                var ipv6Hostname = this.hostname[0] === '[' &&
                    this.hostname[this.hostname.length - 1] === ']';

                // validate a little.
                if (!ipv6Hostname) {
                    var hostparts = this.hostname.split(/\./);
                    for (var i = 0, l = hostparts.length; i < l; i++) {
                        var part = hostparts[i];
                        if (!part) continue;
                        if (!part.match(hostnamePartPattern)) {
                            var newpart = '';
                            for (var j = 0, k = part.length; j < k; j++) {
                                if (part.charCodeAt(j) > 127) {
                                    // we replace non-ASCII char with a temporary placeholder
                                    // we need this to make sure size of hostname is not
                                    // broken by replacing non-ASCII by nothing
                                    newpart += 'x';
                                } else {
                                    newpart += part[j];
                            }
                            }
                            // we test again with ASCII char only
                            if (!newpart.match(hostnamePartPattern)) {
                                var validParts = hostparts.slice(0, i);
                                var notHost = hostparts.slice(i + 1);
                                var bit = part.match(hostnamePartStart);
                                if (bit) {
                                    validParts.push(bit[1]);
                                    notHost.unshift(bit[2]);
                            }
                                if (notHost.length) {
                                    rest = '/' + notHost.join('.') + rest;
                                }
                                this.hostname = validParts.join('.');
                                break;
                        }
                    }
                }
                }

                if (this.hostname.length > hostnameMaxLen) {
                    this.hostname = '';
                } else {
                    // hostnames are always lower case.
                    this.hostname = this.hostname.toLowerCase();
                }

                if (!ipv6Hostname) {
                    // IDNA Support: Returns a puny coded representation of "domain".
                    // It only converts the part of the domain name that
                    // has non ASCII characters. I.e. it dosent matter if
                    // you call it with a domain that already is in ASCII.
                    var domainArray = this.hostname.split('.');
                    var newOut = [];
                    for (var i = 0; i < domainArray.length; ++i) {
                        var s = domainArray[i];
                        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?
                        'xn--' + punycode.encode(s) : s);
                }
                    this.hostname = newOut.join('.');
                }

                var p = this.port ? ':' + this.port : '';
                var h = this.hostname || '';
                this.host = h + p;
                this.href += this.host;

                // strip [ and ] from the hostname
                // the host field still retains them, though
                if (ipv6Hostname) {
                    this.hostname = this.hostname.substr(1, this.hostname.length - 2);
                    if (rest[0] !== '/') {
                        rest = '/' + rest;
                }
            }
            }

            // now rest is set to the post-host stuff.
            // chop off any delim chars.
            if (!unsafeProtocol[lowerProto]) {

                // First, make 100% sure that any "autoEscape" chars get
                // escaped, even if encodeURIComponent doesn't think they
                // need to be.
                for (var i = 0, l = autoEscape.length; i < l; i++) {
                    var ae = autoEscape[i];
                    var esc = encodeURIComponent(ae);
                    if (esc === ae) {
                        esc = escape(ae);
                }
                    rest = rest.split(ae).join(esc);
            }
            }


            // chop off from the tail first.
            var hash = rest.indexOf('#');
            if (hash !== -1) {
                // got a fragment string.
                this.hash = rest.substr(hash);
                rest = rest.slice(0, hash);
            }
            var qm = rest.indexOf('?');
            if (qm !== -1) {
                this.search = rest.substr(qm);
                this.query = rest.substr(qm + 1);
                if (parseQueryString) {
                    this.query = querystring.parse(this.query);
            }
                rest = rest.slice(0, qm);
            } else if (parseQueryString) {
                // no query string, but parseQueryString still requested
                this.search = '';
                this.query = {};
            }
            if (rest) this.pathname = rest;
            if (slashedProtocol[lowerProto] &&
                this.hostname && !this.pathname) {
                this.pathname = '/';
            }

            //to support http.request
            if (this.pathname || this.search) {
                var p = this.pathname || '';
                var s = this.search || '';
                this.path = p + s;
            }

            // finally, reconstruct the href based on what has been validated.
            this.href = this.format();
            return this;
        };

// format a parsed object into a url string
        function urlFormat(obj) {
            // ensure it's an object, and not a string url.
            // If it's an obj, this is a no-op.
            // this way, you can call url_format() on strings
            // to clean up potentially wonky urls.
            if (isString(obj)) obj = urlParse(obj);
            if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
            return obj.format();
        }

        Url.prototype.format = function () {
            var auth = this.auth || '';
            if (auth) {
                auth = encodeURIComponent(auth);
                auth = auth.replace(/%3A/i, ':');
                auth += '@';
        }

            var protocol = this.protocol || '',
                pathname = this.pathname || '',
                hash = this.hash || '',
                host = false,
                query = '';

            if (this.host) {
                host = auth + this.host;
            } else if (this.hostname) {
                host = auth + (this.hostname.indexOf(':') === -1 ?
                        this.hostname :
                    '[' + this.hostname + ']');
                if (this.port) {
                    host += ':' + this.port;
            }
            }

            if (this.query &&
                isObject(this.query) &&
                Object.keys(this.query).length) {
                query = querystring.stringify(this.query);
            }

            var search = this.search || (query && ('?' + query)) || '';

            if (protocol && protocol.substr(-1) !== ':') protocol += ':';

            // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
            // unless they had them to begin with.
            if (this.slashes ||
                (!protocol || slashedProtocol[protocol]) && host !== false) {
                host = '//' + (host || '');
                if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
            } else if (!host) {
                host = '';
            }

            if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
            if (search && search.charAt(0) !== '?') search = '?' + search;

            pathname = pathname.replace(/[?#]/g, function (match) {
                return encodeURIComponent(match);
            });
            search = search.replace('#', '%23');

            return protocol + host + pathname + search + hash;
        };

        function urlResolve(source, relative) {
            return urlParse(source, false, true).resolve(relative);
        }

        Url.prototype.resolve = function (relative) {
            return this.resolveObject(urlParse(relative, false, true)).format();
        };

        function urlResolveObject(source, relative) {
            if (!source) return relative;
            return urlParse(source, false, true).resolveObject(relative);
        }

        Url.prototype.resolveObject = function (relative) {
            if (isString(relative)) {
                var rel = new Url();
                rel.parse(relative, false, true);
                relative = rel;
            }

            var result = new Url();
            Object.keys(this).forEach(function (k) {
                result[k] = this[k];
            }, this);

            // hash is always overridden, no matter what.
            // even href="" will remove it.
            result.hash = relative.hash;

            // if the relative url is empty, then there's nothing left to do here.
            if (relative.href === '') {
                result.href = result.format();
                return result;
            }

            // hrefs like //foo/bar always cut to the protocol.
            if (relative.slashes && !relative.protocol) {
                // take everything except the protocol from relative
                Object.keys(relative).forEach(function (k) {
                    if (k !== 'protocol')
                        result[k] = relative[k];
            });

                //urlParse appends trailing / to urls like http://www.example.com
                if (slashedProtocol[result.protocol] &&
                    result.hostname && !result.pathname) {
                    result.path = result.pathname = '/';
            }

                result.href = result.format();
                return result;
            }

            if (relative.protocol && relative.protocol !== result.protocol) {
                // if it's a known url protocol, then changing
                // the protocol does weird things
                // first, if it's not file:, then we MUST have a host,
                // and if there was a path
                // to begin with, then we MUST have a path.
                // if it is file:, then the host is dropped,
                // because that's known to be hostless.
                // anything else is assumed to be absolute.
                if (!slashedProtocol[relative.protocol]) {
                    Object.keys(relative).forEach(function (k) {
                        result[k] = relative[k];
                });
                result.href = result.format();
                return result;
            }

                result.protocol = relative.protocol;
                if (!relative.host && !hostlessProtocol[relative.protocol]) {
                    var relPath = (relative.pathname || '').split('/');
                    while (relPath.length && !(relative.host = relPath.shift()));
                    if (!relative.host) relative.host = '';
                    if (!relative.hostname) relative.hostname = '';
                    if (relPath[0] !== '') relPath.unshift('');
                    if (relPath.length < 2) relPath.unshift('');
                    result.pathname = relPath.join('/');
                } else {
                    result.pathname = relative.pathname;
            }
                result.search = relative.search;
                result.query = relative.query;
                result.host = relative.host || '';
                result.auth = relative.auth;
                result.hostname = relative.hostname || relative.host;
                result.port = relative.port;
                // to support http.request
                if (result.pathname || result.search) {
                    var p = result.pathname || '';
                    var s = result.search || '';
                    result.path = p + s;
            }
                result.slashes = result.slashes || relative.slashes;
                result.href = result.format();
                return result;
            }

            var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
                isRelAbs = (
                    relative.host ||
                    relative.pathname && relative.pathname.charAt(0) === '/'
                ),
                mustEndAbs = (isRelAbs || isSourceAbs ||
                (result.host && relative.pathname)),
                removeAllDots = mustEndAbs,
                srcPath = result.pathname && result.pathname.split('/') || [],
                relPath = relative.pathname && relative.pathname.split('/') || [],
                psychotic = result.protocol && !slashedProtocol[result.protocol];

            // if the url is a non-slashed url, then relative
            // links like ../.. should be able
            // to crawl up to the hostname, as well.  This is strange.
            // result.protocol has already been set by now.
            // Later on, put the first path part into the host field.
            if (psychotic) {
                result.hostname = '';
                result.port = null;
                if (result.host) {
                    if (srcPath[0] === '') srcPath[0] = result.host;
                    else srcPath.unshift(result.host);
            }
                result.host = '';
                if (relative.protocol) {
                    relative.hostname = null;
                    relative.port = null;
                    if (relative.host) {
                        if (relPath[0] === '') relPath[0] = relative.host;
                        else relPath.unshift(relative.host);
                }
                    relative.host = null;
            }
                mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
            }

            if (isRelAbs) {
                // it's absolute.
                result.host = (relative.host || relative.host === '') ?
                    relative.host : result.host;
                result.hostname = (relative.hostname || relative.hostname === '') ?
                    relative.hostname : result.hostname;
                result.search = relative.search;
                result.query = relative.query;
                srcPath = relPath;
                // fall through to the dot-handling below.
            } else if (relPath.length) {
                // it's relative
                // throw away the existing file, and take the new path instead.
                if (!srcPath) srcPath = [];
                srcPath.pop();
                srcPath = srcPath.concat(relPath);
                result.search = relative.search;
                result.query = relative.query;
            } else if (!isNullOrUndefined(relative.search)) {
                // just pull out the search.
                // like href='?foo'.
                // Put this after the other two cases because it simplifies the booleans
            if (psychotic) {
                result.hostname = result.host = srcPath.shift();
                //occationaly the auth can get stuck only in host
                //this especialy happens in cases like
                //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
                var authInHost = result.host && result.host.indexOf('@') > 0 ?
                    result.host.split('@') : false;
                if (authInHost) {
                    result.auth = authInHost.shift();
                    result.host = result.hostname = authInHost.shift();
                }
            }
                result.search = relative.search;
                result.query = relative.query;
                //to support http.request
            if (!isNull(result.pathname) || !isNull(result.search)) {
                result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
            }
            result.href = result.format();
            return result;
            }

            if (!srcPath.length) {
                // no path at all.  easy.
                // we've already handled the other stuff above.
                result.pathname = null;
                //to support http.request
                if (result.search) {
                    result.path = '/' + result.search;
                } else {
                    result.path = null;
            }
                result.href = result.format();
                return result;
            }

            // if a url ENDs in . or .., then it must get a trailing slash.
            // however, if it ends in anything else non-slashy,
            // then it must NOT get a trailing slash.
            var last = srcPath.slice(-1)[0];
            var hasTrailingSlash = (
            (result.host || relative.host) && (last === '.' || last === '..') ||
            last === '');

            // strip single dots, resolve double dots to parent dir
            // if the path tries to go above the root, `up` ends up > 0
            var up = 0;
            for (var i = srcPath.length; i >= 0; i--) {
                last = srcPath[i];
                if (last == '.') {
                    srcPath.splice(i, 1);
                } else if (last === '..') {
                    srcPath.splice(i, 1);
                    up++;
                } else if (up) {
                    srcPath.splice(i, 1);
                    up--;
                }
        }

            // if the path is allowed to go above the root, restore leading ..s
            if (!mustEndAbs && !removeAllDots) {
                for (; up--; up) {
                    srcPath.unshift('..');
                }
        }

            if (mustEndAbs && srcPath[0] !== '' &&
                (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
                srcPath.unshift('');
        }

            if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
                srcPath.push('');
        }

            var isAbsolute = srcPath[0] === '' ||
                (srcPath[0] && srcPath[0].charAt(0) === '/');

            // put the host back
            if (psychotic) {
                result.hostname = result.host = isAbsolute ? '' :
                    srcPath.length ? srcPath.shift() : '';
                //occationaly the auth can get stuck only in host
                //this especialy happens in cases like
                //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
                var authInHost = result.host && result.host.indexOf('@') > 0 ?
                    result.host.split('@') : false;
                if (authInHost) {
                    result.auth = authInHost.shift();
                    result.host = result.hostname = authInHost.shift();
                }
        }

            mustEndAbs = mustEndAbs || (result.host && srcPath.length);

            if (mustEndAbs && !isAbsolute) {
                srcPath.unshift('');
            }

            if (!srcPath.length) {
                result.pathname = null;
                result.path = null;
            } else {
                result.pathname = srcPath.join('/');
            }

            //to support request.http
            if (!isNull(result.pathname) || !isNull(result.search)) {
                result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
            }
            result.auth = relative.auth || result.auth;
            result.slashes = result.slashes || relative.slashes;
            result.href = result.format();
            return result;
        };

        Url.prototype.parseHost = function () {
            var host = this.host;
            var port = portPattern.exec(host);
            if (port) {
                port = port[0];
                if (port !== ':') {
                    this.port = port.substr(1);
                }
                host = host.substr(0, host.length - port.length);
            }
            if (host) this.hostname = host;
        };

        function isString(arg) {
            return typeof arg === "string";
        }

        function isObject(arg) {
            return typeof arg === 'object' && arg !== null;
        }

        function isNull(arg) {
            return arg === null;
        }

        function isNullOrUndefined(arg) {
            return arg == null;
        }

    }, {"punycode": 93, "querystring": 96}],
    113: [function (require, module, exports) {
        module.exports = function isBuffer(arg) {
            return arg && typeof arg === 'object'
                && typeof arg.copy === 'function'
                && typeof arg.fill === 'function'
                && typeof arg.readUInt8 === 'function';
        }
    }, {}],
    114: [function (require, module, exports) {
        (function (process, global) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

            var formatRegExp = /%[sdj%]/g;
            exports.format = function (f) {
                if (!isString(f)) {
                    var objects = [];
                    for (var i = 0; i < arguments.length; i++) {
                        objects.push(inspect(arguments[i]));
                }
                    return objects.join(' ');
                }

                var i = 1;
                var args = arguments;
                var len = args.length;
                var str = String(f).replace(formatRegExp, function (x) {
                    if (x === '%%') return '%';
                    if (i >= len) return x;
                    switch (x) {
                        case '%s':
                            return String(args[i++]);
                        case '%d':
                            return Number(args[i++]);
                        case '%j':
                            try {
                                return JSON.stringify(args[i++]);
                            } catch (_) {
                                return '[Circular]';
                            }
                        default:
                            return x;
                }
                });
                for (var x = args[i]; i < len; x = args[++i]) {
                    if (isNull(x) || !isObject(x)) {
                        str += ' ' + x;
                    } else {
                        str += ' ' + inspect(x);
                    }
                }
                return str;
            };


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
            exports.deprecate = function (fn, msg) {
                // Allow for deprecating things in the process of starting up.
                if (isUndefined(global.process)) {
                    return function () {
                        return exports.deprecate(fn, msg).apply(this, arguments);
                    };
                }

                if (process.noDeprecation === true) {
                    return fn;
                }

                var warned = false;

                function deprecated() {
                    if (!warned) {
                        if (process.throwDeprecation) {
                            throw new Error(msg);
                        } else if (process.traceDeprecation) {
                            console.trace(msg);
                        } else {
                            console.error(msg);
                        }
                        warned = true;
                    }
                    return fn.apply(this, arguments);
                }

                return deprecated;
            };


            var debugs = {};
            var debugEnviron;
            exports.debuglog = function (set) {
                if (isUndefined(debugEnviron))
                    debugEnviron = process.env.NODE_DEBUG || '';
                set = set.toUpperCase();
                if (!debugs[set]) {
                    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
                        var pid = process.pid;
                        debugs[set] = function () {
                            var msg = exports.format.apply(exports, arguments);
                            console.error('%s %d: %s', set, pid, msg);
                    };
                    } else {
                        debugs[set] = function () {
                        };
                }
                }
                return debugs[set];
            };


            /**
             * Echos the value of a value. Trys to print the value out
             * in the best way possible given the different types.
             *
             * @param {Object} obj The object to print out.
             * @param {Object} opts Optional options object that alters the output.
             */
            /* legacy: obj, showHidden, depth, colors*/
            function inspect(obj, opts) {
                // default options
                var ctx = {
                    seen: [],
                    stylize: stylizeNoColor
            };
                // legacy...
                if (arguments.length >= 3) ctx.depth = arguments[2];
                if (arguments.length >= 4) ctx.colors = arguments[3];
                if (isBoolean(opts)) {
                // legacy...
                    ctx.showHidden = opts;
                } else if (opts) {
                    // got an "options" object
                    exports._extend(ctx, opts);
            }
                // set default options
                if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
                if (isUndefined(ctx.depth)) ctx.depth = 2;
                if (isUndefined(ctx.colors)) ctx.colors = false;
                if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
                if (ctx.colors) ctx.stylize = stylizeWithColor;
                return formatValue(ctx, obj, ctx.depth);
            }

            exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
            inspect.colors = {
                'bold': [1, 22],
                'italic': [3, 23],
                'underline': [4, 24],
                'inverse': [7, 27],
                'white': [37, 39],
                'grey': [90, 39],
                'black': [30, 39],
                'blue': [34, 39],
                'cyan': [36, 39],
                'green': [32, 39],
                'magenta': [35, 39],
                'red': [31, 39],
                'yellow': [33, 39]
            };

// Don't use 'blue' not visible on cmd.exe
            inspect.styles = {
                'special': 'cyan',
                'number': 'yellow',
                'boolean': 'yellow',
                'undefined': 'grey',
                'null': 'bold',
                'string': 'green',
                'date': 'magenta',
                // "name": intentionally not styling
                'regexp': 'red'
            };


            function stylizeWithColor(str, styleType) {
                var style = inspect.styles[styleType];

                if (style) {
                    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
                        '\u001b[' + inspect.colors[style][1] + 'm';
                } else {
                return str;
            }
            }


            function stylizeNoColor(str, styleType) {
                return str;
            }


            function arrayToHash(array) {
                var hash = {};

                array.forEach(function (val, idx) {
                    hash[val] = true;
                });

                return hash;
            }


            function formatValue(ctx, value, recurseTimes) {
                // Provide a hook for user-specified inspect functions.
                // Check that value is an object with an inspect function on it
                if (ctx.customInspect &&
                    value &&
                    isFunction(value.inspect) &&
                        // Filter out the util module, it's inspect function is special
                    value.inspect !== exports.inspect &&
                        // Also filter out any prototype objects using the circular check.
                    !(value.constructor && value.constructor.prototype === value)) {
                    var ret = value.inspect(recurseTimes, ctx);
                    if (!isString(ret)) {
                        ret = formatValue(ctx, ret, recurseTimes);
                }
                    return ret;
                }

                // Primitive types cannot have properties
                var primitive = formatPrimitive(ctx, value);
                if (primitive) {
                    return primitive;
                }

                // Look up the keys of the object.
                var keys = Object.keys(value);
                var visibleKeys = arrayToHash(keys);

                if (ctx.showHidden) {
                    keys = Object.getOwnPropertyNames(value);
                }

                // IE doesn't make error fields non-enumerable
                // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
                if (isError(value)
                    && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
                    return formatError(value);
                }

                // Some type of object without properties can be shortcutted.
                if (keys.length === 0) {
                if (isFunction(value)) {
                    var name = value.name ? ': ' + value.name : '';
                    return ctx.stylize('[Function' + name + ']', 'special');
                }
                if (isRegExp(value)) {
                    return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
                }
                if (isDate(value)) {
                    return ctx.stylize(Date.prototype.toString.call(value), 'date');
                }
                if (isError(value)) {
                    return formatError(value);
                }
                }

                var base = '', array = false, braces = ['{', '}'];

                // Make Array say that they are Array
                if (isArray(value)) {
                    array = true;
                    braces = ['[', ']'];
                }

                // Make functions say that they are functions
                if (isFunction(value)) {
                    var n = value.name ? ': ' + value.name : '';
                    base = ' [Function' + n + ']';
                }

                // Make RegExps say that they are RegExps
                if (isRegExp(value)) {
                    base = ' ' + RegExp.prototype.toString.call(value);
                }

                // Make dates with properties first say the date
                if (isDate(value)) {
                    base = ' ' + Date.prototype.toUTCString.call(value);
                }

                // Make error with message first say the error
                if (isError(value)) {
                    base = ' ' + formatError(value);
                }

                if (keys.length === 0 && (!array || value.length == 0)) {
                    return braces[0] + base + braces[1];
                }

                if (recurseTimes < 0) {
                    if (isRegExp(value)) {
                        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
                } else {
                        return ctx.stylize('[Object]', 'special');
                }
            }

                ctx.seen.push(value);

                var output;
                if (array) {
                    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
                } else {
                    output = keys.map(function (key) {
                        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
                });
            }

                ctx.seen.pop();

                return reduceToSingleString(output, base, braces);
            }


            function formatPrimitive(ctx, value) {
                if (isUndefined(value))
                    return ctx.stylize('undefined', 'undefined');
                if (isString(value)) {
                    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                            .replace(/'/g, "\\'")
                            .replace(/\\"/g, '"') + '\'';
                    return ctx.stylize(simple, 'string');
                }
                if (isNumber(value))
                    return ctx.stylize('' + value, 'number');
                if (isBoolean(value))
                    return ctx.stylize('' + value, 'boolean');
                // For some reason typeof null is "object", so special case here.
                if (isNull(value))
                    return ctx.stylize('null', 'null');
            }


            function formatError(value) {
                return '[' + Error.prototype.toString.call(value) + ']';
            }


            function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
                var output = [];
                for (var i = 0, l = value.length; i < l; ++i) {
                    if (hasOwnProperty(value, String(i))) {
                        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
                            String(i), true));
                    } else {
                        output.push('');
                    }
                }
                keys.forEach(function (key) {
                    if (!key.match(/^\d+$/)) {
                        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
                            key, true));
                    }
                });
                return output;
            }


            function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
                var name, str, desc;
                desc = Object.getOwnPropertyDescriptor(value, key) || {value: value[key]};
                if (desc.get) {
                    if (desc.set) {
                        str = ctx.stylize('[Getter/Setter]', 'special');
                    } else {
                        str = ctx.stylize('[Getter]', 'special');
                    }
                } else {
                    if (desc.set) {
                        str = ctx.stylize('[Setter]', 'special');
                    }
                }
                if (!hasOwnProperty(visibleKeys, key)) {
                    name = '[' + key + ']';
                }
                if (!str) {
                    if (ctx.seen.indexOf(desc.value) < 0) {
                        if (isNull(recurseTimes)) {
                            str = formatValue(ctx, desc.value, null);
                    } else {
                            str = formatValue(ctx, desc.value, recurseTimes - 1);
                    }
                        if (str.indexOf('\n') > -1) {
                            if (array) {
                                str = str.split('\n').map(function (line) {
                                    return '  ' + line;
                                }).join('\n').substr(2);
                        } else {
                                str = '\n' + str.split('\n').map(function (line) {
                                        return '   ' + line;
                                    }).join('\n');
                        }
                    }
                    } else {
                        str = ctx.stylize('[Circular]', 'special');
                }
                }
                if (isUndefined(name)) {
                    if (array && key.match(/^\d+$/)) {
                        return str;
                }
                    name = JSON.stringify('' + key);
                    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
                        name = name.substr(1, name.length - 2);
                        name = ctx.stylize(name, 'name');
                    } else {
                        name = name.replace(/'/g, "\\'")
                            .replace(/\\"/g, '"')
                            .replace(/(^"|"$)/g, "'");
                        name = ctx.stylize(name, 'string');
                    }
            }

                return name + ': ' + str;
            }


            function reduceToSingleString(output, base, braces) {
                var numLinesEst = 0;
                var length = output.reduce(function (prev, cur) {
                    numLinesEst++;
                    if (cur.indexOf('\n') >= 0) numLinesEst++;
                    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
                }, 0);

                if (length > 60) {
                    return braces[0] +
                        (base === '' ? '' : base + '\n ') +
                        ' ' +
                        output.join(',\n  ') +
                        ' ' +
                        braces[1];
            }

                return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
            }


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
            function isArray(ar) {
                return Array.isArray(ar);
            }

            exports.isArray = isArray;

            function isBoolean(arg) {
                return typeof arg === 'boolean';
            }

            exports.isBoolean = isBoolean;

            function isNull(arg) {
                return arg === null;
            }

            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
                return arg == null;
            }

            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
                return typeof arg === 'number';
            }

            exports.isNumber = isNumber;

            function isString(arg) {
                return typeof arg === 'string';
            }

            exports.isString = isString;

            function isSymbol(arg) {
                return typeof arg === 'symbol';
            }

            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
                return arg === void 0;
            }

            exports.isUndefined = isUndefined;

            function isRegExp(re) {
                return isObject(re) && objectToString(re) === '[object RegExp]';
            }

            exports.isRegExp = isRegExp;

            function isObject(arg) {
                return typeof arg === 'object' && arg !== null;
            }

            exports.isObject = isObject;

            function isDate(d) {
                return isObject(d) && objectToString(d) === '[object Date]';
            }

            exports.isDate = isDate;

            function isError(e) {
                return isObject(e) &&
                    (objectToString(e) === '[object Error]' || e instanceof Error);
            }

            exports.isError = isError;

            function isFunction(arg) {
                return typeof arg === 'function';
            }

            exports.isFunction = isFunction;

            function isPrimitive(arg) {
                return arg === null ||
                    typeof arg === 'boolean' ||
                    typeof arg === 'number' ||
                    typeof arg === 'string' ||
                    typeof arg === 'symbol' ||  // ES6 symbol
                    typeof arg === 'undefined';
            }

            exports.isPrimitive = isPrimitive;

            exports.isBuffer = require('./support/isBuffer');

            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }


            function pad(n) {
                return n < 10 ? '0' + n.toString(10) : n.toString(10);
            }


            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
                'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
            function timestamp() {
                var d = new Date();
                var time = [pad(d.getHours()),
                    pad(d.getMinutes()),
                    pad(d.getSeconds())].join(':');
                return [d.getDate(), months[d.getMonth()], time].join(' ');
            }


// log is just a thin wrapper to console.log that prepends a timestamp
            exports.log = function () {
                console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
            };


            /**
             * Inherit the prototype methods from one constructor into another.
             *
             * The Function.prototype.inherits from lang.js rewritten as a standalone
             * function (not on Function.prototype). NOTE: If this file is to be loaded
             * during bootstrapping this function needs to be rewritten using some native
             * functions as prototype setup using normal JavaScript does not work as
             * expected during bootstrapping (see mirror.js in r114903).
             *
             * @param {function} ctor Constructor function which needs to inherit the
             *     prototype.
             * @param {function} superCtor Constructor function to inherit prototype from.
             */
            exports.inherits = require('inherits');

            exports._extend = function (origin, add) {
                // Don't do anything if add isn't an object
                if (!add || !isObject(add)) return origin;

                var keys = Object.keys(add);
                var i = keys.length;
                while (i--) {
                    origin[keys[i]] = add[keys[i]];
            }
                return origin;
            };

            function hasOwnProperty(obj, prop) {
                return Object.prototype.hasOwnProperty.call(obj, prop);
            }

        }).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {"./support/isBuffer": 113, "_process": 92, "inherits": 89}]
}, {}, [82]);

;
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Chance = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],2:[function(require,module,exports){
(function (Buffer){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var customInspectSymbol =
  (typeof Symbol === 'function' && typeof Symbol.for === 'function')
    ? Symbol.for('nodejs.util.inspect.custom')
    : null

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    var proto = { foo: function () { return 42 } }
    Object.setPrototypeOf(proto, Uint8Array.prototype)
    Object.setPrototypeOf(arr, proto)
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  Object.setPrototypeOf(buf, Buffer.prototype)
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw new TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)
Object.setPrototypeOf(Buffer, Uint8Array)

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(buf, Buffer.prototype)

  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}
if (customInspectSymbol) {
  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += hexSliceLookupTable[buf[i]]
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  Object.setPrototypeOf(newBuf, Buffer.prototype)

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  } else if (typeof val === 'boolean') {
    val = Number(val)
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var hexSliceLookupTable = (function () {
  var alphabet = '0123456789abcdef'
  var table = new Array(256)
  for (var i = 0; i < 16; ++i) {
    var i16 = i * 16
    for (var j = 0; j < 16; ++j) {
      table[i16 + j] = alphabet[i] + alphabet[j]
    }
  }
  return table
})()

}).call(this,require("buffer").Buffer)
},{"base64-js":1,"buffer":2,"ieee754":4}],3:[function(require,module,exports){
(function (Buffer){
//  Chance.js 1.0.18
//  http://chancejs.com
//  (c) 2013 Victor Quinn
//  Chance may be freely distributed or modified under the MIT license.

(function () {

    // Constants
    var MAX_INT = 9007199254740992;
    var MIN_INT = -MAX_INT;
    var NUMBERS = '0123456789';
    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';
    var CHARS_UPPER = CHARS_LOWER.toUpperCase();
    var HEX_POOL  = NUMBERS + "abcdef";

    // Errors
    function UnsupportedError(message) {
        this.name = 'UnsupportedError';
        this.message = message || 'This feature is not supported on this platform';
    }

    UnsupportedError.prototype = new Error();
    UnsupportedError.prototype.constructor = UnsupportedError;

    // Cached array helpers
    var slice = Array.prototype.slice;

    // Constructor
    function Chance (seed) {
        if (!(this instanceof Chance)) {
            if (!seed) { seed = null; } // handle other non-truthy seeds, as described in issue #322
            return seed === null ? new Chance() : new Chance(seed);
        }

        // if user has provided a function, use that as the generator
        if (typeof seed === 'function') {
            this.random = seed;
            return this;
        }

        if (arguments.length) {
            // set a starting value of zero so we can add to it
            this.seed = 0;
        }

        // otherwise, leave this.seed blank so that MT will receive a blank

        for (var i = 0; i < arguments.length; i++) {
            var seedling = 0;
            if (Object.prototype.toString.call(arguments[i]) === '[object String]') {
                for (var j = 0; j < arguments[i].length; j++) {
                    // create a numeric hash for each argument, add to seedling
                    var hash = 0;
                    for (var k = 0; k < arguments[i].length; k++) {
                        hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;
                    }
                    seedling += hash;
                }
            } else {
                seedling = arguments[i];
            }
            this.seed += (arguments.length - i) * seedling;
        }

        // If no generator function was provided, use our MT
        this.mt = this.mersenne_twister(this.seed);
        this.bimd5 = this.blueimp_md5();
        this.random = function () {
            return this.mt.random(this.seed);
        };

        return this;
    }

    Chance.prototype.VERSION = "1.0.18";

    // Random helper functions
    function initOptions(options, defaults) {
        options = options || {};

        if (defaults) {
            for (var i in defaults) {
                if (typeof options[i] === 'undefined') {
                    options[i] = defaults[i];
                }
            }
        }

        return options;
    }

    function range(size) {
        return Array.apply(null, Array(size)).map(function (_, i) {return i;});
    }

    function testRange(test, errorMessage) {
        if (test) {
            throw new RangeError(errorMessage);
        }
    }

    /**
     * Encode the input string with Base64.
     */
    var base64 = function() {
        throw new Error('No Base64 encoder available.');
    };

    // Select proper Base64 encoder.
    (function determineBase64Encoder() {
        if (typeof btoa === 'function') {
            base64 = btoa;
        } else if (typeof Buffer === 'function') {
            base64 = function(input) {
                return new Buffer(input).toString('base64');
            };
        }
    })();

    // -- Basics --

    /**
     *  Return a random bool, either true or false
     *
     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of
     *    receiving a true or false value back.
     *  @throws {RangeError} if the likelihood is out of bounds
     *  @returns {Bool} either true or false
     */
    Chance.prototype.bool = function (options) {
        // likelihood of success (true)
        options = initOptions(options, {likelihood : 50});

        // Note, we could get some minor perf optimizations by checking range
        // prior to initializing defaults, but that makes code a bit messier
        // and the check more complicated as we have to check existence of
        // the object then existence of the key before checking constraints.
        // Since the options initialization should be minor computationally,
        // decision made for code cleanliness intentionally. This is mentioned
        // here as it's the first occurrence, will not be mentioned again.
        testRange(
            options.likelihood < 0 || options.likelihood > 100,
            "Chance: Likelihood accepts values from 0 to 100."
        );

        return this.random() * 100 < options.likelihood;
    };

    Chance.prototype.falsy = function (options) {
        // return a random falsy value
        options = initOptions(options, {pool: [false, null, 0, NaN, '']})
        var pool = options.pool,
            index = this.integer({min: 0, max: pool.length}),
            value = pool[index];

        return value;
    }

    Chance.prototype.animal = function (options){
      //returns a random animal
      options = initOptions(options);

      if(typeof options.type !== 'undefined'){
        //if user does not put in a valid animal type, user will get an error
        testRange(
           !this.get("animals")[options.type.toLowerCase()],
           "Please pick from desert, ocean, grassland, forest, zoo, pets, farm."
         );
         //if user does put in valid animal type, will return a random animal of that type
          return this.pick(this.get("animals")[options.type.toLowerCase()]);
      }
       //if user does not put in any animal type, will return a random animal regardless
      var animalTypeArray = ["desert","forest","ocean","zoo","farm","pet","grassland"];
      return this.pick(this.get("animals")[this.pick(animalTypeArray)]);
    };

    /**
     *  Return a random character.
     *
     *  @param {Object} [options={}] can specify a character pool or alpha,
     *    numeric, symbols and casing (lower or upper)
     *  @returns {String} a single random character
     */
    Chance.prototype.character = function (options) {
        options = initOptions(options);

        var symbols = "!@#$%^&*()[]",
            letters, pool;

        if (options.casing === 'lower') {
            letters = CHARS_LOWER;
        } else if (options.casing === 'upper') {
            letters = CHARS_UPPER;
        } else {
            letters = CHARS_LOWER + CHARS_UPPER;
        }

        if (options.pool) {
            pool = options.pool;
        } else {
            pool = '';
            if (options.alpha) {
                pool += letters;
            }
            if (options.numeric) {
                pool += NUMBERS;
            }
            if (options.symbols) {
                pool += symbols;
            }
            if (!pool) {
                pool = letters + NUMBERS + symbols;
            }
        }

        return pool.charAt(this.natural({max: (pool.length - 1)}));
    };

    // Note, wanted to use "float" or "double" but those are both JS reserved words.

    // Note, fixed means N OR LESS digits after the decimal. This because
    // It could be 14.9000 but in JavaScript, when this is cast as a number,
    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are
    // needed
    /**
     *  Return a random floating point number
     *
     *  @param {Object} [options={}] can specify a fixed precision, min, max
     *  @returns {Number} a single floating point number
     *  @throws {RangeError} Can only specify fixed or precision, not both. Also
     *    min cannot be greater than max
     */
    Chance.prototype.floating = function (options) {
        options = initOptions(options, {fixed : 4});
        testRange(
            options.fixed && options.precision,
            "Chance: Cannot specify both fixed and precision."
        );

        var num;
        var fixed = Math.pow(10, options.fixed);

        var max = MAX_INT / fixed;
        var min = -max;

        testRange(
            options.min && options.fixed && options.min < min,
            "Chance: Min specified is out of range with fixed. Min should be, at least, " + min
        );
        testRange(
            options.max && options.fixed && options.max > max,
            "Chance: Max specified is out of range with fixed. Max should be, at most, " + max
        );

        options = initOptions(options, { min : min, max : max });

        // Todo - Make this work!
        // options.precision = (typeof options.precision !== "undefined") ? options.precision : false;

        num = this.integer({min: options.min * fixed, max: options.max * fixed});
        var num_fixed = (num / fixed).toFixed(options.fixed);

        return parseFloat(num_fixed);
    };

    /**
     *  Return a random integer
     *
     *  NOTE the max and min are INCLUDED in the range. So:
     *  chance.integer({min: 1, max: 3});
     *  would return either 1, 2, or 3.
     *
     *  @param {Object} [options={}] can specify a min and/or max
     *  @returns {Number} a single random integer number
     *  @throws {RangeError} min cannot be greater than max
     */
    Chance.prototype.integer = function (options) {
        // 9007199254740992 (2^53) is the max integer number in JavaScript
        // See: http://vq.io/132sa2j
        options = initOptions(options, {min: MIN_INT, max: MAX_INT});
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);
    };

    /**
     *  Return a random natural
     *
     *  NOTE the max and min are INCLUDED in the range. So:
     *  chance.natural({min: 1, max: 3});
     *  would return either 1, 2, or 3.
     *
     *  @param {Object} [options={}] can specify a min and/or max or a numerals count.
     *  @returns {Number} a single random integer number
     *  @throws {RangeError} min cannot be greater than max
     */
    Chance.prototype.natural = function (options) {
        options = initOptions(options, {min: 0, max: MAX_INT});
        if (typeof options.numerals === 'number'){
          testRange(options.numerals < 1, "Chance: Numerals cannot be less than one.");
          options.min = Math.pow(10, options.numerals - 1);
          options.max = Math.pow(10, options.numerals) - 1;
        }
        testRange(options.min < 0, "Chance: Min cannot be less than zero.");

        if (options.exclude) {
            testRange(!Array.isArray(options.exclude), "Chance: exclude must be an array.")

            for (const exclusion of options.exclude) {
                testRange(!Number.isInteger(exclusion), "Chance: exclude must be numbers.")
            }

            let random = options.min + this.natural({max: options.max - options.min - options.exclude.length})
            for (const exclusion of options.exclude.sort()) {
                if (random < exclusion) {
                    break
                }
                random++
            }
            return random
        }
        return this.integer(options);
    };

    /**
     *  Return a random prime number
     *
     *  NOTE the max and min are INCLUDED in the range.
     *
     *  @param {Object} [options={}] can specify a min and/or max
     *  @returns {Number} a single random prime number
     *  @throws {RangeError} min cannot be greater than max nor negative
     */
    Chance.prototype.prime = function (options) {
        options = initOptions(options, {min: 0, max: 10000});
        testRange(options.min < 0, "Chance: Min cannot be less than zero.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        var lastPrime = data.primes[data.primes.length - 1];
        if (options.max > lastPrime) {
            for (var i = lastPrime + 2; i <= options.max; ++i) {
                if (this.is_prime(i)) {
                    data.primes.push(i);
                }
            }
        }
        var targetPrimes = data.primes.filter(function (prime) {
            return prime >= options.min && prime <= options.max;
        });
        return this.pick(targetPrimes);
    };

    /**
     * Determine whether a given number is prime or not.
     */
    Chance.prototype.is_prime = function (n) {
        if (n % 1 || n < 2) {
            return false;
        }
        if (n % 2 === 0) {
            return n === 2;
        }
        if (n % 3 === 0) {
            return n === 3;
        }
        var m = Math.sqrt(n);
        for (var i = 5; i <= m; i += 6) {
            if (n % i === 0 || n % (i + 2) === 0) {
                return false;
            }
        }
        return true;
    };

    /**
     *  Return a random hex number as string
     *
     *  NOTE the max and min are INCLUDED in the range. So:
     *  chance.hex({min: '9', max: 'B'});
     *  would return either '9', 'A' or 'B'.
     *
     *  @param {Object} [options={}] can specify a min and/or max and/or casing
     *  @returns {String} a single random string hex number
     *  @throws {RangeError} min cannot be greater than max
     */
    Chance.prototype.hex = function (options) {
        options = initOptions(options, {min: 0, max: MAX_INT, casing: 'lower'});
        testRange(options.min < 0, "Chance: Min cannot be less than zero.");
		var integer = this.natural({min: options.min, max: options.max});
		if (options.casing === 'upper') {
			return integer.toString(16).toUpperCase();
		}
		return integer.toString(16);
    };

    Chance.prototype.letter = function(options) {
        options = initOptions(options, {casing: 'lower'});
        var pool = "abcdefghijklmnopqrstuvwxyz";
        var letter = this.character({pool: pool});
        if (options.casing === 'upper') {
            letter = letter.toUpperCase();
        }
        return letter;
    }

    /**
     *  Return a random string
     *
     *  @param {Object} [options={}] can specify a length
     *  @returns {String} a string of random length
     *  @throws {RangeError} length cannot be less than zero
     */
    Chance.prototype.string = function (options) {
        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });
        testRange(options.length < 0, "Chance: Length cannot be less than zero.");
        var length = options.length,
            text = this.n(this.character, length, options);

        return text.join("");
    };

    function CopyToken(c) {
        this.c = c
    }

    CopyToken.prototype = {
        substitute: function () {
            return this.c
        }
    }

    function EscapeToken(c) {
        this.c = c
    }

    EscapeToken.prototype = {
        substitute: function () {
            if (!/[{}\\]/.test(this.c)) {
                throw new Error('Invalid escape sequence: "\\' + this.c + '".')
            }
            return this.c
        }
    }

    function ReplaceToken(c) {
        this.c = c
    }

    ReplaceToken.prototype = {
        replacers: {
            '#': function (chance) { return chance.character({ pool: NUMBERS }) },
            'A': function (chance) { return chance.character({ pool: CHARS_UPPER }) },
            'a': function (chance) { return chance.character({ pool: CHARS_LOWER }) },
        },

        substitute: function (chance) {
            var replacer = this.replacers[this.c]
            if (!replacer) {
                throw new Error('Invalid replacement character: "' + this.c + '".')
            }
            return replacer(chance)
        }
    }

    function parseTemplate(template) {
        var tokens = []
        var mode = 'identity'
        for (var i = 0; i<template.length; i++) {
            var c = template[i]
            switch (mode) {
                case 'escape':
                    tokens.push(new EscapeToken(c))
                    mode = 'identity'
                    break
                case 'identity':
                    if (c === '{') {
                        mode = 'replace'
                    } else if (c === '\\') {
                        mode = 'escape'
                    } else {
                        tokens.push(new CopyToken(c))
                    }
                    break
                case 'replace':
                    if (c === '}') {
                        mode = 'identity'
                    } else {
                        tokens.push(new ReplaceToken(c))
                    }
                    break
            }
        }
        return tokens
    }

    /**
     *  Return a random string matching the given template.
     *
     *  The template consists of any number of "character replacement" and
     *  "character literal" sequences. A "character replacement" sequence
     *  starts with a left brace, has any number of special replacement
     *  characters, and ends with a right brace. A character literal can be any
     *  character except a brace or a backslash. A literal brace or backslash
     *  character can be included in the output by escaping with a backslash.
     *
     *  The following replacement characters can be used in a replacement
     *  sequence:
     *
     *      "#": a random digit
     *      "a": a random lower case letter
     *      "A": a random upper case letter
     *
     *  Example: chance.template('{AA###}-{##}')
     *
     *  @param {String} template string.
     *  @returns {String} a random string matching the template.
     */
    Chance.prototype.template = function (template) {
        if (!template) {
            throw new Error('Template string is required')
        }
        var self = this
        return parseTemplate(template)
            .map(function (token) { return token.substitute(self) })
            .join('');
    };


    /**
     *  Return a random buffer
     *
     *  @param {Object} [options={}] can specify a length
     *  @returns {Buffer} a buffer of random length
     *  @throws {RangeError} length cannot be less than zero
     */
    Chance.prototype.buffer = function (options) {
        if (typeof Buffer === 'undefined') {
            throw new UnsupportedError('Sorry, the buffer() function is not supported on your platform');
        }
        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });
        testRange(options.length < 0, "Chance: Length cannot be less than zero.");
        var length = options.length;
        var content = this.n(this.character, length, options);

        return Buffer.from(content);
    };

    // -- End Basics --

    // -- Helpers --

    Chance.prototype.capitalize = function (word) {
        return word.charAt(0).toUpperCase() + word.substr(1);
    };

    Chance.prototype.mixin = function (obj) {
        for (var func_name in obj) {
            Chance.prototype[func_name] = obj[func_name];
        }
        return this;
    };

    /**
     *  Given a function that generates something random and a number of items to generate,
     *    return an array of items where none repeat.
     *
     *  @param {Function} fn the function that generates something random
     *  @param {Number} num number of terms to generate
     *  @param {Object} options any options to pass on to the generator function
     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique
     *
     *  There can be more parameters after these. All additional parameters are provided to the given function
     */
    Chance.prototype.unique = function(fn, num, options) {
        testRange(
            typeof fn !== "function",
            "Chance: The first argument must be a function."
        );

        var comparator = function(arr, val) { return arr.indexOf(val) !== -1; };

        if (options) {
            comparator = options.comparator || comparator;
        }

        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);

        while (arr.length < num) {
            var clonedParams = JSON.parse(JSON.stringify(params));
            result = fn.apply(this, clonedParams);
            if (!comparator(arr, result)) {
                arr.push(result);
                // reset count when unique found
                count = 0;
            }

            if (++count > MAX_DUPLICATES) {
                throw new RangeError("Chance: num is likely too large for sample set");
            }
        }
        return arr;
    };

    /**
     *  Gives an array of n random terms
     *
     *  @param {Function} fn the function that generates something random
     *  @param {Number} n number of terms to generate
     *  @returns {Array} an array of length `n` with items generated by `fn`
     *
     *  There can be more parameters after these. All additional parameters are provided to the given function
     */
    Chance.prototype.n = function(fn, n) {
        testRange(
            typeof fn !== "function",
            "Chance: The first argument must be a function."
        );

        if (typeof n === 'undefined') {
            n = 1;
        }
        var i = n, arr = [], params = slice.call(arguments, 2);

        // Providing a negative count should result in a noop.
        i = Math.max( 0, i );

        for (null; i--; null) {
            arr.push(fn.apply(this, params));
        }

        return arr;
    };

    // H/T to SO for this one: http://vq.io/OtUrZ5
    Chance.prototype.pad = function (number, width, pad) {
        // Default pad to 0 if none provided
        pad = pad || '0';
        // Convert number to a string
        number = number + '';
        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;
    };

    // DEPRECATED on 2015-10-01
    Chance.prototype.pick = function (arr, count) {
        if (arr.length === 0) {
            throw new RangeError("Chance: Cannot pick() from an empty array");
        }
        if (!count || count === 1) {
            return arr[this.natural({max: arr.length - 1})];
        } else {
            return this.shuffle(arr).slice(0, count);
        }
    };

    // Given an array, returns a single random element
    Chance.prototype.pickone = function (arr) {
        if (arr.length === 0) {
          throw new RangeError("Chance: Cannot pickone() from an empty array");
        }
        return arr[this.natural({max: arr.length - 1})];
    };

    // Given an array, returns a random set with 'count' elements
    Chance.prototype.pickset = function (arr, count) {
        if (count === 0) {
            return [];
        }
        if (arr.length === 0) {
            throw new RangeError("Chance: Cannot pickset() from an empty array");
        }
        if (count < 0) {
            throw new RangeError("Chance: Count must be a positive number");
        }
        if (!count || count === 1) {
            return [ this.pickone(arr) ];
        } else {
            var array = arr.slice(0);
            var end = array.length;

            return this.n(function () {
                var index = this.natural({max: --end});
                var value = array[index];
                array[index] = array[end];
                return value;
            }, Math.min(end, count));
        }
    };

    Chance.prototype.shuffle = function (arr) {
        var new_array = [],
            j = 0,
            length = Number(arr.length),
            source_indexes = range(length),
            last_source_index = length - 1,
            selected_source_index;

        for (var i = 0; i < length; i++) {
            // Pick a random index from the array
            selected_source_index = this.natural({max: last_source_index});
            j = source_indexes[selected_source_index];

            // Add it to the new array
            new_array[i] = arr[j];

            // Mark the source index as used
            source_indexes[selected_source_index] = source_indexes[last_source_index];
            last_source_index -= 1;
        }

        return new_array;
    };

    // Returns a single item from an array with relative weighting of odds
    Chance.prototype.weighted = function (arr, weights, trim) {
        if (arr.length !== weights.length) {
            throw new RangeError("Chance: Length of array and weights must match");
        }

        // scan weights array and sum valid entries
        var sum = 0;
        var val;
        for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {
            val = weights[weightIndex];
            if (isNaN(val)) {
                throw new RangeError("Chance: All weights must be numbers");
            }

            if (val > 0) {
                sum += val;
            }
        }

        if (sum === 0) {
            throw new RangeError("Chance: No valid entries in array weights");
        }

        // select a value within range
        var selected = this.random() * sum;

        // find array entry corresponding to selected value
        var total = 0;
        var lastGoodIdx = -1;
        var chosenIdx;
        for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {
            val = weights[weightIndex];
            total += val;
            if (val > 0) {
                if (selected <= total) {
                    chosenIdx = weightIndex;
                    break;
                }
                lastGoodIdx = weightIndex;
            }

            // handle any possible rounding error comparison to ensure something is picked
            if (weightIndex === (weights.length - 1)) {
                chosenIdx = lastGoodIdx;
            }
        }

        var chosen = arr[chosenIdx];
        trim = (typeof trim === 'undefined') ? false : trim;
        if (trim) {
            arr.splice(chosenIdx, 1);
            weights.splice(chosenIdx, 1);
        }

        return chosen;
    };

    // -- End Helpers --

    // -- Text --

    Chance.prototype.paragraph = function (options) {
        options = initOptions(options);

        var sentences = options.sentences || this.natural({min: 3, max: 7}),
            sentence_array = this.n(this.sentence, sentences);

        return sentence_array.join(' ');
    };

    // Could get smarter about this than generating random words and
    // chaining them together. Such as: http://vq.io/1a5ceOh
    Chance.prototype.sentence = function (options) {
        options = initOptions(options);

        var words = options.words || this.natural({min: 12, max: 18}),
            punctuation = options.punctuation,
            text, word_array = this.n(this.word, words);

        text = word_array.join(' ');

        // Capitalize first letter of sentence
        text = this.capitalize(text);

        // Make sure punctuation has a usable value
        if (punctuation !== false && !/^[.?;!:]$/.test(punctuation)) {
            punctuation = '.';
        }

        // Add punctuation mark
        if (punctuation) {
            text += punctuation;
        }

        return text;
    };

    Chance.prototype.syllable = function (options) {
        options = initOptions(options);

        var length = options.length || this.natural({min: 2, max: 3}),
            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones
            vowels = 'aeiou', // vowels
            all = consonants + vowels, // all
            text = '',
            chr;

        // I'm sure there's a more elegant way to do this, but this works
        // decently well.
        for (var i = 0; i < length; i++) {
            if (i === 0) {
                // First character can be anything
                chr = this.character({pool: all});
            } else if (consonants.indexOf(chr) === -1) {
                // Last character was a vowel, now we want a consonant
                chr = this.character({pool: consonants});
            } else {
                // Last character was a consonant, now we want a vowel
                chr = this.character({pool: vowels});
            }

            text += chr;
        }

        if (options.capitalize) {
            text = this.capitalize(text);
        }

        return text;
    };

    Chance.prototype.word = function (options) {
        options = initOptions(options);

        testRange(
            options.syllables && options.length,
            "Chance: Cannot specify both syllables AND length."
        );

        var syllables = options.syllables || this.natural({min: 1, max: 3}),
            text = '';

        if (options.length) {
            // Either bound word by length
            do {
                text += this.syllable();
            } while (text.length < options.length);
            text = text.substring(0, options.length);
        } else {
            // Or by number of syllables
            for (var i = 0; i < syllables; i++) {
                text += this.syllable();
            }
        }

        if (options.capitalize) {
            text = this.capitalize(text);
        }

        return text;
    };

    // -- End Text --

    // -- Person --

    Chance.prototype.age = function (options) {
        options = initOptions(options);
        var ageRange;

        switch (options.type) {
            case 'child':
                ageRange = {min: 0, max: 12};
                break;
            case 'teen':
                ageRange = {min: 13, max: 19};
                break;
            case 'adult':
                ageRange = {min: 18, max: 65};
                break;
            case 'senior':
                ageRange = {min: 65, max: 100};
                break;
            case 'all':
                ageRange = {min: 0, max: 100};
                break;
            default:
                ageRange = {min: 18, max: 65};
                break;
        }

        return this.natural(ageRange);
    };

    Chance.prototype.birthday = function (options) {
        var age = this.age(options);
        var currentYear = new Date().getFullYear();

        if (options && options.type) {
            var min = new Date();
            var max = new Date();
            min.setFullYear(currentYear - age - 1);
            max.setFullYear(currentYear - age);

            options = initOptions(options, {
                min: min,
                max: max
            });
        } else {
            options = initOptions(options, {
                year: currentYear - age
            });
        }

        return this.date(options);
    };

    // CPF; ID to identify taxpayers in Brazil
    Chance.prototype.cpf = function (options) {
        options = initOptions(options, {
            formatted: true
        });

        var n = this.n(this.natural, 9, { max: 9 });
        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;
        d1 = 11 - (d1 % 11);
        if (d1>=10) {
            d1 = 0;
        }
        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;
        d2 = 11 - (d2 % 11);
        if (d2>=10) {
            d2 = 0;
        }
        var cpf = ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;
        return options.formatted ? cpf : cpf.replace(/\D/g,'');
    };

    // CNPJ: ID to identify companies in Brazil
    Chance.prototype.cnpj = function (options) {
        options = initOptions(options, {
            formatted: true
        });

        var n = this.n(this.natural, 12, { max: 12 });
        var d1 = n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;
        d1 = 11 - (d1 % 11);
        if (d1<2) {
            d1 = 0;
        }
        var d2 = d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;
        d2 = 11 - (d2 % 11);
        if (d2<2) {
            d2 = 0;
        }
        var cnpj = ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/'+n[8]+n[9]+n[10]+n[11]+'-'+d1+d2;
        return options.formatted ? cnpj : cnpj.replace(/\D/g,'');
    };

    Chance.prototype.first = function (options) {
        options = initOptions(options, {gender: this.gender(), nationality: 'en'});
        return this.pick(this.get("firstNames")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);
    };

    Chance.prototype.profession = function (options) {
        options = initOptions(options);
        if(options.rank){
            return this.pick(['Apprentice ', 'Junior ', 'Senior ', 'Lead ']) + this.pick(this.get("profession"));
        } else{
            return this.pick(this.get("profession"));
        }
    };

    Chance.prototype.company = function (){
        return this.pick(this.get("company"));
    };

    Chance.prototype.gender = function (options) {
        options = initOptions(options, {extraGenders: []});
        return this.pick(['Male', 'Female'].concat(options.extraGenders));
    };

    Chance.prototype.last = function (options) {
      options = initOptions(options, {nationality: '*'});
      if (options.nationality === "*") {
        var allLastNames = []
        var lastNames = this.get("lastNames")
        Object.keys(lastNames).forEach(function(key){
          allLastNames = allLastNames.concat(lastNames[key])
        })
        return this.pick(allLastNames)
      }
      else {
        return this.pick(this.get("lastNames")[options.nationality.toLowerCase()]);
      }

    };

    Chance.prototype.israelId=function(){
        var x=this.string({pool: '0123456789',length:8});
        var y=0;
        for (var i=0;i<x.length;i++){
            var thisDigit=  x[i] *  (i/2===parseInt(i/2) ? 1 : 2);
            thisDigit=this.pad(thisDigit,2).toString();
            thisDigit=parseInt(thisDigit[0]) + parseInt(thisDigit[1]);
            y=y+thisDigit;
        }
        x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);
        return x;
    };

    Chance.prototype.mrz = function (options) {
        var checkDigit = function (input) {
            var alpha = "<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(''),
                multipliers = [ 7, 3, 1 ],
                runningTotal = 0;

            if (typeof input !== 'string') {
                input = input.toString();
            }

            input.split('').forEach(function(character, idx) {
                var pos = alpha.indexOf(character);

                if(pos !== -1) {
                    character = pos === 0 ? 0 : pos + 9;
                } else {
                    character = parseInt(character, 10);
                }
                character *= multipliers[idx % multipliers.length];
                runningTotal += character;
            });
            return runningTotal % 10;
        };
        var generate = function (opts) {
            var pad = function (length) {
                return new Array(length + 1).join('<');
            };
            var number = [ 'P<',
                           opts.issuer,
                           opts.last.toUpperCase(),
                           '<<',
                           opts.first.toUpperCase(),
                           pad(39 - (opts.last.length + opts.first.length + 2)),
                           opts.passportNumber,
                           checkDigit(opts.passportNumber),
                           opts.nationality,
                           opts.dob,
                           checkDigit(opts.dob),
                           opts.gender,
                           opts.expiry,
                           checkDigit(opts.expiry),
                           pad(14),
                           checkDigit(pad(14)) ].join('');

            return number +
                (checkDigit(number.substr(44, 10) +
                            number.substr(57, 7) +
                            number.substr(65, 7)));
        };

        var that = this;

        options = initOptions(options, {
            first: this.first(),
            last: this.last(),
            passportNumber: this.integer({min: 100000000, max: 999999999}),
            dob: (function () {
                var date = that.birthday({type: 'adult'});
                return [date.getFullYear().toString().substr(2),
                        that.pad(date.getMonth() + 1, 2),
                        that.pad(date.getDate(), 2)].join('');
            }()),
            expiry: (function () {
                var date = new Date();
                return [(date.getFullYear() + 5).toString().substr(2),
                        that.pad(date.getMonth() + 1, 2),
                        that.pad(date.getDate(), 2)].join('');
            }()),
            gender: this.gender() === 'Female' ? 'F': 'M',
            issuer: 'GBR',
            nationality: 'GBR'
        });
        return generate (options);
    };

    Chance.prototype.name = function (options) {
        options = initOptions(options);

        var first = this.first(options),
            last = this.last(options),
            name;

        if (options.middle) {
            name = first + ' ' + this.first(options) + ' ' + last;
        } else if (options.middle_initial) {
            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;
        } else {
            name = first + ' ' + last;
        }

        if (options.prefix) {
            name = this.prefix(options) + ' ' + name;
        }

        if (options.suffix) {
            name = name + ' ' + this.suffix(options);
        }

        return name;
    };

    // Return the list of available name prefixes based on supplied gender.
    // @todo introduce internationalization
    Chance.prototype.name_prefixes = function (gender) {
        gender = gender || "all";
        gender = gender.toLowerCase();

        var prefixes = [
            { name: 'Doctor', abbreviation: 'Dr.' }
        ];

        if (gender === "male" || gender === "all") {
            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });
        }

        if (gender === "female" || gender === "all") {
            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });
            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });
        }

        return prefixes;
    };

    // Alias for name_prefix
    Chance.prototype.prefix = function (options) {
        return this.name_prefix(options);
    };

    Chance.prototype.name_prefix = function (options) {
        options = initOptions(options, { gender: "all" });
        return options.full ?
            this.pick(this.name_prefixes(options.gender)).name :
            this.pick(this.name_prefixes(options.gender)).abbreviation;
    };
    //Hungarian ID number
    Chance.prototype.HIDN= function(){
     //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)
      var idn_pool="0123456789";
      var idn_chrs="ABCDEFGHIJKLMNOPQRSTUVWXYXZ";
      var idn="";
        idn+=this.string({pool:idn_pool,length:6});
        idn+=this.string({pool:idn_chrs,length:2});
        return idn;
    };


    Chance.prototype.ssn = function (options) {
        options = initOptions(options, {ssnFour: false, dashes: true});
        var ssn_pool = "1234567890",
            ssn,
            dash = options.dashes ? '-' : '';

        if(!options.ssnFour) {
            ssn = this.string({pool: ssn_pool, length: 3}) + dash +
            this.string({pool: ssn_pool, length: 2}) + dash +
            this.string({pool: ssn_pool, length: 4});
        } else {
            ssn = this.string({pool: ssn_pool, length: 4});
        }
        return ssn;
    };

    // Aadhar is similar to ssn, used in India to uniquely identify a person
    Chance.prototype.aadhar = function (options) {
        options = initOptions(options, {onlyLastFour: false, separatedByWhiteSpace: true});
        var aadhar_pool = "1234567890",
            aadhar,
            whiteSpace = options.separatedByWhiteSpace ? ' ' : '';

        if(!options.onlyLastFour) {
            aadhar = this.string({pool: aadhar_pool, length: 4}) + whiteSpace +
            this.string({pool: aadhar_pool, length: 4}) + whiteSpace +
            this.string({pool: aadhar_pool, length: 4});
        } else {
            aadhar = this.string({pool: aadhar_pool, length: 4});
        }
        return aadhar;
    };

    // Return the list of available name suffixes
    // @todo introduce internationalization
    Chance.prototype.name_suffixes = function () {
        var suffixes = [
            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },
            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },
            { name: 'Esquire', abbreviation: 'Esq.' },
            { name: 'Junior', abbreviation: 'Jr.' },
            { name: 'Juris Doctor', abbreviation: 'J.D.' },
            { name: 'Master of Arts', abbreviation: 'M.A.' },
            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },
            { name: 'Master of Science', abbreviation: 'M.S.' },
            { name: 'Medical Doctor', abbreviation: 'M.D.' },
            { name: 'Senior', abbreviation: 'Sr.' },
            { name: 'The Third', abbreviation: 'III' },
            { name: 'The Fourth', abbreviation: 'IV' },
            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },
            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }
        ];
        return suffixes;
    };

    // Alias for name_suffix
    Chance.prototype.suffix = function (options) {
        return this.name_suffix(options);
    };

    Chance.prototype.name_suffix = function (options) {
        options = initOptions(options);
        return options.full ?
            this.pick(this.name_suffixes()).name :
            this.pick(this.name_suffixes()).abbreviation;
    };

    Chance.prototype.nationalities = function () {
        return this.get("nationalities");
    };

    // Generate random nationality based on json list
    Chance.prototype.nationality = function () {
        var nationality = this.pick(this.nationalities());
        return nationality.name;
    };

    // -- End Person --

    // -- Mobile --
    // Android GCM Registration ID
    Chance.prototype.android_id = function () {
        return "APA91" + this.string({ pool: "0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_", length: 178 });
    };

    // Apple Push Token
    Chance.prototype.apple_token = function () {
        return this.string({ pool: "abcdef1234567890", length: 64 });
    };

    // Windows Phone 8 ANID2
    Chance.prototype.wp8_anid2 = function () {
        return base64( this.hash( { length : 32 } ) );
    };

    // Windows Phone 7 ANID
    Chance.prototype.wp7_anid = function () {
        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });
    };

    // BlackBerry Device PIN
    Chance.prototype.bb_pin = function () {
        return this.hash({ length: 8 });
    };

    // -- End Mobile --

    // -- Web --
    Chance.prototype.avatar = function (options) {
        var url = null;
        var URL_BASE = '//www.gravatar.com/avatar/';
        var PROTOCOLS = {
            http: 'http',
            https: 'https'
        };
        var FILE_TYPES = {
            bmp: 'bmp',
            gif: 'gif',
            jpg: 'jpg',
            png: 'png'
        };
        var FALLBACKS = {
            '404': '404', // Return 404 if not found
            mm: 'mm', // Mystery man
            identicon: 'identicon', // Geometric pattern based on hash
            monsterid: 'monsterid', // A generated monster icon
            wavatar: 'wavatar', // A generated face
            retro: 'retro', // 8-bit icon
            blank: 'blank' // A transparent png
        };
        var RATINGS = {
            g: 'g',
            pg: 'pg',
            r: 'r',
            x: 'x'
        };
        var opts = {
            protocol: null,
            email: null,
            fileExtension: null,
            size: null,
            fallback: null,
            rating: null
        };

        if (!options) {
            // Set to a random email
            opts.email = this.email();
            options = {};
        }
        else if (typeof options === 'string') {
            opts.email = options;
            options = {};
        }
        else if (typeof options !== 'object') {
            return null;
        }
        else if (options.constructor === 'Array') {
            return null;
        }

        opts = initOptions(options, opts);

        if (!opts.email) {
            // Set to a random email
            opts.email = this.email();
        }

        // Safe checking for params
        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';
        opts.size = parseInt(opts.size, 0) ? opts.size : '';
        opts.rating = RATINGS[opts.rating] ? opts.rating : '';
        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';
        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';

        url =
            opts.protocol +
            URL_BASE +
            this.bimd5.md5(opts.email) +
            (opts.fileExtension ? '.' + opts.fileExtension : '') +
            (opts.size || opts.rating || opts.fallback ? '?' : '') +
            (opts.size ? '&s=' + opts.size.toString() : '') +
            (opts.rating ? '&r=' + opts.rating : '') +
            (opts.fallback ? '&d=' + opts.fallback : '')
            ;

        return url;
    };

    /**
     * #Description:
     * ===============================================
     * Generate random color value base on color type:
     * -> hex
     * -> rgb
     * -> rgba
     * -> 0x
     * -> named color
     *
     * #Examples:
     * ===============================================
     * * Geerate random hex color
     * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'
     *
     * * Generate Hex based color value
     * chance.color({format: 'hex'})    => '#d67118'
     *
     * * Generate simple rgb value
     * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'
     *
     * * Generate Ox based color value
     * chance.color({format: '0x'})     => '0x67ae0b'
     *
     * * Generate graiscale based value
     * chance.color({grayscale: true})  => '#e2e2e2'
     *
     * * Return valide color name
     * chance.color({format: 'name'})   => 'red'
     *
     * * Make color uppercase
     * chance.color({casing: 'upper'})  => '#29CFA7'
     *
     * * Min Max values for RGBA
     * var light_red = chance.color({format: 'hex', min_red: 200, max_red: 255, max_green: 0, max_blue: 0, min_alpha: .2, max_alpha: .3});
     *
     * @param  [object] options
     * @return [string] color value
     */
    Chance.prototype.color = function (options) {
        function gray(value, delimiter) {
            return [value, value, value].join(delimiter || '');
        }

        function rgb(hasAlpha) {
            var rgbValue     = (hasAlpha)    ? 'rgba' : 'rgb';
            var alphaChannel = (hasAlpha)    ? (',' + this.floating({min:min_alpha, max:max_alpha})) : "";
            var colorValue   = (isGrayscale) ? (gray(this.natural({min: min_rgb, max: max_rgb}), ',')) : (this.natural({min: min_green, max: max_green}) + ',' + this.natural({min: min_blue, max: max_blue}) + ',' + this.natural({max: 255}));
            return rgbValue + '(' + colorValue + alphaChannel + ')';
        }

        function hex(start, end, withHash) {
            var symbol = (withHash) ? "#" : "";
            var hexstring = "";

            if (isGrayscale) {
                hexstring = gray(this.pad(this.hex({min: min_rgb, max: max_rgb}), 2));
                if (options.format === "shorthex") {
                    hexstring = gray(this.hex({min: 0, max: 15}));
                }
            }
            else {
                if (options.format === "shorthex") {
                    hexstring = this.pad(this.hex({min: Math.floor(min_red / 16), max: Math.floor(max_red / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_green / 16), max: Math.floor(max_green / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_blue / 16), max: Math.floor(max_blue / 16)}), 1);
                }
                else if (min_red !== undefined || max_red !== undefined || min_green !== undefined || max_green !== undefined || min_blue !== undefined || max_blue !== undefined) {
                    hexstring = this.pad(this.hex({min: min_red, max: max_red}), 2) + this.pad(this.hex({min: min_green, max: max_green}), 2) + this.pad(this.hex({min: min_blue, max: max_blue}), 2);
                }
                else {
                    hexstring = this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2);
                }
            }

            return symbol + hexstring;
        }

        options = initOptions(options, {
            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),
            grayscale: false,
            casing: 'lower',
            min: 0,
            max: 255,
            min_red: undefined,
            max_red: undefined,
            min_green: undefined,
            max_green: undefined,
            min_blue: undefined,
            max_blue: undefined,
            min_alpha: 0,
            max_alpha: 1
        });

        var isGrayscale = options.grayscale;
        var min_rgb = options.min;
        var max_rgb = options.max;
        var min_red = options.min_red;
        var max_red = options.max_red;
        var min_green = options.min_green;
        var max_green = options.max_green;
        var min_blue = options.min_blue;
        var max_blue = options.max_blue;
        var min_alpha = options.min_alpha;
        var max_alpha = options.max_alpha;
        if (options.min_red === undefined) { min_red = min_rgb; }
        if (options.max_red === undefined) { max_red = max_rgb; }
        if (options.min_green === undefined) { min_green = min_rgb; }
        if (options.max_green === undefined) { max_green = max_rgb; }
        if (options.min_blue === undefined) { min_blue = min_rgb; }
        if (options.max_blue === undefined) { max_blue = max_rgb; }
        if (options.min_alpha === undefined) { min_alpha = 0; }
        if (options.max_alpha === undefined) { max_alpha = 1; }
        if (isGrayscale && min_rgb === 0 && max_rgb === 255 && min_red !== undefined && max_red !== undefined) {
            min_rgb = ((min_red + min_green + min_blue) / 3);
            max_rgb = ((max_red + max_green + max_blue) / 3);
        }
        var colorValue;

        if (options.format === 'hex') {
            colorValue = hex.call(this, 2, 6, true);
        }
        else if (options.format === 'shorthex') {
            colorValue = hex.call(this, 1, 3, true);
        }
        else if (options.format === 'rgb') {
            colorValue = rgb.call(this, false);
        }
        else if (options.format === 'rgba') {
            colorValue = rgb.call(this, true);
        }
        else if (options.format === '0x') {
            colorValue = '0x' + hex.call(this, 2, 6);
        }
        else if(options.format === 'name') {
            return this.pick(this.get("colorNames"));
        }
        else {
            throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".');
        }

        if (options.casing === 'upper' ) {
            colorValue = colorValue.toUpperCase();
        }

        return colorValue;
    };

    Chance.prototype.domain = function (options) {
        options = initOptions(options);
        return this.word() + '.' + (options.tld || this.tld());
    };

    Chance.prototype.email = function (options) {
        options = initOptions(options);
        return this.word({length: options.length}) + '@' + (options.domain || this.domain());
    };

    /**
     * #Description:
     * ===============================================
     * Generate a random Facebook id, aka fbid.
     *
     * NOTE: At the moment (Sep 2017), Facebook ids are
     * "numeric strings" of length 16.
     * However, Facebook Graph API documentation states that
     * "it is extremely likely to change over time".
     * @see https://developers.facebook.com/docs/graph-api/overview/
     *
     * #Examples:
     * ===============================================
     * chance.fbid() => '1000035231661304'
     *
     * @return [string] facebook id
     */
    Chance.prototype.fbid = function () {
        return '10000' + this.string({pool: "1234567890", length: 11});
    };

    Chance.prototype.google_analytics = function () {
        var account = this.pad(this.natural({max: 999999}), 6);
        var property = this.pad(this.natural({max: 99}), 2);

        return 'UA-' + account + '-' + property;
    };

    Chance.prototype.hashtag = function () {
        return '#' + this.word();
    };

    Chance.prototype.ip = function () {
        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy
        // this should probably be updated to account for that rare as it may be
        return this.natural({min: 1, max: 254}) + '.' +
               this.natural({max: 255}) + '.' +
               this.natural({max: 255}) + '.' +
               this.natural({min: 1, max: 254});
    };

    Chance.prototype.ipv6 = function () {
        var ip_addr = this.n(this.hash, 8, {length: 4});

        return ip_addr.join(":");
    };

    Chance.prototype.klout = function () {
        return this.natural({min: 1, max: 99});
    };

    Chance.prototype.semver = function (options) {
        options = initOptions(options, { include_prerelease: true });

        var range = this.pickone(["^", "~", "<", ">", "<=", ">=", "="]);
        if (options.range) {
            range = options.range;
        }

        var prerelease = "";
        if (options.include_prerelease) {
            prerelease = this.weighted(["", "-dev", "-beta", "-alpha"], [50, 10, 5, 1]);
        }
        return range + this.rpg('3d10').join('.') + prerelease;
    };

    Chance.prototype.tlds = function () {
        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'an', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'bq', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tp', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];
    };

    Chance.prototype.tld = function () {
        return this.pick(this.tlds());
    };

    Chance.prototype.twitter = function () {
        return '@' + this.word();
    };

    Chance.prototype.url = function (options) {
        options = initOptions(options, { protocol: "http", domain: this.domain(options), domain_prefix: "", path: this.word(), extensions: []});

        var extension = options.extensions.length > 0 ? "." + this.pick(options.extensions) : "";
        var domain = options.domain_prefix ? options.domain_prefix + "." + options.domain : options.domain;

        return options.protocol + "://" + domain + "/" + options.path + extension;
    };

    Chance.prototype.port = function() {
        return this.integer({min: 0, max: 65535});
    };

    Chance.prototype.locale = function (options) {
        options = initOptions(options);
        if (options.region){
          return this.pick(this.get("locale_regions"));
        } else {
          return this.pick(this.get("locale_languages"));
        }
    };

    Chance.prototype.locales = function (options) {
      options = initOptions(options);
      if (options.region){
        return this.get("locale_regions");
      } else {
        return this.get("locale_languages");
      }
    };

    Chance.prototype.loremPicsum = function (options) {
        options = initOptions(options, { width: 500, height: 500, greyscale: false, blurred: false });

        var greyscale = options.greyscale ? 'g/' : '';
        var query = options.blurred ? '/?blur' : '/?random';

        return 'https://picsum.photos/' + greyscale + options.width + '/' + options.height + query;
    }

    // -- End Web --

    // -- Location --

    Chance.prototype.address = function (options) {
        options = initOptions(options);
        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);
    };

    Chance.prototype.altitude = function (options) {
        options = initOptions(options, {fixed: 5, min: 0, max: 8848});
        return this.floating({
            min: options.min,
            max: options.max,
            fixed: options.fixed
        });
    };

    Chance.prototype.areacode = function (options) {
        options = initOptions(options, {parens : true});
        // Don't want area codes to start with 1, or have a 9 as the second digit
        var areacode = this.natural({min: 2, max: 9}).toString() +
                this.natural({min: 0, max: 8}).toString() +
                this.natural({min: 0, max: 9}).toString();

        return options.parens ? '(' + areacode + ')' : areacode;
    };

    Chance.prototype.city = function () {
        return this.capitalize(this.word({syllables: 3}));
    };

    Chance.prototype.coordinates = function (options) {
        return this.latitude(options) + ', ' + this.longitude(options);
    };

    Chance.prototype.countries = function () {
        return this.get("countries");
    };

    Chance.prototype.country = function (options) {
        options = initOptions(options);
        var country = this.pick(this.countries());
        return options.raw ? country : options.full ? country.name : country.abbreviation;
    };

    Chance.prototype.depth = function (options) {
        options = initOptions(options, {fixed: 5, min: -10994, max: 0});
        return this.floating({
            min: options.min,
            max: options.max,
            fixed: options.fixed
        });
    };

    Chance.prototype.geohash = function (options) {
        options = initOptions(options, { length: 7 });
        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });
    };

    Chance.prototype.geojson = function (options) {
        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);
    };

    Chance.prototype.latitude = function (options) {
        options = initOptions(options, {fixed: 5, min: -90, max: 90});
        return this.floating({min: options.min, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.longitude = function (options) {
        options = initOptions(options, {fixed: 5, min: -180, max: 180});
        return this.floating({min: options.min, max: options.max, fixed: options.fixed});
    };

    Chance.prototype.phone = function (options) {
        var self = this,
            numPick,
            ukNum = function (parts) {
                var section = [];
                //fills the section part of the phone number with random numbers.
                parts.sections.forEach(function(n) {
                    section.push(self.string({ pool: '0123456789', length: n}));
                });
                return parts.area + section.join(' ');
            };
        options = initOptions(options, {
            formatted: true,
            country: 'us',
            mobile: false
        });
        if (!options.formatted) {
            options.parens = false;
        }
        var phone;
        switch (options.country) {
            case 'fr':
                if (!options.mobile) {
                    numPick = this.pick([
                        // Valid zone and dÃ©partement codes.
                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),
                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),
                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),
                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),
                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),
                        '09' + self.string({ pool: '0123456789', length: 8}),
                    ]);
                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;
                } else {
                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});
                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;
                }
                break;
            case 'uk':
                if (!options.mobile) {
                    numPick = this.pick([
                        //valid area codes of major cities/counties followed by random numbers in required format.

                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },
                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },
                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },
                        { area: '024 7', sections: [3,4] },
                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },
                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [6] },
                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [6] },
                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [6] },
                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [6] },
                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [6] },
                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [6] },
                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [6] },
                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [6] }
                    ]);
                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');
                } else {
                    numPick = this.pick([
                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },
                        { area: '07624 ', sections: [6] }
                    ]);
                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');
                }
                break;
            case 'za':
                if (!options.mobile) {
                    numPick = this.pick([
                       '01' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),
                       '02' + this.pick(['1', '2', '3', '4', '7', '8']) + self.string({ pool: '0123456789', length: 7}),
                       '03' + this.pick(['1', '2', '3', '5', '6', '9']) + self.string({ pool: '0123456789', length: 7}),
                       '04' + this.pick(['1', '2', '3', '4', '5','6','7', '8','9']) + self.string({ pool: '0123456789', length: 7}),
                       '05' + this.pick(['1', '3', '4', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),
                    ]);
                    phone = options.formatted || numPick;
                } else {
                    numPick = this.pick([
                        '060' + this.pick(['3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),
                        '061' + this.pick(['0','1','2','3','4','5','8']) + self.string({ pool: '0123456789', length: 6}),
                        '06'  + self.string({ pool: '0123456789', length: 7}),
                        '071' + this.pick(['0','1','2','3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),
                        '07'  + this.pick(['2','3','4','6','7','8','9']) + self.string({ pool: '0123456789', length: 7}),
                        '08'  + this.pick(['0','1','2','3','4','5']) + self.string({ pool: '0123456789', length: 7}),
                    ]);
                    phone = options.formatted || numPick;
                }
                break;
            case 'us':
                var areacode = this.areacode(options).toString();
                var exchange = this.natural({ min: 2, max: 9 }).toString() +
                    this.natural({ min: 0, max: 9 }).toString() +
                    this.natural({ min: 0, max: 9 }).toString();
                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}
                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;
                break;
            case 'br':
                var areaCode = this.pick(["11", "12", "13", "14", "15", "16", "17", "18", "19", "21", "22", "24", "27", "28", "31", "32", "33", "34", "35", "37", "38", "41", "42", "43", "44", "45", "46", "47", "48", "49", "51", "53", "54", "55", "61", "62", "63", "64", "65", "66", "67", "68", "69", "71", "73", "74", "75", "77", "79", "81", "82", "83", "84", "85", "86", "87", "88", "89", "91", "92", "93", "94", "95", "96", "97", "98", "99"]);
                var prefix;
                if (options.mobile) {
                    // Brasilian official reference (mobile): http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=330
                    prefix = '9' + self.string({ pool: '0123456789', length: 4});
                } else {
                    // Brasilian official reference: http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=331
                    prefix = this.natural({ min: 2000, max: 5999 }).toString();
                }
                var mcdu = self.string({ pool: '0123456789', length: 4});
                phone = options.formatted ? '(' + areaCode + ') ' + prefix + '-' + mcdu : areaCode + prefix + mcdu;
                break;
        }
        return phone;
    };

    Chance.prototype.postal = function () {
        // Postal District
        var pd = this.character({pool: "XVTSRPNKLMHJGECBA"});
        // Forward Sortation Area (FSA)
        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: "upper"});
        // Local Delivery Unut (LDU)
        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: "upper"}) + this.natural({max: 9});

        return fsa + " " + ldu;
    };

    Chance.prototype.postcode = function () {
        // Area
        var area = this.pick(this.get("postcodeAreas")).code;
        // District
        var district = this.natural({max: 9});
        // Sub-District
        var subDistrict = this.bool() ? this.character({alpha: true, casing: "upper"}) : "";
        // Outward Code
        var outward = area + district + subDistrict;
        // Sector
        var sector = this.natural({max: 9});
        // Unit
        var unit = this.character({alpha: true, casing: "upper"}) + this.character({alpha: true, casing: "upper"});
        // Inward Code
        var inward = sector + unit;

        return outward + " " + inward;
    };

    Chance.prototype.counties = function (options) {
        options = initOptions(options, { country: 'uk' });
        return this.get("counties")[options.country.toLowerCase()];
    };

    Chance.prototype.county = function (options) {
        return this.pick(this.counties(options)).name;
    };

    Chance.prototype.provinces = function (options) {
        options = initOptions(options, { country: 'ca' });
        return this.get("provinces")[options.country.toLowerCase()];
    };

    Chance.prototype.province = function (options) {
        return (options && options.full) ?
            this.pick(this.provinces(options)).name :
            this.pick(this.provinces(options)).abbreviation;
    };

    Chance.prototype.state = function (options) {
        return (options && options.full) ?
            this.pick(this.states(options)).name :
            this.pick(this.states(options)).abbreviation;
    };

    Chance.prototype.states = function (options) {
        options = initOptions(options, { country: 'us', us_states_and_dc: true } );

        var states;

        switch (options.country.toLowerCase()) {
            case 'us':
                var us_states_and_dc = this.get("us_states_and_dc"),
                    territories = this.get("territories"),
                    armed_forces = this.get("armed_forces");

                states = [];

                if (options.us_states_and_dc) {
                    states = states.concat(us_states_and_dc);
                }
                if (options.territories) {
                    states = states.concat(territories);
                }
                if (options.armed_forces) {
                    states = states.concat(armed_forces);
                }
                break;
            case 'it':
            case 'mx':
                states = this.get("country_regions")[options.country.toLowerCase()];
                break;
            case 'uk':
                states = this.get("counties")[options.country.toLowerCase()];
                break;
        }

        return states;
    };

    Chance.prototype.street = function (options) {
        options = initOptions(options, { country: 'us', syllables: 2 });
        var     street;

        switch (options.country.toLowerCase()) {
            case 'us':
                street = this.word({ syllables: options.syllables });
                street = this.capitalize(street);
                street += ' ';
                street += options.short_suffix ?
                    this.street_suffix(options).abbreviation :
                    this.street_suffix(options).name;
                break;
            case 'it':
                street = this.word({ syllables: options.syllables });
                street = this.capitalize(street);
                street = (options.short_suffix ?
                    this.street_suffix(options).abbreviation :
                    this.street_suffix(options).name) + " " + street;
                break;
        }
        return street;
    };

    Chance.prototype.street_suffix = function (options) {
        options = initOptions(options, { country: 'us' });
        return this.pick(this.street_suffixes(options));
    };

    Chance.prototype.street_suffixes = function (options) {
        options = initOptions(options, { country: 'us' });
        // These are the most common suffixes.
        return this.get("street_suffixes")[options.country.toLowerCase()];
    };

    // Note: only returning US zip codes, internationalization will be a whole
    // other beast to tackle at some point.
    Chance.prototype.zip = function (options) {
        var zip = this.n(this.natural, 5, {max: 9});

        if (options && options.plusfour === true) {
            zip.push('-');
            zip = zip.concat(this.n(this.natural, 4, {max: 9}));
        }

        return zip.join("");
    };

    // -- End Location --

    // -- Time

    Chance.prototype.ampm = function () {
        return this.bool() ? 'am' : 'pm';
    };

    Chance.prototype.date = function (options) {
        var date_string, date;

        // If interval is specified we ignore preset
        if(options && (options.min || options.max)) {
            options = initOptions(options, {
                american: true,
                string: false
            });
            var min = typeof options.min !== "undefined" ? options.min.getTime() : 1;
            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1
            var max = typeof options.max !== "undefined" ? options.max.getTime() : 8640000000000000;

            date = new Date(this.integer({min: min, max: max}));
        } else {
            var m = this.month({raw: true});
            var daysInMonth = m.days;

            if(options && options.month) {
                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).
                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;
            }

            options = initOptions(options, {
                year: parseInt(this.year(), 10),
                // Necessary to subtract 1 because Date() 0-indexes month but not day or year
                // for some reason.
                month: m.numeric - 1,
                day: this.natural({min: 1, max: daysInMonth}),
                hour: this.hour({twentyfour: true}),
                minute: this.minute(),
                second: this.second(),
                millisecond: this.millisecond(),
                american: true,
                string: false
            });

            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);
        }

        if (options.american) {
            // Adding 1 to the month is necessary because Date() 0-indexes
            // months but not day for some odd reason.
            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();
        } else {
            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();
        }

        return options.string ? date_string : date;
    };

    Chance.prototype.hammertime = function (options) {
        return this.date(options).getTime();
    };

    Chance.prototype.hour = function (options) {
        options = initOptions(options, {
            min: options && options.twentyfour ? 0 : 1,
            max: options && options.twentyfour ? 23 : 12
        });

        testRange(options.min < 0, "Chance: Min cannot be less than 0.");
        testRange(options.twentyfour && options.max > 23, "Chance: Max cannot be greater than 23 for twentyfour option.");
        testRange(!options.twentyfour && options.max > 12, "Chance: Max cannot be greater than 12.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return this.natural({min: options.min, max: options.max});
    };

    Chance.prototype.millisecond = function () {
        return this.natural({max: 999});
    };

    Chance.prototype.minute = Chance.prototype.second = function (options) {
        options = initOptions(options, {min: 0, max: 59});

        testRange(options.min < 0, "Chance: Min cannot be less than 0.");
        testRange(options.max > 59, "Chance: Max cannot be greater than 59.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        return this.natural({min: options.min, max: options.max});
    };

    Chance.prototype.month = function (options) {
        options = initOptions(options, {min: 1, max: 12});

        testRange(options.min < 1, "Chance: Min cannot be less than 1.");
        testRange(options.max > 12, "Chance: Max cannot be greater than 12.");
        testRange(options.min > options.max, "Chance: Min cannot be greater than Max.");

        var month = this.pick(this.months().slice(options.min - 1, options.max));
        return options.raw ? month : month.name;
    };

    Chance.prototype.months = function () {
        return this.get("months");
    };

    Chance.prototype.second = function () {
        return this.natural({max: 59});
    };

    Chance.prototype.timestamp = function () {
        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});
    };

    Chance.prototype.weekday = function (options) {
        options = initOptions(options, {weekday_only: false});
        var weekdays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"];
        if (!options.weekday_only) {
            weekdays.push("Saturday");
            weekdays.push("Sunday");
        }
        return this.pickone(weekdays);
    };

    Chance.prototype.year = function (options) {
        // Default to current year as min if none specified
        options = initOptions(options, {min: new Date().getFullYear()});

        // Default to one century after current year as max if none specified
        options.max = (typeof options.max !== "undefined") ? options.max : options.min + 100;

        return this.natural(options).toString();
    };

    // -- End Time

    // -- Finance --

    Chance.prototype.cc = function (options) {
        options = initOptions(options);

        var type, number, to_generate;

        type = (options.type) ?
                    this.cc_type({ name: options.type, raw: true }) :
                    this.cc_type({ raw: true });

        number = type.prefix.split("");
        to_generate = type.length - type.prefix.length - 1;

        // Generates n - 1 digits
        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));

        // Generates the last digit according to Luhn algorithm
        number.push(this.luhn_calculate(number.join("")));

        return number.join("");
    };

    Chance.prototype.cc_types = function () {
        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29
        return this.get("cc_types");
    };

    Chance.prototype.cc_type = function (options) {
        options = initOptions(options);
        var types = this.cc_types(),
            type = null;

        if (options.name) {
            for (var i = 0; i < types.length; i++) {
                // Accept either name or short_name to specify card type
                if (types[i].name === options.name || types[i].short_name === options.name) {
                    type = types[i];
                    break;
                }
            }
            if (type === null) {
                throw new RangeError("Chance: Credit card type '" + options.name + "' is not supported");
            }
        } else {
            type = this.pick(types);
        }

        return options.raw ? type : type.name;
    };

    // return all world currency by ISO 4217
    Chance.prototype.currency_types = function () {
        return this.get("currency_types");
    };

    // return random world currency by ISO 4217
    Chance.prototype.currency = function () {
        return this.pick(this.currency_types());
    };

    // return all timezones available
    Chance.prototype.timezones = function () {
        return this.get("timezones");
    };

    // return random timezone
    Chance.prototype.timezone = function () {
        return this.pick(this.timezones());
    };

    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code
    Chance.prototype.currency_pair = function (returnAsString) {
        var currencies = this.unique(this.currency, 2, {
            comparator: function(arr, val) {

                return arr.reduce(function(acc, item) {
                    // If a match has been found, short circuit check and just return
                    return acc || (item.code === val.code);
                }, false);
            }
        });

        if (returnAsString) {
            return currencies[0].code + '/' + currencies[1].code;
        } else {
            return currencies;
        }
    };

    Chance.prototype.dollar = function (options) {
        // By default, a somewhat more sane max for dollar than all available numbers
        options = initOptions(options, {max : 10000, min : 0});

        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),
            cents = dollar.split('.')[1];

        if (cents === undefined) {
            dollar += '.00';
        } else if (cents.length < 2) {
            dollar = dollar + '0';
        }

        if (dollar < 0) {
            return '-$' + dollar.replace('-', '');
        } else {
            return '$' + dollar;
        }
    };

    Chance.prototype.euro = function (options) {
        return Number(this.dollar(options).replace("$", "")).toLocaleString() + "â¬";
    };

    Chance.prototype.exp = function (options) {
        options = initOptions(options);
        var exp = {};

        exp.year = this.exp_year();

        // If the year is this year, need to ensure month is greater than the
        // current month or this expiration will not be valid
        if (exp.year === (new Date().getFullYear()).toString()) {
            exp.month = this.exp_month({future: true});
        } else {
            exp.month = this.exp_month();
        }

        return options.raw ? exp : exp.month + '/' + exp.year;
    };

    Chance.prototype.exp_month = function (options) {
        options = initOptions(options);
        var month, month_int,
            // Date object months are 0 indexed
            curMonth = new Date().getMonth() + 1;

        if (options.future && (curMonth !== 12)) {
            do {
                month = this.month({raw: true}).numeric;
                month_int = parseInt(month, 10);
            } while (month_int <= curMonth);
        } else {
            month = this.month({raw: true}).numeric;
        }

        return month;
    };

    Chance.prototype.exp_year = function () {
        var curMonth = new Date().getMonth() + 1,
            curYear = new Date().getFullYear();

        return this.year({min: ((curMonth === 12) ? (curYear + 1) : curYear), max: (curYear + 10)});
    };

    Chance.prototype.vat = function (options) {
        options = initOptions(options, { country: 'it' });
        switch (options.country.toLowerCase()) {
            case 'it':
                return this.it_vat();
        }
    };

    /**
     * Generate a string matching IBAN pattern (https://en.wikipedia.org/wiki/International_Bank_Account_Number).
     * No country-specific formats support (yet)
     */
    Chance.prototype.iban = function () {
        var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        var alphanum = alpha + '0123456789';
        var iban =
            this.string({ length: 2, pool: alpha }) +
            this.pad(this.integer({ min: 0, max: 99 }), 2) +
            this.string({ length: 4, pool: alphanum }) +
            this.pad(this.natural(), this.natural({ min: 6, max: 26 }));
        return iban;
    };

    // -- End Finance

    // -- Regional

    Chance.prototype.it_vat = function () {
        var it_vat = this.natural({min: 1, max: 1800000});

        it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({ country: 'it' })).code, 3);
        return it_vat + this.luhn_calculate(it_vat);
    };

    /*
     * this generator is written following the official algorithm
     * all data can be passed explicitely or randomized by calling chance.cf() without options
     * the code does not check that the input data is valid (it goes beyond the scope of the generator)
     *
     * @param  [Object] options = { first: first name,
     *                              last: last name,
     *                              gender: female|male,
                                    birthday: JavaScript date object,
                                    city: string(4), 1 letter + 3 numbers
                                   }
     * @return [string] codice fiscale
     *
    */
    Chance.prototype.cf = function (options) {
        options = options || {};
        var gender = !!options.gender ? options.gender : this.gender(),
            first = !!options.first ? options.first : this.first( { gender: gender, nationality: 'it'} ),
            last = !!options.last ? options.last : this.last( { nationality: 'it'} ),
            birthday = !!options.birthday ? options.birthday : this.birthday(),
            city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({max:999}), 3),
            cf = [],
            name_generator = function(name, isLast) {
                var temp,
                    return_value = [];

                if (name.length < 3) {
                    return_value = name.split("").concat("XXX".split("")).splice(0,3);
                }
                else {
                    temp = name.toUpperCase().split('').map(function(c){
                        return ("BCDFGHJKLMNPRSTVWZ".indexOf(c) !== -1) ? c : undefined;
                    }).join('');
                    if (temp.length > 3) {
                        if (isLast) {
                            temp = temp.substr(0,3);
                        } else {
                            temp = temp[0] + temp.substr(2,2);
                        }
                    }
                    if (temp.length < 3) {
                        return_value = temp;
                        temp = name.toUpperCase().split('').map(function(c){
                            return ("AEIOU".indexOf(c) !== -1) ? c : undefined;
                        }).join('').substr(0, 3 - return_value.length);
                    }
                    return_value = return_value + temp;
                }

                return return_value;
            },
            date_generator = function(birthday, gender, that) {
                var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];

                return  birthday.getFullYear().toString().substr(2) +
                        lettermonths[birthday.getMonth()] +
                        that.pad(birthday.getDate() + ((gender.toLowerCase() === "female") ? 40 : 0), 2);
            },
            checkdigit_generator = function(cf) {
                var range1 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                    range2 = "ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",
                    evens  = "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
                    odds   = "BAKPLCQDREVOSFTGUHMINJWZYX",
                    digit  = 0;


                for(var i = 0; i < 15; i++) {
                    if (i % 2 !== 0) {
                        digit += evens.indexOf(range2[range1.indexOf(cf[i])]);
                    }
                    else {
                        digit +=  odds.indexOf(range2[range1.indexOf(cf[i])]);
                    }
                }
                return evens[digit % 26];
            };

        cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split("")).join("");
        cf += checkdigit_generator(cf.toUpperCase(), this);

        return cf.toUpperCase();
    };

    Chance.prototype.pl_pesel = function () {
        var number = this.natural({min: 1, max: 9999999999});
        var arr = this.pad(number, 10).split('');
        for (var i = 0; i < arr.length; i++) {
            arr[i] = parseInt(arr[i]);
        }

        var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;
        if(controlNumber !== 0) {
            controlNumber = 10 - controlNumber;
        }

        return arr.join('') + controlNumber;
    };

    Chance.prototype.pl_nip = function () {
        var number = this.natural({min: 1, max: 999999999});
        var arr = this.pad(number, 9).split('');
        for (var i = 0; i < arr.length; i++) {
            arr[i] = parseInt(arr[i]);
        }

        var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;
        if(controlNumber === 10) {
            return this.pl_nip();
        }

        return arr.join('') + controlNumber;
    };

    Chance.prototype.pl_regon = function () {
        var number = this.natural({min: 1, max: 99999999});
        var arr = this.pad(number, 8).split('');
        for (var i = 0; i < arr.length; i++) {
            arr[i] = parseInt(arr[i]);
        }

        var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;
        if(controlNumber === 10) {
            controlNumber = 0;
        }

        return arr.join('') + controlNumber;
    };

    // -- End Regional

    // -- Music --

    Chance.prototype.note = function(options) {
      // choices for 'notes' option:
      // flatKey - chromatic scale with flat notes (default)
      // sharpKey - chromatic scale with sharp notes
      // flats - just flat notes
      // sharps - just sharp notes
      // naturals - just natural notes
      // all - naturals, sharps and flats
      options = initOptions(options, { notes : 'flatKey'});
      var scales = {
        naturals: ['C', 'D', 'E', 'F', 'G', 'A', 'B'],
        flats: ['Dâ­', 'Eâ­', 'Gâ­', 'Aâ­', 'Bâ­'],
        sharps: ['Câ¯', 'Dâ¯', 'Fâ¯', 'Gâ¯', 'Aâ¯']
      };
      scales.all = scales.naturals.concat(scales.flats.concat(scales.sharps))
      scales.flatKey = scales.naturals.concat(scales.flats)
      scales.sharpKey = scales.naturals.concat(scales.sharps)
      return this.pickone(scales[options.notes]);
    }

    Chance.prototype.midi_note = function(options) {
      var min = 0;
      var max = 127;
      options = initOptions(options, { min : min, max : max });
      return this.integer({min: options.min, max: options.max});
    }

    Chance.prototype.chord_quality = function(options) {
      options = initOptions(options, { jazz: true });
      var chord_qualities = ['maj', 'min', 'aug', 'dim'];
      if (options.jazz){
        chord_qualities = [
          'maj7',
          'min7',
          '7',
          'sus',
          'dim',
          'Ã¸'
        ];
      }
      return this.pickone(chord_qualities);
    }

    Chance.prototype.chord = function (options) {
      options = initOptions(options);
      return this.note(options) + this.chord_quality(options);
    }

    Chance.prototype.tempo = function (options) {
      var min = 40;
      var max = 320;
      options = initOptions(options, {min: min, max: max});
      return this.integer({min: options.min, max: options.max});
    }

    // -- End Music

    // -- Miscellaneous --

    // Coin - Flip, flip, flipadelphia
    Chance.prototype.coin = function() {
      return this.bool() ? "heads" : "tails";
    }

    // Dice - For all the board game geeks out there, myself included ;)
    function diceFn (range) {
        return function () {
            return this.natural(range);
        };
    }
    Chance.prototype.d4 = diceFn({min: 1, max: 4});
    Chance.prototype.d6 = diceFn({min: 1, max: 6});
    Chance.prototype.d8 = diceFn({min: 1, max: 8});
    Chance.prototype.d10 = diceFn({min: 1, max: 10});
    Chance.prototype.d12 = diceFn({min: 1, max: 12});
    Chance.prototype.d20 = diceFn({min: 1, max: 20});
    Chance.prototype.d30 = diceFn({min: 1, max: 30});
    Chance.prototype.d100 = diceFn({min: 1, max: 100});

    Chance.prototype.rpg = function (thrown, options) {
        options = initOptions(options);
        if (!thrown) {
            throw new RangeError("Chance: A type of die roll must be included");
        } else {
            var bits = thrown.toLowerCase().split("d"),
                rolls = [];

            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {
                throw new Error("Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");
            }
            for (var i = bits[0]; i > 0; i--) {
                rolls[i - 1] = this.natural({min: 1, max: bits[1]});
            }
            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;
        }
    };

    // Guid
    Chance.prototype.guid = function (options) {
        options = initOptions(options, { version: 5 });

        var guid_pool = "abcdef1234567890",
            variant_pool = "ab89",
            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +
                   this.string({ pool: guid_pool, length: 4 }) + '-' +
                   // The Version
                   options.version +
                   this.string({ pool: guid_pool, length: 3 }) + '-' +
                   // The Variant
                   this.string({ pool: variant_pool, length: 1 }) +
                   this.string({ pool: guid_pool, length: 3 }) + '-' +
                   this.string({ pool: guid_pool, length: 12 });
        return guid;
    };

    // Hash
    Chance.prototype.hash = function (options) {
        options = initOptions(options, {length : 40, casing: 'lower'});
        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;
        return this.string({pool: pool, length: options.length});
    };

    Chance.prototype.luhn_check = function (num) {
        var str = num.toString();
        var checkDigit = +str.substring(str.length - 1);
        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));
    };

    Chance.prototype.luhn_calculate = function (num) {
        var digits = num.toString().split("").reverse();
        var sum = 0;
        var digit;

        for (var i = 0, l = digits.length; l > i; ++i) {
            digit = +digits[i];
            if (i % 2 === 0) {
                digit *= 2;
                if (digit > 9) {
                    digit -= 9;
                }
            }
            sum += digit;
        }
        return (sum * 9) % 10;
    };

    // MD5 Hash
    Chance.prototype.md5 = function(options) {
        var opts = { str: '', key: null, raw: false };

        if (!options) {
            opts.str = this.string();
            options = {};
        }
        else if (typeof options === 'string') {
            opts.str = options;
            options = {};
        }
        else if (typeof options !== 'object') {
            return null;
        }
        else if(options.constructor === 'Array') {
            return null;
        }

        opts = initOptions(options, opts);

        if(!opts.str){
            throw new Error('A parameter is required to return an md5 hash.');
        }

        return this.bimd5.md5(opts.str, opts.key, opts.raw);
    };

    /**
     * #Description:
     * =====================================================
     * Generate random file name with extension
     *
     * The argument provide extension type
     * -> raster
     * -> vector
     * -> 3d
     * -> document
     *
     * If nothing is provided the function return random file name with random
     * extension type of any kind
     *
     * The user can validate the file name length range
     * If nothing provided the generated file name is random
     *
     * #Extension Pool :
     * * Currently the supported extensions are
     *  -> some of the most popular raster image extensions
     *  -> some of the most popular vector image extensions
     *  -> some of the most popular 3d image extensions
     *  -> some of the most popular document extensions
     *
     * #Examples :
     * =====================================================
     *
     * Return random file name with random extension. The file extension
     * is provided by a predefined collection of extensions. More about the extension
     * pool can be found in #Extension Pool section
     *
     * chance.file()
     * => dsfsdhjf.xml
     *
     * In order to generate a file name with specific length, specify the
     * length property and integer value. The extension is going to be random
     *
     * chance.file({length : 10})
     * => asrtineqos.pdf
     *
     * In order to generate file with extension from some of the predefined groups
     * of the extension pool just specify the extension pool category in fileType property
     *
     * chance.file({fileType : 'raster'})
     * => dshgssds.psd
     *
     * You can provide specific extension for your files
     * chance.file({extension : 'html'})
     * => djfsd.html
     *
     * Or you could pass custom collection of extensions by array or by object
     * chance.file({extensions : [...]})
     * => dhgsdsd.psd
     *
     * chance.file({extensions : { key : [...], key : [...]}})
     * => djsfksdjsd.xml
     *
     * @param  [collection] options
     * @return [string]
     *
     */
    Chance.prototype.file = function(options) {

        var fileOptions = options || {};
        var poolCollectionKey = "fileExtension";
        var typeRange   = Object.keys(this.get("fileExtension"));//['raster', 'vector', '3d', 'document'];
        var fileName;
        var fileExtension;

        // Generate random file name
        fileName = this.word({length : fileOptions.length});

        // Generate file by specific extension provided by the user
        if(fileOptions.extension) {

            fileExtension = fileOptions.extension;
            return (fileName + '.' + fileExtension);
        }

        // Generate file by specific extension collection
        if(fileOptions.extensions) {

            if(Array.isArray(fileOptions.extensions)) {

                fileExtension = this.pickone(fileOptions.extensions);
                return (fileName + '.' + fileExtension);
            }
            else if(fileOptions.extensions.constructor === Object) {

                var extensionObjectCollection = fileOptions.extensions;
                var keys = Object.keys(extensionObjectCollection);

                fileExtension = this.pickone(extensionObjectCollection[this.pickone(keys)]);
                return (fileName + '.' + fileExtension);
            }

            throw new Error("Chance: Extensions must be an Array or Object");
        }

        // Generate file extension based on specific file type
        if(fileOptions.fileType) {

            var fileType = fileOptions.fileType;
            if(typeRange.indexOf(fileType) !== -1) {

                fileExtension = this.pickone(this.get(poolCollectionKey)[fileType]);
                return (fileName + '.' + fileExtension);
            }

            throw new RangeError("Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'");
        }

        // Generate random file name if no extension options are passed
        fileExtension = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);
        return (fileName + '.' + fileExtension);
    };

    var data = {

        firstNames: {
            "male": {
                "en": ["James", "John", "Robert", "Michael", "William", "David", "Richard", "Joseph", "Charles", "Thomas", "Christopher", "Daniel", "Matthew", "George", "Donald", "Anthony", "Paul", "Mark", "Edward", "Steven", "Kenneth", "Andrew", "Brian", "Joshua", "Kevin", "Ronald", "Timothy", "Jason", "Jeffrey", "Frank", "Gary", "Ryan", "Nicholas", "Eric", "Stephen", "Jacob", "Larry", "Jonathan", "Scott", "Raymond", "Justin", "Brandon", "Gregory", "Samuel", "Benjamin", "Patrick", "Jack", "Henry", "Walter", "Dennis", "Jerry", "Alexander", "Peter", "Tyler", "Douglas", "Harold", "Aaron", "Jose", "Adam", "Arthur", "Zachary", "Carl", "Nathan", "Albert", "Kyle", "Lawrence", "Joe", "Willie", "Gerald", "Roger", "Keith", "Jeremy", "Terry", "Harry", "Ralph", "Sean", "Jesse", "Roy", "Louis", "Billy", "Austin", "Bruce", "Eugene", "Christian", "Bryan", "Wayne", "Russell", "Howard", "Fred", "Ethan", "Jordan", "Philip", "Alan", "Juan", "Randy", "Vincent", "Bobby", "Dylan", "Johnny", "Phillip", "Victor", "Clarence", "Ernest", "Martin", "Craig", "Stanley", "Shawn", "Travis", "Bradley", "Leonard", "Earl", "Gabriel", "Jimmy", "Francis", "Todd", "Noah", "Danny", "Dale", "Cody", "Carlos", "Allen", "Frederick", "Logan", "Curtis", "Alex", "Joel", "Luis", "Norman", "Marvin", "Glenn", "Tony", "Nathaniel", "Rodney", "Melvin", "Alfred", "Steve", "Cameron", "Chad", "Edwin", "Caleb", "Evan", "Antonio", "Lee", "Herbert", "Jeffery", "Isaac", "Derek", "Ricky", "Marcus", "Theodore", "Elijah", "Luke", "Jesus", "Eddie", "Troy", "Mike", "Dustin", "Ray", "Adrian", "Bernard", "Leroy", "Angel", "Randall", "Wesley", "Ian", "Jared", "Mason", "Hunter", "Calvin", "Oscar", "Clifford", "Jay", "Shane", "Ronnie", "Barry", "Lucas", "Corey", "Manuel", "Leo", "Tommy", "Warren", "Jackson", "Isaiah", "Connor", "Don", "Dean", "Jon", "Julian", "Miguel", "Bill", "Lloyd", "Charlie", "Mitchell", "Leon", "Jerome", "Darrell", "Jeremiah", "Alvin", "Brett", "Seth", "Floyd", "Jim", "Blake", "Micheal", "Gordon", "Trevor", "Lewis", "Erik", "Edgar", "Vernon", "Devin", "Gavin", "Jayden", "Chris", "Clyde", "Tom", "Derrick", "Mario", "Brent", "Marc", "Herman", "Chase", "Dominic", "Ricardo", "Franklin", "Maurice", "Max", "Aiden", "Owen", "Lester", "Gilbert", "Elmer", "Gene", "Francisco", "Glen", "Cory", "Garrett", "Clayton", "Sam", "Jorge", "Chester", "Alejandro", "Jeff", "Harvey", "Milton", "Cole", "Ivan", "Andre", "Duane", "Landon"],
                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163
                "it": ["Adolfo", "Alberto", "Aldo", "Alessandro", "Alessio", "Alfredo", "Alvaro", "Andrea", "Angelo", "Angiolo", "Antonino", "Antonio", "Attilio", "Benito", "Bernardo", "Bruno", "Carlo", "Cesare", "Christian", "Claudio", "Corrado", "Cosimo", "Cristian", "Cristiano", "Daniele", "Dario", "David", "Davide", "Diego", "Dino", "Domenico", "Duccio", "Edoardo", "Elia", "Elio", "Emanuele", "Emiliano", "Emilio", "Enrico", "Enzo", "Ettore", "Fabio", "Fabrizio", "Federico", "Ferdinando", "Fernando", "Filippo", "Francesco", "Franco", "Gabriele", "Giacomo", "Giampaolo", "Giampiero", "Giancarlo", "Gianfranco", "Gianluca", "Gianmarco", "Gianni", "Gino", "Giorgio", "Giovanni", "Giuliano", "Giulio", "Giuseppe", "Graziano", "Gregorio", "Guido", "Iacopo", "Jacopo", "Lapo", "Leonardo", "Lorenzo", "Luca", "Luciano", "Luigi", "Manuel", "Marcello", "Marco", "Marino", "Mario", "Massimiliano", "Massimo", "Matteo", "Mattia", "Maurizio", "Mauro", "Michele", "Mirko", "Mohamed", "Nello", "Neri", "NiccolÃ²", "Nicola", "Osvaldo", "Otello", "Paolo", "Pier Luigi", "Piero", "Pietro", "Raffaele", "Remo", "Renato", "Renzo", "Riccardo", "Roberto", "Rolando", "Romano", "Salvatore", "Samuele", "Sandro", "Sergio", "Silvano", "Simone", "Stefano", "Thomas", "Tommaso", "Ubaldo", "Ugo", "Umberto", "Valerio", "Valter", "Vasco", "Vincenzo", "Vittorio"],
                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html
                "nl": ["Aaron","Abel","Adam","Adriaan","Albert","Alexander","Ali","Arjen","Arno","Bart","Bas","Bastiaan","Benjamin","Bob", "Boris","Bram","Brent","Cas","Casper","Chris","Christiaan","Cornelis","Daan","Daley","Damian","Dani","Daniel","DaniÃ«l","David","Dean","Dirk","Dylan","Egbert","Elijah","Erik","Erwin","Evert","Ezra","Fabian","Fedde","Finn","Florian","Floris","Frank","Frans","Frederik","Freek","Geert","Gerard","Gerben","Gerrit","Gijs","Guus","Hans","Hendrik","Henk","Herman","Hidde","Hugo","Jaap","Jan Jaap","Jan-Willem","Jack","Jacob","Jan","Jason","Jasper","Jayden","Jelle","Jelte","Jens","Jeroen","Jesse","Jim","Job","Joep","Johannes","John","Jonathan","Joris","Joshua","JoÃ«l","Julian","Kees","Kevin","Koen","Lars","Laurens","Leendert","Lennard","Lodewijk","Luc","Luca","Lucas","Lukas","Luuk","Maarten","Marcus","Martijn","Martin","Matthijs","Maurits","Max","Mees","Melle","Mick","Mika","Milan","Mohamed","Mohammed","Morris","Muhammed","Nathan","Nick","Nico","Niek","Niels","Noah","Noud","Olivier","Oscar","Owen","Paul","Pepijn","Peter","Pieter","Pim","Quinten","Reinier","Rens","Robin","Ruben","Sam","Samuel","Sander","Sebastiaan","Sem","Sep","Sepp","Siem","Simon","Stan","Stef","Steven","Stijn","Sven","Teun","Thijmen","Thijs","Thomas","Tijn","Tim","Timo","Tobias","Tom","Victor","Vince","Willem","Wim","Wouter","Yusuf"],
                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie
                "fr": ["Aaron","Abdon","Abel","AbÃ©lard","Abelin","Abondance","Abraham","Absalon","Acace","Achaire","Achille","Adalard","Adalbald","AdalbÃ©ron","Adalbert","Adalric","Adam","Adegrin","Adel","Adelin","Andelin","Adelphe","Adam","AdÃ©odat","AdhÃ©mar","Adjutor","Adolphe","Adonis","Adon","Adrien","Agapet","Agathange","Agathon","Agilbert","AgÃ©nor","Agnan","Aignan","Agrippin","Aimable","AimÃ©","Alain","Alban","Albin","Aubin","AlbÃ©ric","Albert","Albertet","Alcibiade","Alcide","AlcÃ©e","Alcime","Aldonce","Aldric","AldÃ©ric","Aleaume","Alexandre","Alexis","Alix","Alliaume","Aleaume","Almine","Almire","AloÃ¯s","AlphÃ©e","Alphonse","Alpinien","AlverÃ¨de","Amalric","Amaury","Amandin","Amant","Ambroise","AmÃ©dÃ©e","AmÃ©lien","Amiel","Amour","AnaÃ«l","Anastase","Anatole","Ancelin","AndÃ©ol","Andoche","AndrÃ©","Andoche","Ange","Angelin","Angilbe","Anglebert","Angoustan","Anicet","Anne","Annibal","Ansbert","Anselme","Anthelme","Antheaume","Anthime","Antide","Antoine","Antonius","Antonin","Apollinaire","Apollon","Aquilin","Arcade","Archambaud","Archambeau","Archange","Archibald","Arian","Ariel","Ariste","Aristide","Armand","Armel","Armin","Arnould","Arnaud","Arolde","ArsÃ¨ne","ArsinoÃ©","Arthaud","ArthÃ¨me","Arthur","Ascelin","Athanase","Aubry","Audebert","Audouin","Audran","Audric","Auguste","Augustin","AurÃ¨le","AurÃ©lien","Aurian","Auxence","Axel","Aymard","Aymeric","Aymon","Aymond","Balthazar","Baptiste","BarnabÃ©","BarthÃ©lemy","BartimÃ©e","Basile","Bastien","Baudouin","BÃ©nigne","Benjamin","BenoÃ®t","BÃ©renger","BÃ©rard","Bernard","Bertrand","Blaise","Bon","Boniface","Bouchard","Brice","Brieuc","Bruno","Brunon","Calixte","Calliste","CamÃ©lien","Camille","Camillien","Candide","Caribert","Carloman","Cassandre","Cassien","CÃ©dric","CÃ©leste","CÃ©lestin","CÃ©lien","CÃ©saire","CÃ©sar","Charles","Charlemagne","Childebert","ChilpÃ©ric","ChrÃ©tien","Christian","Christodule","Christophe","Chrysostome","Clarence","Claude","Claudien","ClÃ©andre","ClÃ©ment","Clotaire","CÃ´me","Constance","Constant","Constantin","Corentin","Cyprien","Cyriaque","Cyrille","Cyril","Damien","Daniel","David","Delphin","Denis","DÃ©sirÃ©","Didier","DieudonnÃ©","Dimitri","Dominique","Dorian","DorothÃ©e","Edgard","Edmond","Ãdouard","ÃleuthÃ¨re","Ãlie","ÃlisÃ©e","Ãmeric","Ãmile","Ãmilien","Emmanuel","Enguerrand","Ãpiphane","Ãric","Esprit","Ernest","Ãtienne","Eubert","Eudes","Eudoxe","EugÃ¨ne","EusÃ¨be","Eustache","Ãvariste","Ãvrard","Fabien","Fabrice","Falba","FÃ©licitÃ©","FÃ©lix","Ferdinand","Fiacre","FidÃ¨le","Firmin","Flavien","Flodoard","Florent","Florentin","Florestan","Florian","FortunÃ©","Foulques","Francisque","FranÃ§ois","FranÃ§ais","Franciscus","Francs","FrÃ©dÃ©ric","Fulbert","Fulcran","Fulgence","Gabin","Gabriel","GaÃ«l","Garnier","Gaston","Gaspard","Gatien","Gaud","Gautier","GÃ©dÃ©on","Geoffroy","Georges","GÃ©raud","GÃ©rard","Gerbert","Germain","Gervais","Ghislain","Gilbert","Gilles","Girart","Gislebert","Gondebaud","Gonthier","Gontran","Gonzague","GrÃ©goire","GuÃ©rin","Gui","Guillaume","Gustave","Guy","Guyot","Hardouin","Hector","HÃ©delin","HÃ©lier","Henri","Herbert","Herluin","HervÃ©","Hilaire","Hildebert","Hincmar","Hippolyte","HonorÃ©","Hubert","Hugues","Innocent","Isabeau","Isidore","Jacques","Japhet","Jason","Jean","Jeannel","Jeannot","JÃ©rÃ©mie","JÃ©rÃ´me","Joachim","Joanny","Job","Jocelyn","JoÃ«l","Johan","Jonas","Jonathan","Joseph","Josse","Josselin","Jourdain","Jude","JudicaÃ«l","Jules","Julien","Juste","Justin","Lambert","Landry","Laurent","Lazare","LÃ©andre","LÃ©on","LÃ©onard","LÃ©opold","Leu","Loup","Leufroy","LibÃ¨re","LiÃ©tald","Lionel","LoÃ¯c","Longin","Lorrain","Lorraine","Lothaire","Louis","Loup","Luc","Lucas","Lucien","Ludolphe","Ludovic","Macaire","Malo","Mamert","ManassÃ©","Marc","Marceau","Marcel","Marcelin","Marius","Marseille","Martial","Martin","Mathurin","Matthias","Mathias","Matthieu","Maugis","Maurice","Mauricet","Maxence","Maxime","Maximilien","Mayeul","MÃ©dÃ©ric","Melchior","Mence","Merlin","MÃ©rovÃ©e","MichaÃ«l","Michel","MoÃ¯se","Morgan","Nathan","NathanaÃ«l","Narcisse","NÃ©hÃ©mie","Nestor","Nestor","NicÃ©phore","Nicolas","NoÃ©","NoÃ«l","Norbert","Normand","Normands","Octave","Odilon","Odon","Oger","Olivier","Oury","PacÃ´me","PalÃ©mon","Parfait","Pascal","Paterne","Patrice","Paul","PÃ©pin","Perceval","PhilÃ©mon","Philibert","Philippe","PhilothÃ©e","Pie","Pierre","Pierrick","Prosper","Quentin","Raoul","RaphaÃ«l","Raymond","RÃ©gis","RÃ©jean","RÃ©mi","Renaud","RenÃ©","Reybaud","Richard","Robert","Roch","Rodolphe","Rodrigue","Roger","Roland","Romain","Romuald","RomÃ©o","Rome","Ronan","Roselin","Salomon","Samuel","Savin","Savinien","Scholastique","SÃ©bastien","SÃ©raphin","Serge","SÃ©verin","Sidoine","Sigebert","Sigismond","SilvÃ¨re","Simon","SimÃ©on","Sixte","Stanislas","StÃ©phane","Stephan","Sylvain","Sylvestre","TancrÃ¨de","Tanguy","Taurin","ThÃ©odore","ThÃ©odose","ThÃ©ophile","ThÃ©ophraste","Thibault","Thibert","Thierry","Thomas","TimolÃ©on","TimothÃ©e","Titien","Tonnin","Toussaint","Trajan","Tristan","Turold","Tim","Ulysse","Urbain","Valentin","ValÃ¨re","ValÃ©ry","Venance","Venant","Venceslas","Vianney","Victor","Victorien","Victorin","Vigile","Vincent","Vital","Vitalien","Vivien","Waleran","Wandrille","Xavier","XÃ©nophon","Yves","Zacharie","ZachÃ©","ZÃ©phirin"]
            },

            "female": {
                "en": ["Mary", "Emma", "Elizabeth", "Minnie", "Margaret", "Ida", "Alice", "Bertha", "Sarah", "Annie", "Clara", "Ella", "Florence", "Cora", "Martha", "Laura", "Nellie", "Grace", "Carrie", "Maude", "Mabel", "Bessie", "Jennie", "Gertrude", "Julia", "Hattie", "Edith", "Mattie", "Rose", "Catherine", "Lillian", "Ada", "Lillie", "Helen", "Jessie", "Louise", "Ethel", "Lula", "Myrtle", "Eva", "Frances", "Lena", "Lucy", "Edna", "Maggie", "Pearl", "Daisy", "Fannie", "Josephine", "Dora", "Rosa", "Katherine", "Agnes", "Marie", "Nora", "May", "Mamie", "Blanche", "Stella", "Ellen", "Nancy", "Effie", "Sallie", "Nettie", "Della", "Lizzie", "Flora", "Susie", "Maud", "Mae", "Etta", "Harriet", "Sadie", "Caroline", "Katie", "Lydia", "Elsie", "Kate", "Susan", "Mollie", "Alma", "Addie", "Georgia", "Eliza", "Lulu", "Nannie", "Lottie", "Amanda", "Belle", "Charlotte", "Rebecca", "Ruth", "Viola", "Olive", "Amelia", "Hannah", "Jane", "Virginia", "Emily", "Matilda", "Irene", "Kathryn", "Esther", "Willie", "Henrietta", "Ollie", "Amy", "Rachel", "Sara", "Estella", "Theresa", "Augusta", "Ora", "Pauline", "Josie", "Lola", "Sophia", "Leona", "Anne", "Mildred", "Ann", "Beulah", "Callie", "Lou", "Delia", "Eleanor", "Barbara", "Iva", "Louisa", "Maria", "Mayme", "Evelyn", "Estelle", "Nina", "Betty", "Marion", "Bettie", "Dorothy", "Luella", "Inez", "Lela", "Rosie", "Allie", "Millie", "Janie", "Cornelia", "Victoria", "Ruby", "Winifred", "Alta", "Celia", "Christine", "Beatrice", "Birdie", "Harriett", "Mable", "Myra", "Sophie", "Tillie", "Isabel", "Sylvia", "Carolyn", "Isabelle", "Leila", "Sally", "Ina", "Essie", "Bertie", "Nell", "Alberta", "Katharine", "Lora", "Rena", "Mina", "Rhoda", "Mathilda", "Abbie", "Eula", "Dollie", "Hettie", "Eunice", "Fanny", "Ola", "Lenora", "Adelaide", "Christina", "Lelia", "Nelle", "Sue", "Johanna", "Lilly", "Lucinda", "Minerva", "Lettie", "Roxie", "Cynthia", "Helena", "Hilda", "Hulda", "Bernice", "Genevieve", "Jean", "Cordelia", "Marian", "Francis", "Jeanette", "Adeline", "Gussie", "Leah", "Lois", "Lura", "Mittie", "Hallie", "Isabella", "Olga", "Phoebe", "Teresa", "Hester", "Lida", "Lina", "Winnie", "Claudia", "Marguerite", "Vera", "Cecelia", "Bess", "Emilie", "Rosetta", "Verna", "Myrtie", "Cecilia", "Elva", "Olivia", "Ophelia", "Georgie", "Elnora", "Violet", "Adele", "Lily", "Linnie", "Loretta", "Madge", "Polly", "Virgie", "Eugenia", "Lucile", "Lucille", "Mabelle", "Rosalie"],
                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162
                "it": ["Ada", "Adriana", "Alessandra", "Alessia", "Alice", "Angela", "Anna", "Anna Maria", "Annalisa", "Annita", "Annunziata", "Antonella", "Arianna", "Asia", "Assunta", "Aurora", "Barbara", "Beatrice", "Benedetta", "Bianca", "Bruna", "Camilla", "Carla", "Carlotta", "Carmela", "Carolina", "Caterina", "Catia", "Cecilia", "Chiara", "Cinzia", "Clara", "Claudia", "Costanza", "Cristina", "Daniela", "Debora", "Diletta", "Dina", "Donatella", "Elena", "Eleonora", "Elisa", "Elisabetta", "Emanuela", "Emma", "Eva", "Federica", "Fernanda", "Fiorella", "Fiorenza", "Flora", "Franca", "Francesca", "Gabriella", "Gaia", "Gemma", "Giada", "Gianna", "Gina", "Ginevra", "Giorgia", "Giovanna", "Giulia", "Giuliana", "Giuseppa", "Giuseppina", "Grazia", "Graziella", "Greta", "Ida", "Ilaria", "Ines", "Iolanda", "Irene", "Irma", "Isabella", "Jessica", "Laura", "Lea", "Letizia", "Licia", "Lidia", "Liliana", "Lina", "Linda", "Lisa", "Livia", "Loretta", "Luana", "Lucia", "Luciana", "Lucrezia", "Luisa", "Manuela", "Mara", "Marcella", "Margherita", "Maria", "Maria Cristina", "Maria Grazia", "Maria Luisa", "Maria Pia", "Maria Teresa", "Marina", "Marisa", "Marta", "Martina", "Marzia", "Matilde", "Melissa", "Michela", "Milena", "Mirella", "Monica", "Natalina", "Nella", "Nicoletta", "Noemi", "Olga", "Paola", "Patrizia", "Piera", "Pierina", "Raffaella", "Rebecca", "Renata", "Rina", "Rita", "Roberta", "Rosa", "Rosanna", "Rossana", "Rossella", "Sabrina", "Sandra", "Sara", "Serena", "Silvana", "Silvia", "Simona", "Simonetta", "Sofia", "Sonia", "Stefania", "Susanna", "Teresa", "Tina", "Tiziana", "Tosca", "Valentina", "Valeria", "Vanda", "Vanessa", "Vanna", "Vera", "Veronica", "Vilma", "Viola", "Virginia", "Vittoria"],
                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html
                "nl": ["Ada", "Arianne", "Afke", "Amanda", "Amber", "Amy", "Aniek", "Anita", "Anja", "Anna", "Anne", "Annelies", "Annemarie", "Annette", "Anouk", "Astrid", "Aukje", "Barbara", "Bianca", "Carla", "Carlijn", "Carolien", "Chantal", "Charlotte", "Claudia", "DaniÃ«lle", "Debora", "Diane", "Dora", "Eline", "Elise", "Ella", "Ellen", "Emma", "Esmee", "Evelien", "Esther", "Erica", "Eva", "Femke", "Fleur", "Floor", "Froukje", "Gea", "Gerda", "Hanna", "Hanneke", "Heleen", "Hilde", "Ilona", "Ina", "Inge", "Ingrid", "Iris", "Isabel", "Isabelle", "Janneke", "Jasmijn", "Jeanine", "Jennifer", "Jessica", "Johanna", "Joke", "Julia", "Julie", "Karen", "Karin", "Katja", "Kim", "Lara", "Laura", "Lena", "Lianne", "Lieke", "Lilian", "Linda", "Lisa", "Lisanne", "Lotte", "Louise", "Maaike", "Manon", "Marga", "Maria", "Marissa", "Marit", "Marjolein", "Martine", "Marleen", "Melissa", "Merel", "Miranda", "Michelle", "Mirjam", "Mirthe", "Naomi", "Natalie", 'Nienke', "Nina", "Noortje", "Olivia", "Patricia", "Paula", "Paulien", "Ramona", "Ria", "Rianne", "Roos", "Rosanne", "Ruth", "Sabrina", "Sandra", "Sanne", "Sara", "Saskia", "Silvia", "Sofia", "Sophie", "Sonja", "Suzanne", "Tamara", "Tess", "Tessa", "Tineke", "Valerie", "Vanessa", "Veerle", "Vera", "Victoria", "Wendy", "Willeke", "Yvonne", "ZoÃ«"],
                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie
                "fr": ["Abdon","Abel","AbigaÃ«lle","AbigaÃ¯l","Acacius","Acanthe","Adalbert","Adalsinde","Adegrine","AdÃ©laÃ¯de","AdÃ¨le","AdÃ©lie","Adeline","Adeltrude","Adolphe","Adonis","AdrastÃ©e","Adrehilde","Adrienne","Agathe","Agilbert","AglaÃ©","Aignan","AgneflÃ¨te","AgnÃ¨s","Agrippine","AimÃ©","Alaine","AlaÃ¯s","Albane","AlbÃ©rade","Alberte","Alcide","Alcine","Alcyone","Aldegonde","Aleth","Alexandrine","Alexine","Alice","AliÃ©nor","Aliette","Aline","Alix","AlizÃ©","AloÃ¯se","Aloyse","Alphonsine","AlthÃ©e","Amaliane","AmalthÃ©e","Amande","Amandine","Amant","Amarande","Amaranthe","Amaryllis","Ambre","Ambroisie","AmÃ©lie","AmÃ©thyste","Aminte","AnaÃ«l","AnaÃ¯s","Anastasie","Anatole","Ancelin","AndrÃ©e","AnÃ©mone","AngadrÃªme","AngÃ¨le","Angeline","AngÃ©lique","Angilbert","Anicet","Annabelle","Anne","Annette","Annick","Annie","Annonciade","Ansbert","Anstrudie","Anthelme","Antigone","Antoinette","Antonine","AphÃ©lie","Apolline","Apollonie","Aquiline","Arabelle","Arcadie","Archange","Argine","Ariane","Aricie","Ariel","Arielle","Arlette","Armance","Armande","Armandine","Armelle","Armide","Armelle","Armin","Arnaud","ArsÃ¨ne","ArsinoÃ©","ArtÃ©mis","Arthur","Ascelin","Ascension","Assomption","AstartÃ©","AstÃ©rie","AstrÃ©e","Astrid","Athalie","Athanasie","Athina","Aube","Albert","Aude","Audrey","Augustine","Aure","AurÃ©lie","AurÃ©lien","AurÃ¨le","Aurore","Auxence","Aveline","AbigaÃ«lle","Avoye","Axelle","Aymard","AzalÃ©e","AdÃ¨le","Adeline","Barbe","Basilisse","Bathilde","BÃ©atrice","BÃ©atrix","BÃ©nÃ©dicte","BÃ©rengÃ¨re","Bernadette","Berthe","Bertille","Beuve","Blanche","Blanc","Blandine","Brigitte","Brune","Brunehilde","Callista","Camille","Capucine","Carine","Caroline","Cassandre","Catherine","CÃ©cile","CÃ©leste","CÃ©lestine","CÃ©line","Chantal","CharlÃ¨ne","Charline","Charlotte","ChloÃ©","Christelle","Christiane","Christine","Claire","Clara","Claude","Claudine","Clarisse","ClÃ©mence","ClÃ©mentine","ClÃ©o","Clio","Clotilde","Coline","Conception","Constance","Coralie","Coraline","Corentine","Corinne","Cyrielle","Daniel","Daniel","DaphnÃ©","DÃ©bora","Delphine","Denise","Diane","DieudonnÃ©","Dominique","Doriane","DorothÃ©e","Douce","Ãdith","EdmÃ©e","ÃlÃ©onore","Ãliane","Ãlia","Ãliette","Ãlisabeth","Ãlise","Ella","Ãlodie","ÃloÃ¯se","Elsa","Ãmeline","ÃmÃ©rance","ÃmÃ©rentienne","ÃmÃ©rencie","Ãmilie","Emma","Emmanuelle","Emmelie","Ernestine","Esther","Estelle","Eudoxie","EugÃ©nie","Eulalie","Euphrasie","EusÃ©bie","ÃvangÃ©line","Eva","Ãve","Ãvelyne","Fanny","Fantine","Faustine","FÃ©licie","Fernande","Flavie","Fleur","Flore","Florence","Florie","FortunÃ©","France","Francia","FranÃ§oise","Francine","Gabrielle","GaÃ«lle","Garance","GeneviÃ¨ve","Georgette","Gerberge","Germaine","Gertrude","GisÃ¨le","GueniÃ¨vre","Guilhemine","Guillemette","Gustave","Gwenael","HÃ©lÃ¨ne","HÃ©loÃ¯se","Henriette","Hermine","Hermione","Hippolyte","Honorine","Hortense","Huguette","Ines","IrÃ¨ne","Irina","Iris","Isabeau","Isabelle","Iseult","Isolde","IsmÃ©rie","Jacinthe","Jacqueline","Jade","Janine","Jeanne","Jocelyne","JoÃ«lle","JosÃ©phine","Judith","Julia","Julie","Jules","Juliette","Justine","Katy","Kathy","Katie","Laura","Laure","Laureline","Laurence","Laurene","Lauriane","Laurianne","Laurine","LÃ©a","LÃ©na","LÃ©onie","LÃ©on","LÃ©ontine","Lorraine","Lucie","Lucienne","Lucille","Ludivine","Lydie","Lydie","Megane","Madeleine","Magali","Maguelone","Mallaury","Manon","Marceline","Margot","Marguerite","Marianne","Marie","Myriam","Marie","Marine","Marion","MarlÃ¨ne","Marthe","Martine","Mathilde","Maud","Maureen","Mauricette","Maxime","MÃ©lanie","Melissa","MÃ©lissandre","MÃ©lisande","MÃ©lodie","Michel","Micheline","Mireille","Miriam","MoÃ¯se","Monique","Morgane","Muriel","MylÃ¨ne","NadÃ¨ge","Nadine","Nathalie","Nicole","Nicolette","Nine","NoÃ«l","NoÃ©mie","OcÃ©ane","Odette","Odile","Olive","Olivia","Olympe","Ombline","Ombeline","OphÃ©lie","Oriande","Oriane","Ozanne","Pascale","Pascaline","Paule","Paulette","Pauline","Priscille","Prisca","Prisque","PÃ©cine","PÃ©lagie","PÃ©nÃ©lope","Perrine","PÃ©tronille","Philippine","PhilomÃ¨ne","PhilothÃ©e","Primerose","Prudence","PulchÃ©rie","Quentine","QuiÃ©ta","Quintia","Quintilla","Rachel","RaphaÃ«lle","Raymonde","Rebecca","RÃ©gine","RÃ©jeanne","RenÃ©","Rita","Rita","Rolande","Romane","Rosalie","Rose","Roseline","Sabine","SalomÃ©","Sandra","Sandrine","Sarah","SÃ©golÃ¨ne","SÃ©verine","Sibylle","Simone","Sixt","Solange","Soline","SolÃ¨ne","Sophie","StÃ©phanie","Suzanne","Sylvain","Sylvie","Tatiana","ThaÃ¯s","ThÃ©odora","ThÃ©rÃ¨se","Tiphaine","Ursule","Valentine","ValÃ©rie","VÃ©ronique","Victoire","Victorine","Vinciane","Violette","Virginie","Viviane","XaviÃ¨re","Yolande","Ysaline","Yvette","Yvonne","ZÃ©lie","Zita","ZoÃ©"]
            }
        },

        lastNames: {
            "en": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],
                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)
            "it": ["Acciai", "Aglietti", "Agostini", "Agresti", "Ahmed", "Aiazzi", "Albanese", "Alberti", "Alessi", "Alfani", "Alinari", "Alterini", "Amato", "Ammannati", "Ancillotti", "Andrei", "Andreini", "Andreoni", "Angeli", "Anichini", "Antonelli", "Antonini", "Arena", "Ariani", "Arnetoli", "Arrighi", "Baccani", "Baccetti", "Bacci", "Bacherini", "Badii", "Baggiani", "Baglioni", "Bagni", "Bagnoli", "Baldassini", "Baldi", "Baldini", "Ballerini", "Balli", "Ballini", "Balloni", "Bambi", "Banchi", "Bandinelli", "Bandini", "Bani", "Barbetti", "Barbieri", "Barchielli", "Bardazzi", "Bardelli", "Bardi", "Barducci", "Bargellini", "Bargiacchi", "Barni", "Baroncelli", "Baroncini", "Barone", "Baroni", "Baronti", "Bartalesi", "Bartoletti", "Bartoli", "Bartolini", "Bartoloni", "Bartolozzi", "Basagni", "Basile", "Bassi", "Batacchi", "Battaglia", "Battaglini", "Bausi", "Becagli", "Becattini", "Becchi", "Becucci", "Bellandi", "Bellesi", "Belli", "Bellini", "Bellucci", "Bencini", "Benedetti", "Benelli", "Beni", "Benini", "Bensi", "Benucci", "Benvenuti", "Berlincioni", "Bernacchioni", "Bernardi", "Bernardini", "Berni", "Bernini", "Bertelli", "Berti", "Bertini", "Bessi", "Betti", "Bettini", "Biagi", "Biagini", "Biagioni", "Biagiotti", "Biancalani", "Bianchi", "Bianchini", "Bianco", "Biffoli", "Bigazzi", "Bigi", "Biliotti", "Billi", "Binazzi", "Bindi", "Bini", "Biondi", "Bizzarri", "Bocci", "Bogani", "Bolognesi", "Bonaiuti", "Bonanni", "Bonciani", "Boncinelli", "Bondi", "Bonechi", "Bongini", "Boni", "Bonini", "Borchi", "Boretti", "Borghi", "Borghini", "Borgioli", "Borri", "Borselli", "Boschi", "Bottai", "Bracci", "Braccini", "Brandi", "Braschi", "Bravi", "Brazzini", "Breschi", "Brilli", "Brizzi", "Brogelli", "Brogi", "Brogioni", "Brunelli", "Brunetti", "Bruni", "Bruno", "Brunori", "Bruschi", "Bucci", "Bucciarelli", "Buccioni", "Bucelli", "Bulli", "Burberi", "Burchi", "Burgassi", "Burroni", "Bussotti", "Buti", "Caciolli", "Caiani", "Calabrese", "Calamai", "Calamandrei", "Caldini", "Calo'", "Calonaci", "Calosi", "Calvelli", "Cambi", "Camiciottoli", "Cammelli", "Cammilli", "Campolmi", "Cantini", "Capanni", "Capecchi", "Caponi", "Cappelletti", "Cappelli", "Cappellini", "Cappugi", "Capretti", "Caputo", "Carbone", "Carboni", "Cardini", "Carlesi", "Carletti", "Carli", "Caroti", "Carotti", "Carrai", "Carraresi", "Carta", "Caruso", "Casalini", "Casati", "Caselli", "Casini", "Castagnoli", "Castellani", "Castelli", "Castellucci", "Catalano", "Catarzi", "Catelani", "Cavaciocchi", "Cavallaro", "Cavallini", "Cavicchi", "Cavini", "Ceccarelli", "Ceccatelli", "Ceccherelli", "Ceccherini", "Cecchi", "Cecchini", "Cecconi", "Cei", "Cellai", "Celli", "Cellini", "Cencetti", "Ceni", "Cenni", "Cerbai", "Cesari", "Ceseri", "Checcacci", "Checchi", "Checcucci", "Cheli", "Chellini", "Chen", "Cheng", "Cherici", "Cherubini", "Chiaramonti", "Chiarantini", "Chiarelli", "Chiari", "Chiarini", "Chiarugi", "Chiavacci", "Chiesi", "Chimenti", "Chini", "Chirici", "Chiti", "Ciabatti", "Ciampi", "Cianchi", "Cianfanelli", "Cianferoni", "Ciani", "Ciapetti", "Ciappi", "Ciardi", "Ciatti", "Cicali", "Ciccone", "Cinelli", "Cini", "Ciobanu", "Ciolli", "Cioni", "Cipriani", "Cirillo", "Cirri", "Ciucchi", "Ciuffi", "Ciulli", "Ciullini", "Clemente", "Cocchi", "Cognome", "Coli", "Collini", "Colombo", "Colzi", "Comparini", "Conforti", "Consigli", "Conte", "Conti", "Contini", "Coppini", "Coppola", "Corsi", "Corsini", "Corti", "Cortini", "Cosi", "Costa", "Costantini", "Costantino", "Cozzi", "Cresci", "Crescioli", "Cresti", "Crini", "Curradi", "D'Agostino", "D'Alessandro", "D'Amico", "D'Angelo", "Daddi", "Dainelli", "Dallai", "Danti", "Davitti", "De Angelis", "De Luca", "De Marco", "De Rosa", "De Santis", "De Simone", "De Vita", "Degl'Innocenti", "Degli Innocenti", "Dei", "Del Lungo", "Del Re", "Di Marco", "Di Stefano", "Dini", "Diop", "Dobre", "Dolfi", "Donati", "Dondoli", "Dong", "Donnini", "Ducci", "Dumitru", "Ermini", "Esposito", "Evangelisti", "Fabbri", "Fabbrini", "Fabbrizzi", "Fabbroni", "Fabbrucci", "Fabiani", "Facchini", "Faggi", "Fagioli", "Failli", "Faini", "Falciani", "Falcini", "Falcone", "Fallani", "Falorni", "Falsini", "Falugiani", "Fancelli", "Fanelli", "Fanetti", "Fanfani", "Fani", "Fantappie'", "Fantechi", "Fanti", "Fantini", "Fantoni", "Farina", "Fattori", "Favilli", "Fedi", "Fei", "Ferrante", "Ferrara", "Ferrari", "Ferraro", "Ferretti", "Ferri", "Ferrini", "Ferroni", "Fiaschi", "Fibbi", "Fiesoli", "Filippi", "Filippini", "Fini", "Fioravanti", "Fiore", "Fiorentini", "Fiorini", "Fissi", "Focardi", "Foggi", "Fontana", "Fontanelli", "Fontani", "Forconi", "Formigli", "Forte", "Forti", "Fortini", "Fossati", "Fossi", "Francalanci", "Franceschi", "Franceschini", "Franchi", "Franchini", "Franci", "Francini", "Francioni", "Franco", "Frassineti", "Frati", "Fratini", "Frilli", "Frizzi", "Frosali", "Frosini", "Frullini", "Fusco", "Fusi", "Gabbrielli", "Gabellini", "Gagliardi", "Galanti", "Galardi", "Galeotti", "Galletti", "Galli", "Gallo", "Gallori", "Gambacciani", "Gargani", "Garofalo", "Garuglieri", "Gashi", "Gasperini", "Gatti", "Gelli", "Gensini", "Gentile", "Gentili", "Geri", "Gerini", "Gheri", "Ghini", "Giachetti", "Giachi", "Giacomelli", "Gianassi", "Giani", "Giannelli", "Giannetti", "Gianni", "Giannini", "Giannoni", "Giannotti", "Giannozzi", "Gigli", "Giordano", "Giorgetti", "Giorgi", "Giovacchini", "Giovannelli", "Giovannetti", "Giovannini", "Giovannoni", "Giuliani", "Giunti", "Giuntini", "Giusti", "Gonnelli", "Goretti", "Gori", "Gradi", "Gramigni", "Grassi", "Grasso", "Graziani", "Grazzini", "Greco", "Grifoni", "Grillo", "Grimaldi", "Grossi", "Gualtieri", "Guarducci", "Guarino", "Guarnieri", "Guasti", "Guerra", "Guerri", "Guerrini", "Guidi", "Guidotti", "He", "Hoxha", "Hu", "Huang", "Iandelli", "Ignesti", "Innocenti", "Jin", "La Rosa", "Lai", "Landi", "Landini", "Lanini", "Lapi", "Lapini", "Lari", "Lascialfari", "Lastrucci", "Latini", "Lazzeri", "Lazzerini", "Lelli", "Lenzi", "Leonardi", "Leoncini", "Leone", "Leoni", "Lepri", "Li", "Liao", "Lin", "Linari", "Lippi", "Lisi", "Livi", "Lombardi", "Lombardini", "Lombardo", "Longo", "Lopez", "Lorenzi", "Lorenzini", "Lorini", "Lotti", "Lu", "Lucchesi", "Lucherini", "Lunghi", "Lupi", "Madiai", "Maestrini", "Maffei", "Maggi", "Maggini", "Magherini", "Magini", "Magnani", "Magnelli", "Magni", "Magnolfi", "Magrini", "Malavolti", "Malevolti", "Manca", "Mancini", "Manetti", "Manfredi", "Mangani", "Mannelli", "Manni", "Mannini", "Mannucci", "Manuelli", "Manzini", "Marcelli", "Marchese", "Marchetti", "Marchi", "Marchiani", "Marchionni", "Marconi", "Marcucci", "Margheri", "Mari", "Mariani", "Marilli", "Marinai", "Marinari", "Marinelli", "Marini", "Marino", "Mariotti", "Marsili", "Martelli", "Martinelli", "Martini", "Martino", "Marzi", "Masi", "Masini", "Masoni", "Massai", "Materassi", "Mattei", "Matteini", "Matteucci", "Matteuzzi", "Mattioli", "Mattolini", "Matucci", "Mauro", "Mazzanti", "Mazzei", "Mazzetti", "Mazzi", "Mazzini", "Mazzocchi", "Mazzoli", "Mazzoni", "Mazzuoli", "Meacci", "Mecocci", "Meini", "Melani", "Mele", "Meli", "Mengoni", "Menichetti", "Meoni", "Merlini", "Messeri", "Messina", "Meucci", "Miccinesi", "Miceli", "Micheli", "Michelini", "Michelozzi", "Migliori", "Migliorini", "Milani", "Miniati", "Misuri", "Monaco", "Montagnani", "Montagni", "Montanari", "Montelatici", "Monti", "Montigiani", "Montini", "Morandi", "Morandini", "Morelli", "Moretti", "Morganti", "Mori", "Morini", "Moroni", "Morozzi", "Mugnai", "Mugnaini", "Mustafa", "Naldi", "Naldini", "Nannelli", "Nanni", "Nannini", "Nannucci", "Nardi", "Nardini", "Nardoni", "Natali", "Ndiaye", "Nencetti", "Nencini", "Nencioni", "Neri", "Nesi", "Nesti", "Niccolai", "Niccoli", "Niccolini", "Nigi", "Nistri", "Nocentini", "Noferini", "Novelli", "Nucci", "Nuti", "Nutini", "Oliva", "Olivieri", "Olmi", "Orlandi", "Orlandini", "Orlando", "Orsini", "Ortolani", "Ottanelli", "Pacciani", "Pace", "Paci", "Pacini", "Pagani", "Pagano", "Paggetti", "Pagliai", "Pagni", "Pagnini", "Paladini", "Palagi", "Palchetti", "Palloni", "Palmieri", "Palumbo", "Pampaloni", "Pancani", "Pandolfi", "Pandolfini", "Panerai", "Panichi", "Paoletti", "Paoli", "Paolini", "Papi", "Papini", "Papucci", "Parenti", "Parigi", "Parisi", "Parri", "Parrini", "Pasquini", "Passeri", "Pecchioli", "Pecorini", "Pellegrini", "Pepi", "Perini", "Perrone", "Peruzzi", "Pesci", "Pestelli", "Petri", "Petrini", "Petrucci", "Pettini", "Pezzati", "Pezzatini", "Piani", "Piazza", "Piazzesi", "Piazzini", "Piccardi", "Picchi", "Piccini", "Piccioli", "Pieraccini", "Pieraccioni", "Pieralli", "Pierattini", "Pieri", "Pierini", "Pieroni", "Pietrini", "Pini", "Pinna", "Pinto", "Pinzani", "Pinzauti", "Piras", "Pisani", "Pistolesi", "Poggesi", "Poggi", "Poggiali", "Poggiolini", "Poli", "Pollastri", "Porciani", "Pozzi", "Pratellesi", "Pratesi", "Prosperi", "Pruneti", "Pucci", "Puccini", "Puccioni", "Pugi", "Pugliese", "Puliti", "Querci", "Quercioli", "Raddi", "Radu", "Raffaelli", "Ragazzini", "Ranfagni", "Ranieri", "Rastrelli", "Raugei", "Raveggi", "Renai", "Renzi", "Rettori", "Ricci", "Ricciardi", "Ridi", "Ridolfi", "Rigacci", "Righi", "Righini", "Rinaldi", "Risaliti", "Ristori", "Rizzo", "Rocchi", "Rocchini", "Rogai", "Romagnoli", "Romanelli", "Romani", "Romano", "Romei", "Romeo", "Romiti", "Romoli", "Romolini", "Rontini", "Rosati", "Roselli", "Rosi", "Rossetti", "Rossi", "Rossini", "Rovai", "Ruggeri", "Ruggiero", "Russo", "Sabatini", "Saccardi", "Sacchetti", "Sacchi", "Sacco", "Salerno", "Salimbeni", "Salucci", "Salvadori", "Salvestrini", "Salvi", "Salvini", "Sanesi", "Sani", "Sanna", "Santi", "Santini", "Santoni", "Santoro", "Santucci", "Sardi", "Sarri", "Sarti", "Sassi", "Sbolci", "Scali", "Scarpelli", "Scarselli", "Scopetani", "Secci", "Selvi", "Senatori", "Senesi", "Serafini", "Sereni", "Serra", "Sestini", "Sguanci", "Sieni", "Signorini", "Silvestri", "Simoncini", "Simonetti", "Simoni", "Singh", "Sodi", "Soldi", "Somigli", "Sorbi", "Sorelli", "Sorrentino", "Sottili", "Spina", "Spinelli", "Staccioli", "Staderini", "Stefanelli", "Stefani", "Stefanini", "Stella", "Susini", "Tacchi", "Tacconi", "Taddei", "Tagliaferri", "Tamburini", "Tanganelli", "Tani", "Tanini", "Tapinassi", "Tarchi", "Tarchiani", "Targioni", "Tassi", "Tassini", "Tempesti", "Terzani", "Tesi", "Testa", "Testi", "Tilli", "Tinti", "Tirinnanzi", "Toccafondi", "Tofanari", "Tofani", "Tognaccini", "Tonelli", "Tonini", "Torelli", "Torrini", "Tosi", "Toti", "Tozzi", "Trambusti", "Trapani", "Tucci", "Turchi", "Ugolini", "Ulivi", "Valente", "Valenti", "Valentini", "Vangelisti", "Vanni", "Vannini", "Vannoni", "Vannozzi", "Vannucchi", "Vannucci", "Ventura", "Venturi", "Venturini", "Vestri", "Vettori", "Vichi", "Viciani", "Vieri", "Vigiani", "Vignoli", "Vignolini", "Vignozzi", "Villani", "Vinci", "Visani", "Vitale", "Vitali", "Viti", "Viviani", "Vivoli", "Volpe", "Volpi", "Wang", "Wu", "Xu", "Yang", "Ye", "Zagli", "Zani", "Zanieri", "Zanobini", "Zecchi", "Zetti", "Zhang", "Zheng", "Zhou", "Zhu", "Zingoni", "Zini", "Zoppi"],
            // http://www.voornamelijk.nl/meest-voorkomende-achternamen-in-nederland-en-amsterdam/
            "nl":["Albers", "Alblas", "Appelman", "Baars", "Baas", "Bakker", "Blank", "Bleeker", "Blok", "Blom", "Boer", "Boers", "Boldewijn", "Boon", "Boot", "Bos", "Bosch", "Bosma", "Bosman", "Bouma", "Bouman", "Bouwman", "Brands", "Brouwer", "Burger", "Buijs", "Buitenhuis", "Ceder", "Cohen", "Dekker", "Dekkers", "Dijkman", "Dijkstra", "Driessen", "Drost", "Engel", "Evers", "Faber", "Franke", "Gerritsen", "Goedhart", "Goossens", "Groen", "Groenenberg", "Groot", "Haan", "Hart", "Heemskerk", "Hendriks", "Hermans", "Hoekstra", "Hofman", "Hopman", "Huisman", "Jacobs", "Jansen", "Janssen", "Jonker", "Jaspers", "Keijzer", "Klaassen", "Klein", "Koek", "Koenders", "Kok", "Kool", "Koopman", "Koopmans", "Koning", "Koster", "Kramer", "Kroon", "Kuijpers", "Kuiper", "Kuipers", "Kurt", "Koster", "Kwakman", "Los", "Lubbers", "Maas", "Markus", "Martens", "Meijer", "Mol", "Molenaar", "Mulder", "Nieuwenhuis", "Peeters", "Peters", "Pengel", "Pieters", "Pool", "Post", "Postma", "Prins", "Pronk", "Reijnders", "Rietveld", "Roest", "Roos", "Sanders", "Schaap", "Scheffer", "Schenk", "Schilder", "Schipper", "Schmidt", "Scholten", "Schouten", "Schut", "Schutte", "Schuurman", "Simons", "Smeets", "Smit", "Smits", "Snel", "Swinkels", "Tas", "Terpstra", "Timmermans", "Tol", "Tromp", "Troost", "Valk", "Veenstra", "Veldkamp", "Verbeek", "Verheul", "Verhoeven", "Vermeer", "Vermeulen", "Verweij", "Vink", "Visser", "Voorn", "Vos", "Wagenaar", "Wiersema", "Willems", "Willemsen", "Witteveen", "Wolff", "Wolters", "Zijlstra", "Zwart", "de Beer", "de Boer", "de Bruijn", "de Bruin", "de Graaf", "de Groot", "de Haan", "de Haas", "de Jager", "de Jong", "de Jonge", "de Koning", "de Lange", "de Leeuw", "de Ridder", "de Rooij", "de Ruiter", "de Vos", "de Vries", "de Waal", "de Wit", "de Zwart", "van Beek", "van Boven", "van Dam", "van Dijk", "van Dongen", "van Doorn", "van Egmond", "van Eijk", "van Es", "van Gelder", "van Gelderen", "van Houten", "van Hulst", "van Kempen", "van Kesteren", "van Leeuwen", "van Loon", "van Mill", "van Noord", "van Ommen", "van Ommeren", "van Oosten", "van Oostveen", "van Rijn", "van Schaik", "van Veen", "van Vliet", "van Wijk", "van Wijngaarden", "van den Poel", "van de Pol", "van den Ploeg", "van de Ven", "van den Berg", "van den Bosch", "van den Brink", "van den Broek", "van den Heuvel", "van der Heijden", "van der Horst", "van der Hulst", "van der Kroon", "van der Laan", "van der Linden", "van der Meer", "van der Meij", "van der Meulen", "van der Molen", "van der Sluis", "van der Spek", "van der Veen", "van der Velde", "van der Velden", "van der Vliet", "van der Wal"],
            // https://surnames.behindthename.com/top/lists/england-wales/1991
            "uk":["Smith","Jones","Williams","Taylor","Brown","Davies","Evans","Wilson","Thomas","Johnson","Roberts","Robinson","Thompson","Wright","Walker","White","Edwards","Hughes","Green","Hall","Lewis","Harris","Clarke","Patel","Jackson","Wood","Turner","Martin","Cooper","Hill","Ward","Morris","Moore","Clark","Lee","King","Baker","Harrison","Morgan","Allen","James","Scott","Phillips","Watson","Davis","Parker","Price","Bennett","Young","Griffiths","Mitchell","Kelly","Cook","Carter","Richardson","Bailey","Collins","Bell","Shaw","Murphy","Miller","Cox","Richards","Khan","Marshall","Anderson","Simpson","Ellis","Adams","Singh","Begum","Wilkinson","Foster","Chapman","Powell","Webb","Rogers","Gray","Mason","Ali","Hunt","Hussain","Campbell","Matthews","Owen","Palmer","Holmes","Mills","Barnes","Knight","Lloyd","Butler","Russell","Barker","Fisher","Stevens","Jenkins","Murray","Dixon","Harvey","Graham","Pearson","Ahmed","Fletcher","Walsh","Kaur","Gibson","Howard","Andrews","Stewart","Elliott","Reynolds","Saunders","Payne","Fox","Ford","Pearce","Day","Brooks","West","Lawrence","Cole","Atkinson","Bradley","Spencer","Gill","Dawson","Ball","Burton","O'brien","Watts","Rose","Booth","Perry","Ryan","Grant","Wells","Armstrong","Francis","Rees","Hayes","Hart","Hudson","Newman","Barrett","Webster","Hunter","Gregory","Carr","Lowe","Page","Marsh","Riley","Dunn","Woods","Parsons","Berry","Stone","Reid","Holland","Hawkins","Harding","Porter","Robertson","Newton","Oliver","Reed","Kennedy","Williamson","Bird","Gardner","Shah","Dean","Lane","Cooke","Bates","Henderson","Parry","Burgess","Bishop","Walton","Burns","Nicholson","Shepherd","Ross","Cross","Long","Freeman","Warren","Nicholls","Hamilton","Byrne","Sutton","Mcdonald","Yates","Hodgson","Robson","Curtis","Hopkins","O'connor","Harper","Coleman","Watkins","Moss","Mccarthy","Chambers","O'neill","Griffin","Sharp","Hardy","Wheeler","Potter","Osborne","Johnston","Gordon","Doyle","Wallace","George","Jordan","Hutchinson","Rowe","Burke","May","Pritchard","Gilbert","Willis","Higgins","Read","Miles","Stevenson","Stephenson","Hammond","Arnold","Buckley","Walters","Hewitt","Barber","Nelson","Slater","Austin","Sullivan","Whitehead","Mann","Frost","Lambert","Stephens","Blake","Akhtar","Lynch","Goodwin","Barton","Woodward","Thomson","Cunningham","Quinn","Barnett","Baxter","Bibi","Clayton","Nash","Greenwood","Jennings","Holt","Kemp","Poole","Gallagher","Bond","Stokes","Tucker","Davidson","Fowler","Heath","Norman","Middleton","Lawson","Banks","French","Stanley","Jarvis","Gibbs","Ferguson","Hayward","Carroll","Douglas","Dickinson","Todd","Barlow","Peters","Lucas","Knowles","Hartley","Miah","Simmons","Morton","Alexander","Field","Morrison","Norris","Townsend","Preston","Hancock","Thornton","Baldwin","Burrows","Briggs","Parkinson","Reeves","Macdonald","Lamb","Black","Abbott","Sanders","Thorpe","Holden","Tomlinson","Perkins","Ashton","Rhodes","Fuller","Howe","Bryant","Vaughan","Dale","Davey","Weston","Bartlett","Whittaker","Davison","Kent","Skinner","Birch","Morley","Daniels","Glover","Howell","Cartwright","Pugh","Humphreys","Goddard","Brennan","Wall","Kirby","Bowen","Savage","Bull","Wong","Dobson","Smart","Wilkins","Kirk","Fraser","Duffy","Hicks","Patterson","Bradshaw","Little","Archer","Warner","Waters","O'sullivan","Farrell","Brookes","Atkins","Kay","Dodd","Bentley","Flynn","John","Schofield","Short","Haynes","Wade","Butcher","Henry","Sanderson","Crawford","Sheppard","Bolton","Coates","Giles","Gould","Houghton","Gibbons","Pratt","Manning","Law","Hooper","Noble","Dyer","Rahman","Clements","Moran","Sykes","Chan","Doherty","Connolly","Joyce","Franklin","Hobbs","Coles","Herbert","Steele","Kerr","Leach","Winter","Owens","Duncan","Naylor","Fleming","Horton","Finch","Fitzgerald","Randall","Carpenter","Marsden","Browne","Garner","Pickering","Hale","Dennis","Vincent","Chadwick","Chandler","Sharpe","Nolan","Lyons","Hurst","Collier","Peacock","Howarth","Faulkner","Rice","Pollard","Welch","Norton","Gough","Sinclair","Blackburn","Bryan","Conway","Power","Cameron","Daly","Allan","Hanson","Gardiner","Boyle","Myers","Turnbull","Wallis","Mahmood","Sims","Swift","Iqbal","Pope","Brady","Chamberlain","Rowley","Tyler","Farmer","Metcalfe","Hilton","Godfrey","Holloway","Parkin","Bray","Talbot","Donnelly","Nixon","Charlton","Benson","Whitehouse","Barry","Hope","Lord","North","Storey","Connor","Potts","Bevan","Hargreaves","Mclean","Mistry","Bruce","Howells","Hyde","Parkes","Wyatt","Fry","Lees","O'donnell","Craig","Forster","Mckenzie","Humphries","Mellor","Carey","Ingram","Summers","Leonard"],
            // https://surnames.behindthename.com/top/lists/germany/2017
            "de": ["MÃ¼ller","Schmidt","Schneider","Fischer","Weber","Meyer","Wagner","Becker","Schulz","Hoffmann","SchÃ¤fer","Koch","Bauer","Richter","Klein","Wolf","SchrÃ¶der","Neumann","Schwarz","Zimmermann","Braun","KrÃ¼ger","Hofmann","Hartmann","Lange","Schmitt","Werner","Schmitz","Krause","Meier","Lehmann","Schmid","Schulze","Maier","KÃ¶hler","Herrmann","KÃ¶nig","Walter","Mayer","Huber","Kaiser","Fuchs","Peters","Lang","Scholz","MÃ¶ller","WeiÃ","Jung","Hahn","Schubert","Vogel","Friedrich","Keller","GÃ¼nther","Frank","Berger","Winkler","Roth","Beck","Lorenz","Baumann","Franke","Albrecht","Schuster","Simon","Ludwig","BÃ¶hm","Winter","Kraus","Martin","Schumacher","KrÃ¤mer","Vogt","Stein","JÃ¤ger","Otto","Sommer","GroÃ","Seidel","Heinrich","Brandt","Haas","Schreiber","Graf","Schulte","Dietrich","Ziegler","Kuhn","KÃ¼hn","Pohl","Engel","Horn","Busch","Bergmann","Thomas","Voigt","Sauer","Arnold","Wolff","Pfeiffer"],
            // http://www.japantimes.co.jp/life/2009/10/11/lifestyle/japans-top-100-most-common-family-names/
            "jp": ["Sato","Suzuki","Takahashi","Tanaka","Watanabe","Ito","Yamamoto","Nakamura","Kobayashi","Kato","Yoshida","Yamada","Sasaki","Yamaguchi","Saito","Matsumoto","Inoue","Kimura","Hayashi","Shimizu","Yamazaki","Mori","Abe","Ikeda","Hashimoto","Yamashita","Ishikawa","Nakajima","Maeda","Fujita","Ogawa","Goto","Okada","Hasegawa","Murakami","Kondo","Ishii","Saito","Sakamoto","Endo","Aoki","Fujii","Nishimura","Fukuda","Ota","Miura","Fujiwara","Okamoto","Matsuda","Nakagawa","Nakano","Harada","Ono","Tamura","Takeuchi","Kaneko","Wada","Nakayama","Ishida","Ueda","Morita","Hara","Shibata","Sakai","Kudo","Yokoyama","Miyazaki","Miyamoto","Uchida","Takagi","Ando","Taniguchi","Ohno","Maruyama","Imai","Takada","Fujimoto","Takeda","Murata","Ueno","Sugiyama","Masuda","Sugawara","Hirano","Kojima","Otsuka","Chiba","Kubo","Matsui","Iwasaki","Sakurai","Kinoshita","Noguchi","Matsuo","Nomura","Kikuchi","Sano","Onishi","Sugimoto","Arai"],
            // http://www.lowchensaustralia.com/names/popular-spanish-names.htm
            "es": ["Garcia","Fernandez","Lopez","Martinez","Gonzalez","Rodriguez","Sanchez","Perez","Martin","Gomez","Ruiz","Diaz","Hernandez","Alvarez","Jimenez","Moreno","Munoz","Alonso","Romero","Navarro","Gutierrez","Torres","Dominguez","Gil","Vazquez","Blanco","Serrano","Ramos","Castro","Suarez","Sanz","Rubio","Ortega","Molina","Delgado","Ortiz","Morales","Ramirez","Marin","Iglesias","Santos","Castillo","Garrido","Calvo","Pena","Cruz","Cano","Nunez","Prieto","Diez","Lozano","Vidal","Pascual","Ferrer","Medina","Vega","Leon","Herrero","Vicente","Mendez","Guerrero","Fuentes","Campos","Nieto","Cortes","Caballero","Ibanez","Lorenzo","Pastor","Gimenez","Saez","Soler","Marquez","Carrasco","Herrera","Montero","Arias","Crespo","Flores","Andres","Aguilar","Hidalgo","Cabrera","Mora","Duran","Velasco","Rey","Pardo","Roman","Vila","Bravo","Merino","Moya","Soto","Izquierdo","Reyes","Redondo","Marcos","Carmona","Menendez"],
            // Data taken from https://fr.wikipedia.org/wiki/Liste_des_noms_de_famille_les_plus_courants_en_France
            "fr": ["Martin","Bernard","Thomas","Petit","Robert","Richard","Durand","Dubois","Moreau","Laurent","Simon","Michel","LefÃ¨vre","Leroy","Roux","David","Bertrand","Morel","Fournier","Girard","Bonnet","Dupont","Lambert","Fontaine","Rousseau","Vincent","MÃ¼ller","LefÃ¨vre","Faure","AndrÃ©","Mercier","Blanc","GuÃ©rin","Boyer","Garnier","Chevalier","FranÃ§ois","Legrand","Gauthier","Garcia","Perrin","Robin","ClÃ©ment","Morin","Nicolas","Henry","Roussel","Matthieu","Gautier","Masson","Marchand","Duval","Denis","Dumont","Marie","Lemaire","NoÃ«l","Meyer","Dufour","Meunier","Brun","Blanchard","Giraud","Joly","RiviÃ¨re","Lucas","Brunet","Gaillard","Barbier","Arnaud","MartÃ­nez","GÃ©rard","Roche","Renard","Schmitt","Roy","Leroux","Colin","Vidal","Caron","Picard","Roger","Fabre","Aubert","Lemoine","Renaud","Dumas","Lacroix","Olivier","Philippe","Bourgeois","Pierre","BenoÃ®t","Rey","Leclerc","Payet","Rolland","Leclercq","Guillaume","Lecomte","LÃ³pez","Jean","Dupuy","Guillot","Hubert","Berger","Carpentier","SÃ¡nchez","Dupuis","Moulin","Louis","Deschamps","Huet","Vasseur","Perez","Boucher","Fleury","Royer","Klein","Jacquet","Adam","Paris","Poirier","Marty","Aubry","Guyot","CarrÃ©","Charles","Renault","Charpentier","MÃ©nard","Maillard","Baron","Bertin","Bailly","HervÃ©","Schneider","FernÃ¡ndez","Le GallGall","Collet","LÃ©ger","Bouvier","Julien","PrÃ©vost","Millet","Perrot","Daniel","Le RouxRoux","Cousin","Germain","Breton","Besson","Langlois","RÃ©mi","Le GoffGoff","Pelletier","LÃ©vÃªque","Perrier","Leblanc","BarrÃ©","Lebrun","Marchal","Weber","Mallet","Hamon","Boulanger","Jacob","Monnier","Michaud","RodrÃ­guez","Guichard","Gillet","Ãtienne","Grondin","Poulain","Tessier","Chevallier","Collin","Chauvin","Da SilvaSilva","Bouchet","Gay","LemaÃ®tre","BÃ©nard","MarÃ©chal","Humbert","Reynaud","Antoine","Hoarau","Perret","BarthÃ©lemy","Cordier","Pichon","Lejeune","Gilbert","Lamy","Delaunay","Pasquier","Carlier","LaporteLaporte"]
        },

        // Data taken from http://geoportal.statistics.gov.uk/datasets/ons-postcode-directory-latest-centroids
        postcodeAreas: [{code: 'AB'}, {code: 'AL'}, {code: 'B'}, {code: 'BA'}, {code: 'BB'}, {code: 'BD'}, {code: 'BH'}, {code: 'BL'}, {code: 'BN'}, {code: 'BR'}, {code: 'BS'}, {code: 'BT'}, {code: 'CA'}, {code: 'CB'}, {code: 'CF'}, {code: 'CH'}, {code: 'CM'}, {code: 'CO'}, {code: 'CR'}, {code: 'CT'}, {code: 'CV'}, {code: 'CW'}, {code: 'DA'}, {code: 'DD'}, {code: 'DE'}, {code: 'DG'}, {code: 'DH'}, {code: 'DL'}, {code: 'DN'}, {code: 'DT'}, {code: 'DY'}, {code: 'E'}, {code: 'EC'}, {code: 'EH'}, {code: 'EN'}, {code: 'EX'}, {code: 'FK'}, {code: 'FY'}, {code: 'G'}, {code: 'GL'}, {code: 'GU'}, {code: 'GY'}, {code: 'HA'}, {code: 'HD'}, {code: 'HG'}, {code: 'HP'}, {code: 'HR'}, {code: 'HS'}, {code: 'HU'}, {code: 'HX'}, {code: 'IG'}, {code: 'IM'}, {code: 'IP'}, {code: 'IV'}, {code: 'JE'}, {code: 'KA'}, {code: 'KT'}, {code: 'KW'}, {code: 'KY'}, {code: 'L'}, {code: 'LA'}, {code: 'LD'}, {code: 'LE'}, {code: 'LL'}, {code: 'LN'}, {code: 'LS'}, {code: 'LU'}, {code: 'M'}, {code: 'ME'}, {code: 'MK'}, {code: 'ML'}, {code: 'N'}, {code: 'NE'}, {code: 'NG'}, {code: 'NN'}, {code: 'NP'}, {code: 'NR'}, {code: 'NW'}, {code: 'OL'}, {code: 'OX'}, {code: 'PA'}, {code: 'PE'}, {code: 'PH'}, {code: 'PL'}, {code: 'PO'}, {code: 'PR'}, {code: 'RG'}, {code: 'RH'}, {code: 'RM'}, {code: 'S'}, {code: 'SA'}, {code: 'SE'}, {code: 'SG'}, {code: 'SK'}, {code: 'SL'}, {code: 'SM'}, {code: 'SN'}, {code: 'SO'}, {code: 'SP'}, {code: 'SR'}, {code: 'SS'}, {code: 'ST'}, {code: 'SW'}, {code: 'SY'}, {code: 'TA'}, {code: 'TD'}, {code: 'TF'}, {code: 'TN'}, {code: 'TQ'}, {code: 'TR'}, {code: 'TS'}, {code: 'TW'}, {code: 'UB'}, {code: 'W'}, {code: 'WA'}, {code: 'WC'}, {code: 'WD'}, {code: 'WF'}, {code: 'WN'}, {code: 'WR'}, {code: 'WS'}, {code: 'WV'}, {code: 'YO'}, {code: 'ZE'}],

        // Data taken from https://github.com/umpirsky/country-list/blob/master/data/en_US/country.json
        countries: [{"name":"Afghanistan","abbreviation":"AF"},{"name":"Ãland Islands","abbreviation":"AX"},{"name":"Albania","abbreviation":"AL"},{"name":"Algeria","abbreviation":"DZ"},{"name":"American Samoa","abbreviation":"AS"},{"name":"Andorra","abbreviation":"AD"},{"name":"Angola","abbreviation":"AO"},{"name":"Anguilla","abbreviation":"AI"},{"name":"Antarctica","abbreviation":"AQ"},{"name":"Antigua & Barbuda","abbreviation":"AG"},{"name":"Argentina","abbreviation":"AR"},{"name":"Armenia","abbreviation":"AM"},{"name":"Aruba","abbreviation":"AW"},{"name":"Ascension Island","abbreviation":"AC"},{"name":"Australia","abbreviation":"AU"},{"name":"Austria","abbreviation":"AT"},{"name":"Azerbaijan","abbreviation":"AZ"},{"name":"Bahamas","abbreviation":"BS"},{"name":"Bahrain","abbreviation":"BH"},{"name":"Bangladesh","abbreviation":"BD"},{"name":"Barbados","abbreviation":"BB"},{"name":"Belarus","abbreviation":"BY"},{"name":"Belgium","abbreviation":"BE"},{"name":"Belize","abbreviation":"BZ"},{"name":"Benin","abbreviation":"BJ"},{"name":"Bermuda","abbreviation":"BM"},{"name":"Bhutan","abbreviation":"BT"},{"name":"Bolivia","abbreviation":"BO"},{"name":"Bosnia & Herzegovina","abbreviation":"BA"},{"name":"Botswana","abbreviation":"BW"},{"name":"Brazil","abbreviation":"BR"},{"name":"British Indian Ocean Territory","abbreviation":"IO"},{"name":"British Virgin Islands","abbreviation":"VG"},{"name":"Brunei","abbreviation":"BN"},{"name":"Bulgaria","abbreviation":"BG"},{"name":"Burkina Faso","abbreviation":"BF"},{"name":"Burundi","abbreviation":"BI"},{"name":"Cambodia","abbreviation":"KH"},{"name":"Cameroon","abbreviation":"CM"},{"name":"Canada","abbreviation":"CA"},{"name":"Canary Islands","abbreviation":"IC"},{"name":"Cape Verde","abbreviation":"CV"},{"name":"Caribbean Netherlands","abbreviation":"BQ"},{"name":"Cayman Islands","abbreviation":"KY"},{"name":"Central African Republic","abbreviation":"CF"},{"name":"Ceuta & Melilla","abbreviation":"EA"},{"name":"Chad","abbreviation":"TD"},{"name":"Chile","abbreviation":"CL"},{"name":"China","abbreviation":"CN"},{"name":"Christmas Island","abbreviation":"CX"},{"name":"Cocos (Keeling) Islands","abbreviation":"CC"},{"name":"Colombia","abbreviation":"CO"},{"name":"Comoros","abbreviation":"KM"},{"name":"Congo - Brazzaville","abbreviation":"CG"},{"name":"Congo - Kinshasa","abbreviation":"CD"},{"name":"Cook Islands","abbreviation":"CK"},{"name":"Costa Rica","abbreviation":"CR"},{"name":"CÃ´te d'Ivoire","abbreviation":"CI"},{"name":"Croatia","abbreviation":"HR"},{"name":"Cuba","abbreviation":"CU"},{"name":"CuraÃ§ao","abbreviation":"CW"},{"name":"Cyprus","abbreviation":"CY"},{"name":"Czech Republic","abbreviation":"CZ"},{"name":"Denmark","abbreviation":"DK"},{"name":"Diego Garcia","abbreviation":"DG"},{"name":"Djibouti","abbreviation":"DJ"},{"name":"Dominica","abbreviation":"DM"},{"name":"Dominican Republic","abbreviation":"DO"},{"name":"Ecuador","abbreviation":"EC"},{"name":"Egypt","abbreviation":"EG"},{"name":"El Salvador","abbreviation":"SV"},{"name":"Equatorial Guinea","abbreviation":"GQ"},{"name":"Eritrea","abbreviation":"ER"},{"name":"Estonia","abbreviation":"EE"},{"name":"Ethiopia","abbreviation":"ET"},{"name":"Falkland Islands","abbreviation":"FK"},{"name":"Faroe Islands","abbreviation":"FO"},{"name":"Fiji","abbreviation":"FJ"},{"name":"Finland","abbreviation":"FI"},{"name":"France","abbreviation":"FR"},{"name":"French Guiana","abbreviation":"GF"},{"name":"French Polynesia","abbreviation":"PF"},{"name":"French Southern Territories","abbreviation":"TF"},{"name":"Gabon","abbreviation":"GA"},{"name":"Gambia","abbreviation":"GM"},{"name":"Georgia","abbreviation":"GE"},{"name":"Germany","abbreviation":"DE"},{"name":"Ghana","abbreviation":"GH"},{"name":"Gibraltar","abbreviation":"GI"},{"name":"Greece","abbreviation":"GR"},{"name":"Greenland","abbreviation":"GL"},{"name":"Grenada","abbreviation":"GD"},{"name":"Guadeloupe","abbreviation":"GP"},{"name":"Guam","abbreviation":"GU"},{"name":"Guatemala","abbreviation":"GT"},{"name":"Guernsey","abbreviation":"GG"},{"name":"Guinea","abbreviation":"GN"},{"name":"Guinea-Bissau","abbreviation":"GW"},{"name":"Guyana","abbreviation":"GY"},{"name":"Haiti","abbreviation":"HT"},{"name":"Honduras","abbreviation":"HN"},{"name":"Hong Kong SAR China","abbreviation":"HK"},{"name":"Hungary","abbreviation":"HU"},{"name":"Iceland","abbreviation":"IS"},{"name":"India","abbreviation":"IN"},{"name":"Indonesia","abbreviation":"ID"},{"name":"Iran","abbreviation":"IR"},{"name":"Iraq","abbreviation":"IQ"},{"name":"Ireland","abbreviation":"IE"},{"name":"Isle of Man","abbreviation":"IM"},{"name":"Israel","abbreviation":"IL"},{"name":"Italy","abbreviation":"IT"},{"name":"Jamaica","abbreviation":"JM"},{"name":"Japan","abbreviation":"JP"},{"name":"Jersey","abbreviation":"JE"},{"name":"Jordan","abbreviation":"JO"},{"name":"Kazakhstan","abbreviation":"KZ"},{"name":"Kenya","abbreviation":"KE"},{"name":"Kiribati","abbreviation":"KI"},{"name":"Kosovo","abbreviation":"XK"},{"name":"Kuwait","abbreviation":"KW"},{"name":"Kyrgyzstan","abbreviation":"KG"},{"name":"Laos","abbreviation":"LA"},{"name":"Latvia","abbreviation":"LV"},{"name":"Lebanon","abbreviation":"LB"},{"name":"Lesotho","abbreviation":"LS"},{"name":"Liberia","abbreviation":"LR"},{"name":"Libya","abbreviation":"LY"},{"name":"Liechtenstein","abbreviation":"LI"},{"name":"Lithuania","abbreviation":"LT"},{"name":"Luxembourg","abbreviation":"LU"},{"name":"Macau SAR China","abbreviation":"MO"},{"name":"Macedonia","abbreviation":"MK"},{"name":"Madagascar","abbreviation":"MG"},{"name":"Malawi","abbreviation":"MW"},{"name":"Malaysia","abbreviation":"MY"},{"name":"Maldives","abbreviation":"MV"},{"name":"Mali","abbreviation":"ML"},{"name":"Malta","abbreviation":"MT"},{"name":"Marshall Islands","abbreviation":"MH"},{"name":"Martinique","abbreviation":"MQ"},{"name":"Mauritania","abbreviation":"MR"},{"name":"Mauritius","abbreviation":"MU"},{"name":"Mayotte","abbreviation":"YT"},{"name":"Mexico","abbreviation":"MX"},{"name":"Micronesia","abbreviation":"FM"},{"name":"Moldova","abbreviation":"MD"},{"name":"Monaco","abbreviation":"MC"},{"name":"Mongolia","abbreviation":"MN"},{"name":"Montenegro","abbreviation":"ME"},{"name":"Montserrat","abbreviation":"MS"},{"name":"Morocco","abbreviation":"MA"},{"name":"Mozambique","abbreviation":"MZ"},{"name":"Myanmar (Burma)","abbreviation":"MM"},{"name":"Namibia","abbreviation":"NA"},{"name":"Nauru","abbreviation":"NR"},{"name":"Nepal","abbreviation":"NP"},{"name":"Netherlands","abbreviation":"NL"},{"name":"New Caledonia","abbreviation":"NC"},{"name":"New Zealand","abbreviation":"NZ"},{"name":"Nicaragua","abbreviation":"NI"},{"name":"Niger","abbreviation":"NE"},{"name":"Nigeria","abbreviation":"NG"},{"name":"Niue","abbreviation":"NU"},{"name":"Norfolk Island","abbreviation":"NF"},{"name":"North Korea","abbreviation":"KP"},{"name":"Northern Mariana Islands","abbreviation":"MP"},{"name":"Norway","abbreviation":"NO"},{"name":"Oman","abbreviation":"OM"},{"name":"Pakistan","abbreviation":"PK"},{"name":"Palau","abbreviation":"PW"},{"name":"Palestinian Territories","abbreviation":"PS"},{"name":"Panama","abbreviation":"PA"},{"name":"Papua New Guinea","abbreviation":"PG"},{"name":"Paraguay","abbreviation":"PY"},{"name":"Peru","abbreviation":"PE"},{"name":"Philippines","abbreviation":"PH"},{"name":"Pitcairn Islands","abbreviation":"PN"},{"name":"Poland","abbreviation":"PL"},{"name":"Portugal","abbreviation":"PT"},{"name":"Puerto Rico","abbreviation":"PR"},{"name":"Qatar","abbreviation":"QA"},{"name":"RÃ©union","abbreviation":"RE"},{"name":"Romania","abbreviation":"RO"},{"name":"Russia","abbreviation":"RU"},{"name":"Rwanda","abbreviation":"RW"},{"name":"Samoa","abbreviation":"WS"},{"name":"San Marino","abbreviation":"SM"},{"name":"SÃ£o TomÃ© and PrÃ­ncipe","abbreviation":"ST"},{"name":"Saudi Arabia","abbreviation":"SA"},{"name":"Senegal","abbreviation":"SN"},{"name":"Serbia","abbreviation":"RS"},{"name":"Seychelles","abbreviation":"SC"},{"name":"Sierra Leone","abbreviation":"SL"},{"name":"Singapore","abbreviation":"SG"},{"name":"Sint Maarten","abbreviation":"SX"},{"name":"Slovakia","abbreviation":"SK"},{"name":"Slovenia","abbreviation":"SI"},{"name":"Solomon Islands","abbreviation":"SB"},{"name":"Somalia","abbreviation":"SO"},{"name":"South Africa","abbreviation":"ZA"},{"name":"South Georgia & South Sandwich Islands","abbreviation":"GS"},{"name":"South Korea","abbreviation":"KR"},{"name":"South Sudan","abbreviation":"SS"},{"name":"Spain","abbreviation":"ES"},{"name":"Sri Lanka","abbreviation":"LK"},{"name":"St. BarthÃ©lemy","abbreviation":"BL"},{"name":"St. Helena","abbreviation":"SH"},{"name":"St. Kitts & Nevis","abbreviation":"KN"},{"name":"St. Lucia","abbreviation":"LC"},{"name":"St. Martin","abbreviation":"MF"},{"name":"St. Pierre & Miquelon","abbreviation":"PM"},{"name":"St. Vincent & Grenadines","abbreviation":"VC"},{"name":"Sudan","abbreviation":"SD"},{"name":"Suriname","abbreviation":"SR"},{"name":"Svalbard & Jan Mayen","abbreviation":"SJ"},{"name":"Swaziland","abbreviation":"SZ"},{"name":"Sweden","abbreviation":"SE"},{"name":"Switzerland","abbreviation":"CH"},{"name":"Syria","abbreviation":"SY"},{"name":"Taiwan","abbreviation":"TW"},{"name":"Tajikistan","abbreviation":"TJ"},{"name":"Tanzania","abbreviation":"TZ"},{"name":"Thailand","abbreviation":"TH"},{"name":"Timor-Leste","abbreviation":"TL"},{"name":"Togo","abbreviation":"TG"},{"name":"Tokelau","abbreviation":"TK"},{"name":"Tonga","abbreviation":"TO"},{"name":"Trinidad & Tobago","abbreviation":"TT"},{"name":"Tristan da Cunha","abbreviation":"TA"},{"name":"Tunisia","abbreviation":"TN"},{"name":"Turkey","abbreviation":"TR"},{"name":"Turkmenistan","abbreviation":"TM"},{"name":"Turks & Caicos Islands","abbreviation":"TC"},{"name":"Tuvalu","abbreviation":"TV"},{"name":"U.S. Outlying Islands","abbreviation":"UM"},{"name":"U.S. Virgin Islands","abbreviation":"VI"},{"name":"Uganda","abbreviation":"UG"},{"name":"Ukraine","abbreviation":"UA"},{"name":"United Arab Emirates","abbreviation":"AE"},{"name":"United Kingdom","abbreviation":"GB"},{"name":"United States","abbreviation":"US"},{"name":"Uruguay","abbreviation":"UY"},{"name":"Uzbekistan","abbreviation":"UZ"},{"name":"Vanuatu","abbreviation":"VU"},{"name":"Vatican City","abbreviation":"VA"},{"name":"Venezuela","abbreviation":"VE"},{"name":"Vietnam","abbreviation":"VN"},{"name":"Wallis & Futuna","abbreviation":"WF"},{"name":"Western Sahara","abbreviation":"EH"},{"name":"Yemen","abbreviation":"YE"},{"name":"Zambia","abbreviation":"ZM"},{"name":"Zimbabwe","abbreviation":"ZW"}],

                counties: {
            // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk
            "uk": [
                {name: 'Bath and North East Somerset'},
                {name: 'Aberdeenshire'},
                {name: 'Anglesey'},
                {name: 'Angus'},
                {name: 'Bedford'},
                {name: 'Blackburn with Darwen'},
                {name: 'Blackpool'},
                {name: 'Bournemouth'},
                {name: 'Bracknell Forest'},
                {name: 'Brighton & Hove'},
                {name: 'Bristol'},
                {name: 'Buckinghamshire'},
                {name: 'Cambridgeshire'},
                {name: 'Carmarthenshire'},
                {name: 'Central Bedfordshire'},
                {name: 'Ceredigion'},
                {name: 'Cheshire East'},
                {name: 'Cheshire West and Chester'},
                {name: 'Clackmannanshire'},
                {name: 'Conwy'},
                {name: 'Cornwall'},
                {name: 'County Antrim'},
                {name: 'County Armagh'},
                {name: 'County Down'},
                {name: 'County Durham'},
                {name: 'County Fermanagh'},
                {name: 'County Londonderry'},
                {name: 'County Tyrone'},
                {name: 'Cumbria'},
                {name: 'Darlington'},
                {name: 'Denbighshire'},
                {name: 'Derby'},
                {name: 'Derbyshire'},
                {name: 'Devon'},
                {name: 'Dorset'},
                {name: 'Dumfries and Galloway'},
                {name: 'Dundee'},
                {name: 'East Lothian'},
                {name: 'East Riding of Yorkshire'},
                {name: 'East Sussex'},
                {name: 'Edinburgh?'},
                {name: 'Essex'},
                {name: 'Falkirk'},
                {name: 'Fife'},
                {name: 'Flintshire'},
                {name: 'Gloucestershire'},
                {name: 'Greater London'},
                {name: 'Greater Manchester'},
                {name: 'Gwent'},
                {name: 'Gwynedd'},
                {name: 'Halton'},
                {name: 'Hampshire'},
                {name: 'Hartlepool'},
                {name: 'Herefordshire'},
                {name: 'Hertfordshire'},
                {name: 'Highlands'},
                {name: 'Hull'},
                {name: 'Isle of Wight'},
                {name: 'Isles of Scilly'},
                {name: 'Kent'},
                {name: 'Lancashire'},
                {name: 'Leicester'},
                {name: 'Leicestershire'},
                {name: 'Lincolnshire'},
                {name: 'Lothian'},
                {name: 'Luton'},
                {name: 'Medway'},
                {name: 'Merseyside'},
                {name: 'Mid Glamorgan'},
                {name: 'Middlesbrough'},
                {name: 'Milton Keynes'},
                {name: 'Monmouthshire'},
                {name: 'Moray'},
                {name: 'Norfolk'},
                {name: 'North East Lincolnshire'},
                {name: 'North Lincolnshire'},
                {name: 'North Somerset'},
                {name: 'North Yorkshire'},
                {name: 'Northamptonshire'},
                {name: 'Northumberland'},
                {name: 'Nottingham'},
                {name: 'Nottinghamshire'},
                {name: 'Oxfordshire'},
                {name: 'Pembrokeshire'},
                {name: 'Perth and Kinross'},
                {name: 'Peterborough'},
                {name: 'Plymouth'},
                {name: 'Poole'},
                {name: 'Portsmouth'},
                {name: 'Powys'},
                {name: 'Reading'},
                {name: 'Redcar and Cleveland'},
                {name: 'Rutland'},
                {name: 'Scottish Borders'},
                {name: 'Shropshire'},
                {name: 'Slough'},
                {name: 'Somerset'},
                {name: 'South Glamorgan'},
                {name: 'South Gloucestershire'},
                {name: 'South Yorkshire'},
                {name: 'Southampton'},
                {name: 'Southend-on-Sea'},
                {name: 'Staffordshire'},
                {name: 'Stirlingshire'},
                {name: 'Stockton-on-Tees'},
                {name: 'Stoke-on-Trent'},
                {name: 'Strathclyde'},
                {name: 'Suffolk'},
                {name: 'Surrey'},
                {name: 'Swindon'},
                {name: 'Telford and Wrekin'},
                {name: 'Thurrock'},
                {name: 'Torbay'},
                {name: 'Tyne and Wear'},
                {name: 'Warrington'},
                {name: 'Warwickshire'},
                {name: 'West Berkshire'},
                {name: 'West Glamorgan'},
                {name: 'West Lothian'},
                {name: 'West Midlands'},
                {name: 'West Sussex'},
                {name: 'West Yorkshire'},
                {name: 'Western Isles'},
                {name: 'Wiltshire'},
                {name: 'Windsor and Maidenhead'},
                {name: 'Wokingham'},
                {name: 'Worcestershire'},
                {name: 'Wrexham'},
                {name: 'York'}]
                                },
        provinces: {
            "ca": [
                {name: 'Alberta', abbreviation: 'AB'},
                {name: 'British Columbia', abbreviation: 'BC'},
                {name: 'Manitoba', abbreviation: 'MB'},
                {name: 'New Brunswick', abbreviation: 'NB'},
                {name: 'Newfoundland and Labrador', abbreviation: 'NL'},
                {name: 'Nova Scotia', abbreviation: 'NS'},
                {name: 'Ontario', abbreviation: 'ON'},
                {name: 'Prince Edward Island', abbreviation: 'PE'},
                {name: 'Quebec', abbreviation: 'QC'},
                {name: 'Saskatchewan', abbreviation: 'SK'},

                // The case could be made that the following are not actually provinces
                // since they are technically considered "territories" however they all
                // look the same on an envelope!
                {name: 'Northwest Territories', abbreviation: 'NT'},
                {name: 'Nunavut', abbreviation: 'NU'},
                {name: 'Yukon', abbreviation: 'YT'}
            ],
            "it": [
                { name: "Agrigento", abbreviation: "AG", code: 84 },
                { name: "Alessandria", abbreviation: "AL", code: 6 },
                { name: "Ancona", abbreviation: "AN", code: 42 },
                { name: "Aosta", abbreviation: "AO", code: 7 },
                { name: "L'Aquila", abbreviation: "AQ", code: 66 },
                { name: "Arezzo", abbreviation: "AR", code: 51 },
                { name: "Ascoli-Piceno", abbreviation: "AP", code: 44 },
                { name: "Asti", abbreviation: "AT", code: 5 },
                { name: "Avellino", abbreviation: "AV", code: 64 },
                { name: "Bari", abbreviation: "BA", code: 72 },
                { name: "Barletta-Andria-Trani", abbreviation: "BT", code: 72 },
                { name: "Belluno", abbreviation: "BL", code: 25 },
                { name: "Benevento", abbreviation: "BN", code: 62 },
                { name: "Bergamo", abbreviation: "BG", code: 16 },
                { name: "Biella", abbreviation: "BI", code: 96 },
                { name: "Bologna", abbreviation: "BO", code: 37 },
                { name: "Bolzano", abbreviation: "BZ", code: 21 },
                { name: "Brescia", abbreviation: "BS", code: 17 },
                { name: "Brindisi", abbreviation: "BR", code: 74 },
                { name: "Cagliari", abbreviation: "CA", code: 92 },
                { name: "Caltanissetta", abbreviation: "CL", code: 85 },
                { name: "Campobasso", abbreviation: "CB", code: 70 },
                { name: "Carbonia Iglesias", abbreviation: "CI", code: 70 },
                { name: "Caserta", abbreviation: "CE", code: 61 },
                { name: "Catania", abbreviation: "CT", code: 87 },
                { name: "Catanzaro", abbreviation: "CZ", code: 79 },
                { name: "Chieti", abbreviation: "CH", code: 69 },
                { name: "Como", abbreviation: "CO", code: 13 },
                { name: "Cosenza", abbreviation: "CS", code: 78 },
                { name: "Cremona", abbreviation: "CR", code: 19 },
                { name: "Crotone", abbreviation: "KR", code: 101 },
                { name: "Cuneo", abbreviation: "CN", code: 4 },
                { name: "Enna", abbreviation: "EN", code: 86 },
                { name: "Fermo", abbreviation: "FM", code: 86 },
                { name: "Ferrara", abbreviation: "FE", code: 38 },
                { name: "Firenze", abbreviation: "FI", code: 48 },
                { name: "Foggia", abbreviation: "FG", code: 71 },
                { name: "Forli-Cesena", abbreviation: "FC", code: 71 },
                { name: "Frosinone", abbreviation: "FR", code: 60 },
                { name: "Genova", abbreviation: "GE", code: 10 },
                { name: "Gorizia", abbreviation: "GO", code: 31 },
                { name: "Grosseto", abbreviation: "GR", code: 53 },
                { name: "Imperia", abbreviation: "IM", code: 8 },
                { name: "Isernia", abbreviation: "IS", code: 94 },
                { name: "La-Spezia", abbreviation: "SP", code: 66 },
                { name: "Latina", abbreviation: "LT", code: 59 },
                { name: "Lecce", abbreviation: "LE", code: 75 },
                { name: "Lecco", abbreviation: "LC", code: 97 },
                { name: "Livorno", abbreviation: "LI", code: 49 },
                { name: "Lodi", abbreviation: "LO", code: 98 },
                { name: "Lucca", abbreviation: "LU", code: 46 },
                { name: "Macerata", abbreviation: "MC", code: 43 },
                { name: "Mantova", abbreviation: "MN", code: 20 },
                { name: "Massa-Carrara", abbreviation: "MS", code: 45 },
                { name: "Matera", abbreviation: "MT", code: 77 },
                { name: "Medio Campidano", abbreviation: "VS", code: 77 },
                { name: "Messina", abbreviation: "ME", code: 83 },
                { name: "Milano", abbreviation: "MI", code: 15 },
                { name: "Modena", abbreviation: "MO", code: 36 },
                { name: "Monza-Brianza", abbreviation: "MB", code: 36 },
                { name: "Napoli", abbreviation: "NA", code: 63 },
                { name: "Novara", abbreviation: "NO", code: 3 },
                { name: "Nuoro", abbreviation: "NU", code: 91 },
                { name: "Ogliastra", abbreviation: "OG", code: 91 },
                { name: "Olbia Tempio", abbreviation: "OT", code: 91 },
                { name: "Oristano", abbreviation: "OR", code: 95 },
                { name: "Padova", abbreviation: "PD", code: 28 },
                { name: "Palermo", abbreviation: "PA", code: 82 },
                { name: "Parma", abbreviation: "PR", code: 34 },
                { name: "Pavia", abbreviation: "PV", code: 18 },
                { name: "Perugia", abbreviation: "PG", code: 54 },
                { name: "Pesaro-Urbino", abbreviation: "PU", code: 41 },
                { name: "Pescara", abbreviation: "PE", code: 68 },
                { name: "Piacenza", abbreviation: "PC", code: 33 },
                { name: "Pisa", abbreviation: "PI", code: 50 },
                { name: "Pistoia", abbreviation: "PT", code: 47 },
                { name: "Pordenone", abbreviation: "PN", code: 93 },
                { name: "Potenza", abbreviation: "PZ", code: 76 },
                { name: "Prato", abbreviation: "PO", code: 100 },
                { name: "Ragusa", abbreviation: "RG", code: 88 },
                { name: "Ravenna", abbreviation: "RA", code: 39 },
                { name: "Reggio-Calabria", abbreviation: "RC", code: 35 },
                { name: "Reggio-Emilia", abbreviation: "RE", code: 35 },
                { name: "Rieti", abbreviation: "RI", code: 57 },
                { name: "Rimini", abbreviation: "RN", code: 99 },
                { name: "Roma", abbreviation: "Roma", code: 58 },
                { name: "Rovigo", abbreviation: "RO", code: 29 },
                { name: "Salerno", abbreviation: "SA", code: 65 },
                { name: "Sassari", abbreviation: "SS", code: 90 },
                { name: "Savona", abbreviation: "SV", code: 9 },
                { name: "Siena", abbreviation: "SI", code: 52 },
                { name: "Siracusa", abbreviation: "SR", code: 89 },
                { name: "Sondrio", abbreviation: "SO", code: 14 },
                { name: "Taranto", abbreviation: "TA", code: 73 },
                { name: "Teramo", abbreviation: "TE", code: 67 },
                { name: "Terni", abbreviation: "TR", code: 55 },
                { name: "Torino", abbreviation: "TO", code: 1 },
                { name: "Trapani", abbreviation: "TP", code: 81 },
                { name: "Trento", abbreviation: "TN", code: 22 },
                { name: "Treviso", abbreviation: "TV", code: 26 },
                { name: "Trieste", abbreviation: "TS", code: 32 },
                { name: "Udine", abbreviation: "UD", code: 30 },
                { name: "Varese", abbreviation: "VA", code: 12 },
                { name: "Venezia", abbreviation: "VE", code: 27 },
                { name: "Verbania", abbreviation: "VB", code: 27 },
                { name: "Vercelli", abbreviation: "VC", code: 2 },
                { name: "Verona", abbreviation: "VR", code: 23 },
                { name: "Vibo-Valentia", abbreviation: "VV", code: 102 },
                { name: "Vicenza", abbreviation: "VI", code: 24 },
                { name: "Viterbo", abbreviation: "VT", code: 56 }
            ]
        },

            // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json
        nationalities: [
           {name: 'Afghan'},
           {name: 'Albanian'},
           {name: 'Algerian'},
           {name: 'American'},
           {name: 'Andorran'},
           {name: 'Angolan'},
           {name: 'Antiguans'},
           {name: 'Argentinean'},
           {name: 'Armenian'},
           {name: 'Australian'},
           {name: 'Austrian'},
           {name: 'Azerbaijani'},
           {name: 'Bahami'},
           {name: 'Bahraini'},
           {name: 'Bangladeshi'},
           {name: 'Barbadian'},
           {name: 'Barbudans'},
           {name: 'Batswana'},
           {name: 'Belarusian'},
           {name: 'Belgian'},
           {name: 'Belizean'},
           {name: 'Beninese'},
           {name: 'Bhutanese'},
           {name: 'Bolivian'},
           {name: 'Bosnian'},
           {name: 'Brazilian'},
           {name: 'British'},
           {name: 'Bruneian'},
           {name: 'Bulgarian'},
           {name: 'Burkinabe'},
           {name: 'Burmese'},
           {name: 'Burundian'},
           {name: 'Cambodian'},
           {name: 'Cameroonian'},
           {name: 'Canadian'},
           {name: 'Cape Verdean'},
           {name: 'Central African'},
           {name: 'Chadian'},
           {name: 'Chilean'},
           {name: 'Chinese'},
           {name: 'Colombian'},
           {name: 'Comoran'},
           {name: 'Congolese'},
           {name: 'Costa Rican'},
           {name: 'Croatian'},
           {name: 'Cuban'},
           {name: 'Cypriot'},
           {name: 'Czech'},
           {name: 'Danish'},
           {name: 'Djibouti'},
           {name: 'Dominican'},
           {name: 'Dutch'},
           {name: 'East Timorese'},
           {name: 'Ecuadorean'},
           {name: 'Egyptian'},
           {name: 'Emirian'},
           {name: 'Equatorial Guinean'},
           {name: 'Eritrean'},
           {name: 'Estonian'},
           {name: 'Ethiopian'},
           {name: 'Fijian'},
           {name: 'Filipino'},
           {name: 'Finnish'},
           {name: 'French'},
           {name: 'Gabonese'},
           {name: 'Gambian'},
           {name: 'Georgian'},
           {name: 'German'},
           {name: 'Ghanaian'},
           {name: 'Greek'},
           {name: 'Grenadian'},
           {name: 'Guatemalan'},
           {name: 'Guinea-Bissauan'},
           {name: 'Guinean'},
           {name: 'Guyanese'},
           {name: 'Haitian'},
           {name: 'Herzegovinian'},
           {name: 'Honduran'},
           {name: 'Hungarian'},
           {name: 'I-Kiribati'},
           {name: 'Icelander'},
           {name: 'Indian'},
           {name: 'Indonesian'},
           {name: 'Iranian'},
           {name: 'Iraqi'},
           {name: 'Irish'},
           {name: 'Israeli'},
           {name: 'Italian'},
           {name: 'Ivorian'},
           {name: 'Jamaican'},
           {name: 'Japanese'},
           {name: 'Jordanian'},
           {name: 'Kazakhstani'},
           {name: 'Kenyan'},
           {name: 'Kittian and Nevisian'},
           {name: 'Kuwaiti'},
           {name: 'Kyrgyz'},
           {name: 'Laotian'},
           {name: 'Latvian'},
           {name: 'Lebanese'},
           {name: 'Liberian'},
           {name: 'Libyan'},
           {name: 'Liechtensteiner'},
           {name: 'Lithuanian'},
           {name: 'Luxembourger'},
           {name: 'Macedonian'},
           {name: 'Malagasy'},
           {name: 'Malawian'},
           {name: 'Malaysian'},
           {name: 'Maldivan'},
           {name: 'Malian'},
           {name: 'Maltese'},
           {name: 'Marshallese'},
           {name: 'Mauritanian'},
           {name: 'Mauritian'},
           {name: 'Mexican'},
           {name: 'Micronesian'},
           {name: 'Moldovan'},
           {name: 'Monacan'},
           {name: 'Mongolian'},
           {name: 'Moroccan'},
           {name: 'Mosotho'},
           {name: 'Motswana'},
           {name: 'Mozambican'},
           {name: 'Namibian'},
           {name: 'Nauruan'},
           {name: 'Nepalese'},
           {name: 'New Zealander'},
           {name: 'Nicaraguan'},
           {name: 'Nigerian'},
           {name: 'Nigerien'},
           {name: 'North Korean'},
           {name: 'Northern Irish'},
           {name: 'Norwegian'},
           {name: 'Omani'},
           {name: 'Pakistani'},
           {name: 'Palauan'},
           {name: 'Panamanian'},
           {name: 'Papua New Guinean'},
           {name: 'Paraguayan'},
           {name: 'Peruvian'},
           {name: 'Polish'},
           {name: 'Portuguese'},
           {name: 'Qatari'},
           {name: 'Romani'},
           {name: 'Russian'},
           {name: 'Rwandan'},
           {name: 'Saint Lucian'},
           {name: 'Salvadoran'},
           {name: 'Samoan'},
           {name: 'San Marinese'},
           {name: 'Sao Tomean'},
           {name: 'Saudi'},
           {name: 'Scottish'},
           {name: 'Senegalese'},
           {name: 'Serbian'},
           {name: 'Seychellois'},
           {name: 'Sierra Leonean'},
           {name: 'Singaporean'},
           {name: 'Slovakian'},
           {name: 'Slovenian'},
           {name: 'Solomon Islander'},
           {name: 'Somali'},
           {name: 'South African'},
           {name: 'South Korean'},
           {name: 'Spanish'},
           {name: 'Sri Lankan'},
           {name: 'Sudanese'},
           {name: 'Surinamer'},
           {name: 'Swazi'},
           {name: 'Swedish'},
           {name: 'Swiss'},
           {name: 'Syrian'},
           {name: 'Taiwanese'},
           {name: 'Tajik'},
           {name: 'Tanzanian'},
           {name: 'Thai'},
           {name: 'Togolese'},
           {name: 'Tongan'},
           {name: 'Trinidadian or Tobagonian'},
           {name: 'Tunisian'},
           {name: 'Turkish'},
           {name: 'Tuvaluan'},
           {name: 'Ugandan'},
           {name: 'Ukrainian'},
           {name: 'Uruguaya'},
           {name: 'Uzbekistani'},
           {name: 'Venezuela'},
           {name: 'Vietnamese'},
           {name: 'Wels'},
           {name: 'Yemenit'},
           {name: 'Zambia'},
           {name: 'Zimbabwe'},
        ],
          // http://www.loc.gov/standards/iso639-2/php/code_list.php (ISO-639-1 codes)
        locale_languages: [
          "aa",
          "ab",
          "ae",
          "af",
          "ak",
          "am",
          "an",
          "ar",
          "as",
          "av",
          "ay",
          "az",
          "ba",
          "be",
          "bg",
          "bh",
          "bi",
          "bm",
          "bn",
          "bo",
          "br",
          "bs",
          "ca",
          "ce",
          "ch",
          "co",
          "cr",
          "cs",
          "cu",
          "cv",
          "cy",
          "da",
          "de",
          "dv",
          "dz",
          "ee",
          "el",
          "en",
          "eo",
          "es",
          "et",
          "eu",
          "fa",
          "ff",
          "fi",
          "fj",
          "fo",
          "fr",
          "fy",
          "ga",
          "gd",
          "gl",
          "gn",
          "gu",
          "gv",
          "ha",
          "he",
          "hi",
          "ho",
          "hr",
          "ht",
          "hu",
          "hy",
          "hz",
          "ia",
          "id",
          "ie",
          "ig",
          "ii",
          "ik",
          "io",
          "is",
          "it",
          "iu",
          "ja",
          "jv",
          "ka",
          "kg",
          "ki",
          "kj",
          "kk",
          "kl",
          "km",
          "kn",
          "ko",
          "kr",
          "ks",
          "ku",
          "kv",
          "kw",
          "ky",
          "la",
          "lb",
          "lg",
          "li",
          "ln",
          "lo",
          "lt",
          "lu",
          "lv",
          "mg",
          "mh",
          "mi",
          "mk",
          "ml",
          "mn",
          "mr",
          "ms",
          "mt",
          "my",
          "na",
          "nb",
          "nd",
          "ne",
          "ng",
          "nl",
          "nn",
          "no",
          "nr",
          "nv",
          "ny",
          "oc",
          "oj",
          "om",
          "or",
          "os",
          "pa",
          "pi",
          "pl",
          "ps",
          "pt",
          "qu",
          "rm",
          "rn",
          "ro",
          "ru",
          "rw",
          "sa",
          "sc",
          "sd",
          "se",
          "sg",
          "si",
          "sk",
          "sl",
          "sm",
          "sn",
          "so",
          "sq",
          "sr",
          "ss",
          "st",
          "su",
          "sv",
          "sw",
          "ta",
          "te",
          "tg",
          "th",
          "ti",
          "tk",
          "tl",
          "tn",
          "to",
          "tr",
          "ts",
          "tt",
          "tw",
          "ty",
          "ug",
          "uk",
          "ur",
          "uz",
          "ve",
          "vi",
          "vo",
          "wa",
          "wo",
          "xh",
          "yi",
          "yo",
          "za",
          "zh",
          "zu"
        ],

        // From http://data.okfn.org/data/core/language-codes#resource-language-codes-full (IETF language tags)
        locale_regions: [
          "agq-CM",
          "asa-TZ",
          "ast-ES",
          "bas-CM",
          "bem-ZM",
          "bez-TZ",
          "brx-IN",
          "cgg-UG",
          "chr-US",
          "dav-KE",
          "dje-NE",
          "dsb-DE",
          "dua-CM",
          "dyo-SN",
          "ebu-KE",
          "ewo-CM",
          "fil-PH",
          "fur-IT",
          "gsw-CH",
          "gsw-FR",
          "gsw-LI",
          "guz-KE",
          "haw-US",
          "hsb-DE",
          "jgo-CM",
          "jmc-TZ",
          "kab-DZ",
          "kam-KE",
          "kde-TZ",
          "kea-CV",
          "khq-ML",
          "kkj-CM",
          "kln-KE",
          "kok-IN",
          "ksb-TZ",
          "ksf-CM",
          "ksh-DE",
          "lag-TZ",
          "lkt-US",
          "luo-KE",
          "luy-KE",
          "mas-KE",
          "mas-TZ",
          "mer-KE",
          "mfe-MU",
          "mgh-MZ",
          "mgo-CM",
          "mua-CM",
          "naq-NA",
          "nmg-CM",
          "nnh-CM",
          "nus-SD",
          "nyn-UG",
          "rof-TZ",
          "rwk-TZ",
          "sah-RU",
          "saq-KE",
          "sbp-TZ",
          "seh-MZ",
          "ses-ML",
          "shi-Latn",
          "shi-Latn-MA",
          "shi-Tfng",
          "shi-Tfng-MA",
          "smn-FI",
          "teo-KE",
          "teo-UG",
          "twq-NE",
          "tzm-Latn",
          "tzm-Latn-MA",
          "vai-Latn",
          "vai-Latn-LR",
          "vai-Vaii",
          "vai-Vaii-LR",
          "vun-TZ",
          "wae-CH",
          "xog-UG",
          "yav-CM",
          "zgh-MA",
          "af-NA",
          "af-ZA",
          "ak-GH",
          "am-ET",
          "ar-001",
          "ar-AE",
          "ar-BH",
          "ar-DJ",
          "ar-DZ",
          "ar-EG",
          "ar-EH",
          "ar-ER",
          "ar-IL",
          "ar-IQ",
          "ar-JO",
          "ar-KM",
          "ar-KW",
          "ar-LB",
          "ar-LY",
          "ar-MA",
          "ar-MR",
          "ar-OM",
          "ar-PS",
          "ar-QA",
          "ar-SA",
          "ar-SD",
          "ar-SO",
          "ar-SS",
          "ar-SY",
          "ar-TD",
          "ar-TN",
          "ar-YE",
          "as-IN",
          "az-Cyrl",
          "az-Cyrl-AZ",
          "az-Latn",
          "az-Latn-AZ",
          "be-BY",
          "bg-BG",
          "bm-Latn",
          "bm-Latn-ML",
          "bn-BD",
          "bn-IN",
          "bo-CN",
          "bo-IN",
          "br-FR",
          "bs-Cyrl",
          "bs-Cyrl-BA",
          "bs-Latn",
          "bs-Latn-BA",
          "ca-AD",
          "ca-ES",
          "ca-ES-VALENCIA",
          "ca-FR",
          "ca-IT",
          "cs-CZ",
          "cy-GB",
          "da-DK",
          "da-GL",
          "de-AT",
          "de-BE",
          "de-CH",
          "de-DE",
          "de-LI",
          "de-LU",
          "dz-BT",
          "ee-GH",
          "ee-TG",
          "el-CY",
          "el-GR",
          "en-001",
          "en-150",
          "en-AG",
          "en-AI",
          "en-AS",
          "en-AU",
          "en-BB",
          "en-BE",
          "en-BM",
          "en-BS",
          "en-BW",
          "en-BZ",
          "en-CA",
          "en-CC",
          "en-CK",
          "en-CM",
          "en-CX",
          "en-DG",
          "en-DM",
          "en-ER",
          "en-FJ",
          "en-FK",
          "en-FM",
          "en-GB",
          "en-GD",
          "en-GG",
          "en-GH",
          "en-GI",
          "en-GM",
          "en-GU",
          "en-GY",
          "en-HK",
          "en-IE",
          "en-IM",
          "en-IN",
          "en-IO",
          "en-JE",
          "en-JM",
          "en-KE",
          "en-KI",
          "en-KN",
          "en-KY",
          "en-LC",
          "en-LR",
          "en-LS",
          "en-MG",
          "en-MH",
          "en-MO",
          "en-MP",
          "en-MS",
          "en-MT",
          "en-MU",
          "en-MW",
          "en-MY",
          "en-NA",
          "en-NF",
          "en-NG",
          "en-NR",
          "en-NU",
          "en-NZ",
          "en-PG",
          "en-PH",
          "en-PK",
          "en-PN",
          "en-PR",
          "en-PW",
          "en-RW",
          "en-SB",
          "en-SC",
          "en-SD",
          "en-SG",
          "en-SH",
          "en-SL",
          "en-SS",
          "en-SX",
          "en-SZ",
          "en-TC",
          "en-TK",
          "en-TO",
          "en-TT",
          "en-TV",
          "en-TZ",
          "en-UG",
          "en-UM",
          "en-US",
          "en-US-POSIX",
          "en-VC",
          "en-VG",
          "en-VI",
          "en-VU",
          "en-WS",
          "en-ZA",
          "en-ZM",
          "en-ZW",
          "eo-001",
          "es-419",
          "es-AR",
          "es-BO",
          "es-CL",
          "es-CO",
          "es-CR",
          "es-CU",
          "es-DO",
          "es-EA",
          "es-EC",
          "es-ES",
          "es-GQ",
          "es-GT",
          "es-HN",
          "es-IC",
          "es-MX",
          "es-NI",
          "es-PA",
          "es-PE",
          "es-PH",
          "es-PR",
          "es-PY",
          "es-SV",
          "es-US",
          "es-UY",
          "es-VE",
          "et-EE",
          "eu-ES",
          "fa-AF",
          "fa-IR",
          "ff-CM",
          "ff-GN",
          "ff-MR",
          "ff-SN",
          "fi-FI",
          "fo-FO",
          "fr-BE",
          "fr-BF",
          "fr-BI",
          "fr-BJ",
          "fr-BL",
          "fr-CA",
          "fr-CD",
          "fr-CF",
          "fr-CG",
          "fr-CH",
          "fr-CI",
          "fr-CM",
          "fr-DJ",
          "fr-DZ",
          "fr-FR",
          "fr-GA",
          "fr-GF",
          "fr-GN",
          "fr-GP",
          "fr-GQ",
          "fr-HT",
          "fr-KM",
          "fr-LU",
          "fr-MA",
          "fr-MC",
          "fr-MF",
          "fr-MG",
          "fr-ML",
          "fr-MQ",
          "fr-MR",
          "fr-MU",
          "fr-NC",
          "fr-NE",
          "fr-PF",
          "fr-PM",
          "fr-RE",
          "fr-RW",
          "fr-SC",
          "fr-SN",
          "fr-SY",
          "fr-TD",
          "fr-TG",
          "fr-TN",
          "fr-VU",
          "fr-WF",
          "fr-YT",
          "fy-NL",
          "ga-IE",
          "gd-GB",
          "gl-ES",
          "gu-IN",
          "gv-IM",
          "ha-Latn",
          "ha-Latn-GH",
          "ha-Latn-NE",
          "ha-Latn-NG",
          "he-IL",
          "hi-IN",
          "hr-BA",
          "hr-HR",
          "hu-HU",
          "hy-AM",
          "id-ID",
          "ig-NG",
          "ii-CN",
          "is-IS",
          "it-CH",
          "it-IT",
          "it-SM",
          "ja-JP",
          "ka-GE",
          "ki-KE",
          "kk-Cyrl",
          "kk-Cyrl-KZ",
          "kl-GL",
          "km-KH",
          "kn-IN",
          "ko-KP",
          "ko-KR",
          "ks-Arab",
          "ks-Arab-IN",
          "kw-GB",
          "ky-Cyrl",
          "ky-Cyrl-KG",
          "lb-LU",
          "lg-UG",
          "ln-AO",
          "ln-CD",
          "ln-CF",
          "ln-CG",
          "lo-LA",
          "lt-LT",
          "lu-CD",
          "lv-LV",
          "mg-MG",
          "mk-MK",
          "ml-IN",
          "mn-Cyrl",
          "mn-Cyrl-MN",
          "mr-IN",
          "ms-Latn",
          "ms-Latn-BN",
          "ms-Latn-MY",
          "ms-Latn-SG",
          "mt-MT",
          "my-MM",
          "nb-NO",
          "nb-SJ",
          "nd-ZW",
          "ne-IN",
          "ne-NP",
          "nl-AW",
          "nl-BE",
          "nl-BQ",
          "nl-CW",
          "nl-NL",
          "nl-SR",
          "nl-SX",
          "nn-NO",
          "om-ET",
          "om-KE",
          "or-IN",
          "os-GE",
          "os-RU",
          "pa-Arab",
          "pa-Arab-PK",
          "pa-Guru",
          "pa-Guru-IN",
          "pl-PL",
          "ps-AF",
          "pt-AO",
          "pt-BR",
          "pt-CV",
          "pt-GW",
          "pt-MO",
          "pt-MZ",
          "pt-PT",
          "pt-ST",
          "pt-TL",
          "qu-BO",
          "qu-EC",
          "qu-PE",
          "rm-CH",
          "rn-BI",
          "ro-MD",
          "ro-RO",
          "ru-BY",
          "ru-KG",
          "ru-KZ",
          "ru-MD",
          "ru-RU",
          "ru-UA",
          "rw-RW",
          "se-FI",
          "se-NO",
          "se-SE",
          "sg-CF",
          "si-LK",
          "sk-SK",
          "sl-SI",
          "sn-ZW",
          "so-DJ",
          "so-ET",
          "so-KE",
          "so-SO",
          "sq-AL",
          "sq-MK",
          "sq-XK",
          "sr-Cyrl",
          "sr-Cyrl-BA",
          "sr-Cyrl-ME",
          "sr-Cyrl-RS",
          "sr-Cyrl-XK",
          "sr-Latn",
          "sr-Latn-BA",
          "sr-Latn-ME",
          "sr-Latn-RS",
          "sr-Latn-XK",
          "sv-AX",
          "sv-FI",
          "sv-SE",
          "sw-CD",
          "sw-KE",
          "sw-TZ",
          "sw-UG",
          "ta-IN",
          "ta-LK",
          "ta-MY",
          "ta-SG",
          "te-IN",
          "th-TH",
          "ti-ER",
          "ti-ET",
          "to-TO",
          "tr-CY",
          "tr-TR",
          "ug-Arab",
          "ug-Arab-CN",
          "uk-UA",
          "ur-IN",
          "ur-PK",
          "uz-Arab",
          "uz-Arab-AF",
          "uz-Cyrl",
          "uz-Cyrl-UZ",
          "uz-Latn",
          "uz-Latn-UZ",
          "vi-VN",
          "yi-001",
          "yo-BJ",
          "yo-NG",
          "zh-Hans",
          "zh-Hans-CN",
          "zh-Hans-HK",
          "zh-Hans-MO",
          "zh-Hans-SG",
          "zh-Hant",
          "zh-Hant-HK",
          "zh-Hant-MO",
          "zh-Hant-TW",
          "zu-ZA"
        ],

        us_states_and_dc: [
            {name: 'Alabama', abbreviation: 'AL'},
            {name: 'Alaska', abbreviation: 'AK'},
            {name: 'Arizona', abbreviation: 'AZ'},
            {name: 'Arkansas', abbreviation: 'AR'},
            {name: 'California', abbreviation: 'CA'},
            {name: 'Colorado', abbreviation: 'CO'},
            {name: 'Connecticut', abbreviation: 'CT'},
            {name: 'Delaware', abbreviation: 'DE'},
            {name: 'District of Columbia', abbreviation: 'DC'},
            {name: 'Florida', abbreviation: 'FL'},
            {name: 'Georgia', abbreviation: 'GA'},
            {name: 'Hawaii', abbreviation: 'HI'},
            {name: 'Idaho', abbreviation: 'ID'},
            {name: 'Illinois', abbreviation: 'IL'},
            {name: 'Indiana', abbreviation: 'IN'},
            {name: 'Iowa', abbreviation: 'IA'},
            {name: 'Kansas', abbreviation: 'KS'},
            {name: 'Kentucky', abbreviation: 'KY'},
            {name: 'Louisiana', abbreviation: 'LA'},
            {name: 'Maine', abbreviation: 'ME'},
            {name: 'Maryland', abbreviation: 'MD'},
            {name: 'Massachusetts', abbreviation: 'MA'},
            {name: 'Michigan', abbreviation: 'MI'},
            {name: 'Minnesota', abbreviation: 'MN'},
            {name: 'Mississippi', abbreviation: 'MS'},
            {name: 'Missouri', abbreviation: 'MO'},
            {name: 'Montana', abbreviation: 'MT'},
            {name: 'Nebraska', abbreviation: 'NE'},
            {name: 'Nevada', abbreviation: 'NV'},
            {name: 'New Hampshire', abbreviation: 'NH'},
            {name: 'New Jersey', abbreviation: 'NJ'},
            {name: 'New Mexico', abbreviation: 'NM'},
            {name: 'New York', abbreviation: 'NY'},
            {name: 'North Carolina', abbreviation: 'NC'},
            {name: 'North Dakota', abbreviation: 'ND'},
            {name: 'Ohio', abbreviation: 'OH'},
            {name: 'Oklahoma', abbreviation: 'OK'},
            {name: 'Oregon', abbreviation: 'OR'},
            {name: 'Pennsylvania', abbreviation: 'PA'},
            {name: 'Rhode Island', abbreviation: 'RI'},
            {name: 'South Carolina', abbreviation: 'SC'},
            {name: 'South Dakota', abbreviation: 'SD'},
            {name: 'Tennessee', abbreviation: 'TN'},
            {name: 'Texas', abbreviation: 'TX'},
            {name: 'Utah', abbreviation: 'UT'},
            {name: 'Vermont', abbreviation: 'VT'},
            {name: 'Virginia', abbreviation: 'VA'},
            {name: 'Washington', abbreviation: 'WA'},
            {name: 'West Virginia', abbreviation: 'WV'},
            {name: 'Wisconsin', abbreviation: 'WI'},
            {name: 'Wyoming', abbreviation: 'WY'}
        ],

        territories: [
            {name: 'American Samoa', abbreviation: 'AS'},
            {name: 'Federated States of Micronesia', abbreviation: 'FM'},
            {name: 'Guam', abbreviation: 'GU'},
            {name: 'Marshall Islands', abbreviation: 'MH'},
            {name: 'Northern Mariana Islands', abbreviation: 'MP'},
            {name: 'Puerto Rico', abbreviation: 'PR'},
            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}
        ],

        armed_forces: [
            {name: 'Armed Forces Europe', abbreviation: 'AE'},
            {name: 'Armed Forces Pacific', abbreviation: 'AP'},
            {name: 'Armed Forces the Americas', abbreviation: 'AA'}
        ],

        country_regions: {
            it: [
                { name: "Valle d'Aosta", abbreviation: "VDA" },
                { name: "Piemonte", abbreviation: "PIE" },
                { name: "Lombardia", abbreviation: "LOM" },
                { name: "Veneto", abbreviation: "VEN" },
                { name: "Trentino Alto Adige", abbreviation: "TAA" },
                { name: "Friuli Venezia Giulia", abbreviation: "FVG" },
                { name: "Liguria", abbreviation: "LIG" },
                { name: "Emilia Romagna", abbreviation: "EMR" },
                { name: "Toscana", abbreviation: "TOS" },
                { name: "Umbria", abbreviation: "UMB" },
                { name: "Marche", abbreviation: "MAR" },
                { name: "Abruzzo", abbreviation: "ABR" },
                { name: "Lazio", abbreviation: "LAZ" },
                { name: "Campania", abbreviation: "CAM" },
                { name: "Puglia", abbreviation: "PUG" },
                { name: "Basilicata", abbreviation: "BAS" },
                { name: "Molise", abbreviation: "MOL" },
                { name: "Calabria", abbreviation: "CAL" },
                { name: "Sicilia", abbreviation: "SIC" },
                { name: "Sardegna", abbreviation: "SAR" }
            ],
            mx: [
                { name: 'Aguascalientes', abbreviation: 'AGU' },
                { name: 'Baja California', abbreviation: 'BCN' },
                { name: 'Baja California Sur', abbreviation: 'BCS' },
                { name: 'Campeche', abbreviation: 'CAM' },
                { name: 'Chiapas', abbreviation: 'CHP' },
                { name: 'Chihuahua', abbreviation: 'CHH' },
                { name: 'Ciudad de MÃ©xico', abbreviation: 'DIF' },
                { name: 'Coahuila', abbreviation: 'COA' },
                { name: 'Colima', abbreviation: 'COL' },
                { name: 'Durango', abbreviation: 'DUR' },
                { name: 'Guanajuato', abbreviation: 'GUA' },
                { name: 'Guerrero', abbreviation: 'GRO' },
                { name: 'Hidalgo', abbreviation: 'HID' },
                { name: 'Jalisco', abbreviation: 'JAL' },
                { name: 'MÃ©xico', abbreviation: 'MEX' },
                { name: 'MichoacÃ¡n', abbreviation: 'MIC' },
                { name: 'Morelos', abbreviation: 'MOR' },
                { name: 'Nayarit', abbreviation: 'NAY' },
                { name: 'Nuevo LeÃ³n', abbreviation: 'NLE' },
                { name: 'Oaxaca', abbreviation: 'OAX' },
                { name: 'Puebla', abbreviation: 'PUE' },
                { name: 'QuerÃ©taro', abbreviation: 'QUE' },
                { name: 'Quintana Roo', abbreviation: 'ROO' },
                { name: 'San Luis PotosÃ­', abbreviation: 'SLP' },
                { name: 'Sinaloa', abbreviation: 'SIN' },
                { name: 'Sonora', abbreviation: 'SON' },
                { name: 'Tabasco', abbreviation: 'TAB' },
                { name: 'Tamaulipas', abbreviation: 'TAM' },
                { name: 'Tlaxcala', abbreviation: 'TLA' },
                { name: 'Veracruz', abbreviation: 'VER' },
                { name: 'YucatÃ¡n', abbreviation: 'YUC' },
                { name: 'Zacatecas', abbreviation: 'ZAC' }
            ]
        },

        street_suffixes: {
            'us': [
                {name: 'Avenue', abbreviation: 'Ave'},
                {name: 'Boulevard', abbreviation: 'Blvd'},
                {name: 'Center', abbreviation: 'Ctr'},
                {name: 'Circle', abbreviation: 'Cir'},
                {name: 'Court', abbreviation: 'Ct'},
                {name: 'Drive', abbreviation: 'Dr'},
                {name: 'Extension', abbreviation: 'Ext'},
                {name: 'Glen', abbreviation: 'Gln'},
                {name: 'Grove', abbreviation: 'Grv'},
                {name: 'Heights', abbreviation: 'Hts'},
                {name: 'Highway', abbreviation: 'Hwy'},
                {name: 'Junction', abbreviation: 'Jct'},
                {name: 'Key', abbreviation: 'Key'},
                {name: 'Lane', abbreviation: 'Ln'},
                {name: 'Loop', abbreviation: 'Loop'},
                {name: 'Manor', abbreviation: 'Mnr'},
                {name: 'Mill', abbreviation: 'Mill'},
                {name: 'Park', abbreviation: 'Park'},
                {name: 'Parkway', abbreviation: 'Pkwy'},
                {name: 'Pass', abbreviation: 'Pass'},
                {name: 'Path', abbreviation: 'Path'},
                {name: 'Pike', abbreviation: 'Pike'},
                {name: 'Place', abbreviation: 'Pl'},
                {name: 'Plaza', abbreviation: 'Plz'},
                {name: 'Point', abbreviation: 'Pt'},
                {name: 'Ridge', abbreviation: 'Rdg'},
                {name: 'River', abbreviation: 'Riv'},
                {name: 'Road', abbreviation: 'Rd'},
                {name: 'Square', abbreviation: 'Sq'},
                {name: 'Street', abbreviation: 'St'},
                {name: 'Terrace', abbreviation: 'Ter'},
                {name: 'Trail', abbreviation: 'Trl'},
                {name: 'Turnpike', abbreviation: 'Tpke'},
                {name: 'View', abbreviation: 'Vw'},
                {name: 'Way', abbreviation: 'Way'}
            ],
            'it': [
                { name: 'Accesso', abbreviation: 'Acc.' },
                { name: 'Alzaia', abbreviation: 'Alz.' },
                { name: 'Arco', abbreviation: 'Arco' },
                { name: 'Archivolto', abbreviation: 'Acv.' },
                { name: 'Arena', abbreviation: 'Arena' },
                { name: 'Argine', abbreviation: 'Argine' },
                { name: 'Bacino', abbreviation: 'Bacino' },
                { name: 'Banchi', abbreviation: 'Banchi' },
                { name: 'Banchina', abbreviation: 'Ban.' },
                { name: 'Bastioni', abbreviation: 'Bas.' },
                { name: 'Belvedere', abbreviation: 'Belv.' },
                { name: 'Borgata', abbreviation: 'B.ta' },
                { name: 'Borgo', abbreviation: 'B.go' },
                { name: 'Calata', abbreviation: 'Cal.' },
                { name: 'Calle', abbreviation: 'Calle' },
                { name: 'Campiello', abbreviation: 'Cam.' },
                { name: 'Campo', abbreviation: 'Cam.' },
                { name: 'Canale', abbreviation: 'Can.' },
                { name: 'Carraia', abbreviation: 'Carr.' },
                { name: 'Cascina', abbreviation: 'Cascina' },
                { name: 'Case sparse', abbreviation: 'c.s.' },
                { name: 'Cavalcavia', abbreviation: 'Cv.' },
                { name: 'Circonvallazione', abbreviation: 'Cv.' },
                { name: 'Complanare', abbreviation: 'C.re' },
                { name: 'Contrada', abbreviation: 'C.da' },
                { name: 'Corso', abbreviation: 'C.so' },
                { name: 'Corte', abbreviation: 'C.te' },
                { name: 'Cortile', abbreviation: 'C.le' },
                { name: 'Diramazione', abbreviation: 'Dir.' },
                { name: 'Fondaco', abbreviation: 'F.co' },
                { name: 'Fondamenta', abbreviation: 'F.ta' },
                { name: 'Fondo', abbreviation: 'F.do' },
                { name: 'Frazione', abbreviation: 'Fr.' },
                { name: 'Isola', abbreviation: 'Is.' },
                { name: 'Largo', abbreviation: 'L.go' },
                { name: 'Litoranea', abbreviation: 'Lit.' },
                { name: 'Lungolago', abbreviation: 'L.go lago' },
                { name: 'Lungo Po', abbreviation: 'l.go Po' },
                { name: 'Molo', abbreviation: 'Molo' },
                { name: 'Mura', abbreviation: 'Mura' },
                { name: 'Passaggio privato', abbreviation: 'pass. priv.' },
                { name: 'Passeggiata', abbreviation: 'Pass.' },
                { name: 'Piazza', abbreviation: 'P.zza' },
                { name: 'Piazzale', abbreviation: 'P.le' },
                { name: 'Ponte', abbreviation: 'P.te' },
                { name: 'Portico', abbreviation: 'P.co' },
                { name: 'Rampa', abbreviation: 'Rampa' },
                { name: 'Regione', abbreviation: 'Reg.' },
                { name: 'Rione', abbreviation: 'R.ne' },
                { name: 'Rio', abbreviation: 'Rio' },
                { name: 'Ripa', abbreviation: 'Ripa' },
                { name: 'Riva', abbreviation: 'Riva' },
                { name: 'RondÃ²', abbreviation: 'RondÃ²' },
                { name: 'Rotonda', abbreviation: 'Rot.' },
                { name: 'Sagrato', abbreviation: 'Sagr.' },
                { name: 'Salita', abbreviation: 'Sal.' },
                { name: 'Scalinata', abbreviation: 'Scal.' },
                { name: 'Scalone', abbreviation: 'Scal.' },
                { name: 'Slargo', abbreviation: 'Sl.' },
                { name: 'Sottoportico', abbreviation: 'Sott.' },
                { name: 'Strada', abbreviation: 'Str.' },
                { name: 'Stradale', abbreviation: 'Str.le' },
                { name: 'Strettoia', abbreviation: 'Strett.' },
                { name: 'Traversa', abbreviation: 'Trav.' },
                { name: 'Via', abbreviation: 'V.' },
                { name: 'Viale', abbreviation: 'V.le' },
                { name: 'Vicinale', abbreviation: 'Vic.le' },
                { name: 'Vicolo', abbreviation: 'Vic.' }
            ],
            'uk' : [
                {name: 'Avenue', abbreviation: 'Ave'},
                {name: 'Close', abbreviation: 'Cl'},
                {name: 'Court', abbreviation: 'Ct'},
                {name: 'Crescent', abbreviation: 'Cr'},
                {name: 'Drive', abbreviation: 'Dr'},
                {name: 'Garden', abbreviation: 'Gdn'},
                {name: 'Gardens', abbreviation: 'Gdns'},
                {name: 'Green', abbreviation: 'Gn'},
                {name: 'Grove', abbreviation: 'Gr'},
                {name: 'Lane', abbreviation: 'Ln'},
                {name: 'Mount', abbreviation: 'Mt'},
                {name: 'Place', abbreviation: 'Pl'},
                {name: 'Park', abbreviation: 'Pk'},
                {name: 'Ridge', abbreviation: 'Rdg'},
                {name: 'Road', abbreviation: 'Rd'},
                {name: 'Square', abbreviation: 'Sq'},
                {name: 'Street', abbreviation: 'St'},
                {name: 'Terrace', abbreviation: 'Ter'},
                {name: 'Valley', abbreviation: 'Val'}
            ]
        },

        months: [
            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},
            // Not messing with leap years...
            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},
            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},
            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},
            {name: 'May', short_name: 'May', numeric: '05', days: 31},
            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},
            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},
            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},
            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},
            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},
            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},
            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}
        ],

        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29
        cc_types: [
            {name: "American Express", short_name: 'amex', prefix: '34', length: 15},
            {name: "Bankcard", short_name: 'bankcard', prefix: '5610', length: 16},
            {name: "China UnionPay", short_name: 'chinaunion', prefix: '62', length: 16},
            {name: "Diners Club Carte Blanche", short_name: 'dccarte', prefix: '300', length: 14},
            {name: "Diners Club enRoute", short_name: 'dcenroute', prefix: '2014', length: 15},
            {name: "Diners Club International", short_name: 'dcintl', prefix: '36', length: 14},
            {name: "Diners Club United States & Canada", short_name: 'dcusc', prefix: '54', length: 16},
            {name: "Discover Card", short_name: 'discover', prefix: '6011', length: 16},
            {name: "InstaPayment", short_name: 'instapay', prefix: '637', length: 16},
            {name: "JCB", short_name: 'jcb', prefix: '3528', length: 16},
            {name: "Laser", short_name: 'laser', prefix: '6304', length: 16},
            {name: "Maestro", short_name: 'maestro', prefix: '5018', length: 16},
            {name: "Mastercard", short_name: 'mc', prefix: '51', length: 16},
            {name: "Solo", short_name: 'solo', prefix: '6334', length: 16},
            {name: "Switch", short_name: 'switch', prefix: '4903', length: 16},
            {name: "Visa", short_name: 'visa', prefix: '4', length: 16},
            {name: "Visa Electron", short_name: 'electron', prefix: '4026', length: 16}
        ],

        //return all world currency by ISO 4217
        currency_types: [
            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},
            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},
            {'code' : 'ALL', 'name' : 'Albania Lek'},
            {'code' : 'AMD', 'name' : 'Armenia Dram'},
            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},
            {'code' : 'AOA', 'name' : 'Angola Kwanza'},
            {'code' : 'ARS', 'name' : 'Argentina Peso'},
            {'code' : 'AUD', 'name' : 'Australia Dollar'},
            {'code' : 'AWG', 'name' : 'Aruba Guilder'},
            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},
            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},
            {'code' : 'BBD', 'name' : 'Barbados Dollar'},
            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},
            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},
            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},
            {'code' : 'BIF', 'name' : 'Burundi Franc'},
            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},
            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},
            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},
            {'code' : 'BRL', 'name' : 'Brazil Real'},
            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},
            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},
            {'code' : 'BWP', 'name' : 'Botswana Pula'},
            {'code' : 'BYR', 'name' : 'Belarus Ruble'},
            {'code' : 'BZD', 'name' : 'Belize Dollar'},
            {'code' : 'CAD', 'name' : 'Canada Dollar'},
            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},
            {'code' : 'CHF', 'name' : 'Switzerland Franc'},
            {'code' : 'CLP', 'name' : 'Chile Peso'},
            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},
            {'code' : 'COP', 'name' : 'Colombia Peso'},
            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},
            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},
            {'code' : 'CUP', 'name' : 'Cuba Peso'},
            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},
            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},
            {'code' : 'DJF', 'name' : 'Djibouti Franc'},
            {'code' : 'DKK', 'name' : 'Denmark Krone'},
            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},
            {'code' : 'DZD', 'name' : 'Algeria Dinar'},
            {'code' : 'EGP', 'name' : 'Egypt Pound'},
            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},
            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},
            {'code' : 'EUR', 'name' : 'Euro Member Countries'},
            {'code' : 'FJD', 'name' : 'Fiji Dollar'},
            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},
            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},
            {'code' : 'GEL', 'name' : 'Georgia Lari'},
            {'code' : 'GGP', 'name' : 'Guernsey Pound'},
            {'code' : 'GHS', 'name' : 'Ghana Cedi'},
            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},
            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},
            {'code' : 'GNF', 'name' : 'Guinea Franc'},
            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},
            {'code' : 'GYD', 'name' : 'Guyana Dollar'},
            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},
            {'code' : 'HNL', 'name' : 'Honduras Lempira'},
            {'code' : 'HRK', 'name' : 'Croatia Kuna'},
            {'code' : 'HTG', 'name' : 'Haiti Gourde'},
            {'code' : 'HUF', 'name' : 'Hungary Forint'},
            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},
            {'code' : 'ILS', 'name' : 'Israel Shekel'},
            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},
            {'code' : 'INR', 'name' : 'India Rupee'},
            {'code' : 'IQD', 'name' : 'Iraq Dinar'},
            {'code' : 'IRR', 'name' : 'Iran Rial'},
            {'code' : 'ISK', 'name' : 'Iceland Krona'},
            {'code' : 'JEP', 'name' : 'Jersey Pound'},
            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},
            {'code' : 'JOD', 'name' : 'Jordan Dinar'},
            {'code' : 'JPY', 'name' : 'Japan Yen'},
            {'code' : 'KES', 'name' : 'Kenya Shilling'},
            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},
            {'code' : 'KHR', 'name' : 'Cambodia Riel'},
            {'code' : 'KMF', 'name' : 'Comoros Franc'},
            {'code' : 'KPW', 'name' : 'Korea (North) Won'},
            {'code' : 'KRW', 'name' : 'Korea (South) Won'},
            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},
            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},
            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},
            {'code' : 'LAK', 'name' : 'Laos Kip'},
            {'code' : 'LBP', 'name' : 'Lebanon Pound'},
            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},
            {'code' : 'LRD', 'name' : 'Liberia Dollar'},
            {'code' : 'LSL', 'name' : 'Lesotho Loti'},
            {'code' : 'LTL', 'name' : 'Lithuania Litas'},
            {'code' : 'LYD', 'name' : 'Libya Dinar'},
            {'code' : 'MAD', 'name' : 'Morocco Dirham'},
            {'code' : 'MDL', 'name' : 'Moldova Leu'},
            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},
            {'code' : 'MKD', 'name' : 'Macedonia Denar'},
            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},
            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},
            {'code' : 'MOP', 'name' : 'Macau Pataca'},
            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},
            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},
            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},
            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},
            {'code' : 'MXN', 'name' : 'Mexico Peso'},
            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},
            {'code' : 'MZN', 'name' : 'Mozambique Metical'},
            {'code' : 'NAD', 'name' : 'Namibia Dollar'},
            {'code' : 'NGN', 'name' : 'Nigeria Naira'},
            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},
            {'code' : 'NOK', 'name' : 'Norway Krone'},
            {'code' : 'NPR', 'name' : 'Nepal Rupee'},
            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},
            {'code' : 'OMR', 'name' : 'Oman Rial'},
            {'code' : 'PAB', 'name' : 'Panama Balboa'},
            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},
            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},
            {'code' : 'PHP', 'name' : 'Philippines Peso'},
            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},
            {'code' : 'PLN', 'name' : 'Poland Zloty'},
            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},
            {'code' : 'QAR', 'name' : 'Qatar Riyal'},
            {'code' : 'RON', 'name' : 'Romania New Leu'},
            {'code' : 'RSD', 'name' : 'Serbia Dinar'},
            {'code' : 'RUB', 'name' : 'Russia Ruble'},
            {'code' : 'RWF', 'name' : 'Rwanda Franc'},
            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},
            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},
            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},
            {'code' : 'SDG', 'name' : 'Sudan Pound'},
            {'code' : 'SEK', 'name' : 'Sweden Krona'},
            {'code' : 'SGD', 'name' : 'Singapore Dollar'},
            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},
            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},
            {'code' : 'SOS', 'name' : 'Somalia Shilling'},
            {'code' : 'SPL', 'name' : 'Seborga Luigino'},
            {'code' : 'SRD', 'name' : 'Suriname Dollar'},
            {'code' : 'STD', 'name' : 'SÃ£o TomÃ© and PrÃ­ncipe Dobra'},
            {'code' : 'SVC', 'name' : 'El Salvador Colon'},
            {'code' : 'SYP', 'name' : 'Syria Pound'},
            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},
            {'code' : 'THB', 'name' : 'Thailand Baht'},
            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},
            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},
            {'code' : 'TND', 'name' : 'Tunisia Dinar'},
            {'code' : 'TOP', 'name' : 'Tonga Pa\'anga'},
            {'code' : 'TRY', 'name' : 'Turkey Lira'},
            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},
            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},
            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},
            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},
            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},
            {'code' : 'UGX', 'name' : 'Uganda Shilling'},
            {'code' : 'USD', 'name' : 'United States Dollar'},
            {'code' : 'UYU', 'name' : 'Uruguay Peso'},
            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},
            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},
            {'code' : 'VND', 'name' : 'Viet Nam Dong'},
            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},
            {'code' : 'WST', 'name' : 'Samoa Tala'},
            {'code' : 'XAF', 'name' : 'CommunautÃ© FinanciÃ¨re Africaine (BEAC) CFA Franc BEAC'},
            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},
            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},
            {'code' : 'XOF', 'name' : 'CommunautÃ© FinanciÃ¨re Africaine (BCEAO) Franc'},
            {'code' : 'XPF', 'name' : 'Comptoirs FranÃ§ais du Pacifique (CFP) Franc'},
            {'code' : 'YER', 'name' : 'Yemen Rial'},
            {'code' : 'ZAR', 'name' : 'South Africa Rand'},
            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},
            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}
        ],

        // return the names of all valide colors
        colorNames : [  "AliceBlue", "Black", "Navy", "DarkBlue", "MediumBlue", "Blue", "DarkGreen", "Green", "Teal", "DarkCyan", "DeepSkyBlue", "DarkTurquoise", "MediumSpringGreen", "Lime", "SpringGreen",
            "Aqua", "Cyan", "MidnightBlue", "DodgerBlue", "LightSeaGreen", "ForestGreen", "SeaGreen", "DarkSlateGray", "LimeGreen", "MediumSeaGreen", "Turquoise", "RoyalBlue", "SteelBlue", "DarkSlateBlue", "MediumTurquoise",
            "Indigo", "DarkOliveGreen", "CadetBlue", "CornflowerBlue", "RebeccaPurple", "MediumAquaMarine", "DimGray", "SlateBlue", "OliveDrab", "SlateGray", "LightSlateGray", "MediumSlateBlue", "LawnGreen", "Chartreuse",
            "Aquamarine", "Maroon", "Purple", "Olive", "Gray", "SkyBlue", "LightSkyBlue", "BlueViolet", "DarkRed", "DarkMagenta", "SaddleBrown", "Ivory", "White",
            "DarkSeaGreen", "LightGreen", "MediumPurple", "DarkViolet", "PaleGreen", "DarkOrchid", "YellowGreen", "Sienna", "Brown", "DarkGray", "LightBlue", "GreenYellow", "PaleTurquoise", "LightSteelBlue", "PowderBlue",
            "FireBrick", "DarkGoldenRod", "MediumOrchid", "RosyBrown", "DarkKhaki", "Silver", "MediumVioletRed", "IndianRed", "Peru", "Chocolate", "Tan", "LightGray", "Thistle", "Orchid", "GoldenRod", "PaleVioletRed",
            "Crimson", "Gainsboro", "Plum", "BurlyWood", "LightCyan", "Lavender", "DarkSalmon", "Violet", "PaleGoldenRod", "LightCoral", "Khaki", "AliceBlue", "HoneyDew", "Azure", "SandyBrown", "Wheat", "Beige", "WhiteSmoke",
            "MintCream", "GhostWhite", "Salmon", "AntiqueWhite", "Linen", "LightGoldenRodYellow", "OldLace", "Red", "Fuchsia", "Magenta", "DeepPink", "OrangeRed", "Tomato", "HotPink", "Coral", "DarkOrange", "LightSalmon", "Orange",
            "LightPink", "Pink", "Gold", "PeachPuff", "NavajoWhite", "Moccasin", "Bisque", "MistyRose", "BlanchedAlmond", "PapayaWhip", "LavenderBlush", "SeaShell", "Cornsilk", "LemonChiffon", "FloralWhite", "Snow", "Yellow", "LightYellow"
        ],

        // Data taken from https://www.sec.gov/rules/other/4-460list.htm
        company: [ "3Com Corp",
        "3M Company",
        "A.G. Edwards Inc.",
        "Abbott Laboratories",
        "Abercrombie & Fitch Co.",
        "ABM Industries Incorporated",
        "Ace Hardware Corporation",
        "ACT Manufacturing Inc.",
        "Acterna Corp.",
        "Adams Resources & Energy, Inc.",
        "ADC Telecommunications, Inc.",
        "Adelphia Communications Corporation",
        "Administaff, Inc.",
        "Adobe Systems Incorporated",
        "Adolph Coors Company",
        "Advance Auto Parts, Inc.",
        "Advanced Micro Devices, Inc.",
        "AdvancePCS, Inc.",
        "Advantica Restaurant Group, Inc.",
        "The AES Corporation",
        "Aetna Inc.",
        "Affiliated Computer Services, Inc.",
        "AFLAC Incorporated",
        "AGCO Corporation",
        "Agilent Technologies, Inc.",
        "Agway Inc.",
        "Apartment Investment and Management Company",
        "Air Products and Chemicals, Inc.",
        "Airborne, Inc.",
        "Airgas, Inc.",
        "AK Steel Holding Corporation",
        "Alaska Air Group, Inc.",
        "Alberto-Culver Company",
        "Albertson's, Inc.",
        "Alcoa Inc.",
        "Alleghany Corporation",
        "Allegheny Energy, Inc.",
        "Allegheny Technologies Incorporated",
        "Allergan, Inc.",
        "ALLETE, Inc.",
        "Alliant Energy Corporation",
        "Allied Waste Industries, Inc.",
        "Allmerica Financial Corporation",
        "The Allstate Corporation",
        "ALLTEL Corporation",
        "The Alpine Group, Inc.",
        "Amazon.com, Inc.",
        "AMC Entertainment Inc.",
        "American Power Conversion Corporation",
        "Amerada Hess Corporation",
        "AMERCO",
        "Ameren Corporation",
        "America West Holdings Corporation",
        "American Axle & Manufacturing Holdings, Inc.",
        "American Eagle Outfitters, Inc.",
        "American Electric Power Company, Inc.",
        "American Express Company",
        "American Financial Group, Inc.",
        "American Greetings Corporation",
        "American International Group, Inc.",
        "American Standard Companies Inc.",
        "American Water Works Company, Inc.",
        "AmerisourceBergen Corporation",
        "Ames Department Stores, Inc.",
        "Amgen Inc.",
        "Amkor Technology, Inc.",
        "AMR Corporation",
        "AmSouth Bancorp.",
        "Amtran, Inc.",
        "Anadarko Petroleum Corporation",
        "Analog Devices, Inc.",
        "Anheuser-Busch Companies, Inc.",
        "Anixter International Inc.",
        "AnnTaylor Inc.",
        "Anthem, Inc.",
        "AOL Time Warner Inc.",
        "Aon Corporation",
        "Apache Corporation",
        "Apple Computer, Inc.",
        "Applera Corporation",
        "Applied Industrial Technologies, Inc.",
        "Applied Materials, Inc.",
        "Aquila, Inc.",
        "ARAMARK Corporation",
        "Arch Coal, Inc.",
        "Archer Daniels Midland Company",
        "Arkansas Best Corporation",
        "Armstrong Holdings, Inc.",
        "Arrow Electronics, Inc.",
        "ArvinMeritor, Inc.",
        "Ashland Inc.",
        "Astoria Financial Corporation",
        "AT&T Corp.",
        "Atmel Corporation",
        "Atmos Energy Corporation",
        "Audiovox Corporation",
        "Autoliv, Inc.",
        "Automatic Data Processing, Inc.",
        "AutoNation, Inc.",
        "AutoZone, Inc.",
        "Avaya Inc.",
        "Avery Dennison Corporation",
        "Avista Corporation",
        "Avnet, Inc.",
        "Avon Products, Inc.",
        "Baker Hughes Incorporated",
        "Ball Corporation",
        "Bank of America Corporation",
        "The Bank of New York Company, Inc.",
        "Bank One Corporation",
        "Banknorth Group, Inc.",
        "Banta Corporation",
        "Barnes & Noble, Inc.",
        "Bausch & Lomb Incorporated",
        "Baxter International Inc.",
        "BB&T Corporation",
        "The Bear Stearns Companies Inc.",
        "Beazer Homes USA, Inc.",
        "Beckman Coulter, Inc.",
        "Becton, Dickinson and Company",
        "Bed Bath & Beyond Inc.",
        "Belk, Inc.",
        "Bell Microproducts Inc.",
        "BellSouth Corporation",
        "Belo Corp.",
        "Bemis Company, Inc.",
        "Benchmark Electronics, Inc.",
        "Berkshire Hathaway Inc.",
        "Best Buy Co., Inc.",
        "Bethlehem Steel Corporation",
        "Beverly Enterprises, Inc.",
        "Big Lots, Inc.",
        "BJ Services Company",
        "BJ's Wholesale Club, Inc.",
        "The Black & Decker Corporation",
        "Black Hills Corporation",
        "BMC Software, Inc.",
        "The Boeing Company",
        "Boise Cascade Corporation",
        "Borders Group, Inc.",
        "BorgWarner Inc.",
        "Boston Scientific Corporation",
        "Bowater Incorporated",
        "Briggs & Stratton Corporation",
        "Brightpoint, Inc.",
        "Brinker International, Inc.",
        "Bristol-Myers Squibb Company",
        "Broadwing, Inc.",
        "Brown Shoe Company, Inc.",
        "Brown-Forman Corporation",
        "Brunswick Corporation",
        "Budget Group, Inc.",
        "Burlington Coat Factory Warehouse Corporation",
        "Burlington Industries, Inc.",
        "Burlington Northern Santa Fe Corporation",
        "Burlington Resources Inc.",
        "C. H. Robinson Worldwide Inc.",
        "Cablevision Systems Corp",
        "Cabot Corp",
        "Cadence Design Systems, Inc.",
        "Calpine Corp.",
        "Campbell Soup Co.",
        "Capital One Financial Corp.",
        "Cardinal Health Inc.",
        "Caremark Rx Inc.",
        "Carlisle Cos. Inc.",
        "Carpenter Technology Corp.",
        "Casey's General Stores Inc.",
        "Caterpillar Inc.",
        "CBRL Group Inc.",
        "CDI Corp.",
        "CDW Computer Centers Inc.",
        "CellStar Corp.",
        "Cendant Corp",
        "Cenex Harvest States Cooperatives",
        "Centex Corp.",
        "CenturyTel Inc.",
        "Ceridian Corp.",
        "CH2M Hill Cos. Ltd.",
        "Champion Enterprises Inc.",
        "Charles Schwab Corp.",
        "Charming Shoppes Inc.",
        "Charter Communications Inc.",
        "Charter One Financial Inc.",
        "ChevronTexaco Corp.",
        "Chiquita Brands International Inc.",
        "Chubb Corp",
        "Ciena Corp.",
        "Cigna Corp",
        "Cincinnati Financial Corp.",
        "Cinergy Corp.",
        "Cintas Corp.",
        "Circuit City Stores Inc.",
        "Cisco Systems Inc.",
        "Citigroup, Inc",
        "Citizens Communications Co.",
        "CKE Restaurants Inc.",
        "Clear Channel Communications Inc.",
        "The Clorox Co.",
        "CMGI Inc.",
        "CMS Energy Corp.",
        "CNF Inc.",
        "Coca-Cola Co.",
        "Coca-Cola Enterprises Inc.",
        "Colgate-Palmolive Co.",
        "Collins & Aikman Corp.",
        "Comcast Corp.",
        "Comdisco Inc.",
        "Comerica Inc.",
        "Comfort Systems USA Inc.",
        "Commercial Metals Co.",
        "Community Health Systems Inc.",
        "Compass Bancshares Inc",
        "Computer Associates International Inc.",
        "Computer Sciences Corp.",
        "Compuware Corp.",
        "Comverse Technology Inc.",
        "ConAgra Foods Inc.",
        "Concord EFS Inc.",
        "Conectiv, Inc",
        "Conoco Inc",
        "Conseco Inc.",
        "Consolidated Freightways Corp.",
        "Consolidated Edison Inc.",
        "Constellation Brands Inc.",
        "Constellation Emergy Group Inc.",
        "Continental Airlines Inc.",
        "Convergys Corp.",
        "Cooper Cameron Corp.",
        "Cooper Industries Ltd.",
        "Cooper Tire & Rubber Co.",
        "Corn Products International Inc.",
        "Corning Inc.",
        "Costco Wholesale Corp.",
        "Countrywide Credit Industries Inc.",
        "Coventry Health Care Inc.",
        "Cox Communications Inc.",
        "Crane Co.",
        "Crompton Corp.",
        "Crown Cork & Seal Co. Inc.",
        "CSK Auto Corp.",
        "CSX Corp.",
        "Cummins Inc.",
        "CVS Corp.",
        "Cytec Industries Inc.",
        "D&K Healthcare Resources, Inc.",
        "D.R. Horton Inc.",
        "Dana Corporation",
        "Danaher Corporation",
        "Darden Restaurants Inc.",
        "DaVita Inc.",
        "Dean Foods Company",
        "Deere & Company",
        "Del Monte Foods Co",
        "Dell Computer Corporation",
        "Delphi Corp.",
        "Delta Air Lines Inc.",
        "Deluxe Corporation",
        "Devon Energy Corporation",
        "Di Giorgio Corporation",
        "Dial Corporation",
        "Diebold Incorporated",
        "Dillard's Inc.",
        "DIMON Incorporated",
        "Dole Food Company, Inc.",
        "Dollar General Corporation",
        "Dollar Tree Stores, Inc.",
        "Dominion Resources, Inc.",
        "Domino's Pizza LLC",
        "Dover Corporation, Inc.",
        "Dow Chemical Company",
        "Dow Jones & Company, Inc.",
        "DPL Inc.",
        "DQE Inc.",
        "Dreyer's Grand Ice Cream, Inc.",
        "DST Systems, Inc.",
        "DTE Energy Co.",
        "E.I. Du Pont de Nemours and Company",
        "Duke Energy Corp",
        "Dun & Bradstreet Inc.",
        "DURA Automotive Systems Inc.",
        "DynCorp",
        "Dynegy Inc.",
        "E*Trade Group, Inc.",
        "E.W. Scripps Company",
        "Earthlink, Inc.",
        "Eastman Chemical Company",
        "Eastman Kodak Company",
        "Eaton Corporation",
        "Echostar Communications Corporation",
        "Ecolab Inc.",
        "Edison International",
        "EGL Inc.",
        "El Paso Corporation",
        "Electronic Arts Inc.",
        "Electronic Data Systems Corp.",
        "Eli Lilly and Company",
        "EMC Corporation",
        "Emcor Group Inc.",
        "Emerson Electric Co.",
        "Encompass Services Corporation",
        "Energizer Holdings Inc.",
        "Energy East Corporation",
        "Engelhard Corporation",
        "Enron Corp.",
        "Entergy Corporation",
        "Enterprise Products Partners L.P.",
        "EOG Resources, Inc.",
        "Equifax Inc.",
        "Equitable Resources Inc.",
        "Equity Office Properties Trust",
        "Equity Residential Properties Trust",
        "Estee Lauder Companies Inc.",
        "Exelon Corporation",
        "Exide Technologies",
        "Expeditors International of Washington Inc.",
        "Express Scripts Inc.",
        "ExxonMobil Corporation",
        "Fairchild Semiconductor International Inc.",
        "Family Dollar Stores Inc.",
        "Farmland Industries Inc.",
        "Federal Mogul Corp.",
        "Federated Department Stores Inc.",
        "Federal Express Corp.",
        "Felcor Lodging Trust Inc.",
        "Ferro Corp.",
        "Fidelity National Financial Inc.",
        "Fifth Third Bancorp",
        "First American Financial Corp.",
        "First Data Corp.",
        "First National of Nebraska Inc.",
        "First Tennessee National Corp.",
        "FirstEnergy Corp.",
        "Fiserv Inc.",
        "Fisher Scientific International Inc.",
        "FleetBoston Financial Co.",
        "Fleetwood Enterprises Inc.",
        "Fleming Companies Inc.",
        "Flowers Foods Inc.",
        "Flowserv Corp",
        "Fluor Corp",
        "FMC Corp",
        "Foamex International Inc",
        "Foot Locker Inc",
        "Footstar Inc.",
        "Ford Motor Co",
        "Forest Laboratories Inc.",
        "Fortune Brands Inc.",
        "Foster Wheeler Ltd.",
        "FPL Group Inc.",
        "Franklin Resources Inc.",
        "Freeport McMoran Copper & Gold Inc.",
        "Frontier Oil Corp",
        "Furniture Brands International Inc.",
        "Gannett Co., Inc.",
        "Gap Inc.",
        "Gateway Inc.",
        "GATX Corporation",
        "Gemstar-TV Guide International Inc.",
        "GenCorp Inc.",
        "General Cable Corporation",
        "General Dynamics Corporation",
        "General Electric Company",
        "General Mills Inc",
        "General Motors Corporation",
        "Genesis Health Ventures Inc.",
        "Gentek Inc.",
        "Gentiva Health Services Inc.",
        "Genuine Parts Company",
        "Genuity Inc.",
        "Genzyme Corporation",
        "Georgia Gulf Corporation",
        "Georgia-Pacific Corporation",
        "Gillette Company",
        "Gold Kist Inc.",
        "Golden State Bancorp Inc.",
        "Golden West Financial Corporation",
        "Goldman Sachs Group Inc.",
        "Goodrich Corporation",
        "The Goodyear Tire & Rubber Company",
        "Granite Construction Incorporated",
        "Graybar Electric Company Inc.",
        "Great Lakes Chemical Corporation",
        "Great Plains Energy Inc.",
        "GreenPoint Financial Corp.",
        "Greif Bros. Corporation",
        "Grey Global Group Inc.",
        "Group 1 Automotive Inc.",
        "Guidant Corporation",
        "H&R Block Inc.",
        "H.B. Fuller Company",
        "H.J. Heinz Company",
        "Halliburton Co.",
        "Harley-Davidson Inc.",
        "Harman International Industries Inc.",
        "Harrah's Entertainment Inc.",
        "Harris Corp.",
        "Harsco Corp.",
        "Hartford Financial Services Group Inc.",
        "Hasbro Inc.",
        "Hawaiian Electric Industries Inc.",
        "HCA Inc.",
        "Health Management Associates Inc.",
        "Health Net Inc.",
        "Healthsouth Corp",
        "Henry Schein Inc.",
        "Hercules Inc.",
        "Herman Miller Inc.",
        "Hershey Foods Corp.",
        "Hewlett-Packard Company",
        "Hibernia Corp.",
        "Hillenbrand Industries Inc.",
        "Hilton Hotels Corp.",
        "Hollywood Entertainment Corp.",
        "Home Depot Inc.",
        "Hon Industries Inc.",
        "Honeywell International Inc.",
        "Hormel Foods Corp.",
        "Host Marriott Corp.",
        "Household International Corp.",
        "Hovnanian Enterprises Inc.",
        "Hub Group Inc.",
        "Hubbell Inc.",
        "Hughes Supply Inc.",
        "Humana Inc.",
        "Huntington Bancshares Inc.",
        "Idacorp Inc.",
        "IDT Corporation",
        "IKON Office Solutions Inc.",
        "Illinois Tool Works Inc.",
        "IMC Global Inc.",
        "Imperial Sugar Company",
        "IMS Health Inc.",
        "Ingles Market Inc",
        "Ingram Micro Inc.",
        "Insight Enterprises Inc.",
        "Integrated Electrical Services Inc.",
        "Intel Corporation",
        "International Paper Co.",
        "Interpublic Group of Companies Inc.",
        "Interstate Bakeries Corporation",
        "International Business Machines Corp.",
        "International Flavors & Fragrances Inc.",
        "International Multifoods Corporation",
        "Intuit Inc.",
        "IT Group Inc.",
        "ITT Industries Inc.",
        "Ivax Corp.",
        "J.B. Hunt Transport Services Inc.",
        "J.C. Penny Co.",
        "J.P. Morgan Chase & Co.",
        "Jabil Circuit Inc.",
        "Jack In The Box Inc.",
        "Jacobs Engineering Group Inc.",
        "JDS Uniphase Corp.",
        "Jefferson-Pilot Co.",
        "John Hancock Financial Services Inc.",
        "Johnson & Johnson",
        "Johnson Controls Inc.",
        "Jones Apparel Group Inc.",
        "KB Home",
        "Kellogg Company",
        "Kellwood Company",
        "Kelly Services Inc.",
        "Kemet Corp.",
        "Kennametal Inc.",
        "Kerr-McGee Corporation",
        "KeyCorp",
        "KeySpan Corp.",
        "Kimball International Inc.",
        "Kimberly-Clark Corporation",
        "Kindred Healthcare Inc.",
        "KLA-Tencor Corporation",
        "K-Mart Corp.",
        "Knight-Ridder Inc.",
        "Kohl's Corp.",
        "KPMG Consulting Inc.",
        "Kroger Co.",
        "L-3 Communications Holdings Inc.",
        "Laboratory Corporation of America Holdings",
        "Lam Research Corporation",
        "LandAmerica Financial Group Inc.",
        "Lands' End Inc.",
        "Landstar System Inc.",
        "La-Z-Boy Inc.",
        "Lear Corporation",
        "Legg Mason Inc.",
        "Leggett & Platt Inc.",
        "Lehman Brothers Holdings Inc.",
        "Lennar Corporation",
        "Lennox International Inc.",
        "Level 3 Communications Inc.",
        "Levi Strauss & Co.",
        "Lexmark International Inc.",
        "Limited Inc.",
        "Lincoln National Corporation",
        "Linens 'n Things Inc.",
        "Lithia Motors Inc.",
        "Liz Claiborne Inc.",
        "Lockheed Martin Corporation",
        "Loews Corporation",
        "Longs Drug Stores Corporation",
        "Louisiana-Pacific Corporation",
        "Lowe's Companies Inc.",
        "LSI Logic Corporation",
        "The LTV Corporation",
        "The Lubrizol Corporation",
        "Lucent Technologies Inc.",
        "Lyondell Chemical Company",
        "M & T Bank Corporation",
        "Magellan Health Services Inc.",
        "Mail-Well Inc.",
        "Mandalay Resort Group",
        "Manor Care Inc.",
        "Manpower Inc.",
        "Marathon Oil Corporation",
        "Mariner Health Care Inc.",
        "Markel Corporation",
        "Marriott International Inc.",
        "Marsh & McLennan Companies Inc.",
        "Marsh Supermarkets Inc.",
        "Marshall & Ilsley Corporation",
        "Martin Marietta Materials Inc.",
        "Masco Corporation",
        "Massey Energy Company",
        "MasTec Inc.",
        "Mattel Inc.",
        "Maxim Integrated Products Inc.",
        "Maxtor Corporation",
        "Maxxam Inc.",
        "The May Department Stores Company",
        "Maytag Corporation",
        "MBNA Corporation",
        "McCormick & Company Incorporated",
        "McDonald's Corporation",
        "The McGraw-Hill Companies Inc.",
        "McKesson Corporation",
        "McLeodUSA Incorporated",
        "M.D.C. Holdings Inc.",
        "MDU Resources Group Inc.",
        "MeadWestvaco Corporation",
        "Medtronic Inc.",
        "Mellon Financial Corporation",
        "The Men's Wearhouse Inc.",
        "Merck & Co., Inc.",
        "Mercury General Corporation",
        "Merrill Lynch & Co. Inc.",
        "Metaldyne Corporation",
        "Metals USA Inc.",
        "MetLife Inc.",
        "Metris Companies Inc",
        "MGIC Investment Corporation",
        "MGM Mirage",
        "Michaels Stores Inc.",
        "Micron Technology Inc.",
        "Microsoft Corporation",
        "Milacron Inc.",
        "Millennium Chemicals Inc.",
        "Mirant Corporation",
        "Mohawk Industries Inc.",
        "Molex Incorporated",
        "The MONY Group Inc.",
        "Morgan Stanley Dean Witter & Co.",
        "Motorola Inc.",
        "MPS Group Inc.",
        "Murphy Oil Corporation",
        "Nabors Industries Inc",
        "Nacco Industries Inc",
        "Nash Finch Company",
        "National City Corp.",
        "National Commerce Financial Corporation",
        "National Fuel Gas Company",
        "National Oilwell Inc",
        "National Rural Utilities Cooperative Finance Corporation",
        "National Semiconductor Corporation",
        "National Service Industries Inc",
        "Navistar International Corporation",
        "NCR Corporation",
        "The Neiman Marcus Group Inc.",
        "New Jersey Resources Corporation",
        "New York Times Company",
        "Newell Rubbermaid Inc",
        "Newmont Mining Corporation",
        "Nextel Communications Inc",
        "Nicor Inc",
        "Nike Inc",
        "NiSource Inc",
        "Noble Energy Inc",
        "Nordstrom Inc",
        "Norfolk Southern Corporation",
        "Nortek Inc",
        "North Fork Bancorporation Inc",
        "Northeast Utilities System",
        "Northern Trust Corporation",
        "Northrop Grumman Corporation",
        "NorthWestern Corporation",
        "Novellus Systems Inc",
        "NSTAR",
        "NTL Incorporated",
        "Nucor Corp",
        "Nvidia Corp",
        "NVR Inc",
        "Northwest Airlines Corp",
        "Occidental Petroleum Corp",
        "Ocean Energy Inc",
        "Office Depot Inc.",
        "OfficeMax Inc",
        "OGE Energy Corp",
        "Oglethorpe Power Corp.",
        "Ohio Casualty Corp.",
        "Old Republic International Corp.",
        "Olin Corp.",
        "OM Group Inc",
        "Omnicare Inc",
        "Omnicom Group",
        "On Semiconductor Corp",
        "ONEOK Inc",
        "Oracle Corp",
        "Oshkosh Truck Corp",
        "Outback Steakhouse Inc.",
        "Owens & Minor Inc.",
        "Owens Corning",
        "Owens-Illinois Inc",
        "Oxford Health Plans Inc",
        "Paccar Inc",
        "PacifiCare Health Systems Inc",
        "Packaging Corp. of America",
        "Pactiv Corp",
        "Pall Corp",
        "Pantry Inc",
        "Park Place Entertainment Corp",
        "Parker Hannifin Corp.",
        "Pathmark Stores Inc.",
        "Paychex Inc",
        "Payless Shoesource Inc",
        "Penn Traffic Co.",
        "Pennzoil-Quaker State Company",
        "Pentair Inc",
        "Peoples Energy Corp.",
        "PeopleSoft Inc",
        "Pep Boys Manny, Moe & Jack",
        "Potomac Electric Power Co.",
        "Pepsi Bottling Group Inc.",
        "PepsiAmericas Inc.",
        "PepsiCo Inc.",
        "Performance Food Group Co.",
        "Perini Corp",
        "PerkinElmer Inc",
        "Perot Systems Corp",
        "Petco Animal Supplies Inc.",
        "Peter Kiewit Sons', Inc.",
        "PETsMART Inc",
        "Pfizer Inc",
        "Pacific Gas & Electric Corp.",
        "Pharmacia Corp",
        "Phar Mor Inc.",
        "Phelps Dodge Corp.",
        "Philip Morris Companies Inc.",
        "Phillips Petroleum Co",
        "Phillips Van Heusen Corp.",
        "Phoenix Companies Inc",
        "Pier 1 Imports Inc.",
        "Pilgrim's Pride Corporation",
        "Pinnacle West Capital Corp",
        "Pioneer-Standard Electronics Inc.",
        "Pitney Bowes Inc.",
        "Pittston Brinks Group",
        "Plains All American Pipeline LP",
        "PNC Financial Services Group Inc.",
        "PNM Resources Inc",
        "Polaris Industries Inc.",
        "Polo Ralph Lauren Corp",
        "PolyOne Corp",
        "Popular Inc",
        "Potlatch Corp",
        "PPG Industries Inc",
        "PPL Corp",
        "Praxair Inc",
        "Precision Castparts Corp",
        "Premcor Inc.",
        "Pride International Inc",
        "Primedia Inc",
        "Principal Financial Group Inc.",
        "Procter & Gamble Co.",
        "Pro-Fac Cooperative Inc.",
        "Progress Energy Inc",
        "Progressive Corporation",
        "Protective Life Corp",
        "Provident Financial Group",
        "Providian Financial Corp.",
        "Prudential Financial Inc.",
        "PSS World Medical Inc",
        "Public Service Enterprise Group Inc.",
        "Publix Super Markets Inc.",
        "Puget Energy Inc.",
        "Pulte Homes Inc",
        "Qualcomm Inc",
        "Quanta Services Inc.",
        "Quantum Corp",
        "Quest Diagnostics Inc.",
        "Questar Corp",
        "Quintiles Transnational",
        "Qwest Communications Intl Inc",
        "R.J. Reynolds Tobacco Company",
        "R.R. Donnelley & Sons Company",
        "Radio Shack Corporation",
        "Raymond James Financial Inc.",
        "Raytheon Company",
        "Reader's Digest Association Inc.",
        "Reebok International Ltd.",
        "Regions Financial Corp.",
        "Regis Corporation",
        "Reliance Steel & Aluminum Co.",
        "Reliant Energy Inc.",
        "Rent A Center Inc",
        "Republic Services Inc",
        "Revlon Inc",
        "RGS Energy Group Inc",
        "Rite Aid Corp",
        "Riverwood Holding Inc.",
        "RoadwayCorp",
        "Robert Half International Inc.",
        "Rock-Tenn Co",
        "Rockwell Automation Inc",
        "Rockwell Collins Inc",
        "Rohm & Haas Co.",
        "Ross Stores Inc",
        "RPM Inc.",
        "Ruddick Corp",
        "Ryder System Inc",
        "Ryerson Tull Inc",
        "Ryland Group Inc.",
        "Sabre Holdings Corp",
        "Safeco Corp",
        "Safeguard Scientifics Inc.",
        "Safeway Inc",
        "Saks Inc",
        "Sanmina-SCI Inc",
        "Sara Lee Corp",
        "SBC Communications Inc",
        "Scana Corp.",
        "Schering-Plough Corp",
        "Scholastic Corp",
        "SCI Systems Onc.",
        "Science Applications Intl. Inc.",
        "Scientific-Atlanta Inc",
        "Scotts Company",
        "Seaboard Corp",
        "Sealed Air Corp",
        "Sears Roebuck & Co",
        "Sempra Energy",
        "Sequa Corp",
        "Service Corp. International",
        "ServiceMaster Co",
        "Shaw Group Inc",
        "Sherwin-Williams Company",
        "Shopko Stores Inc",
        "Siebel Systems Inc",
        "Sierra Health Services Inc",
        "Sierra Pacific Resources",
        "Silgan Holdings Inc.",
        "Silicon Graphics Inc",
        "Simon Property Group Inc",
        "SLM Corporation",
        "Smith International Inc",
        "Smithfield Foods Inc",
        "Smurfit-Stone Container Corp",
        "Snap-On Inc",
        "Solectron Corp",
        "Solutia Inc",
        "Sonic Automotive Inc.",
        "Sonoco Products Co.",
        "Southern Company",
        "Southern Union Company",
        "SouthTrust Corp.",
        "Southwest Airlines Co",
        "Southwest Gas Corp",
        "Sovereign Bancorp Inc.",
        "Spartan Stores Inc",
        "Spherion Corp",
        "Sports Authority Inc",
        "Sprint Corp.",
        "SPX Corp",
        "St. Jude Medical Inc",
        "St. Paul Cos.",
        "Staff Leasing Inc.",
        "StanCorp Financial Group Inc",
        "Standard Pacific Corp.",
        "Stanley Works",
        "Staples Inc",
        "Starbucks Corp",
        "Starwood Hotels & Resorts Worldwide Inc",
        "State Street Corp.",
        "Stater Bros. Holdings Inc.",
        "Steelcase Inc",
        "Stein Mart Inc",
        "Stewart & Stevenson Services Inc",
        "Stewart Information Services Corp",
        "Stilwell Financial Inc",
        "Storage Technology Corporation",
        "Stryker Corp",
        "Sun Healthcare Group Inc.",
        "Sun Microsystems Inc.",
        "SunGard Data Systems Inc.",
        "Sunoco Inc.",
        "SunTrust Banks Inc",
        "Supervalu Inc",
        "Swift Transportation, Co., Inc",
        "Symbol Technologies Inc",
        "Synovus Financial Corp.",
        "Sysco Corp",
        "Systemax Inc.",
        "Target Corp.",
        "Tech Data Corporation",
        "TECO Energy Inc",
        "Tecumseh Products Company",
        "Tektronix Inc",
        "Teleflex Incorporated",
        "Telephone & Data Systems Inc",
        "Tellabs Inc.",
        "Temple-Inland Inc",
        "Tenet Healthcare Corporation",
        "Tenneco Automotive Inc.",
        "Teradyne Inc",
        "Terex Corp",
        "Tesoro Petroleum Corp.",
        "Texas Industries Inc.",
        "Texas Instruments Incorporated",
        "Textron Inc",
        "Thermo Electron Corporation",
        "Thomas & Betts Corporation",
        "Tiffany & Co",
        "Timken Company",
        "TJX Companies Inc",
        "TMP Worldwide Inc",
        "Toll Brothers Inc",
        "Torchmark Corporation",
        "Toro Company",
        "Tower Automotive Inc.",
        "Toys 'R' Us Inc",
        "Trans World Entertainment Corp.",
        "TransMontaigne Inc",
        "Transocean Inc",
        "TravelCenters of America Inc.",
        "Triad Hospitals Inc",
        "Tribune Company",
        "Trigon Healthcare Inc.",
        "Trinity Industries Inc",
        "Trump Hotels & Casino Resorts Inc.",
        "TruServ Corporation",
        "TRW Inc",
        "TXU Corp",
        "Tyson Foods Inc",
        "U.S. Bancorp",
        "U.S. Industries Inc.",
        "UAL Corporation",
        "UGI Corporation",
        "Unified Western Grocers Inc",
        "Union Pacific Corporation",
        "Union Planters Corp",
        "Unisource Energy Corp",
        "Unisys Corporation",
        "United Auto Group Inc",
        "United Defense Industries Inc.",
        "United Parcel Service Inc",
        "United Rentals Inc",
        "United Stationers Inc",
        "United Technologies Corporation",
        "UnitedHealth Group Incorporated",
        "Unitrin Inc",
        "Universal Corporation",
        "Universal Forest Products Inc",
        "Universal Health Services Inc",
        "Unocal Corporation",
        "Unova Inc",
        "UnumProvident Corporation",
        "URS Corporation",
        "US Airways Group Inc",
        "US Oncology Inc",
        "USA Interactive",
        "USFreighways Corporation",
        "USG Corporation",
        "UST Inc",
        "Valero Energy Corporation",
        "Valspar Corporation",
        "Value City Department Stores Inc",
        "Varco International Inc",
        "Vectren Corporation",
        "Veritas Software Corporation",
        "Verizon Communications Inc",
        "VF Corporation",
        "Viacom Inc",
        "Viad Corp",
        "Viasystems Group Inc",
        "Vishay Intertechnology Inc",
        "Visteon Corporation",
        "Volt Information Sciences Inc",
        "Vulcan Materials Company",
        "W.R. Berkley Corporation",
        "W.R. Grace & Co",
        "W.W. Grainger Inc",
        "Wachovia Corporation",
        "Wakenhut Corporation",
        "Walgreen Co",
        "Wallace Computer Services Inc",
        "Wal-Mart Stores Inc",
        "Walt Disney Co",
        "Walter Industries Inc",
        "Washington Mutual Inc",
        "Washington Post Co.",
        "Waste Management Inc",
        "Watsco Inc",
        "Weatherford International Inc",
        "Weis Markets Inc.",
        "Wellpoint Health Networks Inc",
        "Wells Fargo & Company",
        "Wendy's International Inc",
        "Werner Enterprises Inc",
        "WESCO International Inc",
        "Western Digital Inc",
        "Western Gas Resources Inc",
        "WestPoint Stevens Inc",
        "Weyerhauser Company",
        "WGL Holdings Inc",
        "Whirlpool Corporation",
        "Whole Foods Market Inc",
        "Willamette Industries Inc.",
        "Williams Companies Inc",
        "Williams Sonoma Inc",
        "Winn Dixie Stores Inc",
        "Wisconsin Energy Corporation",
        "Wm Wrigley Jr Company",
        "World Fuel Services Corporation",
        "WorldCom Inc",
        "Worthington Industries Inc",
        "WPS Resources Corporation",
        "Wyeth",
        "Wyndham International Inc",
        "Xcel Energy Inc",
        "Xerox Corp",
        "Xilinx Inc",
        "XO Communications Inc",
        "Yellow Corporation",
        "York International Corp",
        "Yum Brands Inc.",
        "Zale Corporation",
        "Zions Bancorporation"
      ],

        fileExtension : {
            "raster"    : ["bmp", "gif", "gpl", "ico", "jpeg", "psd", "png", "psp", "raw", "tiff"],
            "vector"    : ["3dv", "amf", "awg", "ai", "cgm", "cdr", "cmx", "dxf", "e2d", "egt", "eps", "fs", "odg", "svg", "xar"],
            "3d"        : ["3dmf", "3dm", "3mf", "3ds", "an8", "aoi", "blend", "cal3d", "cob", "ctm", "iob", "jas", "max", "mb", "mdx", "obj", "x", "x3d"],
            "document"  : ["doc", "docx", "dot", "html", "xml", "odt", "odm", "ott", "csv", "rtf", "tex", "xhtml", "xps"]
        },

        // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json
        timezones: [
                  {
                    "name": "Dateline Standard Time",
                    "abbr": "DST",
                    "offset": -12,
                    "isdst": false,
                    "text": "(UTC-12:00) International Date Line West",
                    "utc": [
                      "Etc/GMT+12"
                    ]
                  },
                  {
                    "name": "UTC-11",
                    "abbr": "U",
                    "offset": -11,
                    "isdst": false,
                    "text": "(UTC-11:00) Coordinated Universal Time-11",
                    "utc": [
                      "Etc/GMT+11",
                      "Pacific/Midway",
                      "Pacific/Niue",
                      "Pacific/Pago_Pago"
                    ]
                  },
                  {
                    "name": "Hawaiian Standard Time",
                    "abbr": "HST",
                    "offset": -10,
                    "isdst": false,
                    "text": "(UTC-10:00) Hawaii",
                    "utc": [
                      "Etc/GMT+10",
                      "Pacific/Honolulu",
                      "Pacific/Johnston",
                      "Pacific/Rarotonga",
                      "Pacific/Tahiti"
                    ]
                  },
                  {
                    "name": "Alaskan Standard Time",
                    "abbr": "AKDT",
                    "offset": -8,
                    "isdst": true,
                    "text": "(UTC-09:00) Alaska",
                    "utc": [
                      "America/Anchorage",
                      "America/Juneau",
                      "America/Nome",
                      "America/Sitka",
                      "America/Yakutat"
                    ]
                  },
                  {
                    "name": "Pacific Standard Time (Mexico)",
                    "abbr": "PDT",
                    "offset": -7,
                    "isdst": true,
                    "text": "(UTC-08:00) Baja California",
                    "utc": [
                      "America/Santa_Isabel"
                    ]
                  },
                  {
                    "name": "Pacific Standard Time",
                    "abbr": "PDT",
                    "offset": -7,
                    "isdst": true,
                    "text": "(UTC-08:00) Pacific Time (US & Canada)",
                    "utc": [
                      "America/Dawson",
                      "America/Los_Angeles",
                      "America/Tijuana",
                      "America/Vancouver",
                      "America/Whitehorse",
                      "PST8PDT"
                    ]
                  },
                  {
                    "name": "US Mountain Standard Time",
                    "abbr": "UMST",
                    "offset": -7,
                    "isdst": false,
                    "text": "(UTC-07:00) Arizona",
                    "utc": [
                      "America/Creston",
                      "America/Dawson_Creek",
                      "America/Hermosillo",
                      "America/Phoenix",
                      "Etc/GMT+7"
                    ]
                  },
                  {
                    "name": "Mountain Standard Time (Mexico)",
                    "abbr": "MDT",
                    "offset": -6,
                    "isdst": true,
                    "text": "(UTC-07:00) Chihuahua, La Paz, Mazatlan",
                    "utc": [
                      "America/Chihuahua",
                      "America/Mazatlan"
                    ]
                  },
                  {
                    "name": "Mountain Standard Time",
                    "abbr": "MDT",
                    "offset": -6,
                    "isdst": true,
                    "text": "(UTC-07:00) Mountain Time (US & Canada)",
                    "utc": [
                      "America/Boise",
                      "America/Cambridge_Bay",
                      "America/Denver",
                      "America/Edmonton",
                      "America/Inuvik",
                      "America/Ojinaga",
                      "America/Yellowknife",
                      "MST7MDT"
                    ]
                  },
                  {
                    "name": "Central America Standard Time",
                    "abbr": "CAST",
                    "offset": -6,
                    "isdst": false,
                    "text": "(UTC-06:00) Central America",
                    "utc": [
                      "America/Belize",
                      "America/Costa_Rica",
                      "America/El_Salvador",
                      "America/Guatemala",
                      "America/Managua",
                      "America/Tegucigalpa",
                      "Etc/GMT+6",
                      "Pacific/Galapagos"
                    ]
                  },
                  {
                    "name": "Central Standard Time",
                    "abbr": "CDT",
                    "offset": -5,
                    "isdst": true,
                    "text": "(UTC-06:00) Central Time (US & Canada)",
                    "utc": [
                      "America/Chicago",
                      "America/Indiana/Knox",
                      "America/Indiana/Tell_City",
                      "America/Matamoros",
                      "America/Menominee",
                      "America/North_Dakota/Beulah",
                      "America/North_Dakota/Center",
                      "America/North_Dakota/New_Salem",
                      "America/Rainy_River",
                      "America/Rankin_Inlet",
                      "America/Resolute",
                      "America/Winnipeg",
                      "CST6CDT"
                    ]
                  },
                  {
                    "name": "Central Standard Time (Mexico)",
                    "abbr": "CDT",
                    "offset": -5,
                    "isdst": true,
                    "text": "(UTC-06:00) Guadalajara, Mexico City, Monterrey",
                    "utc": [
                      "America/Bahia_Banderas",
                      "America/Cancun",
                      "America/Merida",
                      "America/Mexico_City",
                      "America/Monterrey"
                    ]
                  },
                  {
                    "name": "Canada Central Standard Time",
                    "abbr": "CCST",
                    "offset": -6,
                    "isdst": false,
                    "text": "(UTC-06:00) Saskatchewan",
                    "utc": [
                      "America/Regina",
                      "America/Swift_Current"
                    ]
                  },
                  {
                    "name": "SA Pacific Standard Time",
                    "abbr": "SPST",
                    "offset": -5,
                    "isdst": false,
                    "text": "(UTC-05:00) Bogota, Lima, Quito",
                    "utc": [
                      "America/Bogota",
                      "America/Cayman",
                      "America/Coral_Harbour",
                      "America/Eirunepe",
                      "America/Guayaquil",
                      "America/Jamaica",
                      "America/Lima",
                      "America/Panama",
                      "America/Rio_Branco",
                      "Etc/GMT+5"
                    ]
                  },
                  {
                    "name": "Eastern Standard Time",
                    "abbr": "EDT",
                    "offset": -4,
                    "isdst": true,
                    "text": "(UTC-05:00) Eastern Time (US & Canada)",
                    "utc": [
                      "America/Detroit",
                      "America/Havana",
                      "America/Indiana/Petersburg",
                      "America/Indiana/Vincennes",
                      "America/Indiana/Winamac",
                      "America/Iqaluit",
                      "America/Kentucky/Monticello",
                      "America/Louisville",
                      "America/Montreal",
                      "America/Nassau",
                      "America/New_York",
                      "America/Nipigon",
                      "America/Pangnirtung",
                      "America/Port-au-Prince",
                      "America/Thunder_Bay",
                      "America/Toronto",
                      "EST5EDT"
                    ]
                  },
                  {
                    "name": "US Eastern Standard Time",
                    "abbr": "UEDT",
                    "offset": -4,
                    "isdst": true,
                    "text": "(UTC-05:00) Indiana (East)",
                    "utc": [
                      "America/Indiana/Marengo",
                      "America/Indiana/Vevay",
                      "America/Indianapolis"
                    ]
                  },
                  {
                    "name": "Venezuela Standard Time",
                    "abbr": "VST",
                    "offset": -4.5,
                    "isdst": false,
                    "text": "(UTC-04:30) Caracas",
                    "utc": [
                      "America/Caracas"
                    ]
                  },
                  {
                    "name": "Paraguay Standard Time",
                    "abbr": "PST",
                    "offset": -4,
                    "isdst": false,
                    "text": "(UTC-04:00) Asuncion",
                    "utc": [
                      "America/Asuncion"
                    ]
                  },
                  {
                    "name": "Atlantic Standard Time",
                    "abbr": "ADT",
                    "offset": -3,
                    "isdst": true,
                    "text": "(UTC-04:00) Atlantic Time (Canada)",
                    "utc": [
                      "America/Glace_Bay",
                      "America/Goose_Bay",
                      "America/Halifax",
                      "America/Moncton",
                      "America/Thule",
                      "Atlantic/Bermuda"
                    ]
                  },
                  {
                    "name": "Central Brazilian Standard Time",
                    "abbr": "CBST",
                    "offset": -4,
                    "isdst": false,
                    "text": "(UTC-04:00) Cuiaba",
                    "utc": [
                      "America/Campo_Grande",
                      "America/Cuiaba"
                    ]
                  },
                  {
                    "name": "SA Western Standard Time",
                    "abbr": "SWST",
                    "offset": -4,
                    "isdst": false,
                    "text": "(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",
                    "utc": [
                      "America/Anguilla",
                      "America/Antigua",
                      "America/Aruba",
                      "America/Barbados",
                      "America/Blanc-Sablon",
                      "America/Boa_Vista",
                      "America/Curacao",
                      "America/Dominica",
                      "America/Grand_Turk",
                      "America/Grenada",
                      "America/Guadeloupe",
                      "America/Guyana",
                      "America/Kralendijk",
                      "America/La_Paz",
                      "America/Lower_Princes",
                      "America/Manaus",
                      "America/Marigot",
                      "America/Martinique",
                      "America/Montserrat",
                      "America/Port_of_Spain",
                      "America/Porto_Velho",
                      "America/Puerto_Rico",
                      "America/Santo_Domingo",
                      "America/St_Barthelemy",
                      "America/St_Kitts",
                      "America/St_Lucia",
                      "America/St_Thomas",
                      "America/St_Vincent",
                      "America/Tortola",
                      "Etc/GMT+4"
                    ]
                  },
                  {
                    "name": "Pacific SA Standard Time",
                    "abbr": "PSST",
                    "offset": -4,
                    "isdst": false,
                    "text": "(UTC-04:00) Santiago",
                    "utc": [
                      "America/Santiago",
                      "Antarctica/Palmer"
                    ]
                  },
                  {
                    "name": "Newfoundland Standard Time",
                    "abbr": "NDT",
                    "offset": -2.5,
                    "isdst": true,
                    "text": "(UTC-03:30) Newfoundland",
                    "utc": [
                      "America/St_Johns"
                    ]
                  },
                  {
                    "name": "E. South America Standard Time",
                    "abbr": "ESAST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Brasilia",
                    "utc": [
                      "America/Sao_Paulo"
                    ]
                  },
                  {
                    "name": "Argentina Standard Time",
                    "abbr": "AST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Buenos Aires",
                    "utc": [
                      "America/Argentina/La_Rioja",
                      "America/Argentina/Rio_Gallegos",
                      "America/Argentina/Salta",
                      "America/Argentina/San_Juan",
                      "America/Argentina/San_Luis",
                      "America/Argentina/Tucuman",
                      "America/Argentina/Ushuaia",
                      "America/Buenos_Aires",
                      "America/Catamarca",
                      "America/Cordoba",
                      "America/Jujuy",
                      "America/Mendoza"
                    ]
                  },
                  {
                    "name": "SA Eastern Standard Time",
                    "abbr": "SEST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Cayenne, Fortaleza",
                    "utc": [
                      "America/Araguaina",
                      "America/Belem",
                      "America/Cayenne",
                      "America/Fortaleza",
                      "America/Maceio",
                      "America/Paramaribo",
                      "America/Recife",
                      "America/Santarem",
                      "Antarctica/Rothera",
                      "Atlantic/Stanley",
                      "Etc/GMT+3"
                    ]
                  },
                  {
                    "name": "Greenland Standard Time",
                    "abbr": "GDT",
                    "offset": -2,
                    "isdst": true,
                    "text": "(UTC-03:00) Greenland",
                    "utc": [
                      "America/Godthab"
                    ]
                  },
                  {
                    "name": "Montevideo Standard Time",
                    "abbr": "MST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Montevideo",
                    "utc": [
                      "America/Montevideo"
                    ]
                  },
                  {
                    "name": "Bahia Standard Time",
                    "abbr": "BST",
                    "offset": -3,
                    "isdst": false,
                    "text": "(UTC-03:00) Salvador",
                    "utc": [
                      "America/Bahia"
                    ]
                  },
                  {
                    "name": "UTC-02",
                    "abbr": "U",
                    "offset": -2,
                    "isdst": false,
                    "text": "(UTC-02:00) Coordinated Universal Time-02",
                    "utc": [
                      "America/Noronha",
                      "Atlantic/South_Georgia",
                      "Etc/GMT+2"
                    ]
                  },
                  {
                    "name": "Mid-Atlantic Standard Time",
                    "abbr": "MDT",
                    "offset": -1,
                    "isdst": true,
                    "text": "(UTC-02:00) Mid-Atlantic - Old"
                  },
                  {
                    "name": "Azores Standard Time",
                    "abbr": "ADT",
                    "offset": 0,
                    "isdst": true,
                    "text": "(UTC-01:00) Azores",
                    "utc": [
                      "America/Scoresbysund",
                      "Atlantic/Azores"
                    ]
                  },
                  {
                    "name": "Cape Verde Standard Time",
                    "abbr": "CVST",
                    "offset": -1,
                    "isdst": false,
                    "text": "(UTC-01:00) Cape Verde Is.",
                    "utc": [
                      "Atlantic/Cape_Verde",
                      "Etc/GMT+1"
                    ]
                  },
                  {
                    "name": "Morocco Standard Time",
                    "abbr": "MDT",
                    "offset": 1,
                    "isdst": true,
                    "text": "(UTC) Casablanca",
                    "utc": [
                      "Africa/Casablanca",
                      "Africa/El_Aaiun"
                    ]
                  },
                  {
                    "name": "UTC",
                    "abbr": "CUT",
                    "offset": 0,
                    "isdst": false,
                    "text": "(UTC) Coordinated Universal Time",
                    "utc": [
                      "America/Danmarkshavn",
                      "Etc/GMT"
                    ]
                  },
                  {
                    "name": "GMT Standard Time",
                    "abbr": "GDT",
                    "offset": 1,
                    "isdst": true,
                    "text": "(UTC) Dublin, Edinburgh, Lisbon, London",
                    "utc": [
                      "Atlantic/Canary",
                      "Atlantic/Faeroe",
                      "Atlantic/Madeira",
                      "Europe/Dublin",
                      "Europe/Guernsey",
                      "Europe/Isle_of_Man",
                      "Europe/Jersey",
                      "Europe/Lisbon",
                      "Europe/London"
                    ]
                  },
                  {
                    "name": "Greenwich Standard Time",
                    "abbr": "GST",
                    "offset": 0,
                    "isdst": false,
                    "text": "(UTC) Monrovia, Reykjavik",
                    "utc": [
                      "Africa/Abidjan",
                      "Africa/Accra",
                      "Africa/Bamako",
                      "Africa/Banjul",
                      "Africa/Bissau",
                      "Africa/Conakry",
                      "Africa/Dakar",
                      "Africa/Freetown",
                      "Africa/Lome",
                      "Africa/Monrovia",
                      "Africa/Nouakchott",
                      "Africa/Ouagadougou",
                      "Africa/Sao_Tome",
                      "Atlantic/Reykjavik",
                      "Atlantic/St_Helena"
                    ]
                  },
                  {
                    "name": "W. Europe Standard Time",
                    "abbr": "WEDT",
                    "offset": 2,
                    "isdst": true,
                    "text": "(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
                    "utc": [
                      "Arctic/Longyearbyen",
                      "Europe/Amsterdam",
                      "Europe/Andorra",
                      "Europe/Berlin",
                      "Europe/Busingen",
                      "Europe/Gibraltar",
                      "Europe/Luxembourg",
                      "Europe/Malta",
                      "Europe/Monaco",
                      "Europe/Oslo",
                      "Europe/Rome",
                      "Europe/San_Marino",
                      "Europe/Stockholm",
                      "Europe/Vaduz",
                      "Europe/Vatican",
                      "Europe/Vienna",
                      "Europe/Zurich"
                    ]
                  },
                  {
                    "name": "Central Europe Standard Time",
                    "abbr": "CEDT",
                    "offset": 2,
                    "isdst": true,
                    "text": "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                    "utc": [
                      "Europe/Belgrade",
                      "Europe/Bratislava",
                      "Europe/Budapest",
                      "Europe/Ljubljana",
                      "Europe/Podgorica",
                      "Europe/Prague",
                      "Europe/Tirane"
                    ]
                  },
                  {
                    "name": "Romance Standard Time",
                    "abbr": "RDT",
                    "offset": 2,
                    "isdst": true,
                    "text": "(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",
                    "utc": [
                      "Africa/Ceuta",
                      "Europe/Brussels",
                      "Europe/Copenhagen",
                      "Europe/Madrid",
                      "Europe/Paris"
                    ]
                  },
                  {
                    "name": "Central European Standard Time",
                    "abbr": "CEDT",
                    "offset": 2,
                    "isdst": true,
                    "text": "(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",
                    "utc": [
                      "Europe/Sarajevo",
                      "Europe/Skopje",
                      "Europe/Warsaw",
                      "Europe/Zagreb"
                    ]
                  },
                  {
                    "name": "W. Central Africa Standard Time",
                    "abbr": "WCAST",
                    "offset": 1,
                    "isdst": false,
                    "text": "(UTC+01:00) West Central Africa",
                    "utc": [
                      "Africa/Algiers",
                      "Africa/Bangui",
                      "Africa/Brazzaville",
                      "Africa/Douala",
                      "Africa/Kinshasa",
                      "Africa/Lagos",
                      "Africa/Libreville",
                      "Africa/Luanda",
                      "Africa/Malabo",
                      "Africa/Ndjamena",
                      "Africa/Niamey",
                      "Africa/Porto-Novo",
                      "Africa/Tunis",
                      "Etc/GMT-1"
                    ]
                  },
                  {
                    "name": "Namibia Standard Time",
                    "abbr": "NST",
                    "offset": 1,
                    "isdst": false,
                    "text": "(UTC+01:00) Windhoek",
                    "utc": [
                      "Africa/Windhoek"
                    ]
                  },
                  {
                    "name": "GTB Standard Time",
                    "abbr": "GDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Athens, Bucharest",
                    "utc": [
                      "Asia/Nicosia",
                      "Europe/Athens",
                      "Europe/Bucharest",
                      "Europe/Chisinau"
                    ]
                  },
                  {
                    "name": "Middle East Standard Time",
                    "abbr": "MEDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Beirut",
                    "utc": [
                      "Asia/Beirut"
                    ]
                  },
                  {
                    "name": "Egypt Standard Time",
                    "abbr": "EST",
                    "offset": 2,
                    "isdst": false,
                    "text": "(UTC+02:00) Cairo",
                    "utc": [
                      "Africa/Cairo"
                    ]
                  },
                  {
                    "name": "Syria Standard Time",
                    "abbr": "SDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Damascus",
                    "utc": [
                      "Asia/Damascus"
                    ]
                  },
                  {
                    "name": "E. Europe Standard Time",
                    "abbr": "EEDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) E. Europe"
                  },
                  {
                    "name": "South Africa Standard Time",
                    "abbr": "SAST",
                    "offset": 2,
                    "isdst": false,
                    "text": "(UTC+02:00) Harare, Pretoria",
                    "utc": [
                      "Africa/Blantyre",
                      "Africa/Bujumbura",
                      "Africa/Gaborone",
                      "Africa/Harare",
                      "Africa/Johannesburg",
                      "Africa/Kigali",
                      "Africa/Lubumbashi",
                      "Africa/Lusaka",
                      "Africa/Maputo",
                      "Africa/Maseru",
                      "Africa/Mbabane",
                      "Etc/GMT-2"
                    ]
                  },
                  {
                    "name": "FLE Standard Time",
                    "abbr": "FDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",
                    "utc": [
                      "Europe/Helsinki",
                      "Europe/Kiev",
                      "Europe/Mariehamn",
                      "Europe/Riga",
                      "Europe/Sofia",
                      "Europe/Tallinn",
                      "Europe/Uzhgorod",
                      "Europe/Vilnius",
                      "Europe/Zaporozhye"
                    ]
                  },
                  {
                    "name": "Turkey Standard Time",
                    "abbr": "TDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Istanbul",
                    "utc": [
                      "Europe/Istanbul"
                    ]
                  },
                  {
                    "name": "Israel Standard Time",
                    "abbr": "JDT",
                    "offset": 3,
                    "isdst": true,
                    "text": "(UTC+02:00) Jerusalem",
                    "utc": [
                      "Asia/Jerusalem"
                    ]
                  },
                  {
                    "name": "Libya Standard Time",
                    "abbr": "LST",
                    "offset": 2,
                    "isdst": false,
                    "text": "(UTC+02:00) Tripoli",
                    "utc": [
                      "Africa/Tripoli"
                    ]
                  },
                  {
                    "name": "Jordan Standard Time",
                    "abbr": "JST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Amman",
                    "utc": [
                      "Asia/Amman"
                    ]
                  },
                  {
                    "name": "Arabic Standard Time",
                    "abbr": "AST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Baghdad",
                    "utc": [
                      "Asia/Baghdad"
                    ]
                  },
                  {
                    "name": "Kaliningrad Standard Time",
                    "abbr": "KST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Kaliningrad, Minsk",
                    "utc": [
                      "Europe/Kaliningrad",
                      "Europe/Minsk"
                    ]
                  },
                  {
                    "name": "Arab Standard Time",
                    "abbr": "AST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Kuwait, Riyadh",
                    "utc": [
                      "Asia/Aden",
                      "Asia/Bahrain",
                      "Asia/Kuwait",
                      "Asia/Qatar",
                      "Asia/Riyadh"
                    ]
                  },
                  {
                    "name": "E. Africa Standard Time",
                    "abbr": "EAST",
                    "offset": 3,
                    "isdst": false,
                    "text": "(UTC+03:00) Nairobi",
                    "utc": [
                      "Africa/Addis_Ababa",
                      "Africa/Asmera",
                      "Africa/Dar_es_Salaam",
                      "Africa/Djibouti",
                      "Africa/Juba",
                      "Africa/Kampala",
                      "Africa/Khartoum",
                      "Africa/Mogadishu",
                      "Africa/Nairobi",
                      "Antarctica/Syowa",
                      "Etc/GMT-3",
                      "Indian/Antananarivo",
                      "Indian/Comoro",
                      "Indian/Mayotte"
                    ]
                  },
                  {
                    "name": "Iran Standard Time",
                    "abbr": "IDT",
                    "offset": 4.5,
                    "isdst": true,
                    "text": "(UTC+03:30) Tehran",
                    "utc": [
                      "Asia/Tehran"
                    ]
                  },
                  {
                    "name": "Arabian Standard Time",
                    "abbr": "AST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Abu Dhabi, Muscat",
                    "utc": [
                      "Asia/Dubai",
                      "Asia/Muscat",
                      "Etc/GMT-4"
                    ]
                  },
                  {
                    "name": "Azerbaijan Standard Time",
                    "abbr": "ADT",
                    "offset": 5,
                    "isdst": true,
                    "text": "(UTC+04:00) Baku",
                    "utc": [
                      "Asia/Baku"
                    ]
                  },
                  {
                    "name": "Russian Standard Time",
                    "abbr": "RST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Moscow, St. Petersburg, Volgograd",
                    "utc": [
                      "Europe/Moscow",
                      "Europe/Samara",
                      "Europe/Simferopol",
                      "Europe/Volgograd"
                    ]
                  },
                  {
                    "name": "Mauritius Standard Time",
                    "abbr": "MST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Port Louis",
                    "utc": [
                      "Indian/Mahe",
                      "Indian/Mauritius",
                      "Indian/Reunion"
                    ]
                  },
                  {
                    "name": "Georgian Standard Time",
                    "abbr": "GST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Tbilisi",
                    "utc": [
                      "Asia/Tbilisi"
                    ]
                  },
                  {
                    "name": "Caucasus Standard Time",
                    "abbr": "CST",
                    "offset": 4,
                    "isdst": false,
                    "text": "(UTC+04:00) Yerevan",
                    "utc": [
                      "Asia/Yerevan"
                    ]
                  },
                  {
                    "name": "Afghanistan Standard Time",
                    "abbr": "AST",
                    "offset": 4.5,
                    "isdst": false,
                    "text": "(UTC+04:30) Kabul",
                    "utc": [
                      "Asia/Kabul"
                    ]
                  },
                  {
                    "name": "West Asia Standard Time",
                    "abbr": "WAST",
                    "offset": 5,
                    "isdst": false,
                    "text": "(UTC+05:00) Ashgabat, Tashkent",
                    "utc": [
                      "Antarctica/Mawson",
                      "Asia/Aqtau",
                      "Asia/Aqtobe",
                      "Asia/Ashgabat",
                      "Asia/Dushanbe",
                      "Asia/Oral",
                      "Asia/Samarkand",
                      "Asia/Tashkent",
                      "Etc/GMT-5",
                      "Indian/Kerguelen",
                      "Indian/Maldives"
                    ]
                  },
                  {
                    "name": "Pakistan Standard Time",
                    "abbr": "PST",
                    "offset": 5,
                    "isdst": false,
                    "text": "(UTC+05:00) Islamabad, Karachi",
                    "utc": [
                      "Asia/Karachi"
                    ]
                  },
                  {
                    "name": "India Standard Time",
                    "abbr": "IST",
                    "offset": 5.5,
                    "isdst": false,
                    "text": "(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",
                    "utc": [
                      "Asia/Calcutta"
                    ]
                  },
                  {
                    "name": "Sri Lanka Standard Time",
                    "abbr": "SLST",
                    "offset": 5.5,
                    "isdst": false,
                    "text": "(UTC+05:30) Sri Jayawardenepura",
                    "utc": [
                      "Asia/Colombo"
                    ]
                  },
                  {
                    "name": "Nepal Standard Time",
                    "abbr": "NST",
                    "offset": 5.75,
                    "isdst": false,
                    "text": "(UTC+05:45) Kathmandu",
                    "utc": [
                      "Asia/Katmandu"
                    ]
                  },
                  {
                    "name": "Central Asia Standard Time",
                    "abbr": "CAST",
                    "offset": 6,
                    "isdst": false,
                    "text": "(UTC+06:00) Astana",
                    "utc": [
                      "Antarctica/Vostok",
                      "Asia/Almaty",
                      "Asia/Bishkek",
                      "Asia/Qyzylorda",
                      "Asia/Urumqi",
                      "Etc/GMT-6",
                      "Indian/Chagos"
                    ]
                  },
                  {
                    "name": "Bangladesh Standard Time",
                    "abbr": "BST",
                    "offset": 6,
                    "isdst": false,
                    "text": "(UTC+06:00) Dhaka",
                    "utc": [
                      "Asia/Dhaka",
                      "Asia/Thimphu"
                    ]
                  },
                  {
                    "name": "Ekaterinburg Standard Time",
                    "abbr": "EST",
                    "offset": 6,
                    "isdst": false,
                    "text": "(UTC+06:00) Ekaterinburg",
                    "utc": [
                      "Asia/Yekaterinburg"
                    ]
                  },
                  {
                    "name": "Myanmar Standard Time",
                    "abbr": "MST",
                    "offset": 6.5,
                    "isdst": false,
                    "text": "(UTC+06:30) Yangon (Rangoon)",
                    "utc": [
                      "Asia/Rangoon",
                      "Indian/Cocos"
                    ]
                  },
                  {
                    "name": "SE Asia Standard Time",
                    "abbr": "SAST",
                    "offset": 7,
                    "isdst": false,
                    "text": "(UTC+07:00) Bangkok, Hanoi, Jakarta",
                    "utc": [
                      "Antarctica/Davis",
                      "Asia/Bangkok",
                      "Asia/Hovd",
                      "Asia/Jakarta",
                      "Asia/Phnom_Penh",
                      "Asia/Pontianak",
                      "Asia/Saigon",
                      "Asia/Vientiane",
                      "Etc/GMT-7",
                      "Indian/Christmas"
                    ]
                  },
                  {
                    "name": "N. Central Asia Standard Time",
                    "abbr": "NCAST",
                    "offset": 7,
                    "isdst": false,
                    "text": "(UTC+07:00) Novosibirsk",
                    "utc": [
                      "Asia/Novokuznetsk",
                      "Asia/Novosibirsk",
                      "Asia/Omsk"
                    ]
                  },
                  {
                    "name": "China Standard Time",
                    "abbr": "CST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",
                    "utc": [
                      "Asia/Hong_Kong",
                      "Asia/Macau",
                      "Asia/Shanghai"
                    ]
                  },
                  {
                    "name": "North Asia Standard Time",
                    "abbr": "NAST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Krasnoyarsk",
                    "utc": [
                      "Asia/Krasnoyarsk"
                    ]
                  },
                  {
                    "name": "Singapore Standard Time",
                    "abbr": "MPST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Kuala Lumpur, Singapore",
                    "utc": [
                      "Asia/Brunei",
                      "Asia/Kuala_Lumpur",
                      "Asia/Kuching",
                      "Asia/Makassar",
                      "Asia/Manila",
                      "Asia/Singapore",
                      "Etc/GMT-8"
                    ]
                  },
                  {
                    "name": "W. Australia Standard Time",
                    "abbr": "WAST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Perth",
                    "utc": [
                      "Antarctica/Casey",
                      "Australia/Perth"
                    ]
                  },
                  {
                    "name": "Taipei Standard Time",
                    "abbr": "TST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Taipei",
                    "utc": [
                      "Asia/Taipei"
                    ]
                  },
                  {
                    "name": "Ulaanbaatar Standard Time",
                    "abbr": "UST",
                    "offset": 8,
                    "isdst": false,
                    "text": "(UTC+08:00) Ulaanbaatar",
                    "utc": [
                      "Asia/Choibalsan",
                      "Asia/Ulaanbaatar"
                    ]
                  },
                  {
                    "name": "North Asia East Standard Time",
                    "abbr": "NAEST",
                    "offset": 9,
                    "isdst": false,
                    "text": "(UTC+09:00) Irkutsk",
                    "utc": [
                      "Asia/Irkutsk"
                    ]
                  },
                  {
                    "name": "Tokyo Standard Time",
                    "abbr": "TST",
                    "offset": 9,
                    "isdst": false,
                    "text": "(UTC+09:00) Osaka, Sapporo, Tokyo",
                    "utc": [
                      "Asia/Dili",
                      "Asia/Jayapura",
                      "Asia/Tokyo",
                      "Etc/GMT-9",
                      "Pacific/Palau"
                    ]
                  },
                  {
                    "name": "Korea Standard Time",
                    "abbr": "KST",
                    "offset": 9,
                    "isdst": false,
                    "text": "(UTC+09:00) Seoul",
                    "utc": [
                      "Asia/Pyongyang",
                      "Asia/Seoul"
                    ]
                  },
                  {
                    "name": "Cen. Australia Standard Time",
                    "abbr": "CAST",
                    "offset": 9.5,
                    "isdst": false,
                    "text": "(UTC+09:30) Adelaide",
                    "utc": [
                      "Australia/Adelaide",
                      "Australia/Broken_Hill"
                    ]
                  },
                  {
                    "name": "AUS Central Standard Time",
                    "abbr": "ACST",
                    "offset": 9.5,
                    "isdst": false,
                    "text": "(UTC+09:30) Darwin",
                    "utc": [
                      "Australia/Darwin"
                    ]
                  },
                  {
                    "name": "E. Australia Standard Time",
                    "abbr": "EAST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Brisbane",
                    "utc": [
                      "Australia/Brisbane",
                      "Australia/Lindeman"
                    ]
                  },
                  {
                    "name": "AUS Eastern Standard Time",
                    "abbr": "AEST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Canberra, Melbourne, Sydney",
                    "utc": [
                      "Australia/Melbourne",
                      "Australia/Sydney"
                    ]
                  },
                  {
                    "name": "West Pacific Standard Time",
                    "abbr": "WPST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Guam, Port Moresby",
                    "utc": [
                      "Antarctica/DumontDUrville",
                      "Etc/GMT-10",
                      "Pacific/Guam",
                      "Pacific/Port_Moresby",
                      "Pacific/Saipan",
                      "Pacific/Truk"
                    ]
                  },
                  {
                    "name": "Tasmania Standard Time",
                    "abbr": "TST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Hobart",
                    "utc": [
                      "Australia/Currie",
                      "Australia/Hobart"
                    ]
                  },
                  {
                    "name": "Yakutsk Standard Time",
                    "abbr": "YST",
                    "offset": 10,
                    "isdst": false,
                    "text": "(UTC+10:00) Yakutsk",
                    "utc": [
                      "Asia/Chita",
                      "Asia/Khandyga",
                      "Asia/Yakutsk"
                    ]
                  },
                  {
                    "name": "Central Pacific Standard Time",
                    "abbr": "CPST",
                    "offset": 11,
                    "isdst": false,
                    "text": "(UTC+11:00) Solomon Is., New Caledonia",
                    "utc": [
                      "Antarctica/Macquarie",
                      "Etc/GMT-11",
                      "Pacific/Efate",
                      "Pacific/Guadalcanal",
                      "Pacific/Kosrae",
                      "Pacific/Noumea",
                      "Pacific/Ponape"
                    ]
                  },
                  {
                    "name": "Vladivostok Standard Time",
                    "abbr": "VST",
                    "offset": 11,
                    "isdst": false,
                    "text": "(UTC+11:00) Vladivostok",
                    "utc": [
                      "Asia/Sakhalin",
                      "Asia/Ust-Nera",
                      "Asia/Vladivostok"
                    ]
                  },
                  {
                    "name": "New Zealand Standard Time",
                    "abbr": "NZST",
                    "offset": 12,
                    "isdst": false,
                    "text": "(UTC+12:00) Auckland, Wellington",
                    "utc": [
                      "Antarctica/McMurdo",
                      "Pacific/Auckland"
                    ]
                  },
                  {
                    "name": "UTC+12",
                    "abbr": "U",
                    "offset": 12,
                    "isdst": false,
                    "text": "(UTC+12:00) Coordinated Universal Time+12",
                    "utc": [
                      "Etc/GMT-12",
                      "Pacific/Funafuti",
                      "Pacific/Kwajalein",
                      "Pacific/Majuro",
                      "Pacific/Nauru",
                      "Pacific/Tarawa",
                      "Pacific/Wake",
                      "Pacific/Wallis"
                    ]
                  },
                  {
                    "name": "Fiji Standard Time",
                    "abbr": "FST",
                    "offset": 12,
                    "isdst": false,
                    "text": "(UTC+12:00) Fiji",
                    "utc": [
                      "Pacific/Fiji"
                    ]
                  },
                  {
                    "name": "Magadan Standard Time",
                    "abbr": "MST",
                    "offset": 12,
                    "isdst": false,
                    "text": "(UTC+12:00) Magadan",
                    "utc": [
                      "Asia/Anadyr",
                      "Asia/Kamchatka",
                      "Asia/Magadan",
                      "Asia/Srednekolymsk"
                    ]
                  },
                  {
                    "name": "Kamchatka Standard Time",
                    "abbr": "KDT",
                    "offset": 13,
                    "isdst": true,
                    "text": "(UTC+12:00) Petropavlovsk-Kamchatsky - Old"
                  },
                  {
                    "name": "Tonga Standard Time",
                    "abbr": "TST",
                    "offset": 13,
                    "isdst": false,
                    "text": "(UTC+13:00) Nuku'alofa",
                    "utc": [
                      "Etc/GMT-13",
                      "Pacific/Enderbury",
                      "Pacific/Fakaofo",
                      "Pacific/Tongatapu"
                    ]
                  },
                  {
                    "name": "Samoa Standard Time",
                    "abbr": "SST",
                    "offset": 13,
                    "isdst": false,
                    "text": "(UTC+13:00) Samoa",
                    "utc": [
                      "Pacific/Apia"
                    ]
                  }
                ],
        //List source: http://answers.google.com/answers/threadview/id/589312.html
        profession: [
            "Airline Pilot",
            "Academic Team",
            "Accountant",
            "Account Executive",
            "Actor",
            "Actuary",
            "Acquisition Analyst",
            "Administrative Asst.",
            "Administrative Analyst",
            "Administrator",
            "Advertising Director",
            "Aerospace Engineer",
            "Agent",
            "Agricultural Inspector",
            "Agricultural Scientist",
            "Air Traffic Controller",
            "Animal Trainer",
            "Anthropologist",
            "Appraiser",
            "Architect",
            "Art Director",
            "Artist",
            "Astronomer",
            "Athletic Coach",
            "Auditor",
            "Author",
            "Baker",
            "Banker",
            "Bankruptcy Attorney",
            "Benefits Manager",
            "Biologist",
            "Bio-feedback Specialist",
            "Biomedical Engineer",
            "Biotechnical Researcher",
            "Broadcaster",
            "Broker",
            "Building Manager",
            "Building Contractor",
            "Building Inspector",
            "Business Analyst",
            "Business Planner",
            "Business Manager",
            "Buyer",
            "Call Center Manager",
            "Career Counselor",
            "Cash Manager",
            "Ceramic Engineer",
            "Chief Executive Officer",
            "Chief Operation Officer",
            "Chef",
            "Chemical Engineer",
            "Chemist",
            "Child Care Manager",
            "Chief Medical Officer",
            "Chiropractor",
            "Cinematographer",
            "City Housing Manager",
            "City Manager",
            "Civil Engineer",
            "Claims Manager",
            "Clinical Research Assistant",
            "Collections Manager",
            "Compliance Manager",
            "Comptroller",
            "Computer Manager",
            "Commercial Artist",
            "Communications Affairs Director",
            "Communications Director",
            "Communications Engineer",
            "Compensation Analyst",
            "Computer Programmer",
            "Computer Ops. Manager",
            "Computer Engineer",
            "Computer Operator",
            "Computer Graphics Specialist",
            "Construction Engineer",
            "Construction Manager",
            "Consultant",
            "Consumer Relations Manager",
            "Contract Administrator",
            "Copyright Attorney",
            "Copywriter",
            "Corporate Planner",
            "Corrections Officer",
            "Cosmetologist",
            "Credit Analyst",
            "Cruise Director",
            "Chief Information Officer",
            "Chief Technology Officer",
            "Customer Service Manager",
            "Cryptologist",
            "Dancer",
            "Data Security Manager",
            "Database Manager",
            "Day Care Instructor",
            "Dentist",
            "Designer",
            "Design Engineer",
            "Desktop Publisher",
            "Developer",
            "Development Officer",
            "Diamond Merchant",
            "Dietitian",
            "Direct Marketer",
            "Director",
            "Distribution Manager",
            "Diversity Manager",
            "Economist",
            "EEO Compliance Manager",
            "Editor",
            "Education Adminator",
            "Electrical Engineer",
            "Electro Optical Engineer",
            "Electronics Engineer",
            "Embassy Management",
            "Employment Agent",
            "Engineer Technician",
            "Entrepreneur",
            "Environmental Analyst",
            "Environmental Attorney",
            "Environmental Engineer",
            "Environmental Specialist",
            "Escrow Officer",
            "Estimator",
            "Executive Assistant",
            "Executive Director",
            "Executive Recruiter",
            "Facilities Manager",
            "Family Counselor",
            "Fashion Events Manager",
            "Fashion Merchandiser",
            "Fast Food Manager",
            "Film Producer",
            "Film Production Assistant",
            "Financial Analyst",
            "Financial Planner",
            "Financier",
            "Fine Artist",
            "Wildlife Specialist",
            "Fitness Consultant",
            "Flight Attendant",
            "Flight Engineer",
            "Floral Designer",
            "Food & Beverage Director",
            "Food Service Manager",
            "Forestry Technician",
            "Franchise Management",
            "Franchise Sales",
            "Fraud Investigator",
            "Freelance Writer",
            "Fund Raiser",
            "General Manager",
            "Geologist",
            "General Counsel",
            "Geriatric Specialist",
            "Gerontologist",
            "Glamour Photographer",
            "Golf Club Manager",
            "Gourmet Chef",
            "Graphic Designer",
            "Grounds Keeper",
            "Hazardous Waste Manager",
            "Health Care Manager",
            "Health Therapist",
            "Health Service Administrator",
            "Hearing Officer",
            "Home Economist",
            "Horticulturist",
            "Hospital Administrator",
            "Hotel Manager",
            "Human Resources Manager",
            "Importer",
            "Industrial Designer",
            "Industrial Engineer",
            "Information Director",
            "Inside Sales",
            "Insurance Adjuster",
            "Interior Decorator",
            "Internal Controls Director",
            "International Acct.",
            "International Courier",
            "International Lawyer",
            "Interpreter",
            "Investigator",
            "Investment Banker",
            "Investment Manager",
            "IT Architect",
            "IT Project Manager",
            "IT Systems Analyst",
            "Jeweler",
            "Joint Venture Manager",
            "Journalist",
            "Labor Negotiator",
            "Labor Organizer",
            "Labor Relations Manager",
            "Lab Services Director",
            "Lab Technician",
            "Land Developer",
            "Landscape Architect",
            "Law Enforcement Officer",
            "Lawyer",
            "Lead Software Engineer",
            "Lead Software Test Engineer",
            "Leasing Manager",
            "Legal Secretary",
            "Library Manager",
            "Litigation Attorney",
            "Loan Officer",
            "Lobbyist",
            "Logistics Manager",
            "Maintenance Manager",
            "Management Consultant",
            "Managed Care Director",
            "Managing Partner",
            "Manufacturing Director",
            "Manpower Planner",
            "Marine Biologist",
            "Market Res. Analyst",
            "Marketing Director",
            "Materials Manager",
            "Mathematician",
            "Membership Chairman",
            "Mechanic",
            "Mechanical Engineer",
            "Media Buyer",
            "Medical Investor",
            "Medical Secretary",
            "Medical Technician",
            "Mental Health Counselor",
            "Merchandiser",
            "Metallurgical Engineering",
            "Meteorologist",
            "Microbiologist",
            "MIS Manager",
            "Motion Picture Director",
            "Multimedia Director",
            "Musician",
            "Network Administrator",
            "Network Specialist",
            "Network Operator",
            "New Product Manager",
            "Novelist",
            "Nuclear Engineer",
            "Nuclear Specialist",
            "Nutritionist",
            "Nursing Administrator",
            "Occupational Therapist",
            "Oceanographer",
            "Office Manager",
            "Operations Manager",
            "Operations Research Director",
            "Optical Technician",
            "Optometrist",
            "Organizational Development Manager",
            "Outplacement Specialist",
            "Paralegal",
            "Park Ranger",
            "Patent Attorney",
            "Payroll Specialist",
            "Personnel Specialist",
            "Petroleum Engineer",
            "Pharmacist",
            "Photographer",
            "Physical Therapist",
            "Physician",
            "Physician Assistant",
            "Physicist",
            "Planning Director",
            "Podiatrist",
            "Political Analyst",
            "Political Scientist",
            "Politician",
            "Portfolio Manager",
            "Preschool Management",
            "Preschool Teacher",
            "Principal",
            "Private Banker",
            "Private Investigator",
            "Probation Officer",
            "Process Engineer",
            "Producer",
            "Product Manager",
            "Product Engineer",
            "Production Engineer",
            "Production Planner",
            "Professional Athlete",
            "Professional Coach",
            "Professor",
            "Project Engineer",
            "Project Manager",
            "Program Manager",
            "Property Manager",
            "Public Administrator",
            "Public Safety Director",
            "PR Specialist",
            "Publisher",
            "Purchasing Agent",
            "Publishing Director",
            "Quality Assurance Specialist",
            "Quality Control Engineer",
            "Quality Control Inspector",
            "Radiology Manager",
            "Railroad Engineer",
            "Real Estate Broker",
            "Recreational Director",
            "Recruiter",
            "Redevelopment Specialist",
            "Regulatory Affairs Manager",
            "Registered Nurse",
            "Rehabilitation Counselor",
            "Relocation Manager",
            "Reporter",
            "Research Specialist",
            "Restaurant Manager",
            "Retail Store Manager",
            "Risk Analyst",
            "Safety Engineer",
            "Sales Engineer",
            "Sales Trainer",
            "Sales Promotion Manager",
            "Sales Representative",
            "Sales Manager",
            "Service Manager",
            "Sanitation Engineer",
            "Scientific Programmer",
            "Scientific Writer",
            "Securities Analyst",
            "Security Consultant",
            "Security Director",
            "Seminar Presenter",
            "Ship's Officer",
            "Singer",
            "Social Director",
            "Social Program Planner",
            "Social Research",
            "Social Scientist",
            "Social Worker",
            "Sociologist",
            "Software Developer",
            "Software Engineer",
            "Software Test Engineer",
            "Soil Scientist",
            "Special Events Manager",
            "Special Education Teacher",
            "Special Projects Director",
            "Speech Pathologist",
            "Speech Writer",
            "Sports Event Manager",
            "Statistician",
            "Store Manager",
            "Strategic Alliance Director",
            "Strategic Planning Director",
            "Stress Reduction Specialist",
            "Stockbroker",
            "Surveyor",
            "Structural Engineer",
            "Superintendent",
            "Supply Chain Director",
            "System Engineer",
            "Systems Analyst",
            "Systems Programmer",
            "System Administrator",
            "Tax Specialist",
            "Teacher",
            "Technical Support Specialist",
            "Technical Illustrator",
            "Technical Writer",
            "Technology Director",
            "Telecom Analyst",
            "Telemarketer",
            "Theatrical Director",
            "Title Examiner",
            "Tour Escort",
            "Tour Guide Director",
            "Traffic Manager",
            "Trainer Translator",
            "Transportation Manager",
            "Travel Agent",
            "Treasurer",
            "TV Programmer",
            "Underwriter",
            "Union Representative",
            "University Administrator",
            "University Dean",
            "Urban Planner",
            "Veterinarian",
            "Vendor Relations Director",
            "Viticulturist",
            "Warehouse Manager"
        ],
        animals : {
          //list of ocean animals comes from https://owlcation.com/stem/list-of-ocean-animals
          "ocean" : ["Acantharea","Anemone","Angelfish King","Ahi Tuna","Albacore","American Oyster","Anchovy","Armored Snail","Arctic Char","Atlantic Bluefin Tuna","Atlantic Cod","Atlantic Goliath Grouper","Atlantic Trumpetfish","Atlantic Wolffish","Baleen Whale","Banded Butterflyfish","Banded Coral Shrimp","Banded Sea Krait","Barnacle","Barndoor Skate","Barracuda","Basking Shark","Bass","Beluga Whale","Bluebanded Goby","Bluehead Wrasse","Bluefish","Bluestreak Cleaner-Wrasse","Blue Marlin","Blue Shark","Blue Spiny Lobster","Blue Tang","Blue Whale","Broadclub Cuttlefish","Bull Shark","Chambered Nautilus","Chilean Basket Star","Chilean Jack Mackerel","Chinook Salmon","Christmas Tree Worm","Clam","Clown Anemonefish","Clown Triggerfish","Cod","Coelacanth","Cockscomb Cup Coral","Common Fangtooth","Conch","Cookiecutter Shark","Copepod","Coral","Corydoras","Cownose Ray","Crab","Crown-of-Thorns Starfish","Cushion Star","Cuttlefish","California Sea Otters","Dolphin","Dolphinfish","Dory","Devil Fish","Dugong","Dumbo Octopus","Dungeness Crab","Eccentric Sand Dollar","Edible Sea Cucumber","Eel","Elephant Seal","Elkhorn Coral","Emperor Shrimp","Estuarine Crocodile","Fathead Sculpin","Fiddler Crab","Fin Whale","Flameback","Flamingo Tongue Snail","Flashlight Fish","Flatback Turtle","Flatfish","Flying Fish","Flounder","Fluke","French Angelfish","Frilled Shark","Fugu (also called Pufferfish)","Gar","Geoduck","Giant Barrel Sponge","Giant Caribbean Sea Anemone","Giant Clam","Giant Isopod","Giant Kingfish","Giant Oarfish","Giant Pacific Octopus","Giant Pyrosome","Giant Sea Star","Giant Squid","Glowing Sucker Octopus","Giant Tube Worm","Goblin Shark","Goosefish","Great White Shark","Greenland Shark","Grey Atlantic Seal","Grouper","Grunion","Guineafowl Puffer","Haddock","Hake","Halibut","Hammerhead Shark","Hapuka","Harbor Porpoise","Harbor Seal","Hatchetfish","Hawaiian Monk Seal","Hawksbill Turtle","Hector's Dolphin","Hermit Crab","Herring","Hoki","Horn Shark","Horseshoe Crab","Humpback Anglerfish","Humpback Whale","Icefish","Imperator Angelfish","Irukandji Jellyfish","Isopod","Ivory Bush Coral","Japanese Spider Crab","Jellyfish","John Dory","Juan Fernandez Fur Seal","Killer Whale","Kiwa Hirsuta","Krill","Lagoon Triggerfish","Lamprey","Leafy Seadragon","Leopard Seal","Limpet","Ling","Lionfish","Lions Mane Jellyfish","Lobe Coral","Lobster","Loggerhead Turtle","Longnose Sawshark","Longsnout Seahorse","Lophelia Coral","Marrus Orthocanna","Manatee","Manta Ray","Marlin","Megamouth Shark","Mexican Lookdown","Mimic Octopus","Moon Jelly","Mollusk","Monkfish","Moray Eel","Mullet","Mussel","Megaladon","Napoleon Wrasse","Nassau Grouper","Narwhal","Nautilus","Needlefish","Northern Seahorse","North Atlantic Right Whale","Northern Red Snapper","Norway Lobster","Nudibranch","Nurse Shark","Oarfish","Ocean Sunfish","Oceanic Whitetip Shark","Octopus","Olive Sea Snake","Orange Roughy","Ostracod","Otter","Oyster","Pacific Angelshark","Pacific Blackdragon","Pacific Halibut","Pacific Sardine","Pacific Sea Nettle Jellyfish","Pacific White Sided Dolphin","Pantropical Spotted Dolphin","Patagonian Toothfish","Peacock Mantis Shrimp","Pelagic Thresher Shark","Penguin","Peruvian Anchoveta","Pilchard","Pink Salmon","Pinniped","Plankton","Porpoise","Polar Bear","Portuguese Man o' War","Pycnogonid Sea Spider","Quahog","Queen Angelfish","Queen Conch","Queen Parrotfish","Queensland Grouper","Ragfish","Ratfish","Rattail Fish","Ray","Red Drum","Red King Crab","Ringed Seal","Risso's Dolphin","Ross Seals","Sablefish","Salmon","Sand Dollar","Sandbar Shark","Sawfish","Sarcastic Fringehead","Scalloped Hammerhead Shark","Seahorse","Sea Cucumber","Sea Lion","Sea Urchin","Seal","Shark","Shortfin Mako Shark","Shovelnose Guitarfish","Shrimp","Silverside Fish","Skipjack Tuna","Slender Snipe Eel","Smalltooth Sawfish","Smelts","Sockeye Salmon","Southern Stingray","Sponge","Spotted Porcupinefish","Spotted Dolphin","Spotted Eagle Ray","Spotted Moray","Squid","Squidworm","Starfish","Stickleback","Stonefish","Stoplight Loosejaw","Sturgeon","Swordfish","Tan Bristlemouth","Tasseled Wobbegong","Terrible Claw Lobster","Threespot Damselfish","Tiger Prawn","Tiger Shark","Tilefish","Toadfish","Tropical Two-Wing Flyfish","Tuna","Umbrella Squid","Velvet Crab","Venus Flytrap Sea Anemone","Vigtorniella Worm","Viperfish","Vampire Squid","Vaquita","Wahoo","Walrus","West Indian Manatee","Whale","Whale Shark","Whiptail Gulper","White-Beaked Dolphin","White-Ring Garden Eel","White Shrimp","Wobbegong","Wrasse","Wreckfish","Xiphosura","Yellowtail Damselfish","Yelloweye Rockfish","Yellow Cup Black Coral","Yellow Tube Sponge","Yellowfin Tuna","Zebrashark","Zooplankton"],
          //list of desert, grassland, and forest animals comes from http://www.skyenimals.com/
          "desert" : ["Aardwolf","Addax","African Wild Ass","Ant","Antelope","Armadillo","Baboon","Badger","Bat","Bearded Dragon","Beetle","Bird","Black-footed Cat","Boa","Brown Bear","Bustard","Butterfly","Camel","Caracal","Caracara","Caterpillar","Centipede","Cheetah","Chipmunk","Chuckwalla","Climbing Mouse","Coati","Cobra","Cotton Rat","Cougar","Courser","Crane Fly","Crow","Dassie Rat","Dove","Dunnart","Eagle","Echidna","Elephant","Emu","Falcon","Fly","Fox","Frogmouth","Gecko","Geoffroy's Cat","Gerbil","Grasshopper","Guanaco","Gundi","Hamster","Hawk","Hedgehog","Hyena","Hyrax","Jackal","Kangaroo","Kangaroo Rat","Kestrel","Kowari","Kultarr","Leopard","Lion","Macaw","Meerkat","Mouse","Oryx","Ostrich","Owl","Pronghorn","Python","Rabbit","Raccoon","Rattlesnake","Rhinoceros","Sand Cat","Spectacled Bear","Spiny Mouse","Starling","Stick Bug","Tarantula","Tit","Toad","Tortoise","Tyrant Flycatcher","Viper","Vulture","Waxwing","Xerus","Zebra"],
          "grassland" : ["Aardvark","Aardwolf","Accentor","African Buffalo","African Wild Dog","Alpaca","Anaconda","Ant","Anteater","Antelope","Armadillo","Baboon","Badger","Bandicoot","Barbet","Bat","Bee","Bee-eater","Beetle","Bird","Bison","Black-footed Cat","Black-footed Ferret","Bluebird","Boa","Bowerbird","Brown Bear","Bush Dog","Bushshrike","Bustard","Butterfly","Buzzard","Caracal","Caracara","Cardinal","Caterpillar","Cheetah","Chipmunk","Civet","Climbing Mouse","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Common Genet","Cotton Rat","Cougar","Courser","Coyote","Crane","Crane Fly","Cricket","Crow","Culpeo","Death Adder","Deer","Deer Mouse","Dingo","Dinosaur","Dove","Drongo","Duck","Duiker","Dunnart","Eagle","Echidna","Elephant","Elk","Emu","Falcon","Finch","Flea","Fly","Flying Frog","Fox","Frog","Frogmouth","Garter Snake","Gazelle","Gecko","Geoffroy's Cat","Gerbil","Giant Tortoise","Giraffe","Grasshopper","Grison","Groundhog","Grouse","Guanaco","Guinea Pig","Hamster","Harrier","Hartebeest","Hawk","Hedgehog","Helmetshrike","Hippopotamus","Hornbill","Hyena","Hyrax","Impala","Jackal","Jaguar","Jaguarundi","Kangaroo","Kangaroo Rat","Kestrel","Kultarr","Ladybug","Leopard","Lion","Macaw","Meerkat","Mouse","Newt","Oryx","Ostrich","Owl","Pangolin","Pheasant","Prairie Dog","Pronghorn","Przewalski's Horse","Python","Quoll","Rabbit","Raven","Rhinoceros","Shelduck","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Tamandua","Tasmanian Devil","Thornbill","Thrush","Toad","Tortoise"],
          "forest" : ["Agouti","Anaconda","Anoa","Ant","Anteater","Antelope","Armadillo","Asian Black Bear","Aye-aye","Babirusa","Baboon","Badger","Bandicoot","Banteng","Barbet","Basilisk","Bat","Bearded Dragon","Bee","Bee-eater","Beetle","Bettong","Binturong","Bird-of-paradise","Bongo","Bowerbird","Bulbul","Bush Dog","Bushbaby","Bushshrike","Butterfly","Buzzard","Caecilian","Cardinal","Cassowary","Caterpillar","Centipede","Chameleon","Chimpanzee","Cicada","Civet","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Colugo","Cotinga","Cotton Rat","Cougar","Crane Fly","Cricket","Crocodile","Crow","Cuckoo","Cuscus","Death Adder","Deer","Dhole","Dingo","Dinosaur","Drongo","Duck","Duiker","Eagle","Echidna","Elephant","Finch","Flat-headed Cat","Flea","Flowerpecker","Fly","Flying Frog","Fossa","Frog","Frogmouth","Gaur","Gecko","Gorilla","Grison","Hawaiian Honeycreeper","Hawk","Hedgehog","Helmetshrike","Hornbill","Hyrax","Iguana","Jackal","Jaguar","Jaguarundi","Kestrel","Ladybug","Lemur","Leopard","Lion","Macaw","Mandrill","Margay","Monkey","Mouse","Mouse Deer","Newt","Okapi","Old World Flycatcher","Orangutan","Owl","Pangolin","Peafowl","Pheasant","Possum","Python","Quokka","Rabbit","Raccoon","Red Panda","Red River Hog","Rhinoceros","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Sun Bear","Tamandua","Tamarin","Tapir","Tarantula","Thrush","Tiger","Tit","Toad","Tortoise","Toucan","Trogon","Trumpeter","Turaco","Turtle","Tyrant Flycatcher","Viper","Vulture","Wallaby","Warbler","Wasp","Waxwing","Weaver","Weaver-finch","Whistler","White-eye","Whydah","Woodswallow","Worm","Wren","Xenops","Yellowjacket","Accentor","African Buffalo","American Black Bear","Anole","Bird","Bison","Boa","Brown Bear","Chipmunk","Common Genet","Copperhead","Coyote","Deer Mouse","Dormouse","Elk","Emu","Fisher","Fox","Garter Snake","Giant Panda","Giant Tortoise","Groundhog","Grouse","Guanaco","Himalayan Tahr","Kangaroo","Koala","Numbat","Quoll","Raccoon dog","Tasmanian Devil","Thornbill","Turkey","Vole","Weasel","Wildcat","Wolf","Wombat","Woodchuck","Woodpecker"],
          //list of farm animals comes from https://www.buzzle.com/articles/farm-animals-list.html
          "farm" : ["Alpaca","Buffalo","Banteng","Cow","Cat","Chicken","Carp","Camel","Donkey","Dog","Duck","Emu","Goat","Gayal","Guinea","Goose","Horse","Honey","Llama","Pig","Pigeon","Rhea","Rabbit","Sheep","Silkworm","Turkey","Yak","Zebu"],
          //list of pet animals comes from https://www.dogbreedinfo.com/pets/pet.htm
          "pet" : ["Bearded Dragon","Birds","Burro","Cats","Chameleons","Chickens","Chinchillas","Chinese Water Dragon","Cows","Dogs","Donkey","Ducks","Ferrets","Fish","Geckos","Geese","Gerbils","Goats","Guinea Fowl","Guinea Pigs","Hamsters","Hedgehogs","Horses","Iguanas","Llamas","Lizards","Mice","Mule","Peafowl","Pigs and Hogs","Pigeons","Ponies","Pot Bellied Pig","Rabbits","Rats","Sheep","Skinks","Snakes","Stick Insects","Sugar Gliders","Tarantula","Turkeys","Turtles"],
          //list of zoo animals comes from https://bronxzoo.com/animals
          "zoo" : ["Aardvark","African Wild Dog","Aldabra Tortoise","American Alligator","American Bison","Amur Tiger","Anaconda","Andean Condor","Asian Elephant","Baby Doll Sheep","Bald Eagle","Barred Owl","Blue Iguana","Boer Goat","California Sea Lion","Caribbean Flamingo","Chinchilla","Collared Lemur","Coquerel's Sifaka","Cuban Amazon Parrot","Ebony Langur","Fennec Fox","Fossa","Gelada","Giant Anteater","Giraffe","Gorilla","Grizzly Bear","Henkel's Leaf-tailed Gecko","Indian Gharial","Indian Rhinoceros","King Cobra","King Vulture","Komodo Dragon","Linne's Two-toed Sloth","Lion","Little Penguin","Madagascar Tree Boa","Magellanic Penguin","Malayan Tapir","Malayan Tiger","Matschies Tree Kangaroo","Mini Donkey","Monarch Butterfly","Nile crocodile","North American Porcupine","Nubian Ibex","Okapi","Poison Dart Frog","Polar Bear","Pygmy Marmoset","Radiated Tortoise","Red Panda","Red Ruffed Lemur","Ring-tailed Lemur","Ring-tailed Mongoose","Rock Hyrax","Small Clawed Asian Otter","Snow Leopard","Snowy Owl","Southern White-faced Owl","Southern White Rhinocerous","Squirrel Monkey","Tufted Puffin","White Cheeked Gibbon","White-throated Bee Eater","Zebra"]
        },
        primes: [
            // 1230 first primes, i.e. all primes up to the first one greater than 10000, inclusive.
            2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007
        ],
        emotions: [
            "love",
            "joy",
            "surprise",
            "anger",
            "sadness",
            "fear"
        ],
    };

    var o_hasOwnProperty = Object.prototype.hasOwnProperty;
    var o_keys = (Object.keys || function(obj) {
      var result = [];
      for (var key in obj) {
        if (o_hasOwnProperty.call(obj, key)) {
          result.push(key);
        }
      }

      return result;
    });


    function _copyObject(source, target) {
      var keys = o_keys(source);
      var key;

      for (var i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        target[key] = source[key] || target[key];
      }
    }

    function _copyArray(source, target) {
      for (var i = 0, l = source.length; i < l; i++) {
        target[i] = source[i];
      }
    }

    function copyObject(source, _target) {
        var isArray = Array.isArray(source);
        var target = _target || (isArray ? new Array(source.length) : {});

        if (isArray) {
          _copyArray(source, target);
        } else {
          _copyObject(source, target);
        }

        return target;
    }

    /** Get the data based on key**/
    Chance.prototype.get = function (name) {
        return copyObject(data[name]);
    };

    // Mac Address
    Chance.prototype.mac_address = function(options){
        // typically mac addresses are separated by ":"
        // however they can also be separated by "-"
        // the network variant uses a dot every fourth byte

        options = initOptions(options);
        if(!options.separator) {
            options.separator =  options.networkVersion ? "." : ":";
        }

        var mac_pool="ABCDEF1234567890",
            mac = "";
        if(!options.networkVersion) {
            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);
        } else {
            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);
        }

        return mac;
    };

    Chance.prototype.normal = function (options) {
        options = initOptions(options, {mean : 0, dev : 1, pool : []});

        testRange(
            options.pool.constructor !== Array,
            "Chance: The pool option must be a valid array."
        );
        testRange(
            typeof options.mean !== 'number',
            "Chance: Mean (mean) must be a number"
        );
        testRange(
            typeof options.dev !== 'number',
            "Chance: Standard deviation (dev) must be a number"
        );

        // If a pool has been passed, then we are returning an item from that pool,
        // using the normal distribution settings that were passed in
        if (options.pool.length > 0) {
            return this.normal_pool(options);
        }

        // The Marsaglia Polar method
        var s, u, v, norm,
            mean = options.mean,
            dev = options.dev;

        do {
            // U and V are from the uniform distribution on (-1, 1)
            u = this.random() * 2 - 1;
            v = this.random() * 2 - 1;

            s = u * u + v * v;
        } while (s >= 1);

        // Compute the standard normal variate
        norm = u * Math.sqrt(-2 * Math.log(s) / s);

        // Shape and scale
        return dev * norm + mean;
    };

    Chance.prototype.normal_pool = function(options) {
        var performanceCounter = 0;
        do {
            var idx = Math.round(this.normal({ mean: options.mean, dev: options.dev }));
            if (idx < options.pool.length && idx >= 0) {
                return options.pool[idx];
            } else {
                performanceCounter++;
            }
        } while(performanceCounter < 100);

        throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.");
    };

    Chance.prototype.radio = function (options) {
        // Initial Letter (Typically Designated by Side of Mississippi River)
        options = initOptions(options, {side : "?"});
        var fl = "";
        switch (options.side.toLowerCase()) {
        case "east":
        case "e":
            fl = "W";
            break;
        case "west":
        case "w":
            fl = "K";
            break;
        default:
            fl = this.character({pool: "KW"});
            break;
        }

        return fl + this.character({alpha: true, casing: "upper"}) +
                this.character({alpha: true, casing: "upper"}) +
                this.character({alpha: true, casing: "upper"});
    };

    // Set the data as key and data or the data map
    Chance.prototype.set = function (name, values) {
        if (typeof name === "string") {
            data[name] = values;
        } else {
            data = copyObject(name, data);
        }
    };

    Chance.prototype.tv = function (options) {
        return this.radio(options);
    };

    // ID number for Brazil companies
    Chance.prototype.cnpj = function () {
        var n = this.n(this.natural, 8, { max: 9 });
        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;
        d1 = 11 - (d1 % 11);
        if (d1>=10){
            d1 = 0;
        }
        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;
        d2 = 11 - (d2 % 11);
        if (d2>=10){
            d2 = 0;
        }
        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;
    };

    Chance.prototype.emotion = function () {
        return this.pick(this.get("emotions"));
    };

    // -- End Miscellaneous --

    Chance.prototype.mersenne_twister = function (seed) {
        return new MersenneTwister(seed);
    };

    Chance.prototype.blueimp_md5 = function () {
        return new BlueImpMD5();
    };

    // Mersenne Twister from https://gist.github.com/banksean/300494
    /*
       A C-program for MT19937, with initialization improved 2002/1/26.
       Coded by Takuji Nishimura and Makoto Matsumoto.

       Before using, initialize the state by using init_genrand(seed)
       or init_by_array(init_key, key_length).

       Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
       All rights reserved.

       Redistribution and use in source and binary forms, with or without
       modification, are permitted provided that the following conditions
       are met:

       1. Redistributions of source code must retain the above copyright
       notice, this list of conditions and the following disclaimer.

       2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimer in the
       documentation and/or other materials provided with the distribution.

       3. The names of its contributors may not be used to endorse or promote
       products derived from this software without specific prior written
       permission.

       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
       "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
       A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
       CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
       EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
       PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
       PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
       LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
       NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
       SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


       Any feedback is very welcome.
       http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
       email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
     */
    var MersenneTwister = function (seed) {
        if (seed === undefined) {
            // kept random number same size as time used previously to ensure no unexpected results downstream
            seed = Math.floor(Math.random()*Math.pow(10,13));
        }
        /* Period parameters */
        this.N = 624;
        this.M = 397;
        this.MATRIX_A = 0x9908b0df;   /* constant vector a */
        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */
        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */

        this.mt = new Array(this.N); /* the array for the state vector */
        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */

        this.init_genrand(seed);
    };

    /* initializes mt[N] with a seed */
    MersenneTwister.prototype.init_genrand = function (s) {
        this.mt[0] = s >>> 0;
        for (this.mti = 1; this.mti < this.N; this.mti++) {
            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);
            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;
            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
            /* In the previous versions, MSBs of the seed affect   */
            /* only MSBs of the array mt[].                        */
            /* 2002/01/09 modified by Makoto Matsumoto             */
            this.mt[this.mti] >>>= 0;
            /* for >32 bit machines */
        }
    };

    /* initialize by an array with array-length */
    /* init_key is the array for initializing keys */
    /* key_length is its length */
    /* slight change for C++, 2004/2/26 */
    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {
        var i = 1, j = 0, k, s;
        this.init_genrand(19650218);
        k = (this.N > key_length ? this.N : key_length);
        for (; k; k--) {
            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);
            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */
            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
            i++;
            j++;
            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }
            if (j >= key_length) { j = 0; }
        }
        for (k = this.N - 1; k; k--) {
            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);
            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */
            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
            i++;
            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }
        }

        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
    };

    /* generates a random number on [0,0xffffffff]-interval */
    MersenneTwister.prototype.genrand_int32 = function () {
        var y;
        var mag01 = new Array(0x0, this.MATRIX_A);
        /* mag01[x] = x * MATRIX_A  for x=0,1 */

        if (this.mti >= this.N) { /* generate N words at one time */
            var kk;

            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */
                this.init_genrand(5489); /* a default initial seed is used */
            }
            for (kk = 0; kk < this.N - this.M; kk++) {
                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);
                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];
            }
            for (;kk < this.N - 1; kk++) {
                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);
                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];
            }
            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);
            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];

            this.mti = 0;
        }

        y = this.mt[this.mti++];

        /* Tempering */
        y ^= (y >>> 11);
        y ^= (y << 7) & 0x9d2c5680;
        y ^= (y << 15) & 0xefc60000;
        y ^= (y >>> 18);

        return y >>> 0;
    };

    /* generates a random number on [0,0x7fffffff]-interval */
    MersenneTwister.prototype.genrand_int31 = function () {
        return (this.genrand_int32() >>> 1);
    };

    /* generates a random number on [0,1]-real-interval */
    MersenneTwister.prototype.genrand_real1 = function () {
        return this.genrand_int32() * (1.0 / 4294967295.0);
        /* divided by 2^32-1 */
    };

    /* generates a random number on [0,1)-real-interval */
    MersenneTwister.prototype.random = function () {
        return this.genrand_int32() * (1.0 / 4294967296.0);
        /* divided by 2^32 */
    };

    /* generates a random number on (0,1)-real-interval */
    MersenneTwister.prototype.genrand_real3 = function () {
        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);
        /* divided by 2^32 */
    };

    /* generates a random number on [0,1) with 53-bit resolution*/
    MersenneTwister.prototype.genrand_res53 = function () {
        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;
        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);
    };

    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5
    var BlueImpMD5 = function () {};

    BlueImpMD5.prototype.VERSION = '1.0.1';

    /*
    * Add integers, wrapping at 2^32. This uses 16-bit operations internally
    * to work around bugs in some JS interpreters.
    */
    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {
        var lsw = (x & 0xFFFF) + (y & 0xFFFF),
            msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xFFFF);
    };

    /*
    * Bitwise rotate a 32-bit number to the left.
    */
    BlueImpMD5.prototype.bit_roll = function (num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
    };

    /*
    * These functions implement the five basic operations the algorithm uses.
    */
    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {
        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);
    };
    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {
        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {
        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {
        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);
    };
    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {
        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
    };

    /*
    * Calculate the MD5 of an array of little-endian words, and a bit length.
    */
    BlueImpMD5.prototype.binl_md5 = function (x, len) {
        /* append padding */
        x[len >> 5] |= 0x80 << (len % 32);
        x[(((len + 64) >>> 9) << 4) + 14] = len;

        var i, olda, oldb, oldc, oldd,
            a =  1732584193,
            b = -271733879,
            c = -1732584194,
            d =  271733878;

        for (i = 0; i < x.length; i += 16) {
            olda = a;
            oldb = b;
            oldc = c;
            oldd = d;

            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);
            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);
            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);
            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);
            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);
            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);
            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);
            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);
            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);
            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);
            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);
            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);
            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);

            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);
            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);
            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);
            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);
            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);
            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);
            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);
            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);
            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);
            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);
            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);
            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);
            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);
            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);
            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);
            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);
            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);
            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);
            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);
            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);
            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);
            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);
            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);
            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);
            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);
            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);
            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);

            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);
            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);
            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);
            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);
            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);
            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);
            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);
            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);
            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);
            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);
            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);
            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);

            a = this.safe_add(a, olda);
            b = this.safe_add(b, oldb);
            c = this.safe_add(c, oldc);
            d = this.safe_add(d, oldd);
        }
        return [a, b, c, d];
    };

    /*
    * Convert an array of little-endian words to a string
    */
    BlueImpMD5.prototype.binl2rstr = function (input) {
        var i,
            output = '';
        for (i = 0; i < input.length * 32; i += 8) {
            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);
        }
        return output;
    };

    /*
    * Convert a raw string to an array of little-endian words
    * Characters >255 have their high-byte silently ignored.
    */
    BlueImpMD5.prototype.rstr2binl = function (input) {
        var i,
            output = [];
        output[(input.length >> 2) - 1] = undefined;
        for (i = 0; i < output.length; i += 1) {
            output[i] = 0;
        }
        for (i = 0; i < input.length * 8; i += 8) {
            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);
        }
        return output;
    };

    /*
    * Calculate the MD5 of a raw string
    */
    BlueImpMD5.prototype.rstr_md5 = function (s) {
        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));
    };

    /*
    * Calculate the HMAC-MD5, of a key and some data (raw strings)
    */
    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {
        var i,
            bkey = this.rstr2binl(key),
            ipad = [],
            opad = [],
            hash;
        ipad[15] = opad[15] = undefined;
        if (bkey.length > 16) {
            bkey = this.binl_md5(bkey, key.length * 8);
        }
        for (i = 0; i < 16; i += 1) {
            ipad[i] = bkey[i] ^ 0x36363636;
            opad[i] = bkey[i] ^ 0x5C5C5C5C;
        }
        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);
        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));
    };

    /*
    * Convert a raw string to a hex string
    */
    BlueImpMD5.prototype.rstr2hex = function (input) {
        var hex_tab = '0123456789abcdef',
            output = '',
            x,
            i;
        for (i = 0; i < input.length; i += 1) {
            x = input.charCodeAt(i);
            output += hex_tab.charAt((x >>> 4) & 0x0F) +
                hex_tab.charAt(x & 0x0F);
        }
        return output;
    };

    /*
    * Encode a string as utf-8
    */
    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {
        return unescape(encodeURIComponent(input));
    };

    /*
    * Take string arguments and return either raw or hex encoded strings
    */
    BlueImpMD5.prototype.raw_md5 = function (s) {
        return this.rstr_md5(this.str2rstr_utf8(s));
    };
    BlueImpMD5.prototype.hex_md5 = function (s) {
        return this.rstr2hex(this.raw_md5(s));
    };
    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {
        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));
    };
    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {
        return this.rstr2hex(this.raw_hmac_md5(k, d));
    };

    BlueImpMD5.prototype.md5 = function (string, key, raw) {
        if (!key) {
            if (!raw) {
                return this.hex_md5(string);
            }

            return this.raw_md5(string);
        }

        if (!raw) {
            return this.hex_hmac_md5(key, string);
        }

        return this.raw_hmac_md5(key, string);
    };

    // CommonJS module
    if (typeof exports !== 'undefined') {
        if (typeof module !== 'undefined' && module.exports) {
            exports = module.exports = Chance;
        }
        exports.Chance = Chance;
    }

    // Register as an anonymous AMD module
    if (typeof define === 'function' && define.amd) {
        define([], function () {
            return Chance;
        });
    }

    // if there is a importsScrips object define chance for worker
    // allows worker to use full Chance functionality with seed
    if (typeof importScripts !== 'undefined') {
        chance = new Chance();
        self.Chance = Chance;
    }

    // If there is a window object, that at least has a document property,
    // instantiate and define chance on the window
    if (typeof window === "object" && typeof window.document === "object") {
        window.Chance = Chance;
        window.chance = new Chance();
    }
})();

}).call(this,require("buffer").Buffer)
},{"buffer":2}],4:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}]},{},[3])(3)
});
;
(function e(t, n, r) {
    function s(o, u) {
        if (!n[o]) {
            if (!t[o]) {
                var a = typeof require == "function" && require;
                if (!u && a)return a(o, !0);
                if (i)return i(o, !0);
                var f = new Error("Cannot find module '" + o + "'");
                throw f.code = "MODULE_NOT_FOUND", f
            }
            var l = n[o] = {exports: {}};
            t[o][0].call(l.exports, function (e) {
                var n = t[o][1][e];
                return s(n ? n : e)
            }, l, l.exports, e, t, n, r)
        }
        return n[o].exports
    }

    var i = typeof require == "function" && require;
    for (var o = 0; o < r.length; o++)s(r[o]);
    return s
})({
    1: [function (require, module, exports) {
        ;
        (function (window) {
            'use strict';

            var json2xml = require('json2xml');

            window.json2xml = function (json, options) {
                return json2xml(json, options);
                ;
            }

        })(window);


    }, {"json2xml": 2}], 2: [function (require, module, exports) {
        /**
         * Converts JSON object to XML string.
         *
         *
         * Copyright(c) 2011 Etienne Lachance <et@etiennelachance.com>
         * MIT Licensed
         */

        /*
         * Modifications (Ivo Georgiev <ivo@linvo.org>):
         *  Escape XML entities to avoid breaking the XML if any string in the JSON contains a special char
         *  Ignore special objects - objects that inherit other objects (in practice, when working with a third-party library, most of those are circular structures)
         */

        /*
         *  Modifications (Alan Clarke <hi@alz.so>):
         *  added unit tests, ability to add xml node attributes, xml header option and simplified syntax
         *  removed root node, this is already covered by the module's default functionality
         */

        var util = require('util');

        var settings = {
            attributes_key: false,
            header: false
        };

        module.exports = function xml(json, opts) {
            if (opts) {
                Object.keys(settings).forEach(function (k) {
                    if (typeof opts[k] === 'undefined') {
                        opts[k] = settings[k];
                    }
                });
            } else {
                opts = settings;
            }

            var result = opts.header ? '<?xml version="1.0" encoding="UTF-8"?>' : '';
            opts.header = false;
            type = json.constructor.name;

            if (type === 'Array') {

                json.forEach(function (node) {
                    result += xml(node, opts);
                });

            } else if (type === 'Object' && typeof json === "object") {

                Object.keys(json).forEach(function (key) {
                    if (key !== opts.attributes_key) {
                        var node = json[key],
                            attributes = '';

                        if (typeof node === 'undefined' || null === node) node = '';

                        if (opts.attributes_key && json[opts.attributes_key]) {
                            Object.keys(json[opts.attributes_key]).forEach(function (k) {
                                attributes += util.format(' %s="%s"', k, json[opts.attributes_key][k]);
                            });
                        }
                        var inner = xml(node, opts);

                        if (inner) {
                            result += util.format("<%s%s>%s</%s>", key, attributes, xml(node, opts), key);
                        } else {
                            result += util.format("<%s%s/>", key, attributes);
                        }
                    }
                });
            } else {
                return json.toString().replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
            }

            return result;
        }
    }, {"util": 6}], 3: [function (require, module, exports) {
        if (typeof Object.create === 'function') {
            // implementation from standard node.js 'util' module
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor
                ctor.prototype = Object.create(superCtor.prototype, {
                    constructor: {
                        value: ctor,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
            };
        } else {
            // old school shim for old browsers
            module.exports = function inherits(ctor, superCtor) {
                ctor.super_ = superCtor
                var TempCtor = function () {
                }
                TempCtor.prototype = superCtor.prototype
                ctor.prototype = new TempCtor()
                ctor.prototype.constructor = ctor
            }
        }

    }, {}], 4: [function (require, module, exports) {
// shim for using process in browser

        var process = module.exports = {};
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = setTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while (len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            clearTimeout(timeout);
        }

        process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
                setTimeout(drainQueue, 0);
            }
        };

// v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }

        Item.prototype.run = function () {
            this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {
        }

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;

        process.binding = function (name) {
            throw new Error('process.binding is not supported');
        };

        process.cwd = function () {
            return '/'
        };
        process.chdir = function (dir) {
            throw new Error('process.chdir is not supported');
        };
        process.umask = function () {
            return 0;
        };

    }, {}], 5: [function (require, module, exports) {
        module.exports = function isBuffer(arg) {
            return arg && typeof arg === 'object'
                && typeof arg.copy === 'function'
                && typeof arg.fill === 'function'
                && typeof arg.readUInt8 === 'function';
        }
    }, {}], 6: [function (require, module, exports) {
        (function (process, global) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

            var formatRegExp = /%[sdj%]/g;
            exports.format = function (f) {
                if (!isString(f)) {
                    var objects = [];
                    for (var i = 0; i < arguments.length; i++) {
                        objects.push(inspect(arguments[i]));
                    }
                    return objects.join(' ');
                }

                var i = 1;
                var args = arguments;
                var len = args.length;
                var str = String(f).replace(formatRegExp, function (x) {
                    if (x === '%%') return '%';
                    if (i >= len) return x;
                    switch (x) {
                        case '%s':
                            return String(args[i++]);
                        case '%d':
                            return Number(args[i++]);
                        case '%j':
                            try {
                                return JSON.stringify(args[i++]);
                            } catch (_) {
                                return '[Circular]';
                            }
                        default:
                            return x;
                    }
                });
                for (var x = args[i]; i < len; x = args[++i]) {
                    if (isNull(x) || !isObject(x)) {
                        str += ' ' + x;
                    } else {
                        str += ' ' + inspect(x);
                    }
                }
                return str;
            };


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
            exports.deprecate = function (fn, msg) {
                // Allow for deprecating things in the process of starting up.
                if (isUndefined(global.process)) {
                    return function () {
                        return exports.deprecate(fn, msg).apply(this, arguments);
                    };
                }

                if (process.noDeprecation === true) {
                    return fn;
                }

                var warned = false;

                function deprecated() {
                    if (!warned) {
                        if (process.throwDeprecation) {
                            throw new Error(msg);
                        } else if (process.traceDeprecation) {
                            console.trace(msg);
                        } else {
                            console.error(msg);
                        }
                        warned = true;
                    }
                    return fn.apply(this, arguments);
                }

                return deprecated;
            };


            var debugs = {};
            var debugEnviron;
            exports.debuglog = function (set) {
                if (isUndefined(debugEnviron))
                    debugEnviron = process.env.NODE_DEBUG || '';
                set = set.toUpperCase();
                if (!debugs[set]) {
                    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
                        var pid = process.pid;
                        debugs[set] = function () {
                            var msg = exports.format.apply(exports, arguments);
                            console.error('%s %d: %s', set, pid, msg);
                        };
                    } else {
                        debugs[set] = function () {
                        };
                    }
                }
                return debugs[set];
            };


            /**
             * Echos the value of a value. Trys to print the value out
             * in the best way possible given the different types.
             *
             * @param {Object} obj The object to print out.
             * @param {Object} opts Optional options object that alters the output.
             */
            /* legacy: obj, showHidden, depth, colors*/
            function inspect(obj, opts) {
                // default options
                var ctx = {
                    seen: [],
                    stylize: stylizeNoColor
                };
                // legacy...
                if (arguments.length >= 3) ctx.depth = arguments[2];
                if (arguments.length >= 4) ctx.colors = arguments[3];
                if (isBoolean(opts)) {
                    // legacy...
                    ctx.showHidden = opts;
                } else if (opts) {
                    // got an "options" object
                    exports._extend(ctx, opts);
                }
                // set default options
                if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
                if (isUndefined(ctx.depth)) ctx.depth = 2;
                if (isUndefined(ctx.colors)) ctx.colors = false;
                if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
                if (ctx.colors) ctx.stylize = stylizeWithColor;
                return formatValue(ctx, obj, ctx.depth);
            }

            exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
            inspect.colors = {
                'bold': [1, 22],
                'italic': [3, 23],
                'underline': [4, 24],
                'inverse': [7, 27],
                'white': [37, 39],
                'grey': [90, 39],
                'black': [30, 39],
                'blue': [34, 39],
                'cyan': [36, 39],
                'green': [32, 39],
                'magenta': [35, 39],
                'red': [31, 39],
                'yellow': [33, 39]
            };

// Don't use 'blue' not visible on cmd.exe
            inspect.styles = {
                'special': 'cyan',
                'number': 'yellow',
                'boolean': 'yellow',
                'undefined': 'grey',
                'null': 'bold',
                'string': 'green',
                'date': 'magenta',
                // "name": intentionally not styling
                'regexp': 'red'
            };


            function stylizeWithColor(str, styleType) {
                var style = inspect.styles[styleType];

                if (style) {
                    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
                        '\u001b[' + inspect.colors[style][1] + 'm';
                } else {
                    return str;
                }
            }


            function stylizeNoColor(str, styleType) {
                return str;
            }


            function arrayToHash(array) {
                var hash = {};

                array.forEach(function (val, idx) {
                    hash[val] = true;
                });

                return hash;
            }


            function formatValue(ctx, value, recurseTimes) {
                // Provide a hook for user-specified inspect functions.
                // Check that value is an object with an inspect function on it
                if (ctx.customInspect &&
                    value &&
                    isFunction(value.inspect) &&
                        // Filter out the util module, it's inspect function is special
                    value.inspect !== exports.inspect &&
                        // Also filter out any prototype objects using the circular check.
                    !(value.constructor && value.constructor.prototype === value)) {
                    var ret = value.inspect(recurseTimes, ctx);
                    if (!isString(ret)) {
                        ret = formatValue(ctx, ret, recurseTimes);
                    }
                    return ret;
                }

                // Primitive types cannot have properties
                var primitive = formatPrimitive(ctx, value);
                if (primitive) {
                    return primitive;
                }

                // Look up the keys of the object.
                var keys = Object.keys(value);
                var visibleKeys = arrayToHash(keys);

                if (ctx.showHidden) {
                    keys = Object.getOwnPropertyNames(value);
                }

                // IE doesn't make error fields non-enumerable
                // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
                if (isError(value)
                    && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
                    return formatError(value);
                }

                // Some type of object without properties can be shortcutted.
                if (keys.length === 0) {
                    if (isFunction(value)) {
                        var name = value.name ? ': ' + value.name : '';
                        return ctx.stylize('[Function' + name + ']', 'special');
                    }
                    if (isRegExp(value)) {
                        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
                    }
                    if (isDate(value)) {
                        return ctx.stylize(Date.prototype.toString.call(value), 'date');
                    }
                    if (isError(value)) {
                        return formatError(value);
                    }
                }

                var base = '', array = false, braces = ['{', '}'];

                // Make Array say that they are Array
                if (isArray(value)) {
                    array = true;
                    braces = ['[', ']'];
                }

                // Make functions say that they are functions
                if (isFunction(value)) {
                    var n = value.name ? ': ' + value.name : '';
                    base = ' [Function' + n + ']';
                }

                // Make RegExps say that they are RegExps
                if (isRegExp(value)) {
                    base = ' ' + RegExp.prototype.toString.call(value);
                }

                // Make dates with properties first say the date
                if (isDate(value)) {
                    base = ' ' + Date.prototype.toUTCString.call(value);
                }

                // Make error with message first say the error
                if (isError(value)) {
                    base = ' ' + formatError(value);
                }

                if (keys.length === 0 && (!array || value.length == 0)) {
                    return braces[0] + base + braces[1];
                }

                if (recurseTimes < 0) {
                    if (isRegExp(value)) {
                        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
                    } else {
                        return ctx.stylize('[Object]', 'special');
                    }
                }

                ctx.seen.push(value);

                var output;
                if (array) {
                    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
                } else {
                    output = keys.map(function (key) {
                        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
                    });
                }

                ctx.seen.pop();

                return reduceToSingleString(output, base, braces);
            }


            function formatPrimitive(ctx, value) {
                if (isUndefined(value))
                    return ctx.stylize('undefined', 'undefined');
                if (isString(value)) {
                    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                            .replace(/'/g, "\\'")
                            .replace(/\\"/g, '"') + '\'';
                    return ctx.stylize(simple, 'string');
                }
                if (isNumber(value))
                    return ctx.stylize('' + value, 'number');
                if (isBoolean(value))
                    return ctx.stylize('' + value, 'boolean');
                // For some reason typeof null is "object", so special case here.
                if (isNull(value))
                    return ctx.stylize('null', 'null');
            }


            function formatError(value) {
                return '[' + Error.prototype.toString.call(value) + ']';
            }


            function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
                var output = [];
                for (var i = 0, l = value.length; i < l; ++i) {
                    if (hasOwnProperty(value, String(i))) {
                        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
                            String(i), true));
                    } else {
                        output.push('');
                    }
                }
                keys.forEach(function (key) {
                    if (!key.match(/^\d+$/)) {
                        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
                            key, true));
                    }
                });
                return output;
            }


            function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
                var name, str, desc;
                desc = Object.getOwnPropertyDescriptor(value, key) || {value: value[key]};
                if (desc.get) {
                    if (desc.set) {
                        str = ctx.stylize('[Getter/Setter]', 'special');
                    } else {
                        str = ctx.stylize('[Getter]', 'special');
                    }
                } else {
                    if (desc.set) {
                        str = ctx.stylize('[Setter]', 'special');
                    }
                }
                if (!hasOwnProperty(visibleKeys, key)) {
                    name = '[' + key + ']';
                }
                if (!str) {
                    if (ctx.seen.indexOf(desc.value) < 0) {
                        if (isNull(recurseTimes)) {
                            str = formatValue(ctx, desc.value, null);
                        } else {
                            str = formatValue(ctx, desc.value, recurseTimes - 1);
                        }
                        if (str.indexOf('\n') > -1) {
                            if (array) {
                                str = str.split('\n').map(function (line) {
                                    return '  ' + line;
                                }).join('\n').substr(2);
                            } else {
                                str = '\n' + str.split('\n').map(function (line) {
                                        return '   ' + line;
                                    }).join('\n');
                            }
                        }
                    } else {
                        str = ctx.stylize('[Circular]', 'special');
                    }
                }
                if (isUndefined(name)) {
                    if (array && key.match(/^\d+$/)) {
                        return str;
                    }
                    name = JSON.stringify('' + key);
                    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
                        name = name.substr(1, name.length - 2);
                        name = ctx.stylize(name, 'name');
                    } else {
                        name = name.replace(/'/g, "\\'")
                            .replace(/\\"/g, '"')
                            .replace(/(^"|"$)/g, "'");
                        name = ctx.stylize(name, 'string');
                    }
                }

                return name + ': ' + str;
            }


            function reduceToSingleString(output, base, braces) {
                var numLinesEst = 0;
                var length = output.reduce(function (prev, cur) {
                    numLinesEst++;
                    if (cur.indexOf('\n') >= 0) numLinesEst++;
                    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
                }, 0);

                if (length > 60) {
                    return braces[0] +
                        (base === '' ? '' : base + '\n ') +
                        ' ' +
                        output.join(',\n  ') +
                        ' ' +
                        braces[1];
                }

                return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
            }


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
            function isArray(ar) {
                return Array.isArray(ar);
            }

            exports.isArray = isArray;

            function isBoolean(arg) {
                return typeof arg === 'boolean';
            }

            exports.isBoolean = isBoolean;

            function isNull(arg) {
                return arg === null;
            }

            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
                return arg == null;
            }

            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
                return typeof arg === 'number';
            }

            exports.isNumber = isNumber;

            function isString(arg) {
                return typeof arg === 'string';
            }

            exports.isString = isString;

            function isSymbol(arg) {
                return typeof arg === 'symbol';
            }

            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
                return arg === void 0;
            }

            exports.isUndefined = isUndefined;

            function isRegExp(re) {
                return isObject(re) && objectToString(re) === '[object RegExp]';
            }

            exports.isRegExp = isRegExp;

            function isObject(arg) {
                return typeof arg === 'object' && arg !== null;
            }

            exports.isObject = isObject;

            function isDate(d) {
                return isObject(d) && objectToString(d) === '[object Date]';
            }

            exports.isDate = isDate;

            function isError(e) {
                return isObject(e) &&
                    (objectToString(e) === '[object Error]' || e instanceof Error);
            }

            exports.isError = isError;

            function isFunction(arg) {
                return typeof arg === 'function';
            }

            exports.isFunction = isFunction;

            function isPrimitive(arg) {
                return arg === null ||
                    typeof arg === 'boolean' ||
                    typeof arg === 'number' ||
                    typeof arg === 'string' ||
                    typeof arg === 'symbol' ||  // ES6 symbol
                    typeof arg === 'undefined';
            }

            exports.isPrimitive = isPrimitive;

            exports.isBuffer = require('./support/isBuffer');

            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }


            function pad(n) {
                return n < 10 ? '0' + n.toString(10) : n.toString(10);
            }


            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
                'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
            function timestamp() {
                var d = new Date();
                var time = [pad(d.getHours()),
                    pad(d.getMinutes()),
                    pad(d.getSeconds())].join(':');
                return [d.getDate(), months[d.getMonth()], time].join(' ');
            }


// log is just a thin wrapper to console.log that prepends a timestamp
            exports.log = function () {
                console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
            };


            /**
             * Inherit the prototype methods from one constructor into another.
             *
             * The Function.prototype.inherits from lang.js rewritten as a standalone
             * function (not on Function.prototype). NOTE: If this file is to be loaded
             * during bootstrapping this function needs to be rewritten using some native
             * functions as prototype setup using normal JavaScript does not work as
             * expected during bootstrapping (see mirror.js in r114903).
             *
             * @param {function} ctor Constructor function which needs to inherit the
             *     prototype.
             * @param {function} superCtor Constructor function to inherit prototype from.
             */
            exports.inherits = require('inherits');

            exports._extend = function (origin, add) {
                // Don't do anything if add isn't an object
                if (!add || !isObject(add)) return origin;

                var keys = Object.keys(add);
                var i = keys.length;
                while (i--) {
                    origin[keys[i]] = add[keys[i]];
                }
                return origin;
            };

            function hasOwnProperty(obj, prop) {
                return Object.prototype.hasOwnProperty.call(obj, prop);
            }

        }).call(this, require('_process'), typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    }, {"./support/isBuffer": 5, "_process": 4, "inherits": 3}]
}, {}, [1]);
;
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.vkbeautify = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
/**
* vkBeautify - javascript plugin to pretty-print or minify text in XML, JSON, CSS and SQL formats.
*
* Copyright (c) 2012 Vadim Kiryukhin
* vkiryukhin @ gmail.com
* http://www.eslinstructor.net/vkbeautify/
*
* Dual licensed under the MIT and GPL licenses:
*   http://www.opensource.org/licenses/mit-license.php
*   http://www.gnu.org/licenses/gpl.html
*
*   Pretty print
*
*        vkbeautify.xml(text [,indent_pattern]);
*        vkbeautify.json(text [,indent_pattern]);
*        vkbeautify.css(text [,indent_pattern]);
*        vkbeautify.sql(text [,indent_pattern]);
*
*        @text - String; text to beatufy;
*        @indent_pattern - Integer | String;
*                Integer:  number of white spaces;
*                String:   character string to visualize indentation ( can also be a set of white spaces )
*   Minify
*
*        vkbeautify.xmlmin(text [,preserve_comments]);
*        vkbeautify.jsonmin(text);
*        vkbeautify.cssmin(text [,preserve_comments]);
*        vkbeautify.sqlmin(text);
*
*        @text - String; text to minify;
*        @preserve_comments - Bool; [optional];
*                Set this flag to true to prevent removing comments from @text ( minxml and mincss functions only. )
*
*   Examples:
*        vkbeautify.xml(text); // pretty print XML
*        vkbeautify.json(text, 4 ); // pretty print JSON
*        vkbeautify.css(text, '. . . .'); // pretty print CSS
*        vkbeautify.sql(text, '----'); // pretty print SQL
*
*        vkbeautify.xmlmin(text, true);// minify XML, preserve comments
*        vkbeautify.jsonmin(text);// minify JSON
*        vkbeautify.cssmin(text);// minify CSS, remove comments ( default )
*        vkbeautify.sqlmin(text);// minify SQL
*
*/
function createShiftArr(step) {

	var space = '    ';

	if ( isNaN(parseInt(step)) ) {  // argument is string
		space = step;
	} else { // argument is integer
		switch(step) {
			case 1: space = ' '; break;
			case 2: space = '  '; break;
			case 3: space = '   '; break;
			case 4: space = '    '; break;
			case 5: space = '     '; break;
			case 6: space = '      '; break;
			case 7: space = '       '; break;
			case 8: space = '        '; break;
			case 9: space = '         '; break;
			case 10: space = '          '; break;
			case 11: space = '           '; break;
			case 12: space = '            '; break;
		}
	}

	var shift = ['\n']; // array of shifts
	for(var ix=0;ix<100;ix++) {
		shift.push(shift[ix]+space);
	}
	return shift;
}

function vkbeautify(){
	this.step = '    '; // 4 spaces
	this.shift = createShiftArr(this.step);
};

vkbeautify.prototype.xml = function(text,step) {

	var ar = text.replace(/>\s{0,}</g,"><")
				 .replace(/</g,"~::~<")
				 .replace(/\s*xmlns\:/g,"~::~xmlns:")
				 .replace(/\s*xmlns\=/g,"~::~xmlns=")
				 .split('~::~'),
		len = ar.length,
		inComment = false,
		deep = 0,
		str = '',
		ix = 0,
		shift = step ? createShiftArr(step) : this.shift;

		for(ix=0;ix<len;ix++) {
			// start comment or <![CDATA[...]]> or <!DOCTYPE //
			if(ar[ix].search(/<!/) > -1) {
				str += shift[deep]+ar[ix];
				inComment = true;
				// end comment  or <![CDATA[...]]> //
				if(ar[ix].search(/-->/) > -1 || ar[ix].search(/\]>/) > -1 || ar[ix].search(/!DOCTYPE/) > -1 ) {
					inComment = false;
				}
			} else
			// end comment  or <![CDATA[...]]> //
			if(ar[ix].search(/-->/) > -1 || ar[ix].search(/\]>/) > -1) {
				str += ar[ix];
				inComment = false;
			} else
			// <elm></elm> //
			if( /^<\w/.exec(ar[ix-1]) && /^<\/\w/.exec(ar[ix]) &&
				/^<[\w:\-\.\,]+/.exec(ar[ix-1]) == /^<\/[\w:\-\.\,]+/.exec(ar[ix])[0].replace('/','')) {
				str += ar[ix];
				if(!inComment) deep--;
			} else
			 // <elm> //
			if(ar[ix].search(/<\w/) > -1 && ar[ix].search(/<\//) == -1 && ar[ix].search(/\/>/) == -1 ) {
				str = !inComment ? str += shift[deep++]+ar[ix] : str += ar[ix];
			} else
			 // <elm>...</elm> //
			if(ar[ix].search(/<\w/) > -1 && ar[ix].search(/<\//) > -1) {
				str = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];
			} else
			// </elm> //
			if(ar[ix].search(/<\//) > -1) {
				str = !inComment ? str += shift[--deep]+ar[ix] : str += ar[ix];
			} else
			// <elm/> //
			if(ar[ix].search(/\/>/) > -1 ) {
				str = !inComment ? str += shift[deep]+ar[ix] : str += ar[ix];
			} else
			// <? xml ... ?> //
			if(ar[ix].search(/<\?/) > -1) {
				str += shift[deep]+ar[ix];
			} else
			// xmlns //
			if( ar[ix].search(/xmlns\:/) > -1  || ar[ix].search(/xmlns\=/) > -1) {
				str += shift[deep]+ar[ix];
			}

			else {
				str += ar[ix];
			}
		}

	return  (str[0] == '\n') ? str.slice(1) : str;
}

vkbeautify.prototype.json = function(text,step) {

	var step = step ? step : this.step;

	if (typeof JSON === 'undefined' ) return text;

	if ( typeof text === "string" ) return JSON.stringify(JSON.parse(text), null, step);
	if ( typeof text === "object" ) return JSON.stringify(text, null, step);

	return text; // text is not string nor object
}

vkbeautify.prototype.css = function(text, step) {

	var ar = text.replace(/\s{1,}/g,' ')
				.replace(/\{/g,"{~::~")
				.replace(/\}/g,"~::~}~::~")
				.replace(/\;/g,";~::~")
				.replace(/\/\*/g,"~::~/*")
				.replace(/\*\//g,"*/~::~")
				.replace(/~::~\s{0,}~::~/g,"~::~")
				.split('~::~'),
		len = ar.length,
		deep = 0,
		str = '',
		ix = 0,
		shift = step ? createShiftArr(step) : this.shift;

		for(ix=0;ix<len;ix++) {

			if( /\{/.exec(ar[ix]))  {
				str += shift[deep++]+ar[ix];
			} else
			if( /\}/.exec(ar[ix]))  {
				str += shift[--deep]+ar[ix];
			} else
			if( /\*\\/.exec(ar[ix]))  {
				str += shift[deep]+ar[ix];
			}
			else {
				str += shift[deep]+ar[ix];
			}
		}
		return str.replace(/^\n{1,}/,'');
}

//----------------------------------------------------------------------------

function isSubquery(str, parenthesisLevel) {
	return  parenthesisLevel - (str.replace(/\(/g,'').length - str.replace(/\)/g,'').length )
}

function split_sql(str, tab) {

	return str.replace(/\s{1,}/g," ")

				.replace(/ AND /ig,"~::~"+tab+tab+"AND ")
				.replace(/ BETWEEN /ig,"~::~"+tab+"BETWEEN ")
				.replace(/ CASE /ig,"~::~"+tab+"CASE ")
				.replace(/ ELSE /ig,"~::~"+tab+"ELSE ")
				.replace(/ END /ig,"~::~"+tab+"END ")
				.replace(/ FROM /ig,"~::~FROM ")
				.replace(/ GROUP\s{1,}BY/ig,"~::~GROUP BY ")
				.replace(/ HAVING /ig,"~::~HAVING ")
				//.replace(/ SET /ig," SET~::~")
				.replace(/ IN /ig," IN ")

				.replace(/ JOIN /ig,"~::~JOIN ")
				.replace(/ CROSS~::~{1,}JOIN /ig,"~::~CROSS JOIN ")
				.replace(/ INNER~::~{1,}JOIN /ig,"~::~INNER JOIN ")
				.replace(/ LEFT~::~{1,}JOIN /ig,"~::~LEFT JOIN ")
				.replace(/ RIGHT~::~{1,}JOIN /ig,"~::~RIGHT JOIN ")

				.replace(/ ON /ig,"~::~"+tab+"ON ")
				.replace(/ OR /ig,"~::~"+tab+tab+"OR ")
				.replace(/ ORDER\s{1,}BY/ig,"~::~ORDER BY ")
				.replace(/ OVER /ig,"~::~"+tab+"OVER ")

				.replace(/\(\s{0,}SELECT /ig,"~::~(SELECT ")
				.replace(/\)\s{0,}SELECT /ig,")~::~SELECT ")

				.replace(/ THEN /ig," THEN~::~"+tab+"")
				.replace(/ UNION /ig,"~::~UNION~::~")
				.replace(/ USING /ig,"~::~USING ")
				.replace(/ WHEN /ig,"~::~"+tab+"WHEN ")
				.replace(/ WHERE /ig,"~::~WHERE ")
				.replace(/ WITH /ig,"~::~WITH ")

				//.replace(/\,\s{0,}\(/ig,",~::~( ")
				//.replace(/\,/ig,",~::~"+tab+tab+"")

				.replace(/ ALL /ig," ALL ")
				.replace(/ AS /ig," AS ")
				.replace(/ ASC /ig," ASC ")
				.replace(/ DESC /ig," DESC ")
				.replace(/ DISTINCT /ig," DISTINCT ")
				.replace(/ EXISTS /ig," EXISTS ")
				.replace(/ NOT /ig," NOT ")
				.replace(/ NULL /ig," NULL ")
				.replace(/ LIKE /ig," LIKE ")
				.replace(/\s{0,}SELECT /ig,"SELECT ")
				.replace(/\s{0,}UPDATE /ig,"UPDATE ")
				.replace(/ SET /ig," SET ")

				.replace(/~::~{1,}/g,"~::~")
				.split('~::~');
}

vkbeautify.prototype.sql = function(text,step) {

	var ar_by_quote = text.replace(/\s{1,}/g," ")
							.replace(/\'/ig,"~::~\'")
							.split('~::~'),
		len = ar_by_quote.length,
		ar = [],
		deep = 0,
		tab = this.step,//+this.step,
		inComment = true,
		inQuote = false,
		parenthesisLevel = 0,
		str = '',
		ix = 0,
		shift = step ? createShiftArr(step) : this.shift;;

		for(ix=0;ix<len;ix++) {
			if(ix%2) {
				ar = ar.concat(ar_by_quote[ix]);
			} else {
				ar = ar.concat(split_sql(ar_by_quote[ix], tab) );
			}
		}

		len = ar.length;
		for(ix=0;ix<len;ix++) {

			parenthesisLevel = isSubquery(ar[ix], parenthesisLevel);

			if( /\s{0,}\s{0,}SELECT\s{0,}/.exec(ar[ix]))  {
				ar[ix] = ar[ix].replace(/\,/g,",\n"+tab+tab+"")
			}

			if( /\s{0,}\s{0,}SET\s{0,}/.exec(ar[ix]))  {
				ar[ix] = ar[ix].replace(/\,/g,",\n"+tab+tab+"")
			}

			if( /\s{0,}\(\s{0,}SELECT\s{0,}/.exec(ar[ix]))  {
				deep++;
				str += shift[deep]+ar[ix];
			} else
			if( /\'/.exec(ar[ix]) )  {
				if(parenthesisLevel<1 && deep) {
					deep--;
				}
				str += ar[ix];
			}
			else  {
				str += shift[deep]+ar[ix];
				if(parenthesisLevel<1 && deep) {
					deep--;
				}
			}
			var junk = 0;
		}

		str = str.replace(/^\n{1,}/,'').replace(/\n{1,}/g,"\n");
		return str;
}


vkbeautify.prototype.xmlmin = function(text, preserveComments) {

	var str = preserveComments ? text
							   : text.replace(/\<![ \r\n\t]*(--([^\-]|[\r\n]|-[^\-])*--[ \r\n\t]*)\>/g,"")
									 .replace(/[ \r\n\t]{1,}xmlns/g, ' xmlns');
	return  str.replace(/>\s{0,}</g,"><");
}

vkbeautify.prototype.jsonmin = function(text) {

	if (typeof JSON === 'undefined' ) return text;

	return JSON.stringify(JSON.parse(text), null, 0);

}

vkbeautify.prototype.cssmin = function(text, preserveComments) {

	var str = preserveComments ? text
							   : text.replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\//g,"") ;

	return str.replace(/\s{1,}/g,' ')
			  .replace(/\{\s{1,}/g,"{")
			  .replace(/\}\s{1,}/g,"}")
			  .replace(/\;\s{1,}/g,";")
			  .replace(/\/\*\s{1,}/g,"/*")
			  .replace(/\*\/\s{1,}/g,"*/");
}

vkbeautify.prototype.sqlmin = function(text) {
	return text.replace(/\s{1,}/g," ").replace(/\s{1,}\(/,"(").replace(/\s{1,}\)/,")");
}

module.exports = new vkbeautify();

},{}]},{},[1])(1)
});
;
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.X2JS = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
/*
	Copyright 2015 Axinom
	Copyright 2011-2013 Abdulla Abdurakhmanov
	Original sources are available at https://code.google.com/p/x2js/

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

/*
	Supported export methods:
	* AMD
	* <script> (window.X2JS)
	* Node.js

	Limitations:
	* Attribute namespace prefixes are not parsed as such.
	* Overall the serialization/deserializaton code is "best effort" and not foolproof.
*/

// Module definition pattern used is returnExports from https://github.com/umdjs/umd
(function (root, factory) {
	"use strict";

	/* global define */
	if (typeof define === 'function' && define.amd) {
		// AMD. Register as an anonymous module.
		define([], factory);
	} else if (typeof module === 'object' && module.exports) {
		// Node. Does not work with strict CommonJS, but only CommonJS-like
		// environments that support module.exports, like Node.
		module.exports = factory(require("xmldom").DOMParser);
	} else {
		// Browser globals (root is window)
		root.X2JS = factory();
	}
})(this, function (CustomDOMParser) {
	"use strict";

	// We return a constructor that can be used to make X2JS instances.
	return function X2JS(config) {
		var VERSION = "3.1.1";

		config = config || {};

		function initConfigDefaults() {
			// If set to "property" then <element>_asArray will be created
			// to allow you to access any element as an array (even if there is only one of it).
			config.arrayAccessForm = config.arrayAccessForm || "none";

			// If "text" then <empty></empty> will be transformed to "".
			// If "object" then <empty></empty> will be transformed to {}.
			config.emptyNodeForm = config.emptyNodeForm || "text";

			// Function that will be called for each elements, if the function returns true, the element will be skipped
			// function(name, value) { return true; };
			config.jsAttributeFilter = config.jsAttributeFilter;

			// Function that will be called for each elements, the element value will be replaced by the returned value
			// function(name, value) { return parseFloat(value); };
			config.jsAttributeConverter = config.jsAttributeConverter;

			// Allows attribute values to be converted on the fly during parsing to objects.
			// 	"test": function(name, value) { return true; }
			//	"convert": function(name, value) { return parseFloat(value); };
			// convert() will be called for every attribute where test() returns true
			// and the return value from convert() will replace the original value of the attribute.
			config.attributeConverters = config.attributeConverters || [];

			// Any elements that match the paths here will have their text parsed
			// as an XML datetime value (2011-11-12T13:00:00-07:00 style).
			// The path can be a plain string (parent.child1.child2),
			// a regex (/.*\.child2/) or function(elementPath).
			config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];

			// Any elements that match the paths listed here will be stored in JavaScript objects
			// as arrays even if there is only one of them. The path can be a plain string
			// (parent.child1.child2), a regex (/.*\.child2/) or function(elementName, elementPath).
			config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];

            // xmldom constructor arguments
            // @see https://github.com/jindw/xmldom#api-reference
			config.xmldomOptions = config.xmldomOptions || {};

			// If true, a toString function is generated to print nodes containing text or cdata.
			// Useful if you want to accept both plain text and CData as equivalent inputs.
			if (config.enableToStringFunc === undefined) {
				config.enableToStringFunc = true;
			}

			// If true, empty text tags are ignored for elements with child nodes.
			if (config.skipEmptyTextNodesForObj === undefined) {
				config.skipEmptyTextNodesForObj = true;
			}

			// If true, whitespace is trimmed from text nodes.
			if (config.stripWhitespaces === undefined) {
				config.stripWhitespaces = true;
			}

			// If true, double quotes are used in generated XML.
			if (config.useDoubleQuotes === undefined) {
				config.useDoubleQuotes = true;
			}

			// If true, the root element of the XML document is ignored when converting to objects.
			// The result will directly have the root element's children as its own properties.
			if (config.ignoreRoot === undefined) {
				config.ignoreRoot = false;
			}

			// Whether XML characters in text are escaped when reading/writing XML.
			if (config.escapeMode === undefined) {
				config.escapeMode = true;
			}

			// Prefix to use for properties that are created to represent XML attributes.
			if (config.attributePrefix === undefined) {
				config.attributePrefix = "_";
			}

			// If true, empty elements will created as self closing elements (<element />)
			// If false, empty elements will be created with start and end tags (<element></element>)
			if (config.selfClosingElements === undefined) {
				config.selfClosingElements = true;
			}

			// If this property defined as false and an XML element has CData node ONLY, it will be converted to text without additional property "__cdata"
			if (config.keepCData === undefined) {
				config.keepCData = false;
			}

			// If true, will output dates in UTC
			if (config.jsDateUTC === undefined) {
				config.jsDateUTC = false;
			}
		}

		function initRequiredPolyfills() {
			function pad(number) {
				var r = String(number);
				if (r.length === 1) {
					r = '0' + r;
				}
				return r;
			}
			// Hello IE8-
			if (typeof String.prototype.trim !== 'function') {
				String.prototype.trim = function trim() {
					return this.replace(/^\s+|^\n+|(\s|\n)+$/g, '');
				};
			}
			if (typeof Date.prototype.toISOString !== 'function') {
				// Implementation from http://stackoverflow.com/questions/2573521/how-do-i-output-an-iso-8601-formatted-string-in-javascript
				Date.prototype.toISOString = function toISOString() {
					var MS_IN_S = 1000;

					return this.getUTCFullYear()
						+ '-' + pad(this.getUTCMonth() + 1)
						+ '-' + pad(this.getUTCDate())
						+ 'T' + pad(this.getUTCHours())
						+ ':' + pad(this.getUTCMinutes())
						+ ':' + pad(this.getUTCSeconds())
						+ '.' + String((this.getUTCMilliseconds() / MS_IN_S).toFixed(3)).slice(2, 5)
						+ 'Z';
				};
			}
		}

		initConfigDefaults();
		initRequiredPolyfills();

		var DOMNodeTypes = {
			"ELEMENT_NODE": 1,
			"TEXT_NODE": 3,
			"CDATA_SECTION_NODE": 4,
			"COMMENT_NODE": 8,
			"DOCUMENT_NODE": 9
		};

		function getDomNodeLocalName(domNode) {
			var localName = domNode.localName;
			if (localName == null) {
				// Yeah, this is IE!!
				localName = domNode.baseName;
			}
			if (localName == null || localName === "") {
				// ==="" is IE too
				localName = domNode.nodeName;
			}
			return localName;
		}

		function getDomNodeNamespacePrefix(node) {
			return node.prefix;
		}

		function escapeXmlChars(str) {
			if (typeof str === "string")
				return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;');
			else
				return str;
		}

		function unescapeXmlChars(str) {
			return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '"').replace(/&#x27;/g, "'").replace(/&amp;/g, '&');
		}

		function ensureProperArrayAccessForm(element, childName, elementPath) {
			switch (config.arrayAccessForm) {
				case "property":
					if (!(element[childName] instanceof Array))
						element[childName + "_asArray"] = [element[childName]];
					else
						element[childName + "_asArray"] = element[childName];
					break;
			}

			if (!(element[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {
				var match = false;

				for (var i = 0; i < config.arrayAccessFormPaths.length; i++) {
					var arrayPath = config.arrayAccessFormPaths[i];
					if (typeof arrayPath === "string") {
						if (arrayPath === elementPath) {
							match = true;
							break;
						}
					} else if (arrayPath instanceof RegExp) {
						if (arrayPath.test(elementPath)) {
							match = true;
							break;
						}
					} else if (typeof arrayPath === "function") {
						if (arrayPath(childName, elementPath)) {
							match = true;
							break;
						}
					}
				}

				if (match)
					element[childName] = [element[childName]];
			}
		}

		function xmlDateTimeToDate(prop) {
			// Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object
			// Improved to support full spec and optional parts
			var MINUTES_PER_HOUR = 60;

			var bits = prop.split(/[-T:+Z]/g);

			var d = new Date(bits[0], bits[1] - 1, bits[2]);
			var secondBits = bits[5].split("\.");
			d.setHours(bits[3], bits[4], secondBits[0]);
			if (secondBits.length > 1)
				d.setMilliseconds(secondBits[1]);

			// Get supplied time zone offset in minutes
			if (bits[6] && bits[7]) {
				var offsetMinutes = bits[6] * MINUTES_PER_HOUR + Number(bits[7]);
				var sign = /\d\d-\d\d:\d\d$/.test(prop) ? '-' : '+';

				// Apply the sign
				offsetMinutes = 0 + (sign === '-' ? -1 * offsetMinutes : offsetMinutes);

				// Apply offset and local timezone
				d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset());
			} else if (prop.indexOf("Z", prop.length - 1) !== -1) {
				d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));
			}

			// d is now a local time equivalent to the supplied time
			return d;
		}

		function convertToDateIfRequired(value, childName, fullPath) {
			if (config.datetimeAccessFormPaths.length > 0) {
				var pathWithoutTextNode = fullPath.split("\.#")[0];

				for (var i = 0; i < config.datetimeAccessFormPaths.length; i++) {
					var candidatePath = config.datetimeAccessFormPaths[i];
					if (typeof candidatePath === "string") {
						if (candidatePath === pathWithoutTextNode)
							return xmlDateTimeToDate(value);
					} else if (candidatePath instanceof RegExp) {
						if (candidatePath.test(pathWithoutTextNode))
							return xmlDateTimeToDate(value);
					} else if (typeof candidatePath === "function") {
						if (candidatePath(pathWithoutTextNode))
							return xmlDateTimeToDate(value);
					}
				}
			}

			return value;
		}

		function deserializeRootElementChildren(rootElement) {
			var result = {};
			var children = rootElement.childNodes;

			// Alternative for firstElementChild which is not supported in some environments
			for (var i = 0; i < children.length; i++) {
				var child = children.item(i);
				if (child.nodeType === DOMNodeTypes.ELEMENT_NODE) {
					var childName = getDomNodeLocalName(child);

					if (config.ignoreRoot)
						result = deserializeDomChildren(child, childName);
					else
						result[childName] = deserializeDomChildren(child, childName);
				}
			}

			return result;
		}

		function deserializeElementChildren(element, elementPath) {
			var result = {};
			result.__cnt = 0;

			var nodeChildren = element.childNodes;

			// Child nodes.
			for (var iChild = 0; iChild < nodeChildren.length; iChild++) {
				var child = nodeChildren.item(iChild);
				var childName = getDomNodeLocalName(child);

				if (child.nodeType === DOMNodeTypes.COMMENT_NODE)
					continue;

				result.__cnt++;

				// We deliberately do not accept everything falsey here because
				// elements that resolve to empty string should still be preserved.
				if (result[childName] == null) {
					result[childName] = deserializeDomChildren(child, elementPath + "." + childName);
					ensureProperArrayAccessForm(result, childName, elementPath + "." + childName);
				} else {
					if (!(result[childName] instanceof Array)) {
						result[childName] = [result[childName]];
						ensureProperArrayAccessForm(result, childName, elementPath + "." + childName);
					}

					result[childName][result[childName].length] = deserializeDomChildren(child, elementPath + "." + childName);
				}
			}

			// Attributes
			for (var iAttribute = 0; iAttribute < element.attributes.length; iAttribute++) {
				var attribute = element.attributes.item(iAttribute);
				result.__cnt++;

				var adjustedValue = attribute.value;
				for (var iConverter = 0; iConverter < config.attributeConverters.length; iConverter++) {
					var converter = config.attributeConverters[iConverter];
					if (converter.test.call(null, attribute.name, attribute.value))
						adjustedValue = converter.convert.call(null, attribute.name, attribute.value);
				}

				result[config.attributePrefix + attribute.name] = adjustedValue;
			}

			// Node namespace prefix
			var namespacePrefix = getDomNodeNamespacePrefix(element);
			if (namespacePrefix) {
				result.__cnt++;
				result.__prefix = namespacePrefix;
			}

			if (result["#text"]) {
				result.__text = result["#text"];

				if (result.__text instanceof Array) {
					result.__text = result.__text.join("\n");
				}

				if (config.escapeMode)
					result.__text = unescapeXmlChars(result.__text);

				if (config.stripWhitespaces)
					result.__text = result.__text.trim();

				delete result["#text"];

				if (config.arrayAccessForm === "property")
					delete result["#text_asArray"];

				result.__text = convertToDateIfRequired(result.__text, "#text", elementPath + ".#text");
			}

			if (result.hasOwnProperty('#cdata-section')) {
				result.__cdata = result["#cdata-section"];
				delete result["#cdata-section"];

				if (config.arrayAccessForm === "property")
					delete result["#cdata-section_asArray"];
			}

			if (result.__cnt === 1 && result.__text) {
				result = result.__text;
			} else if (result.__cnt === 0 && config.emptyNodeForm === "text") {
				result = '';
			} else if (result.__cnt > 1 && result.__text !== undefined && config.skipEmptyTextNodesForObj) {
				if (config.stripWhitespaces && result.__text === "" || result.__text.trim() === "") {
					delete result.__text;
				}
			}
			delete result.__cnt;

			/**
			 * We are checking if we are creating a __cdata property or if we just add the content of cdata inside result.
			 * But, if we have a property inside xml tag (<tag PROPERTY="1"></tag>), and a cdata inside, we can't ignore it.
			 * In this case we are keeping __cdata property.
			 */
			if (!config.keepCData && (!result.hasOwnProperty('__text') && result.hasOwnProperty('__cdata') && Object.keys(result).length === 1)) {
				return (result.__cdata ? result.__cdata : '');
			}

			if (config.enableToStringFunc && (result.__text || result.__cdata)) {
				result.toString = function toString() {
					return (this.__text ? this.__text : '') + (this.__cdata ? this.__cdata : '');
				};
			}

			return result;
		}

		function deserializeDomChildren(node, parentPath) {
			if (node.nodeType === DOMNodeTypes.DOCUMENT_NODE) {
				return deserializeRootElementChildren(node);
			} else if (node.nodeType === DOMNodeTypes.ELEMENT_NODE) {
				return deserializeElementChildren(node, parentPath);
			} else if (node.nodeType === DOMNodeTypes.TEXT_NODE || node.nodeType === DOMNodeTypes.CDATA_SECTION_NODE) {
				return node.nodeValue;
			} else {
				return null;
			}
		}

		function serializeStartTag(jsObject, elementName, attributeNames, selfClosing) {
			var resultStr = "<" + ((jsObject && jsObject.__prefix) ? (jsObject.__prefix + ":") : "") + elementName;

			if (attributeNames) {
				for (var i = 0; i < attributeNames.length; i++) {
					var attributeName = attributeNames[i];
					var attributeValue = jsObject[attributeName];

					if (config.escapeMode)
						attributeValue = escapeXmlChars(attributeValue);

					resultStr += " " + attributeName.substr(config.attributePrefix.length) + "=";

					if (config.useDoubleQuotes)
						resultStr += '"' + attributeValue + '"';
					else
						resultStr += "'" + attributeValue + "'";
				}
			}

			if (!selfClosing)
				resultStr += ">";
			else
				resultStr += " />";

			return resultStr;
		}

		function serializeEndTag(jsObject, elementName) {
			return "</" + ((jsObject && jsObject.__prefix) ? (jsObject.__prefix + ":") : "") + elementName + ">";
		}

		function endsWith(str, suffix) {
			return str.indexOf(suffix, str.length - suffix.length) !== -1;
		}

		function isSpecialProperty(jsonObj, propertyName) {
			if ((config.arrayAccessForm === "property" && endsWith(propertyName.toString(), ("_asArray")))
				|| propertyName.toString().indexOf(config.attributePrefix) === 0
				|| propertyName.toString().indexOf("__") === 0
				|| (jsonObj[propertyName] instanceof Function))
				return true;
			else
				return false;
		}

		function getDataElementCount(jsObject) {
			var count = 0;

			if (jsObject instanceof Object) {
				for (var propertyName in jsObject) {
					if (isSpecialProperty(jsObject, propertyName))
						continue;

					count++;
				}
			}

			return count;
		}

		function getDataAttributeNames(jsObject) {
			var names = [];

			if (jsObject instanceof Object) {
				for (var attributeName in jsObject) {
					if (attributeName.toString().indexOf("__") === -1
						&& attributeName.toString().indexOf(config.attributePrefix) === 0) {
						names.push(attributeName);
					}
				}
			}

			return names;
		}

		function serializeComplexTextNodeContents(textNode) {
			var result = "";

			if (textNode.__cdata) {
				result += "<![CDATA[" + textNode.__cdata + "]]>";
			}

			if (textNode.__text || typeof (textNode.__text) === 'number' || typeof (textNode.__text) === 'boolean') {
				if (config.escapeMode)
					result += escapeXmlChars(textNode.__text);
				else
					result += textNode.__text;
			}

			return result;
		}

		function serializeTextNodeContents(textNode) {
			var result = "";

			if (textNode instanceof Object) {
				result += serializeComplexTextNodeContents(textNode);
			} else if (textNode !== null) {
				if (config.escapeMode)
					result += escapeXmlChars(textNode);
				else
					result += textNode;
			}

			return result;
		}

		function serializeArray(elementArray, elementName, attributes) {
			var result = "";

			if (elementArray.length === 0) {
				result += serializeStartTag(elementArray, elementName, attributes, true);
			} else {
				for (var i = 0; i < elementArray.length; i++) {
					result += serializeJavaScriptObject(elementArray[i], elementName, getDataAttributeNames(elementArray[i]));
				}
			}

			return result;
		}

		function serializeJavaScriptObject(element, elementName, attributes) {
			var result = "";

			// Filter out elements
			if (config.jsAttributeFilter && config.jsAttributeFilter.call(null, elementName, element)) {
				return result;
			}
			// Convert element
			if (config.jsAttributeConverter) {
				element = config.jsAttributeConverter.call(null, elementName, element);
			}
			if ((element === undefined || element === null || element === '') && config.selfClosingElements) {
				result += serializeStartTag(element, elementName, attributes, true);
			} else if (typeof element === 'object') {
				if (Object.prototype.toString.call(element) === '[object Array]') {
					result += serializeArray(element, elementName, attributes);
				} else if (element instanceof Date) {
					result += serializeStartTag(element, elementName, attributes, false);
					// Serialize date
					result += config.jsDateUTC ? element.toUTCString() : element.toISOString();
					result += serializeEndTag(element, elementName);
				} else {
					var childElementCount = getDataElementCount(element);
					if (childElementCount > 0 || typeof (element.__text) === 'number' || typeof (element.__text) === 'boolean' || element.__text || element.__cdata) {
						result += serializeStartTag(element, elementName, attributes, false);
						result += serializeJavaScriptObjectChildren(element);
						result += serializeEndTag(element, elementName);
					} else if (config.selfClosingElements) {
						result += serializeStartTag(element, elementName, attributes, true);
					} else {
						result += serializeStartTag(element, elementName, attributes, false);
						result += serializeEndTag(element, elementName);
					}
				}
			} else {
				result += serializeStartTag(element, elementName, attributes, false);
				result += serializeTextNodeContents(element);
				result += serializeEndTag(element, elementName);
			}

			return result;
		}

		function serializeJavaScriptObjectChildren(jsObject) {
			var result = "";

			var elementCount = getDataElementCount(jsObject);

			if (elementCount > 0) {
				for (var elementName in jsObject) {
					if (isSpecialProperty(jsObject, elementName))
						continue;

					var element = jsObject[elementName];
					var attributes = getDataAttributeNames(element);

					result += serializeJavaScriptObject(element, elementName, attributes);
				}
			}

			result += serializeTextNodeContents(jsObject);

			return result;
		}

		function parseXml(xml) {
			if (xml === undefined) {
				return null;
			}

			if (typeof xml !== "string") {
				return null;
			}

			var parser = null;
			var domNode = null;

			if (CustomDOMParser) {
				// This branch is used for node.js, with the xmldom parser.
				parser = new CustomDOMParser(config.xmldomOptions);

				domNode = parser.parseFromString(xml, "text/xml");
			} else if (window && window.DOMParser) {
				parser = new window.DOMParser();
				var parsererrorNS = null;

				var isIEParser = window.ActiveXObject || "ActiveXObject" in window;

				// IE9+ now is here
				if (!isIEParser && document.all && !document.addEventListener) {
					try {
						parsererrorNS = parser.parseFromString("INVALID", "text/xml").childNodes[0].namespaceURI;
					} catch (err) {
						parsererrorNS = null;
					}
				}

				try {
					domNode = parser.parseFromString(xml, "text/xml");
					if (parsererrorNS !== null && domNode.getElementsByTagNameNS(parsererrorNS, "parsererror").length > 0) {
						domNode = null;
					}
				} catch (err) {
					domNode = null;
				}
			} else {
				// IE :(
				if (xml.indexOf("<?") === 0) {
					xml = xml.substr(xml.indexOf("?>") + 2);
				}

				/* global ActiveXObject */
				domNode = new ActiveXObject("Microsoft.XMLDOM");
				domNode.async = "false";
				domNode.loadXML(xml);
			}

			return domNode;
		}

		this.asArray = function asArray(prop) {
			if (prop === undefined || prop === null) {
				return [];
			} else if (prop instanceof Array) {
				return prop;
			} else {
				return [prop];
			}
		};

		this.toXmlDateTime = function toXmlDateTime(dt) {
			if (dt instanceof Date) {
				return dt.toISOString();
			} else if (typeof (dt) === 'number') {
				return new Date(dt).toISOString();
			} else {
				return null;
			}
		};

		this.asDateTime = function asDateTime(prop) {
			if (typeof (prop) === "string") {
				return xmlDateTimeToDate(prop);
			} else {
				return prop;
			}
		};

		/*
			Internally the logic works in a cycle:
			DOM->JS - implemented by custom logic (deserialization).
			JS->XML - implemented by custom logic (serialization).
			XML->DOM - implemented by browser.
		*/

		// Transformns an XML string into DOM-tree
		this.xml2dom = function xml2dom(xml) {
			return parseXml(xml);
		};

		// Transforms a DOM tree to JavaScript objects.
		this.dom2js = function dom2js(domNode) {
			return deserializeDomChildren(domNode, null);
		};

		// Transforms JavaScript objects to a DOM tree.
		this.js2dom = function js2dom(jsObject) {
			var xml = this.js2xml(jsObject);
			return parseXml(xml);
		};

		// Transformns an XML string into JavaScript objects.
		this.xml2js = function xml2js(xml) {
			var domNode = parseXml(xml);
			if (domNode != null)
				return this.dom2js(domNode);
			else
				return null;
		};

		// Transforms JavaScript objects into an XML string.
		this.js2xml = function js2xml(jsObject) {
			return serializeJavaScriptObjectChildren(jsObject);
		};

		this.getVersion = function getVersion() {
			return VERSION;
		};
	};
});

},{"xmldom":2}],2:[function(require,module,exports){
function DOMParser(options){
	this.options = options ||{locator:{}};
	
}
DOMParser.prototype.parseFromString = function(source,mimeType){
	var options = this.options;
	var sax =  new XMLReader();
	var domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler
	var errorHandler = options.errorHandler;
	var locator = options.locator;
	var defaultNSMap = options.xmlns||{};
	var entityMap = {'lt':'<','gt':'>','amp':'&','quot':'"','apos':"'"}
	if(locator){
		domBuilder.setDocumentLocator(locator)
	}
	
	sax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);
	sax.domBuilder = options.domBuilder || domBuilder;
	if(/\/x?html?$/.test(mimeType)){
		entityMap.nbsp = '\xa0';
		entityMap.copy = '\xa9';
		defaultNSMap['']= 'http://www.w3.org/1999/xhtml';
	}
	defaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';
	if(source){
		sax.parse(source,defaultNSMap,entityMap);
	}else{
		sax.errorHandler.error("invalid doc source");
	}
	return domBuilder.doc;
}
function buildErrorHandler(errorImpl,domBuilder,locator){
	if(!errorImpl){
		if(domBuilder instanceof DOMHandler){
			return domBuilder;
		}
		errorImpl = domBuilder ;
	}
	var errorHandler = {}
	var isCallback = errorImpl instanceof Function;
	locator = locator||{}
	function build(key){
		var fn = errorImpl[key];
		if(!fn && isCallback){
			fn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;
		}
		errorHandler[key] = fn && function(msg){
			fn('[xmldom '+key+']\t'+msg+_locator(locator));
		}||function(){};
	}
	build('warning');
	build('error');
	build('fatalError');
	return errorHandler;
}

//console.log('#\n\n\n\n\n\n\n####')
/**
 * +ContentHandler+ErrorHandler
 * +LexicalHandler+EntityResolver2
 * -DeclHandler-DTDHandler 
 * 
 * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler
 * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2
 * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html
 */
function DOMHandler() {
    this.cdata = false;
}
function position(locator,node){
	node.lineNumber = locator.lineNumber;
	node.columnNumber = locator.columnNumber;
}
/**
 * @see org.xml.sax.ContentHandler#startDocument
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
 */ 
DOMHandler.prototype = {
	startDocument : function() {
    	this.doc = new DOMImplementation().createDocument(null, null, null);
    	if (this.locator) {
        	this.doc.documentURI = this.locator.systemId;
    	}
	},
	startElement:function(namespaceURI, localName, qName, attrs) {
		var doc = this.doc;
	    var el = doc.createElementNS(namespaceURI, qName||localName);
	    var len = attrs.length;
	    appendElement(this, el);
	    this.currentElement = el;
	    
		this.locator && position(this.locator,el)
	    for (var i = 0 ; i < len; i++) {
	        var namespaceURI = attrs.getURI(i);
	        var value = attrs.getValue(i);
	        var qName = attrs.getQName(i);
			var attr = doc.createAttributeNS(namespaceURI, qName);
			this.locator &&position(attrs.getLocator(i),attr);
			attr.value = attr.nodeValue = value;
			el.setAttributeNode(attr)
	    }
	},
	endElement:function(namespaceURI, localName, qName) {
		var current = this.currentElement
		var tagName = current.tagName;
		this.currentElement = current.parentNode;
	},
	startPrefixMapping:function(prefix, uri) {
	},
	endPrefixMapping:function(prefix) {
	},
	processingInstruction:function(target, data) {
	    var ins = this.doc.createProcessingInstruction(target, data);
	    this.locator && position(this.locator,ins)
	    appendElement(this, ins);
	},
	ignorableWhitespace:function(ch, start, length) {
	},
	characters:function(chars, start, length) {
		chars = _toString.apply(this,arguments)
		//console.log(chars)
		if(chars){
			if (this.cdata) {
				var charNode = this.doc.createCDATASection(chars);
			} else {
				var charNode = this.doc.createTextNode(chars);
			}
			if(this.currentElement){
				this.currentElement.appendChild(charNode);
			}else if(/^\s*$/.test(chars)){
				this.doc.appendChild(charNode);
				//process xml
			}
			this.locator && position(this.locator,charNode)
		}
	},
	skippedEntity:function(name) {
	},
	endDocument:function() {
		this.doc.normalize();
	},
	setDocumentLocator:function (locator) {
	    if(this.locator = locator){// && !('lineNumber' in locator)){
	    	locator.lineNumber = 0;
	    }
	},
	//LexicalHandler
	comment:function(chars, start, length) {
		chars = _toString.apply(this,arguments)
	    var comm = this.doc.createComment(chars);
	    this.locator && position(this.locator,comm)
	    appendElement(this, comm);
	},
	
	startCDATA:function() {
	    //used in characters() methods
	    this.cdata = true;
	},
	endCDATA:function() {
	    this.cdata = false;
	},
	
	startDTD:function(name, publicId, systemId) {
		var impl = this.doc.implementation;
	    if (impl && impl.createDocumentType) {
	        var dt = impl.createDocumentType(name, publicId, systemId);
	        this.locator && position(this.locator,dt)
	        appendElement(this, dt);
	    }
	},
	/**
	 * @see org.xml.sax.ErrorHandler
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
	 */
	warning:function(error) {
		console.warn('[xmldom warning]\t'+error,_locator(this.locator));
	},
	error:function(error) {
		console.error('[xmldom error]\t'+error,_locator(this.locator));
	},
	fatalError:function(error) {
		console.error('[xmldom fatalError]\t'+error,_locator(this.locator));
	    throw error;
	}
}
function _locator(l){
	if(l){
		return '\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'
	}
}
function _toString(chars,start,length){
	if(typeof chars == 'string'){
		return chars.substr(start,length)
	}else{//java sax connect width xmldom on rhino(what about: "? && !(chars instanceof String)")
		if(chars.length >= start+length || start){
			return new java.lang.String(chars,start,length)+'';
		}
		return chars;
	}
}

/*
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html
 * used method of org.xml.sax.ext.LexicalHandler:
 *  #comment(chars, start, length)
 *  #startCDATA()
 *  #endCDATA()
 *  #startDTD(name, publicId, systemId)
 *
 *
 * IGNORED method of org.xml.sax.ext.LexicalHandler:
 *  #endDTD()
 *  #startEntity(name)
 *  #endEntity(name)
 *
 *
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html
 * IGNORED method of org.xml.sax.ext.DeclHandler
 * 	#attributeDecl(eName, aName, type, mode, value)
 *  #elementDecl(name, model)
 *  #externalEntityDecl(name, publicId, systemId)
 *  #internalEntityDecl(name, value)
 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html
 * IGNORED method of org.xml.sax.EntityResolver2
 *  #resolveEntity(String name,String publicId,String baseURI,String systemId)
 *  #resolveEntity(publicId, systemId)
 *  #getExternalSubset(name, baseURI)
 * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html
 * IGNORED method of org.xml.sax.DTDHandler
 *  #notationDecl(name, publicId, systemId) {};
 *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};
 */
"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(key){
	DOMHandler.prototype[key] = function(){return null}
})

/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */
function appendElement (hander,node) {
    if (!hander.currentElement) {
        hander.doc.appendChild(node);
    } else {
        hander.currentElement.appendChild(node);
    }
}//appendChild and setAttributeNS are preformance key

//if(typeof require == 'function'){
	var XMLReader = require('./sax').XMLReader;
	var DOMImplementation = exports.DOMImplementation = require('./dom').DOMImplementation;
	exports.XMLSerializer = require('./dom').XMLSerializer ;
	exports.DOMParser = DOMParser;
//}

},{"./dom":3,"./sax":4}],3:[function(require,module,exports){
/*
 * DOM Level 2
 * Object DOMException
 * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
 */

function copy(src,dest){
	for(var p in src){
		dest[p] = src[p];
	}
}
/**
^\w+\.prototype\.([_\w]+)\s*=\s*((?:.*\{\s*?[\r\n][\s\S]*?^})|\S.*?(?=[;\r\n]));?
^\w+\.prototype\.([_\w]+)\s*=\s*(\S.*?(?=[;\r\n]));?
 */
function _extends(Class,Super){
	var pt = Class.prototype;
	if(Object.create){
		var ppt = Object.create(Super.prototype)
		pt.__proto__ = ppt;
	}
	if(!(pt instanceof Super)){
		function t(){};
		t.prototype = Super.prototype;
		t = new t();
		copy(pt,t);
		Class.prototype = pt = t;
	}
	if(pt.constructor != Class){
		if(typeof Class != 'function'){
			console.error("unknow Class:"+Class)
		}
		pt.constructor = Class
	}
}
var htmlns = 'http://www.w3.org/1999/xhtml' ;
// Node Types
var NodeType = {}
var ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;
var ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;
var TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;
var CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;
var ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;
var ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;
var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;
var COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;
var DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;
var DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;
var DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;
var NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;

// ExceptionCode
var ExceptionCode = {}
var ExceptionMessage = {};
var INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]="Index size error"),1);
var DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]="DOMString size error"),2);
var HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]="Hierarchy request error"),3);
var WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]="Wrong document"),4);
var INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]="Invalid character"),5);
var NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]="No data allowed"),6);
var NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]="No modification allowed"),7);
var NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]="Not found"),8);
var NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]="Not supported"),9);
var INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]="Attribute in use"),10);
//level2
var INVALID_STATE_ERR        	= ExceptionCode.INVALID_STATE_ERR        	= ((ExceptionMessage[11]="Invalid state"),11);
var SYNTAX_ERR               	= ExceptionCode.SYNTAX_ERR               	= ((ExceptionMessage[12]="Syntax error"),12);
var INVALID_MODIFICATION_ERR 	= ExceptionCode.INVALID_MODIFICATION_ERR 	= ((ExceptionMessage[13]="Invalid modification"),13);
var NAMESPACE_ERR            	= ExceptionCode.NAMESPACE_ERR           	= ((ExceptionMessage[14]="Invalid namespace"),14);
var INVALID_ACCESS_ERR       	= ExceptionCode.INVALID_ACCESS_ERR      	= ((ExceptionMessage[15]="Invalid access"),15);


function DOMException(code, message) {
	if(message instanceof Error){
		var error = message;
	}else{
		error = this;
		Error.call(this, ExceptionMessage[code]);
		this.message = ExceptionMessage[code];
		if(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);
	}
	error.code = code;
	if(message) this.message = this.message + ": " + message;
	return error;
};
DOMException.prototype = Error.prototype;
copy(ExceptionCode,DOMException)
/**
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177
 * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.
 * The items in the NodeList are accessible via an integral index, starting from 0.
 */
function NodeList() {
};
NodeList.prototype = {
	/**
	 * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.
	 * @standard level1
	 */
	length:0, 
	/**
	 * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
	 * @standard level1
	 * @param index  unsigned long 
	 *   Index into the collection.
	 * @return Node
	 * 	The node at the indexth position in the NodeList, or null if that is not a valid index. 
	 */
	item: function(index) {
		return this[index] || null;
	},
	toString:function(isHTML,nodeFilter){
		for(var buf = [], i = 0;i<this.length;i++){
			serializeToString(this[i],buf,isHTML,nodeFilter);
		}
		return buf.join('');
	}
};
function LiveNodeList(node,refresh){
	this._node = node;
	this._refresh = refresh
	_updateLiveList(this);
}
function _updateLiveList(list){
	var inc = list._node._inc || list._node.ownerDocument._inc;
	if(list._inc != inc){
		var ls = list._refresh(list._node);
		//console.log(ls.length)
		__set__(list,'length',ls.length);
		copy(ls,list);
		list._inc = inc;
	}
}
LiveNodeList.prototype.item = function(i){
	_updateLiveList(this);
	return this[i];
}

_extends(LiveNodeList,NodeList);
/**
 * 
 * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.
 * NamedNodeMap objects in the DOM are live.
 * used for attributes or DocumentType entities 
 */
function NamedNodeMap() {
};

function _findNodeIndex(list,node){
	var i = list.length;
	while(i--){
		if(list[i] === node){return i}
	}
}

function _addNamedNode(el,list,newAttr,oldAttr){
	if(oldAttr){
		list[_findNodeIndex(list,oldAttr)] = newAttr;
	}else{
		list[list.length++] = newAttr;
	}
	if(el){
		newAttr.ownerElement = el;
		var doc = el.ownerDocument;
		if(doc){
			oldAttr && _onRemoveAttribute(doc,el,oldAttr);
			_onAddAttribute(doc,el,newAttr);
		}
	}
}
function _removeNamedNode(el,list,attr){
	//console.log('remove attr:'+attr)
	var i = _findNodeIndex(list,attr);
	if(i>=0){
		var lastIndex = list.length-1
		while(i<lastIndex){
			list[i] = list[++i]
		}
		list.length = lastIndex;
		if(el){
			var doc = el.ownerDocument;
			if(doc){
				_onRemoveAttribute(doc,el,attr);
				attr.ownerElement = null;
			}
		}
	}else{
		throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))
	}
}
NamedNodeMap.prototype = {
	length:0,
	item:NodeList.prototype.item,
	getNamedItem: function(key) {
//		if(key.indexOf(':')>0 || key == 'xmlns'){
//			return null;
//		}
		//console.log()
		var i = this.length;
		while(i--){
			var attr = this[i];
			//console.log(attr.nodeName,key)
			if(attr.nodeName == key){
				return attr;
			}
		}
	},
	setNamedItem: function(attr) {
		var el = attr.ownerElement;
		if(el && el!=this._ownerElement){
			throw new DOMException(INUSE_ATTRIBUTE_ERR);
		}
		var oldAttr = this.getNamedItem(attr.nodeName);
		_addNamedNode(this._ownerElement,this,attr,oldAttr);
		return oldAttr;
	},
	/* returns Node */
	setNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR
		var el = attr.ownerElement, oldAttr;
		if(el && el!=this._ownerElement){
			throw new DOMException(INUSE_ATTRIBUTE_ERR);
		}
		oldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);
		_addNamedNode(this._ownerElement,this,attr,oldAttr);
		return oldAttr;
	},

	/* returns Node */
	removeNamedItem: function(key) {
		var attr = this.getNamedItem(key);
		_removeNamedNode(this._ownerElement,this,attr);
		return attr;
		
		
	},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR
	
	//for level2
	removeNamedItemNS:function(namespaceURI,localName){
		var attr = this.getNamedItemNS(namespaceURI,localName);
		_removeNamedNode(this._ownerElement,this,attr);
		return attr;
	},
	getNamedItemNS: function(namespaceURI, localName) {
		var i = this.length;
		while(i--){
			var node = this[i];
			if(node.localName == localName && node.namespaceURI == namespaceURI){
				return node;
			}
		}
		return null;
	}
};
/**
 * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490
 */
function DOMImplementation(/* Object */ features) {
	this._features = {};
	if (features) {
		for (var feature in features) {
			 this._features = features[feature];
		}
	}
};

DOMImplementation.prototype = {
	hasFeature: function(/* string */ feature, /* string */ version) {
		var versions = this._features[feature.toLowerCase()];
		if (versions && (!version || version in versions)) {
			return true;
		} else {
			return false;
		}
	},
	// Introduced in DOM Level 2:
	createDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR
		var doc = new Document();
		doc.implementation = this;
		doc.childNodes = new NodeList();
		doc.doctype = doctype;
		if(doctype){
			doc.appendChild(doctype);
		}
		if(qualifiedName){
			var root = doc.createElementNS(namespaceURI,qualifiedName);
			doc.appendChild(root);
		}
		return doc;
	},
	// Introduced in DOM Level 2:
	createDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR
		var node = new DocumentType();
		node.name = qualifiedName;
		node.nodeName = qualifiedName;
		node.publicId = publicId;
		node.systemId = systemId;
		// Introduced in DOM Level 2:
		//readonly attribute DOMString        internalSubset;
		
		//TODO:..
		//  readonly attribute NamedNodeMap     entities;
		//  readonly attribute NamedNodeMap     notations;
		return node;
	}
};


/**
 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247
 */

function Node() {
};

Node.prototype = {
	firstChild : null,
	lastChild : null,
	previousSibling : null,
	nextSibling : null,
	attributes : null,
	parentNode : null,
	childNodes : null,
	ownerDocument : null,
	nodeValue : null,
	namespaceURI : null,
	prefix : null,
	localName : null,
	// Modified in DOM Level 2:
	insertBefore:function(newChild, refChild){//raises 
		return _insertBefore(this,newChild,refChild);
	},
	replaceChild:function(newChild, oldChild){//raises 
		this.insertBefore(newChild,oldChild);
		if(oldChild){
			this.removeChild(oldChild);
		}
	},
	removeChild:function(oldChild){
		return _removeChild(this,oldChild);
	},
	appendChild:function(newChild){
		return this.insertBefore(newChild,null);
	},
	hasChildNodes:function(){
		return this.firstChild != null;
	},
	cloneNode:function(deep){
		return cloneNode(this.ownerDocument||this,this,deep);
	},
	// Modified in DOM Level 2:
	normalize:function(){
		var child = this.firstChild;
		while(child){
			var next = child.nextSibling;
			if(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){
				this.removeChild(next);
				child.appendData(next.data);
			}else{
				child.normalize();
				child = next;
			}
		}
	},
  	// Introduced in DOM Level 2:
	isSupported:function(feature, version){
		return this.ownerDocument.implementation.hasFeature(feature,version);
	},
    // Introduced in DOM Level 2:
    hasAttributes:function(){
    	return this.attributes.length>0;
    },
    lookupPrefix:function(namespaceURI){
    	var el = this;
    	while(el){
    		var map = el._nsMap;
    		//console.dir(map)
    		if(map){
    			for(var n in map){
    				if(map[n] == namespaceURI){
    					return n;
    				}
    			}
    		}
    		el = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;
    	}
    	return null;
    },
    // Introduced in DOM Level 3:
    lookupNamespaceURI:function(prefix){
    	var el = this;
    	while(el){
    		var map = el._nsMap;
    		//console.dir(map)
    		if(map){
    			if(prefix in map){
    				return map[prefix] ;
    			}
    		}
    		el = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;
    	}
    	return null;
    },
    // Introduced in DOM Level 3:
    isDefaultNamespace:function(namespaceURI){
    	var prefix = this.lookupPrefix(namespaceURI);
    	return prefix == null;
    }
};


function _xmlEncoder(c){
	return c == '<' && '&lt;' ||
         c == '>' && '&gt;' ||
         c == '&' && '&amp;' ||
         c == '"' && '&quot;' ||
         '&#'+c.charCodeAt()+';'
}


copy(NodeType,Node);
copy(NodeType,Node.prototype);

/**
 * @param callback return true for continue,false for break
 * @return boolean true: break visit;
 */
function _visitNode(node,callback){
	if(callback(node)){
		return true;
	}
	if(node = node.firstChild){
		do{
			if(_visitNode(node,callback)){return true}
        }while(node=node.nextSibling)
    }
}



function Document(){
}
function _onAddAttribute(doc,el,newAttr){
	doc && doc._inc++;
	var ns = newAttr.namespaceURI ;
	if(ns == 'http://www.w3.org/2000/xmlns/'){
		//update namespace
		el._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value
	}
}
function _onRemoveAttribute(doc,el,newAttr,remove){
	doc && doc._inc++;
	var ns = newAttr.namespaceURI ;
	if(ns == 'http://www.w3.org/2000/xmlns/'){
		//update namespace
		delete el._nsMap[newAttr.prefix?newAttr.localName:'']
	}
}
function _onUpdateChild(doc,el,newChild){
	if(doc && doc._inc){
		doc._inc++;
		//update childNodes
		var cs = el.childNodes;
		if(newChild){
			cs[cs.length++] = newChild;
		}else{
			//console.log(1)
			var child = el.firstChild;
			var i = 0;
			while(child){
				cs[i++] = child;
				child =child.nextSibling;
			}
			cs.length = i;
		}
	}
}

/**
 * attributes;
 * children;
 * 
 * writeable properties:
 * nodeValue,Attr:value,CharacterData:data
 * prefix
 */
function _removeChild(parentNode,child){
	var previous = child.previousSibling;
	var next = child.nextSibling;
	if(previous){
		previous.nextSibling = next;
	}else{
		parentNode.firstChild = next
	}
	if(next){
		next.previousSibling = previous;
	}else{
		parentNode.lastChild = previous;
	}
	_onUpdateChild(parentNode.ownerDocument,parentNode);
	return child;
}
/**
 * preformance key(refChild == null)
 */
function _insertBefore(parentNode,newChild,nextChild){
	var cp = newChild.parentNode;
	if(cp){
		cp.removeChild(newChild);//remove and update
	}
	if(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){
		var newFirst = newChild.firstChild;
		if (newFirst == null) {
			return newChild;
		}
		var newLast = newChild.lastChild;
	}else{
		newFirst = newLast = newChild;
	}
	var pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;

	newFirst.previousSibling = pre;
	newLast.nextSibling = nextChild;
	
	
	if(pre){
		pre.nextSibling = newFirst;
	}else{
		parentNode.firstChild = newFirst;
	}
	if(nextChild == null){
		parentNode.lastChild = newLast;
	}else{
		nextChild.previousSibling = newLast;
	}
	do{
		newFirst.parentNode = parentNode;
	}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))
	_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);
	//console.log(parentNode.lastChild.nextSibling == null)
	if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {
		newChild.firstChild = newChild.lastChild = null;
	}
	return newChild;
}
function _appendSingleChild(parentNode,newChild){
	var cp = newChild.parentNode;
	if(cp){
		var pre = parentNode.lastChild;
		cp.removeChild(newChild);//remove and update
		var pre = parentNode.lastChild;
	}
	var pre = parentNode.lastChild;
	newChild.parentNode = parentNode;
	newChild.previousSibling = pre;
	newChild.nextSibling = null;
	if(pre){
		pre.nextSibling = newChild;
	}else{
		parentNode.firstChild = newChild;
	}
	parentNode.lastChild = newChild;
	_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);
	return newChild;
	//console.log("__aa",parentNode.lastChild.nextSibling == null)
}
Document.prototype = {
	//implementation : null,
	nodeName :  '#document',
	nodeType :  DOCUMENT_NODE,
	doctype :  null,
	documentElement :  null,
	_inc : 1,
	
	insertBefore :  function(newChild, refChild){//raises 
		if(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){
			var child = newChild.firstChild;
			while(child){
				var next = child.nextSibling;
				this.insertBefore(child,refChild);
				child = next;
			}
			return newChild;
		}
		if(this.documentElement == null && newChild.nodeType == ELEMENT_NODE){
			this.documentElement = newChild;
		}
		
		return _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;
	},
	removeChild :  function(oldChild){
		if(this.documentElement == oldChild){
			this.documentElement = null;
		}
		return _removeChild(this,oldChild);
	},
	// Introduced in DOM Level 2:
	importNode : function(importedNode,deep){
		return importNode(this,importedNode,deep);
	},
	// Introduced in DOM Level 2:
	getElementById :	function(id){
		var rtv = null;
		_visitNode(this.documentElement,function(node){
			if(node.nodeType == ELEMENT_NODE){
				if(node.getAttribute('id') == id){
					rtv = node;
					return true;
				}
			}
		})
		return rtv;
	},
	
	//document factory method:
	createElement :	function(tagName){
		var node = new Element();
		node.ownerDocument = this;
		node.nodeName = tagName;
		node.tagName = tagName;
		node.childNodes = new NodeList();
		var attrs	= node.attributes = new NamedNodeMap();
		attrs._ownerElement = node;
		return node;
	},
	createDocumentFragment :	function(){
		var node = new DocumentFragment();
		node.ownerDocument = this;
		node.childNodes = new NodeList();
		return node;
	},
	createTextNode :	function(data){
		var node = new Text();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createComment :	function(data){
		var node = new Comment();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createCDATASection :	function(data){
		var node = new CDATASection();
		node.ownerDocument = this;
		node.appendData(data)
		return node;
	},
	createProcessingInstruction :	function(target,data){
		var node = new ProcessingInstruction();
		node.ownerDocument = this;
		node.tagName = node.target = target;
		node.nodeValue= node.data = data;
		return node;
	},
	createAttribute :	function(name){
		var node = new Attr();
		node.ownerDocument	= this;
		node.name = name;
		node.nodeName	= name;
		node.localName = name;
		node.specified = true;
		return node;
	},
	createEntityReference :	function(name){
		var node = new EntityReference();
		node.ownerDocument	= this;
		node.nodeName	= name;
		return node;
	},
	// Introduced in DOM Level 2:
	createElementNS :	function(namespaceURI,qualifiedName){
		var node = new Element();
		var pl = qualifiedName.split(':');
		var attrs	= node.attributes = new NamedNodeMap();
		node.childNodes = new NodeList();
		node.ownerDocument = this;
		node.nodeName = qualifiedName;
		node.tagName = qualifiedName;
		node.namespaceURI = namespaceURI;
		if(pl.length == 2){
			node.prefix = pl[0];
			node.localName = pl[1];
		}else{
			//el.prefix = null;
			node.localName = qualifiedName;
		}
		attrs._ownerElement = node;
		return node;
	},
	// Introduced in DOM Level 2:
	createAttributeNS :	function(namespaceURI,qualifiedName){
		var node = new Attr();
		var pl = qualifiedName.split(':');
		node.ownerDocument = this;
		node.nodeName = qualifiedName;
		node.name = qualifiedName;
		node.namespaceURI = namespaceURI;
		node.specified = true;
		if(pl.length == 2){
			node.prefix = pl[0];
			node.localName = pl[1];
		}else{
			//el.prefix = null;
			node.localName = qualifiedName;
		}
		return node;
	}
};
_extends(Document,Node);


function Element() {
	this._nsMap = {};
};
Element.prototype = {
	nodeType : ELEMENT_NODE,
	hasAttribute : function(name){
		return this.getAttributeNode(name)!=null;
	},
	getAttribute : function(name){
		var attr = this.getAttributeNode(name);
		return attr && attr.value || '';
	},
	getAttributeNode : function(name){
		return this.attributes.getNamedItem(name);
	},
	setAttribute : function(name, value){
		var attr = this.ownerDocument.createAttribute(name);
		attr.value = attr.nodeValue = "" + value;
		this.setAttributeNode(attr)
	},
	removeAttribute : function(name){
		var attr = this.getAttributeNode(name)
		attr && this.removeAttributeNode(attr);
	},
	
	//four real opeartion method
	appendChild:function(newChild){
		if(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){
			return this.insertBefore(newChild,null);
		}else{
			return _appendSingleChild(this,newChild);
		}
	},
	setAttributeNode : function(newAttr){
		return this.attributes.setNamedItem(newAttr);
	},
	setAttributeNodeNS : function(newAttr){
		return this.attributes.setNamedItemNS(newAttr);
	},
	removeAttributeNode : function(oldAttr){
		//console.log(this == oldAttr.ownerElement)
		return this.attributes.removeNamedItem(oldAttr.nodeName);
	},
	//get real attribute name,and remove it by removeAttributeNode
	removeAttributeNS : function(namespaceURI, localName){
		var old = this.getAttributeNodeNS(namespaceURI, localName);
		old && this.removeAttributeNode(old);
	},
	
	hasAttributeNS : function(namespaceURI, localName){
		return this.getAttributeNodeNS(namespaceURI, localName)!=null;
	},
	getAttributeNS : function(namespaceURI, localName){
		var attr = this.getAttributeNodeNS(namespaceURI, localName);
		return attr && attr.value || '';
	},
	setAttributeNS : function(namespaceURI, qualifiedName, value){
		var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);
		attr.value = attr.nodeValue = "" + value;
		this.setAttributeNode(attr)
	},
	getAttributeNodeNS : function(namespaceURI, localName){
		return this.attributes.getNamedItemNS(namespaceURI, localName);
	},
	
	getElementsByTagName : function(tagName){
		return new LiveNodeList(this,function(base){
			var ls = [];
			_visitNode(base,function(node){
				if(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){
					ls.push(node);
				}
			});
			return ls;
		});
	},
	getElementsByTagNameNS : function(namespaceURI, localName){
		return new LiveNodeList(this,function(base){
			var ls = [];
			_visitNode(base,function(node){
				if(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){
					ls.push(node);
				}
			});
			return ls;
			
		});
	}
};
Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;
Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;


_extends(Element,Node);
function Attr() {
};
Attr.prototype.nodeType = ATTRIBUTE_NODE;
_extends(Attr,Node);


function CharacterData() {
};
CharacterData.prototype = {
	data : '',
	substringData : function(offset, count) {
		return this.data.substring(offset, offset+count);
	},
	appendData: function(text) {
		text = this.data+text;
		this.nodeValue = this.data = text;
		this.length = text.length;
	},
	insertData: function(offset,text) {
		this.replaceData(offset,0,text);
	
	},
	appendChild:function(newChild){
		throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])
	},
	deleteData: function(offset, count) {
		this.replaceData(offset,count,"");
	},
	replaceData: function(offset, count, text) {
		var start = this.data.substring(0,offset);
		var end = this.data.substring(offset+count);
		text = start + text + end;
		this.nodeValue = this.data = text;
		this.length = text.length;
	}
}
_extends(CharacterData,Node);
function Text() {
};
Text.prototype = {
	nodeName : "#text",
	nodeType : TEXT_NODE,
	splitText : function(offset) {
		var text = this.data;
		var newText = text.substring(offset);
		text = text.substring(0, offset);
		this.data = this.nodeValue = text;
		this.length = text.length;
		var newNode = this.ownerDocument.createTextNode(newText);
		if(this.parentNode){
			this.parentNode.insertBefore(newNode, this.nextSibling);
		}
		return newNode;
	}
}
_extends(Text,CharacterData);
function Comment() {
};
Comment.prototype = {
	nodeName : "#comment",
	nodeType : COMMENT_NODE
}
_extends(Comment,CharacterData);

function CDATASection() {
};
CDATASection.prototype = {
	nodeName : "#cdata-section",
	nodeType : CDATA_SECTION_NODE
}
_extends(CDATASection,CharacterData);


function DocumentType() {
};
DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;
_extends(DocumentType,Node);

function Notation() {
};
Notation.prototype.nodeType = NOTATION_NODE;
_extends(Notation,Node);

function Entity() {
};
Entity.prototype.nodeType = ENTITY_NODE;
_extends(Entity,Node);

function EntityReference() {
};
EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;
_extends(EntityReference,Node);

function DocumentFragment() {
};
DocumentFragment.prototype.nodeName =	"#document-fragment";
DocumentFragment.prototype.nodeType =	DOCUMENT_FRAGMENT_NODE;
_extends(DocumentFragment,Node);


function ProcessingInstruction() {
}
ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;
_extends(ProcessingInstruction,Node);
function XMLSerializer(){}
XMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){
	return nodeSerializeToString.call(node,isHtml,nodeFilter);
}
Node.prototype.toString = nodeSerializeToString;
function nodeSerializeToString(isHtml,nodeFilter){
	var buf = [];
	var refNode = this.nodeType == 9?this.documentElement:this;
	var prefix = refNode.prefix;
	var uri = refNode.namespaceURI;
	
	if(uri && prefix == null){
		//console.log(prefix)
		var prefix = refNode.lookupPrefix(uri);
		if(prefix == null){
			//isHTML = true;
			var visibleNamespaces=[
			{namespace:uri,prefix:null}
			//{namespace:uri,prefix:''}
			]
		}
	}
	serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);
	//console.log('###',this.nodeType,uri,prefix,buf.join(''))
	return buf.join('');
}
function needNamespaceDefine(node,isHTML, visibleNamespaces) {
	var prefix = node.prefix||'';
	var uri = node.namespaceURI;
	if (!prefix && !uri){
		return false;
	}
	if (prefix === "xml" && uri === "http://www.w3.org/XML/1998/namespace" 
		|| uri == 'http://www.w3.org/2000/xmlns/'){
		return false;
	}
	
	var i = visibleNamespaces.length 
	//console.log('@@@@',node.tagName,prefix,uri,visibleNamespaces)
	while (i--) {
		var ns = visibleNamespaces[i];
		// get namespace prefix
		//console.log(node.nodeType,node.tagName,ns.prefix,prefix)
		if (ns.prefix == prefix){
			return ns.namespace != uri;
		}
	}
	//console.log(isHTML,uri,prefix=='')
	//if(isHTML && prefix ==null && uri == 'http://www.w3.org/1999/xhtml'){
	//	return false;
	//}
	//node.flag = '11111'
	//console.error(3,true,node.flag,node.prefix,node.namespaceURI)
	return true;
}
function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){
	if(nodeFilter){
		node = nodeFilter(node);
		if(node){
			if(typeof node == 'string'){
				buf.push(node);
				return;
			}
		}else{
			return;
		}
		//buf.sort.apply(attrs, attributeSorter);
	}
	switch(node.nodeType){
	case ELEMENT_NODE:
		if (!visibleNamespaces) visibleNamespaces = [];
		var startVisibleNamespaces = visibleNamespaces.length;
		var attrs = node.attributes;
		var len = attrs.length;
		var child = node.firstChild;
		var nodeName = node.tagName;
		
		isHTML =  (htmlns === node.namespaceURI) ||isHTML 
		buf.push('<',nodeName);
		
		
		
		for(var i=0;i<len;i++){
			// add namespaces for attributes
			var attr = attrs.item(i);
			if (attr.prefix == 'xmlns') {
				visibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });
			}else if(attr.nodeName == 'xmlns'){
				visibleNamespaces.push({ prefix: '', namespace: attr.value });
			}
		}
		for(var i=0;i<len;i++){
			var attr = attrs.item(i);
			if (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {
				var prefix = attr.prefix||'';
				var uri = attr.namespaceURI;
				var ns = prefix ? ' xmlns:' + prefix : " xmlns";
				buf.push(ns, '="' , uri , '"');
				visibleNamespaces.push({ prefix: prefix, namespace:uri });
			}
			serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);
		}
		// add namespace for current node		
		if (needNamespaceDefine(node,isHTML, visibleNamespaces)) {
			var prefix = node.prefix||'';
			var uri = node.namespaceURI;
			var ns = prefix ? ' xmlns:' + prefix : " xmlns";
			buf.push(ns, '="' , uri , '"');
			visibleNamespaces.push({ prefix: prefix, namespace:uri });
		}
		
		if(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){
			buf.push('>');
			//if is cdata child node
			if(isHTML && /^script$/i.test(nodeName)){
				while(child){
					if(child.data){
						buf.push(child.data);
					}else{
						serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);
					}
					child = child.nextSibling;
				}
			}else
			{
				while(child){
					serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);
					child = child.nextSibling;
				}
			}
			buf.push('</',nodeName,'>');
		}else{
			buf.push('/>');
		}
		// remove added visible namespaces
		//visibleNamespaces.length = startVisibleNamespaces;
		return;
	case DOCUMENT_NODE:
	case DOCUMENT_FRAGMENT_NODE:
		var child = node.firstChild;
		while(child){
			serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);
			child = child.nextSibling;
		}
		return;
	case ATTRIBUTE_NODE:
		return buf.push(' ',node.name,'="',node.value.replace(/[<&"]/g,_xmlEncoder),'"');
	case TEXT_NODE:
		return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));
	case CDATA_SECTION_NODE:
		return buf.push( '<![CDATA[',node.data,']]>');
	case COMMENT_NODE:
		return buf.push( "<!--",node.data,"-->");
	case DOCUMENT_TYPE_NODE:
		var pubid = node.publicId;
		var sysid = node.systemId;
		buf.push('<!DOCTYPE ',node.name);
		if(pubid){
			buf.push(' PUBLIC "',pubid);
			if (sysid && sysid!='.') {
				buf.push( '" "',sysid);
			}
			buf.push('">');
		}else if(sysid && sysid!='.'){
			buf.push(' SYSTEM "',sysid,'">');
		}else{
			var sub = node.internalSubset;
			if(sub){
				buf.push(" [",sub,"]");
			}
			buf.push(">");
		}
		return;
	case PROCESSING_INSTRUCTION_NODE:
		return buf.push( "<?",node.target," ",node.data,"?>");
	case ENTITY_REFERENCE_NODE:
		return buf.push( '&',node.nodeName,';');
	//case ENTITY_NODE:
	//case NOTATION_NODE:
	default:
		buf.push('??',node.nodeName);
	}
}
function importNode(doc,node,deep){
	var node2;
	switch (node.nodeType) {
	case ELEMENT_NODE:
		node2 = node.cloneNode(false);
		node2.ownerDocument = doc;
		//var attrs = node2.attributes;
		//var len = attrs.length;
		//for(var i=0;i<len;i++){
			//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
		//}
	case DOCUMENT_FRAGMENT_NODE:
		break;
	case ATTRIBUTE_NODE:
		deep = true;
		break;
	//case ENTITY_REFERENCE_NODE:
	//case PROCESSING_INSTRUCTION_NODE:
	////case TEXT_NODE:
	//case CDATA_SECTION_NODE:
	//case COMMENT_NODE:
	//	deep = false;
	//	break;
	//case DOCUMENT_NODE:
	//case DOCUMENT_TYPE_NODE:
	//cannot be imported.
	//case ENTITY_NODE:
	//case NOTATION_NODEï¼
	//can not hit in level3
	//default:throw e;
	}
	if(!node2){
		node2 = node.cloneNode(false);//false
	}
	node2.ownerDocument = doc;
	node2.parentNode = null;
	if(deep){
		var child = node.firstChild;
		while(child){
			node2.appendChild(importNode(doc,child,deep));
			child = child.nextSibling;
		}
	}
	return node2;
}
//
//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,
//					attributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};
function cloneNode(doc,node,deep){
	var node2 = new node.constructor();
	for(var n in node){
		var v = node[n];
		if(typeof v != 'object' ){
			if(v != node2[n]){
				node2[n] = v;
			}
		}
	}
	if(node.childNodes){
		node2.childNodes = new NodeList();
	}
	node2.ownerDocument = doc;
	switch (node2.nodeType) {
	case ELEMENT_NODE:
		var attrs	= node.attributes;
		var attrs2	= node2.attributes = new NamedNodeMap();
		var len = attrs.length
		attrs2._ownerElement = node2;
		for(var i=0;i<len;i++){
			node2.setAttributeNode(cloneNode(doc,attrs.item(i),true));
		}
		break;;
	case ATTRIBUTE_NODE:
		deep = true;
	}
	if(deep){
		var child = node.firstChild;
		while(child){
			node2.appendChild(cloneNode(doc,child,deep));
			child = child.nextSibling;
		}
	}
	return node2;
}

function __set__(object,key,value){
	object[key] = value
}
//do dynamic
try{
	if(Object.defineProperty){
		Object.defineProperty(LiveNodeList.prototype,'length',{
			get:function(){
				_updateLiveList(this);
				return this.$$length;
			}
		});
		Object.defineProperty(Node.prototype,'textContent',{
			get:function(){
				return getTextContent(this);
			},
			set:function(data){
				switch(this.nodeType){
				case ELEMENT_NODE:
				case DOCUMENT_FRAGMENT_NODE:
					while(this.firstChild){
						this.removeChild(this.firstChild);
					}
					if(data || String(data)){
						this.appendChild(this.ownerDocument.createTextNode(data));
					}
					break;
				default:
					//TODO:
					this.data = data;
					this.value = data;
					this.nodeValue = data;
				}
			}
		})
		
		function getTextContent(node){
			switch(node.nodeType){
			case ELEMENT_NODE:
			case DOCUMENT_FRAGMENT_NODE:
				var buf = [];
				node = node.firstChild;
				while(node){
					if(node.nodeType!==7 && node.nodeType !==8){
						buf.push(getTextContent(node));
					}
					node = node.nextSibling;
				}
				return buf.join('');
			default:
				return node.nodeValue;
			}
		}
		__set__ = function(object,key,value){
			//console.log(value)
			object['$$'+key] = value
		}
	}
}catch(e){//ie8
}

//if(typeof require == 'function'){
	exports.DOMImplementation = DOMImplementation;
	exports.XMLSerializer = XMLSerializer;
//}

},{}],4:[function(require,module,exports){
//[4]   	NameStartChar	   ::=   	":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
//[4a]   	NameChar	   ::=   	NameStartChar | "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]
//[5]   	Name	   ::=   	NameStartChar (NameChar)*
var nameStartChar = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]///\u10000-\uEFFFF
var nameChar = new RegExp("[\\-\\.0-9"+nameStartChar.source.slice(1,-1)+"\\u00B7\\u0300-\\u036F\\u203F-\\u2040]");
var tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\:'+nameStartChar.source+nameChar.source+'*)?$');
//var tagNamePattern = /^[a-zA-Z_][\w\-\.]*(?:\:[a-zA-Z_][\w\-\.]*)?$/
//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')

//S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
//S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
var S_TAG = 0;//tag name offerring
var S_ATTR = 1;//attr name offerring 
var S_ATTR_SPACE=2;//attr name end and space offer
var S_EQ = 3;//=space?
var S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)
var S_ATTR_END = 5;//attr value end and no space(quot end)
var S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)
var S_TAG_CLOSE = 7;//closed el<el />

function XMLReader(){
	
}

XMLReader.prototype = {
	parse:function(source,defaultNSMap,entityMap){
		var domBuilder = this.domBuilder;
		domBuilder.startDocument();
		_copy(defaultNSMap ,defaultNSMap = {})
		parse(source,defaultNSMap,entityMap,
				domBuilder,this.errorHandler);
		domBuilder.endDocument();
	}
}
function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){
	function fixedFromCharCode(code) {
		// String.prototype.fromCharCode does not supports
		// > 2 bytes unicode chars directly
		if (code > 0xffff) {
			code -= 0x10000;
			var surrogate1 = 0xd800 + (code >> 10)
				, surrogate2 = 0xdc00 + (code & 0x3ff);

			return String.fromCharCode(surrogate1, surrogate2);
		} else {
			return String.fromCharCode(code);
		}
	}
	function entityReplacer(a){
		var k = a.slice(1,-1);
		if(k in entityMap){
			return entityMap[k]; 
		}else if(k.charAt(0) === '#'){
			return fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))
		}else{
			errorHandler.error('entity not found:'+a);
			return a;
		}
	}
	function appendText(end){//has some bugs
		if(end>start){
			var xt = source.substring(start,end).replace(/&#?\w+;/g,entityReplacer);
			locator&&position(start);
			domBuilder.characters(xt,0,end-start);
			start = end
		}
	}
	function position(p,m){
		while(p>=lineEnd && (m = linePattern.exec(source))){
			lineStart = m.index;
			lineEnd = lineStart + m[0].length;
			locator.lineNumber++;
			//console.log('line++:',locator,startPos,endPos)
		}
		locator.columnNumber = p-lineStart+1;
	}
	var lineStart = 0;
	var lineEnd = 0;
	var linePattern = /.*(?:\r\n?|\n)|.*$/g
	var locator = domBuilder.locator;
	
	var parseStack = [{currentNSMap:defaultNSMapCopy}]
	var closeMap = {};
	var start = 0;
	while(true){
		try{
			var tagStart = source.indexOf('<',start);
			if(tagStart<0){
				if(!source.substr(start).match(/^\s*$/)){
					var doc = domBuilder.doc;
	    			var text = doc.createTextNode(source.substr(start));
	    			doc.appendChild(text);
	    			domBuilder.currentElement = text;
				}
				return;
			}
			if(tagStart>start){
				appendText(tagStart);
			}
			switch(source.charAt(tagStart+1)){
			case '/':
				var end = source.indexOf('>',tagStart+3);
				var tagName = source.substring(tagStart+2,end);
				var config = parseStack.pop();
				if(end<0){
					
	        		tagName = source.substring(tagStart+2).replace(/[\s<].*/,'');
	        		//console.error('#@@@@@@'+tagName)
	        		errorHandler.error("end tag name: "+tagName+' is not complete:'+config.tagName);
	        		end = tagStart+1+tagName.length;
	        	}else if(tagName.match(/\s</)){
	        		tagName = tagName.replace(/[\s<].*/,'');
	        		errorHandler.error("end tag name: "+tagName+' maybe not complete');
	        		end = tagStart+1+tagName.length;
				}
				//console.error(parseStack.length,parseStack)
				//console.error(config);
				var localNSMap = config.localNSMap;
				var endMatch = config.tagName == tagName;
				var endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()
		        if(endIgnoreCaseMach){
		        	domBuilder.endElement(config.uri,config.localName,tagName);
					if(localNSMap){
						for(var prefix in localNSMap){
							domBuilder.endPrefixMapping(prefix) ;
						}
					}
					if(!endMatch){
		            	errorHandler.fatalError("end tag name: "+tagName+' is not match the current start tagName:'+config.tagName );
					}
		        }else{
		        	parseStack.push(config)
		        }
				
				end++;
				break;
				// end elment
			case '?':// <?...?>
				locator&&position(tagStart);
				end = parseInstruction(source,tagStart,domBuilder);
				break;
			case '!':// <!doctype,<![CDATA,<!--
				locator&&position(tagStart);
				end = parseDCC(source,tagStart,domBuilder,errorHandler);
				break;
			default:
				locator&&position(tagStart);
				var el = new ElementAttributes();
				var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
				//elStartEnd
				var end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);
				var len = el.length;
				
				
				if(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){
					el.closed = true;
					if(!entityMap.nbsp){
						errorHandler.warning('unclosed xml attribute');
					}
				}
				if(locator && len){
					var locator2 = copyLocator(locator,{});
					//try{//attribute position fixed
					for(var i = 0;i<len;i++){
						var a = el[i];
						position(a.offset);
						a.locator = copyLocator(locator,{});
					}
					//}catch(e){console.error('@@@@@'+e)}
					domBuilder.locator = locator2
					if(appendElement(el,domBuilder,currentNSMap)){
						parseStack.push(el)
					}
					domBuilder.locator = locator;
				}else{
					if(appendElement(el,domBuilder,currentNSMap)){
						parseStack.push(el)
					}
				}
				
				
				
				if(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){
					end = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)
				}else{
					end++;
				}
			}
		}catch(e){
			errorHandler.error('element parse error: '+e)
			//errorHandler.error('element parse error: '+e);
			end = -1;
			//throw e;
		}
		if(end>start){
			start = end;
		}else{
			//TODO: è¿éæå¯è½saxåéï¼æä½ç½®éè¯¯é£é©
			appendText(Math.max(tagStart,start)+1);
		}
	}
}
function copyLocator(f,t){
	t.lineNumber = f.lineNumber;
	t.columnNumber = f.columnNumber;
	return t;
}

/**
 * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);
 * @return end of the elementStartPart(end of elementEndPart for selfClosed el)
 */
function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){
	var attrName;
	var value;
	var p = ++start;
	var s = S_TAG;//status
	while(true){
		var c = source.charAt(p);
		switch(c){
		case '=':
			if(s === S_ATTR){//attrName
				attrName = source.slice(start,p);
				s = S_EQ;
			}else if(s === S_ATTR_SPACE){
				s = S_EQ;
			}else{
				//fatalError: equal must after attrName or space after attrName
				throw new Error('attribute equal must after attrName');
			}
			break;
		case '\'':
		case '"':
			if(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE
				){//equal
				if(s === S_ATTR){
					errorHandler.warning('attribute value must after "="')
					attrName = source.slice(start,p)
				}
				start = p+1;
				p = source.indexOf(c,start)
				if(p>0){
					value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
					el.add(attrName,value,start-1);
					s = S_ATTR_END;
				}else{
					//fatalError: no end quot match
					throw new Error('attribute value no end \''+c+'\' match');
				}
			}else if(s == S_ATTR_NOQUOT_VALUE){
				value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
				//console.log(attrName,value,start,p)
				el.add(attrName,value,start);
				//console.dir(el)
				errorHandler.warning('attribute "'+attrName+'" missed start quot('+c+')!!');
				start = p+1;
				s = S_ATTR_END
			}else{
				//fatalError: no equal before
				throw new Error('attribute value must after "="');
			}
			break;
		case '/':
			switch(s){
			case S_TAG:
				el.setTagName(source.slice(start,p));
			case S_ATTR_END:
			case S_TAG_SPACE:
			case S_TAG_CLOSE:
				s =S_TAG_CLOSE;
				el.closed = true;
			case S_ATTR_NOQUOT_VALUE:
			case S_ATTR:
			case S_ATTR_SPACE:
				break;
			//case S_EQ:
			default:
				throw new Error("attribute invalid close char('/')")
			}
			break;
		case ''://end document
			//throw new Error('unexpected end of input')
			errorHandler.error('unexpected end of input');
			if(s == S_TAG){
				el.setTagName(source.slice(start,p));
			}
			return p;
		case '>':
			switch(s){
			case S_TAG:
				el.setTagName(source.slice(start,p));
			case S_ATTR_END:
			case S_TAG_SPACE:
			case S_TAG_CLOSE:
				break;//normal
			case S_ATTR_NOQUOT_VALUE://Compatible state
			case S_ATTR:
				value = source.slice(start,p);
				if(value.slice(-1) === '/'){
					el.closed  = true;
					value = value.slice(0,-1)
				}
			case S_ATTR_SPACE:
				if(s === S_ATTR_SPACE){
					value = attrName;
				}
				if(s == S_ATTR_NOQUOT_VALUE){
					errorHandler.warning('attribute "'+value+'" missed quot(")!!');
					el.add(attrName,value.replace(/&#?\w+;/g,entityReplacer),start)
				}else{
					if(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !value.match(/^(?:disabled|checked|selected)$/i)){
						errorHandler.warning('attribute "'+value+'" missed value!! "'+value+'" instead!!')
					}
					el.add(value,value,start)
				}
				break;
			case S_EQ:
				throw new Error('attribute value missed!!');
			}
//			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
			return p;
		/*xml space '\x20' | #x9 | #xD | #xA; */
		case '\u0080':
			c = ' ';
		default:
			if(c<= ' '){//space
				switch(s){
				case S_TAG:
					el.setTagName(source.slice(start,p));//tagName
					s = S_TAG_SPACE;
					break;
				case S_ATTR:
					attrName = source.slice(start,p)
					s = S_ATTR_SPACE;
					break;
				case S_ATTR_NOQUOT_VALUE:
					var value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
					errorHandler.warning('attribute "'+value+'" missed quot(")!!');
					el.add(attrName,value,start)
				case S_ATTR_END:
					s = S_TAG_SPACE;
					break;
				//case S_TAG_SPACE:
				//case S_EQ:
				//case S_ATTR_SPACE:
				//	void();break;
				//case S_TAG_CLOSE:
					//ignore warning
				}
			}else{//not space
//S_TAG,	S_ATTR,	S_EQ,	S_ATTR_NOQUOT_VALUE
//S_ATTR_SPACE,	S_ATTR_END,	S_TAG_SPACE, S_TAG_CLOSE
				switch(s){
				//case S_TAG:void();break;
				//case S_ATTR:void();break;
				//case S_ATTR_NOQUOT_VALUE:void();break;
				case S_ATTR_SPACE:
					var tagName =  el.tagName;
					if(currentNSMap[''] !== 'http://www.w3.org/1999/xhtml' || !attrName.match(/^(?:disabled|checked|selected)$/i)){
						errorHandler.warning('attribute "'+attrName+'" missed value!! "'+attrName+'" instead2!!')
					}
					el.add(attrName,attrName,start);
					start = p;
					s = S_ATTR;
					break;
				case S_ATTR_END:
					errorHandler.warning('attribute space is required"'+attrName+'"!!')
				case S_TAG_SPACE:
					s = S_ATTR;
					start = p;
					break;
				case S_EQ:
					s = S_ATTR_NOQUOT_VALUE;
					start = p;
					break;
				case S_TAG_CLOSE:
					throw new Error("elements closed character '/' and '>' must be connected to");
				}
			}
		}//end outer switch
		//console.log('p++',p)
		p++;
	}
}
/**
 * @return true if has new namespace define
 */
function appendElement(el,domBuilder,currentNSMap){
	var tagName = el.tagName;
	var localNSMap = null;
	//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
	var i = el.length;
	while(i--){
		var a = el[i];
		var qName = a.qName;
		var value = a.value;
		var nsp = qName.indexOf(':');
		if(nsp>0){
			var prefix = a.prefix = qName.slice(0,nsp);
			var localName = qName.slice(nsp+1);
			var nsPrefix = prefix === 'xmlns' && localName
		}else{
			localName = qName;
			prefix = null
			nsPrefix = qName === 'xmlns' && ''
		}
		//can not set prefix,because prefix !== ''
		a.localName = localName ;
		//prefix == null for no ns prefix attribute 
		if(nsPrefix !== false){//hack!!
			if(localNSMap == null){
				localNSMap = {}
				//console.log(currentNSMap,0)
				_copy(currentNSMap,currentNSMap={})
				//console.log(currentNSMap,1)
			}
			currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;
			a.uri = 'http://www.w3.org/2000/xmlns/'
			domBuilder.startPrefixMapping(nsPrefix, value) 
		}
	}
	var i = el.length;
	while(i--){
		a = el[i];
		var prefix = a.prefix;
		if(prefix){//no prefix attribute has no namespace
			if(prefix === 'xml'){
				a.uri = 'http://www.w3.org/XML/1998/namespace';
			}if(prefix !== 'xmlns'){
				a.uri = currentNSMap[prefix || '']
				
				//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}
			}
		}
	}
	var nsp = tagName.indexOf(':');
	if(nsp>0){
		prefix = el.prefix = tagName.slice(0,nsp);
		localName = el.localName = tagName.slice(nsp+1);
	}else{
		prefix = null;//important!!
		localName = el.localName = tagName;
	}
	//no prefix element has default namespace
	var ns = el.uri = currentNSMap[prefix || ''];
	domBuilder.startElement(ns,localName,tagName,el);
	//endPrefixMapping and startPrefixMapping have not any help for dom builder
	//localNSMap = null
	if(el.closed){
		domBuilder.endElement(ns,localName,tagName);
		if(localNSMap){
			for(prefix in localNSMap){
				domBuilder.endPrefixMapping(prefix) 
			}
		}
	}else{
		el.currentNSMap = currentNSMap;
		el.localNSMap = localNSMap;
		//parseStack.push(el);
		return true;
	}
}
function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){
	if(/^(?:script|textarea)$/i.test(tagName)){
		var elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);
		var text = source.substring(elStartEnd+1,elEndStart);
		if(/[&<]/.test(text)){
			if(/^script$/i.test(tagName)){
				//if(!/\]\]>/.test(text)){
					//lexHandler.startCDATA();
					domBuilder.characters(text,0,text.length);
					//lexHandler.endCDATA();
					return elEndStart;
				//}
			}//}else{//text area
				text = text.replace(/&#?\w+;/g,entityReplacer);
				domBuilder.characters(text,0,text.length);
				return elEndStart;
			//}
			
		}
	}
	return elStartEnd+1;
}
function fixSelfClosed(source,elStartEnd,tagName,closeMap){
	//if(tagName in closeMap){
	var pos = closeMap[tagName];
	if(pos == null){
		//console.log(tagName)
		pos =  source.lastIndexOf('</'+tagName+'>')
		if(pos<elStartEnd){//å¿è®°é­å
			pos = source.lastIndexOf('</'+tagName)
		}
		closeMap[tagName] =pos
	}
	return pos<elStartEnd;
	//} 
}
function _copy(source,target){
	for(var n in source){target[n] = source[n]}
}
function parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'
	var next= source.charAt(start+2)
	switch(next){
	case '-':
		if(source.charAt(start + 3) === '-'){
			var end = source.indexOf('-->',start+4);
			//append comment source.substring(4,end)//<!--
			if(end>start){
				domBuilder.comment(source,start+4,end-start-4);
				return end+3;
			}else{
				errorHandler.error("Unclosed comment");
				return -1;
			}
		}else{
			//error
			return -1;
		}
	default:
		if(source.substr(start+3,6) == 'CDATA['){
			var end = source.indexOf(']]>',start+9);
			domBuilder.startCDATA();
			domBuilder.characters(source,start+9,end-start-9);
			domBuilder.endCDATA() 
			return end+3;
		}
		//<!DOCTYPE
		//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) 
		var matchs = split(source,start);
		var len = matchs.length;
		if(len>1 && /!doctype/i.test(matchs[0][0])){
			var name = matchs[1][0];
			var pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]
			var sysid = len>4 && matchs[4][0];
			var lastMatch = matchs[len-1]
			domBuilder.startDTD(name,pubid && pubid.replace(/^(['"])(.*?)\1$/,'$2'),
					sysid && sysid.replace(/^(['"])(.*?)\1$/,'$2'));
			domBuilder.endDTD();
			
			return lastMatch.index+lastMatch[0].length
		}
	}
	return -1;
}



function parseInstruction(source,start,domBuilder){
	var end = source.indexOf('?>',start);
	if(end){
		var match = source.substring(start,end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
		if(match){
			var len = match[0].length;
			domBuilder.processingInstruction(match[1], match[2]) ;
			return end+2;
		}else{//error
			return -1;
		}
	}
	return -1;
}

/**
 * @param source
 */
function ElementAttributes(source){
	
}
ElementAttributes.prototype = {
	setTagName:function(tagName){
		if(!tagNamePattern.test(tagName)){
			throw new Error('invalid tagName:'+tagName)
		}
		this.tagName = tagName
	},
	add:function(qName,value,offset){
		if(!tagNamePattern.test(qName)){
			throw new Error('invalid attribute:'+qName)
		}
		this[this.length++] = {qName:qName,value:value,offset:offset}
	},
	length:0,
	getLocalName:function(i){return this[i].localName},
	getLocator:function(i){return this[i].locator},
	getQName:function(i){return this[i].qName},
	getURI:function(i){return this[i].uri},
	getValue:function(i){return this[i].value}
//	,getIndex:function(uri, localName)){
//		if(localName){
//			
//		}else{
//			var qName = uri
//		}
//	},
//	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
//	getType:function(uri,localName){}
//	getType:function(i){},
}




function _set_proto_(thiz,parent){
	thiz.__proto__ = parent;
	return thiz;
}
if(!(_set_proto_({},_set_proto_.prototype) instanceof _set_proto_)){
	_set_proto_ = function(thiz,parent){
		function p(){};
		p.prototype = parent;
		p = new p();
		for(parent in thiz){
			p[parent] = thiz[parent];
		}
		return p;
	}
}

function split(source,start){
	var match;
	var buf = [];
	var reg = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
	reg.lastIndex = start;
	reg.exec(source);//skip <
	while(match = reg.exec(source)){
		buf.push(match);
		if(match[1])return buf;
	}
}

exports.XMLReader = XMLReader;


},{}]},{},[1])(1)
});
;
!function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(i,r,function(t){return e[t]}.bind(null,r));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=11)}([function(e,t,n){"use strict";var i=n(3),r=["kind","resolve","construct","instanceOf","predicate","represent","defaultStyle","styleAliases"],a=["scalar","sequence","mapping"];e.exports=function(e,t){var n,o;if(t=t||{},Object.keys(t).forEach((function(t){if(-1===r.indexOf(t))throw new i('Unknown option "'+t+'" is met in definition of "'+e+'" YAML type.')})),this.tag=e,this.kind=t.kind||null,this.resolve=t.resolve||function(){return!0},this.construct=t.construct||function(e){return e},this.instanceOf=t.instanceOf||null,this.predicate=t.predicate||null,this.represent=t.represent||null,this.defaultStyle=t.defaultStyle||null,this.styleAliases=(n=t.styleAliases||null,o={},null!==n&&Object.keys(n).forEach((function(e){n[e].forEach((function(t){o[String(t)]=e}))})),o),-1===a.indexOf(this.kind))throw new i('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}},function(e,t,n){"use strict";function i(e){return null==e}e.exports.isNothing=i,e.exports.isObject=function(e){return"object"==typeof e&&null!==e},e.exports.toArray=function(e){return Array.isArray(e)?e:i(e)?[]:[e]},e.exports.repeat=function(e,t){var n,i="";for(n=0;n<t;n+=1)i+=e;return i},e.exports.isNegativeZero=function(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e},e.exports.extend=function(e,t){var n,i,r,a;if(t)for(n=0,i=(a=Object.keys(t)).length;n<i;n+=1)e[r=a[n]]=t[r];return e}},function(e,t,n){"use strict";var i=n(1),r=n(3),a=n(0);function o(e,t,n){var i=[];return e.include.forEach((function(e){n=o(e,t,n)})),e[t].forEach((function(e){n.forEach((function(t,n){t.tag===e.tag&&t.kind===e.kind&&i.push(n)})),n.push(e)})),n.filter((function(e,t){return-1===i.indexOf(t)}))}function s(e){this.include=e.include||[],this.implicit=e.implicit||[],this.explicit=e.explicit||[],this.implicit.forEach((function(e){if(e.loadKind&&"scalar"!==e.loadKind)throw new r("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.")})),this.compiledImplicit=o(this,"implicit",[]),this.compiledExplicit=o(this,"explicit",[]),this.compiledTypeMap=function(){var e,t,n={scalar:{},sequence:{},mapping:{},fallback:{}};function i(e){n[e.kind][e.tag]=n.fallback[e.tag]=e}for(e=0,t=arguments.length;e<t;e+=1)arguments[e].forEach(i);return n}(this.compiledImplicit,this.compiledExplicit)}s.DEFAULT=null,s.create=function(){var e,t;switch(arguments.length){case 1:e=s.DEFAULT,t=arguments[0];break;case 2:e=arguments[0],t=arguments[1];break;default:throw new r("Wrong number of arguments for Schema.create function")}if(e=i.toArray(e),t=i.toArray(t),!e.every((function(e){return e instanceof s})))throw new r("Specified list of super schemas (or a single Schema object) contains a non-Schema object.");if(!t.every((function(e){return e instanceof a})))throw new r("Specified list of YAML types (or a single Type object) contains a non-Type object.");return new s({include:e,explicit:t})},e.exports=s},function(e,t,n){"use strict";function i(e,t){Error.call(this),this.name="YAMLException",this.reason=e,this.mark=t,this.message=(this.reason||"(unknown reason)")+(this.mark?" "+this.mark.toString():""),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}i.prototype=Object.create(Error.prototype),i.prototype.constructor=i,i.prototype.toString=function(e){var t=this.name+": ";return t+=this.reason||"(unknown reason)",!e&&this.mark&&(t+=" "+this.mark.toString()),t},e.exports=i},function(e,t,n){"use strict";var i=n(2);e.exports=new i({include:[n(7)],implicit:[n(24),n(25)],explicit:[n(26),n(30),n(31),n(32)]})},function(e,t,n){"use strict";var i=n(2);e.exports=i.DEFAULT=new i({include:[n(4)],explicit:[n(33),n(34),n(35)]})},function(e,t,n){"use strict";var i=n(2);e.exports=new i({explicit:[n(17),n(18),n(19)]})},function(e,t,n){"use strict";var i=n(2);e.exports=new i({include:[n(8)]})},function(e,t,n){"use strict";var i=n(2);e.exports=new i({include:[n(6)],implicit:[n(20),n(21),n(22),n(23)]})},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var i=n(27),r=n(28),a=n(29);function o(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(o()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return h(this,e)}return c(this,e,t,n)}function c(e,t,n,i){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,i){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(i||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===i?new Uint8Array(t):void 0===i?new Uint8Array(t,n):new Uint8Array(t,n,i);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=p(e,t);return e}(e,t,n,i):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var i=0|d(t,n),r=(e=s(e,i)).write(t,n);r!==i&&(e=e.slice(0,r));return e}(e,t,n):function(e,t){if(u.isBuffer(t)){var n=0|m(t.length);return 0===(e=s(e,n)).length?e:(t.copy(e,0,0,n),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(i=t.length)!=i?s(e,0):p(e,t);if("Buffer"===t.type&&a(t.data))return p(e,t.data)}var i;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function h(e,t){if(l(t),e=s(e,t<0?0:0|m(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function p(e,t){var n=t.length<0?0:0|m(t.length);e=s(e,n);for(var i=0;i<n;i+=1)e[i]=255&t[i];return e}function m(e){if(e>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|e}function d(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var i=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return U(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return H(e).length;default:if(i)return U(e).length;t=(""+t).toLowerCase(),i=!0}}function f(e,t,n){var i=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return T(this,t,n);case"utf8":case"utf-8":return k(this,t,n);case"ascii":return M(this,t,n);case"latin1":case"binary":return B(this,t,n);case"base64":return E(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return F(this,t,n);default:if(i)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}function g(e,t,n){var i=e[t];e[t]=e[n],e[n]=i}function b(e,t,n,i,r){if(0===e.length)return-1;if("string"==typeof n?(i=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=r?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(r)return-1;n=e.length-1}else if(n<0){if(!r)return-1;n=0}if("string"==typeof t&&(t=u.from(t,i)),u.isBuffer(t))return 0===t.length?-1:v(e,t,n,i,r);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):v(e,[t],n,i,r);throw new TypeError("val must be string, number or Buffer")}function v(e,t,n,i,r){var a,o=1,s=e.length,u=t.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(e.length<2||t.length<2)return-1;o=2,s/=2,u/=2,n/=2}function c(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(r){var l=-1;for(a=n;a<s;a++)if(c(e,a)===c(t,-1===l?0:a-l)){if(-1===l&&(l=a),a-l+1===u)return l*o}else-1!==l&&(a-=a-l),l=-1}else for(n+u>s&&(n=s-u),a=n;a>=0;a--){for(var h=!0,p=0;p<u;p++)if(c(e,a+p)!==c(t,p)){h=!1;break}if(h)return a}return-1}function y(e,t,n,i){n=Number(n)||0;var r=e.length-n;i?(i=Number(i))>r&&(i=r):i=r;var a=t.length;if(a%2!=0)throw new TypeError("Invalid hex string");i>a/2&&(i=a/2);for(var o=0;o<i;++o){var s=parseInt(t.substr(2*o,2),16);if(isNaN(s))return o;e[n+o]=s}return o}function C(e,t,n,i){return J(U(t,e.length-n),e,n,i)}function x(e,t,n,i){return J(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,i)}function A(e,t,n,i){return x(e,t,n,i)}function S(e,t,n,i){return J(H(t),e,n,i)}function D(e,t,n,i){return J(function(e,t){for(var n,i,r,a=[],o=0;o<e.length&&!((t-=2)<0);++o)n=e.charCodeAt(o),i=n>>8,r=n%256,a.push(r),a.push(i);return a}(t,e.length-n),e,n,i)}function E(e,t,n){return 0===t&&n===e.length?i.fromByteArray(e):i.fromByteArray(e.slice(t,n))}function k(e,t,n){n=Math.min(e.length,n);for(var i=[],r=t;r<n;){var a,o,s,u,c=e[r],l=null,h=c>239?4:c>223?3:c>191?2:1;if(r+h<=n)switch(h){case 1:c<128&&(l=c);break;case 2:128==(192&(a=e[r+1]))&&(u=(31&c)<<6|63&a)>127&&(l=u);break;case 3:a=e[r+1],o=e[r+2],128==(192&a)&&128==(192&o)&&(u=(15&c)<<12|(63&a)<<6|63&o)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:a=e[r+1],o=e[r+2],s=e[r+3],128==(192&a)&&128==(192&o)&&128==(192&s)&&(u=(15&c)<<18|(63&a)<<12|(63&o)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,h=1):l>65535&&(l-=65536,i.push(l>>>10&1023|55296),l=56320|1023&l),i.push(l),r+=h}return function(e){var t=e.length;if(t<=w)return String.fromCharCode.apply(String,e);var n="",i=0;for(;i<t;)n+=String.fromCharCode.apply(String,e.slice(i,i+=w));return n}(i)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=o(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return c(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return function(e,t,n,i){return l(t),t<=0?s(e,t):void 0!==n?"string"==typeof i?s(e,t).fill(n,i):s(e,t).fill(n):s(e,t)}(null,e,t,n)},u.allocUnsafe=function(e){return h(null,e)},u.allocUnsafeSlow=function(e){return h(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,i=t.length,r=0,a=Math.min(n,i);r<a;++r)if(e[r]!==t[r]){n=e[r],i=t[r];break}return n<i?-1:i<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!a(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var i=u.allocUnsafe(t),r=0;for(n=0;n<e.length;++n){var o=e[n];if(!u.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(i,r),r+=o.length}return i},u.byteLength=d,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)g(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?k(this,0,e):f.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,i,r){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===i&&(i=0),void 0===r&&(r=this.length),t<0||n>e.length||i<0||r>this.length)throw new RangeError("out of range index");if(i>=r&&t>=n)return 0;if(i>=r)return-1;if(t>=n)return 1;if(this===e)return 0;for(var a=(r>>>=0)-(i>>>=0),o=(n>>>=0)-(t>>>=0),s=Math.min(a,o),c=this.slice(i,r),l=e.slice(t,n),h=0;h<s;++h)if(c[h]!==l[h]){a=c[h],o=l[h];break}return a<o?-1:o<a?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return b(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return b(this,e,t,n,!1)},u.prototype.write=function(e,t,n,i){if(void 0===t)i="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)i=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===i&&(i="utf8")):(i=n,n=void 0)}var r=this.length-t;if((void 0===n||n>r)&&(n=r),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var a=!1;;)switch(i){case"hex":return y(this,e,t,n);case"utf8":case"utf-8":return C(this,e,t,n);case"ascii":return x(this,e,t,n);case"latin1":case"binary":return A(this,e,t,n);case"base64":return S(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return D(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),a=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var w=4096;function M(e,t,n){var i="";n=Math.min(e.length,n);for(var r=t;r<n;++r)i+=String.fromCharCode(127&e[r]);return i}function B(e,t,n){var i="";n=Math.min(e.length,n);for(var r=t;r<n;++r)i+=String.fromCharCode(e[r]);return i}function T(e,t,n){var i=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>i)&&(n=i);for(var r="",a=t;a<n;++a)r+=z(e[a]);return r}function F(e,t,n){for(var i=e.slice(t,n),r="",a=0;a<i.length;a+=2)r+=String.fromCharCode(i[a]+256*i[a+1]);return r}function I(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function P(e,t,n,i,r,a){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<a)throw new RangeError('"value" argument is out of bounds');if(n+i>e.length)throw new RangeError("Index out of range")}function _(e,t,n,i){t<0&&(t=65535+t+1);for(var r=0,a=Math.min(e.length-n,2);r<a;++r)e[n+r]=(t&255<<8*(i?r:1-r))>>>8*(i?r:1-r)}function L(e,t,n,i){t<0&&(t=4294967295+t+1);for(var r=0,a=Math.min(e.length-n,4);r<a;++r)e[n+r]=t>>>8*(i?r:3-r)&255}function R(e,t,n,i,r,a){if(n+i>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function N(e,t,n,i,a){return a||R(e,0,n,4),r.write(e,t,n,i,23,4),n+4}function G(e,t,n,i,a){return a||R(e,0,n,8),r.write(e,t,n,i,52,8),n+8}u.prototype.slice=function(e,t){var n,i=this.length;if((e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(t=void 0===t?i:~~t)<0?(t+=i)<0&&(t=0):t>i&&(t=i),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=u.prototype;else{var r=t-e;n=new u(r,void 0);for(var a=0;a<r;++a)n[a]=this[a+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||I(e,t,this.length);for(var i=this[e],r=1,a=0;++a<t&&(r*=256);)i+=this[e+a]*r;return i},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||I(e,t,this.length);for(var i=this[e+--t],r=1;t>0&&(r*=256);)i+=this[e+--t]*r;return i},u.prototype.readUInt8=function(e,t){return t||I(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||I(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||I(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||I(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||I(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||I(e,t,this.length);for(var i=this[e],r=1,a=0;++a<t&&(r*=256);)i+=this[e+a]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*t)),i},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||I(e,t,this.length);for(var i=t,r=1,a=this[e+--i];i>0&&(r*=256);)a+=this[e+--i]*r;return a>=(r*=128)&&(a-=Math.pow(2,8*t)),a},u.prototype.readInt8=function(e,t){return t||I(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||I(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||I(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||I(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||I(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||I(e,4,this.length),r.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||I(e,4,this.length),r.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||I(e,8,this.length),r.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||I(e,8,this.length),r.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,i){(e=+e,t|=0,n|=0,i)||P(this,e,t,n,Math.pow(2,8*n)-1,0);var r=1,a=0;for(this[t]=255&e;++a<n&&(r*=256);)this[t+a]=e/r&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,i){(e=+e,t|=0,n|=0,i)||P(this,e,t,n,Math.pow(2,8*n)-1,0);var r=n-1,a=1;for(this[t+r]=255&e;--r>=0&&(a*=256);)this[t+r]=e/a&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):_(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):_(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):L(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):L(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,i){if(e=+e,t|=0,!i){var r=Math.pow(2,8*n-1);P(this,e,t,n,r-1,-r)}var a=0,o=1,s=0;for(this[t]=255&e;++a<n&&(o*=256);)e<0&&0===s&&0!==this[t+a-1]&&(s=1),this[t+a]=(e/o>>0)-s&255;return t+n},u.prototype.writeIntBE=function(e,t,n,i){if(e=+e,t|=0,!i){var r=Math.pow(2,8*n-1);P(this,e,t,n,r-1,-r)}var a=n-1,o=1,s=0;for(this[t+a]=255&e;--a>=0&&(o*=256);)e<0&&0===s&&0!==this[t+a+1]&&(s=1),this[t+a]=(e/o>>0)-s&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):_(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):_(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):L(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||P(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):L(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return N(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return N(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return G(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return G(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,i){if(n||(n=0),i||0===i||(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-t+n);var r,a=i-n;if(this===e&&n<t&&t<i)for(r=a-1;r>=0;--r)e[r+t]=this[r+n];else if(a<1e3||!u.TYPED_ARRAY_SUPPORT)for(r=0;r<a;++r)e[r+t]=this[r+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+a),t);return a},u.prototype.fill=function(e,t,n,i){if("string"==typeof e){if("string"==typeof t?(i=t,t=0,n=this.length):"string"==typeof n&&(i=n,n=this.length),1===e.length){var r=e.charCodeAt(0);r<256&&(e=r)}if(void 0!==i&&"string"!=typeof i)throw new TypeError("encoding must be a string");if("string"==typeof i&&!u.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var a;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(a=t;a<n;++a)this[a]=e;else{var o=u.isBuffer(e)?e:U(new u(e,i).toString()),s=o.length;for(a=0;a<n-t;++a)this[a+t]=o[a%s]}return this};var O=/[^+\/0-9A-Za-z-_]/g;function z(e){return e<16?"0"+e.toString(16):e.toString(16)}function U(e,t){var n;t=t||1/0;for(var i=e.length,r=null,a=[],o=0;o<i;++o){if((n=e.charCodeAt(o))>55295&&n<57344){if(!r){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(o+1===i){(t-=3)>-1&&a.push(239,191,189);continue}r=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),r=n;continue}n=65536+(r-55296<<10|n-56320)}else r&&(t-=3)>-1&&a.push(239,191,189);if(r=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function H(e){return i.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(O,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function J(e,t,n,i){for(var r=0;r<i&&!(r+n>=t.length||r>=e.length);++r)t[r+n]=e[r];return r}}).call(this,n(10))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){var i;!function(){var r,a=n(12),o=n(13),s=n(38),u=new(n(40)),c={},l=[];function h(){return r||(r=new(window.X2JS||window.x2js)),r}function p(e,t){var n=!1;return t.openapi?e.responses&&Object.keys(e.responses).forEach((function(e){e.content&&Object.keys(e.content).forEach((function(e){e.indexOf("xml")>-1&&(n=!0)}))})):(e.produces||t.produces)&&(n=JSON.stringify(e.produces||t.produces).indexOf("xml")>-1),n}function m(e,t){var n=!1;return t.openapi?e.responses&&Object.keys(e.responses).forEach((function(e){e.content&&Object.keys(e.content).forEach((function(e){e.indexOf("json")>-1&&(n=!0)}))})):(e.produces||t.produces)&&(n=JSON.stringify(e.produces||t.produces).indexOf("json")>-1),n}function d(e,t,n){var i={string:"",number:0,integer:0,boolean:!0,date:"1970-01-01",dateTime:"1970-01-01T00:00:00Z","date-time":"1970-01-01T00:00:00Z",password:"",binary:"00000000",byte:0};if(t.type||(t.type="string"),!0===n)return void 0!==i[t.type]?"string"===t.type?!t.format||"date"!==t.format&&"date-time"!==t.format&&"password"!==t.format&&"binary"!==t.format&&"byte"!==t.format?i[t.type]:i[t.format]:i[t.type]:null;if(t.enum&&t.enum.length>0){var r=t.enum.length-1,a=u.natural({min:0,max:r});return t.enum[a]}if("integer"===t.type){var o=100,s=1;return e&&(e.toLowerCase().indexOf("quantity")>-1||e.toLowerCase().indexOf("number")>-1)?(t.maximum&&t.maximum>0&&(o=t.exclusiveMaximum?t.maximum:t.maximum-1),t.minimum&&t.minimum>=0&&(s=t.exclusiveMinimum?t.minimum:t.minimum+1),s>o&&(t.maximum?s=o-1:o=s+1),u.integer({min:s,max:o})):(o=99999999,s=1e7,t.maximum&&t.maximum>0&&(o=t.exclusiveMaximum?t.maximum:t.maximum-1),t.minimum&&t.minimum>=0&&(s=t.exclusiveMinimum?t.minimum:t.minimum+1),s>o&&(t.maximum?s=o-1:o=s+1),u.natural({min:s,max:o}))}if("boolean"===t.type)return u.bool();if("number"===t.type)return e&&(e.toLowerCase().indexOf("price")>-1||e.toLowerCase().indexOf("cost")>-1)?u.floating({min:0,max:100,fixed:2}):u.floating({min:0,max:100,fixed:8});if("object"===t.type)return{id:u.natural()};if(!t.format||"date"!==t.format&&"date-time"!==t.format){if(t.format&&"password"===t.format)return"Passw0rd";if(t.format&&"binary"===t.format)return Math.floor(126*Math.random()+1).toString(2);if(t.format&&"byte"===t.format)return Math.floor(7*Math.random()+1).toString(16);if(t.format&&"uri"===t.format)return u.url();if(e){var c,l,h=e.toLowerCase();if(h.indexOf("ip")>-1&&h.indexOf("address")>-1)return u.ip();if(h.indexOf("phonetic")>-1)return u.name();if(h.indexOf("phone")>-1)return u.phone();if(h.indexOf("areacode")>-1)return u.areacode();if(h.indexOf("post")>-1)return u.postal();if(h.indexOf("city")>-1)return u.city();if(h.indexOf("province")>-1)return u.province();if(h.indexOf("street")>-1)return u.street();if(h.indexOf("state")>-1)return u.state();if(h.indexOf("accept")>-1&&h.indexOf("encoding")>-1)return"gzip";if(h.indexOf("accept")>-1&&h.indexOf("charset")>-1)return"utf-8";if(h.indexOf("user")>-1&&h.indexOf("agent")>-1)return"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36";if(h.indexOf("content")>-1&&h.indexOf("type")>-1)return"application/json";if(h.indexOf("countrycode")>-1||h.indexOf("language")>-1)return u.country();if(h.indexOf("country")>-1)return t.description&&t.description.toLowerCase().indexOf("code")>-1?u.country():u.country({full:!0});if(h.indexOf("zip")>-1)return u.zip();if(h.indexOf("address")>-1)return u.address();if(h.indexOf("coordinate")>-1)return u.coordinates();if(h.indexOf("latitude")>-1||"lat"===h)return u.latitude().toString();if(h.indexOf("longitude")>-1||"lon"===h)return u.longitude().toString();if(h.indexOf("geo")>-1&&h.indexOf("location")>-1)return"GEO:"+u.latitude().toString()+","+u.longitude().toString();if(h.indexOf("cc")>-1||h.indexOf("credit")>-1)return u.cc();if(h.indexOf("expiry")>-1)return u.exp();if(h.indexOf("currency")>-1)return u.currency().code;if(h.indexOf("iban")>-1)return"DE89 3704 0044 0532 0130 00";if(h.indexOf("color")>-1||h.indexOf("colour")>-1)return u.color({format:"hex"});if(h.indexOf("domain")>-1||h.indexOf("host")>-1)return u.domain();if(h.indexOf("mail")>-1)return u.email();if(h.indexOf("url")>-1||h.indexOf("redirect")>-1&&h.indexOf("uri")>-1)return u.url();if(h.indexOf("twitter")>-1)return u.twitter();if(h.indexOf("birth")>-1||h.indexOf("bday")>-1)return u.birthday({string:!0});if(h.indexOf("age")>-1)return u.age().toString();if(h.indexOf("first")>-1||h.indexOf("fname")>-1||h.indexOf("user")>-1)return u.first();if(h.indexOf("last")>-1||h.indexOf("lname")>-1)return u.last();if(h.indexOf("gender")>-1||h.indexOf("sex")>-1)return u.gender();if(h.indexOf("prefix")>-1)return u.prefix();if(h.indexOf("ssn")>-1||h.indexOf("social")>-1)return u.ssn();if(h.indexOf("token")>-1)return u.apple_token();if(h.toLowerCase().indexOf("price")>-1||h.toLowerCase().indexOf("cost")>-1||h.indexOf("value")>-1)return u.floating({min:0,max:100,fixed:2}).toString();if(h.indexOf("number")>-1||h.indexOf("amount")>-1)return u.natural().toString();if(h.indexOf("temp")>-1)return u.natural({min:0,max:100})+" C";if(h.indexOf("pressure")>-1)return u.natural({min:500,max:1500})+" hPa";if(h.indexOf("humidity")>-1)return u.natural({min:0,max:100})+" %";if(h.indexOf("year")>-1)return u.year({min:1900,max:2100}).toString();if(h.indexOf("month")>-1)return u.month();if(h.indexOf("date")>-1)return u.date({string:!0});if(h.indexOf("timestamp")>-1)return u.timestamp().toString();if(h.indexOf("time")>-1)return(c=u.hour({twentyfour:!0}).toString())<10&&(c=0+c),(l=u.minute().toString())<10&&(l="0"+l),c+":"+l;if(h.indexOf("hour")>-1)return(c=u.hour({twentyfour:!0}).toString())<10&&(c=0+c),c;if(h.indexOf("minute")>-1)return(l=u.minute().toString())<10&&(l="0"+l),l.toString();if(h.indexOf("sunrise")>-1)return(c=u.natural({min:5,max:10}))<10&&(c=0+c),(l=u.minute().toString())<10&&(l="0"+l),c+":"+l;if(h.indexOf("sunset")>-1)return(l=u.minute().toString())<10&&(l="0"+l),u.natural({min:17,max:22})+":"+l;if(h.indexOf("string")>-1)return u.string();if(h.indexOf("desc")>-1||h.indexOf("summary")>-1)return u.paragraph({sentences:1});if(h.indexOf("message")>-1)return u.sentence();if(h.indexOf("name")>-1)return u.name();if(h.indexOf("ip")>-1)return u.ip();if("tel"===h||h.indexOf("fax")>-1)return u.phone();if("version"===h)return u.natural({min:1,max:9}).toString()+"."+u.natural({min:1,max:9}).toString()+"."+u.natural({min:1,max:9}).toString();if("identity_provider"===h)return u.word().toString()+"-idp";if("x-client-certificate"===h||h.indexOf("certificate")>-1)return"-----BEGIN CERTIFICATE-----xxxEXAMPLExxxxxxxxxEXAMPLExxxxxxxxxxEXAMPLExxxxxxxxxxEXAMPLExxxxxxxEXAMPLExxxxxxxxxEXAMPLExxxxxxxxxxEXAMPLExxxxxxxxxxEXAMPLExxxxxxxEXAMPLExxxxxxxxxEXAMPLExxxxxxxxxxEXAMPLExxxxxxxxxxEXAMPLExxxxxxxEXAMPLExxxxxxxxxEXAMPLExxxxxxxxxxEXAMPLExxxxxxxxxxEXAMPLExxxx-----END CERTIFICATE-----";if(h.indexOf("id")>-1)return u.natural().toString();var p=16,m=4;t.maxLength&&t.maxLength>0&&t.maxLength<=16&&(p=t.maxLength),t.minLength&&t.minLength>=0&&(m=t.minLength),m>p&&(t.maxLength?m=p-1:p=m+1);var d=u.natural({min:m,max:p});return d<1&&(d=1),u.word({length:d})}var f=8,g=4;t.maxLength&&t.maxLength>0&&(f=t.maxLength),t.minLength&&t.minLength>=0&&(g=t.minLength),g>f&&(t.maxLength?g=f-1:f=g+1);var b=u.natural({min:g,max:f});return b<1&&(b=1),u.word({length:b})}var v=new Date(2e3,0,1),y=new Date,C=new Date(v.getTime()+Math.random()*(y.getTime()-v.getTime()));return"date-time"===t.format?C.toISOString():C.toDateString().slice(0,10)}function f(e,t,n){if(e&&e.$ref&&t){var i=e.$ref;0===i.indexOf("#")&&(i=i.substring(1));var r=a.get(t,i);if(!r)return e.type="string",void(e.enum=["missing reference: "+e.$ref]);r.schema&&r.schema.$ref&&f(r.schema,t,n),s.extend(e,r)}}function g(e,t,n){var i;if(e)return(e=JSON.parse(JSON.stringify(e))).$ref&&(n&&n[e.$ref]?(i=JSON.parse(JSON.stringify(n[e.$ref])),s.extend(e,i)):f(e,t,n)),"array"===e.type&&e.items&&(e.items.$ref||e.items[0]&&e.items[0].$ref)&&(n&&n[e.items[0].$ref]?(i=JSON.parse(JSON.stringify(n[e.items[0].$ref])),s.extend(e.items,i)):n&&n[e.items.$ref]?(i=JSON.parse(JSON.stringify(n[e.items.$ref])),s.extend(e.items,i)):e.items[0]&&e.items[0].$ref?f(e.items[0],t,n):f(e.items,t,n)),e}function b(e,t,n){if(e){if(e.$ref)if(n&&n[e.$ref])r=JSON.parse(JSON.stringify(n[e.$ref])),s.extend(schema,r);else{var i=e.$ref.replace("#/parameters/","");if(t.parameters&&t.parameters[i]){var r=JSON.parse(JSON.stringify(t.parameters[i]));s.extend(e,r)}}return e}}function v(e,t,n){var i=null;return e.$ref&&function(e){if(!e)return!0;return!(l.indexOf(e)>-1)&&(l.push(e),!0)}(e.$ref)&&(i=g(e,t,n)),i}function y(e){e&&l[l.length-1]===e&&l.pop()}function C(e,t,n,i,r,a){var o={},s=void 0,u=void 0;return e&&(t.$ref&&(t=g(t,r,a)),t.items&&t.items[0]&&t.items[0].$ref&&(t=g(t.items[0],r,a)),t.items&&t.items.$ref&&(t=g(t.items,r,a)),t.xml&&(s=t.xml.prefix,u=t.xml.namespace)),void 0===s&&(s=n,u=i),o.prefix=s,o.namespace=u,o}function x(e,t,n,i,r,a,o,u,c){var l=null,h=e.example,p=e.examples;if(e.schema&&(e=e.schema),e.$ref){if(l=e.$ref,null===(e=v(e,t,c)))return{circular_reference:l};e.schema&&(e=e.schema)}(h||p)&&(delete e.example,delete e.examples),h&&(e.example=h),p&&(e.examples=p),null==n&&(n=!1),null==u&&(u=0),u++;var m={};if(!e.type&&e.properties&&(e.type="object"),u>=9)return y(e.$ref),"ERROR_MAXDEPTH";if("object"===e.type)void 0!==e.default?m=e.default:void 0!==e.example?m=e.example:void 0!==e["x-example"]?m=e["x-example"]:void 0!==e.examples?m=e.examples[Object.keys(e.examples)[0]]:e.properties?Object.keys(e.properties).forEach((function(l){var h=e.properties[l];if(h.$ref&&(h=g(h,t,c)),h.items&&h.items[0]&&h.items[0].$ref&&(h=g(h.items[0],t,c)),i&&h.xml&&!0===h.xml.attribute){var p=d(l,h,n);m["_"+l]=p}else if(r&&(m.__prefix=r,o[r]=a),void 0!==h.example)m[l]=h.example;else if(void 0!==h["x-example"])m[l]=h["x-example"];else if(h.allOf){var f={};h.allOf.forEach((function(e){var n=C(i,e,r,a,t,c);s.extend(f,x(e,t,!1,i,n.prefix,n.namespace,o,u,c))})),m[l]=f}else if("object"===h.type||"array"===h.type||!h.type&&h.properties){h.type||(h.type="object");var b=C(i,h,r,a,t,c);m[l]=x(h,t,n,i,b.prefix,b.namespace,o,u,c)}else{b=C(i,h,r,a,t,c);if(void 0!==h.default)i&&b.prefix?(m[l]={__prefix:b.prefix,__text:h.default},o[b.prefix]=b.namespace):m[l]=h.default;else if(i&&h.xml&&h.xml.name){p=d(h.xml.name,h,n);m[h.xml.name]=p}else i&&b.prefix?(m[l]={__prefix:b.prefix,__text:d(l,h,n)},o[b.prefix]=b.namespace):m[l]=d(l,h,n)}})):m=d("",e,n);else if("array"===e.type){if(void 0!==e.default)m=e.default;else if(void 0!==e.example)m=e.example;else if(void 0!==e["x-example"])m=e["x-example"];else if(void 0!==e.examples)m=e.examples[Object.keys(e.examples)];else{var f,b,A=[];if(!e.items)return A;if((f=e.items[0]?e.items[0]:e.items).$ref&&(b=f.$ref,null===(f=v(f,t,c))))return{circular_reference:b};if(f.type&&"array"===f.type){var S=C(i,f,r,a,t,c);m=x(f,t,n,i,S.prefix,S.namespace,o,u,c)}else if(f.type&&"object"===f.type&&f.example)m=f.example;else if(f.allOf){var D={};f.allOf.forEach((function(e){var n=C(i,e,r,a,t,c);s.extend(D,x(e,t,!1,i,n.prefix,n.namespace,o,u,c))})),m=D}else f.properties?Object.keys(f.properties).forEach((function(e){var l=f.properties[e];if(l.$ref&&(l=g(l,t,c)),l.items&&l.items[0]&&l.items[0].$ref&&(l=g(l,t,c)),l.items&&l.items.$ref&&(l=g(l,t,c)),i&&l.xml&&!0===l.xml.attribute){var h=d(e,l,n);m["_"+e]=h}else if(i&&l.xml&&l.xml.name){h=d(l.xml.name,l,n);m[l.xml.name]=h}else if(r&&(m.__prefix=r,o[r]=a),void 0!==l.example)m[e]=l.example;else if(void 0!==l["x-example"])m[e]=l["x-example"];else if(l.allOf){var p={};l.allOf.forEach((function(e){var n=C(i,e,r,a,t,c);s.extend(p,x(e,t,!1,i,n.prefix,n.namespace,o,u,c))})),m[e]=p}else if("object"===l.type||"array"===l.type||!l.type&&l.properties){l.type||(l.type="object");var b=C(i,l,r,a,t,c);m[e]=x(l,t,n,i,b.prefix,b.namespace,o,u,c)}else{b=C(i,l,r,a,t,c);void 0!==l.default?i&&b.prefix?(m[e]={__prefix:b.prefix,__text:l.default},o[b.prefix]=b.namespace):m[e]=l.default:i&&b.prefix?(m[e]={__prefix:b.prefix,__text:d(e,l,n)},o[b.prefix]=b.namespace):m[e]=d(e,l,n)}})):(S=C(i,e,r,a,t,c),void 0!==f.default?i&&S.prefix?(m={__prefix:S.prefix,__text:f.default},o[S.prefix]=S.namespace):m=f.default:void 0!==f.example?m=f.example:void 0!==f["x-example"]?m=f["x-example"]:i&&S.prefix?(m={__prefix:S.prefix,__text:d("",f,n)},o[S.prefix]=S.namespace):m=d("",f,n));if(A.push(m),m=A,e.collectionFormat)switch(e.collectionFormat){case"ssv":m=A.join(" ");break;case"tsv":m=A.join("\t");break;case"pipes":m=A.join("|");break;case"multi":m=A.join("&");break;case"csv":default:m=A.join()}}y(b)}else if(void 0!==e.default)m=e.default;else if(void 0!==e.example)m=e.example;else if(void 0!==e["x-example"])m=e["x-example"];else if(void 0!==e.examples)m=e.examples[Object.keys(e.examples)[0]];else if("string"===e.type||"integer"===e.type||"number"===e.type||"boolean"===e.type)S=C(i,e,r,a,t,c),i&&S.prefix?(m={__prefix:S.prefix,__text:d(e.name,e,n)},o[S.prefix]=S.namespace):m=d(e.name,e,n);else{if("file"===e.type)return null;if(e.allOf){D={};e.allOf.forEach((function(e){var n=C(i,e,r,a,t,c);s.extend(D,x(e,t,!1,i,n.prefix,n.namespace,o,u,c))})),m=D}else if(e.anyOf)m=x(e.anyOf[0],t,!1,i,r,a,o,u,c);else{if(!e.oneOf)throw new TypeError("schema should be a basic type, an object, an array, or an allOf / anyOf / oneOf.");m=x(e.oneOf[0],t,!1,i,r,a,o,u,c)}}return y(l),m}function A(e,t){for(var n in e){var i=e[n];for(var r in t){var a=t[r];attrName="_xmlns:"+r,i[attrName]=a}}}function S(e,t,n,i,r){t.content&&(i&&t.content[i]?t=t.content[i]:Object.keys(t.content).length>0&&(i=Object.keys(t.content)[0],t=t.content[i]));var a={},u=x(t,e,!1,n=i.indexOf("xml")>-1,"","",a,0,r);if(n&&A(u,a),u){if(u.$ref){var c=u.$ref;null===(u=v(u,e,r))&&(u={circular_reference:c}),u.value&&(u=u.value)}return n?(u=window.vkbeautify.xml(h().js2xml(u)),u=s.unescape(u)):u="application/yaml"===i?o.safeDump(u,{lineWidth:-1}):JSON.stringify(u,null,2),u}}c.generateEventCodeSnippets=function(e,t,n,i){var r={};return i.forEach((function(e){r[e+"Content"]=function(e,t,n,i){var r="REPLACE_USERID",a="REPLACE_PASSWORD";switch(i){case"kafkacat":return'kafkacat -C \\\n         -b "'+n.bootstrapServers.toString()+'" \\\n         -X "api.version.request=true" \\\n         -X "security.protocol=sasl_ssl" \\\n         -X "ssl.ca.location=rootcerts.pem" \\\n         -X "sasl.mechanisms=PLAIN" \\\n         -X "sasl.username='+r+'" \\\n         -X "sasl.password='+a+'" \\\n         -G REPLACE_KAFKA_GROUP_NAME '+t;case"python":return"from confluent_kafka import Consumer\n\n# For more information about the Python Kafka Client, visit:\n#     https://github.com/confluentinc/confluent-kafka-python\nconsumer_opts = {\n    'client.id': 'kafka-python-console-sample-consumer',\n    'group.id': 'kafka-python-console-sample-group',\n    'bootstrap.servers': '"+n.bootstrapServers.toString()+"',\n    'security.protocol': 'SASL_SSL',\n    'ssl.ca.location': 'rootcerts.pem',\n    'sasl.mechanisms': 'PLAIN',\n    'sasl.username': '"+r+"',\n    'sasl.password': '"+a+"',\n    'api.version.request': True\n}\n\nconsumer = Consumer(consumer_opts)\nconsumer.subscribe(['"+t+"'])\n\nwhile True:\n    msg = consumer.poll(1)\n    if msg is not None and msg.error() is None:\n        print('Message consumed: topic={0}, partition={1}, offset={2}, key={3}, value={4}'.format(\n                msg.topic(),\n                msg.partition(),\n                msg.offset(),\n                msg.key().decode('utf-8'),\n                msg.value().decode('utf-8')));\n";case"java":return'import java.util.Arrays;\nimport java.util.Properties;\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\n\n// For more information about the Java Kafka API, visit:\n//     https://kafka.apache.org/0100/javadoc/index.html?org/apache/kafka/clients/consumer/KafkaConsumer.html\npublic final class Consumer {\n\n    // put this in jaas.conf \n    //\n    // KafkaClient {\n    //     org.apache.kafka.common.security.plain.PlainLoginModule required\n    //     serviceName="kafka"\n    //     username="'+r+'"\n    //     password="'+a+'";\n    // };\n\n    public static void main(final String[] args) {\n\n        final Properties props = new Properties();\n        props.put("key.deserializer", "org.apache.kafka.common.serialization.StringDeserializer");\n        props.put("value.deserializer", "org.apache.kafka.common.serialization.StringDeserializer");\n        props.put("client.id", "kafka-java-console-sample-consumer");\n        props.put("group.id", "kafka-java-console-sample-group");\n        props.put("security.protocol", "SASL_SSL");\n        props.put("sasl.mechanism", "PLAIN");\n        props.put("ssl.protocol", "TLSv1.2");\n        props.put("ssl.enabled.protocols", "TLSv1.2");\n        props.put("ssl.endpoint.identification.algorithm", "HTTPS");\n        props.put("auto.offset.reset", "latest");\n        props.put("bootstrap.servers", "'+n.bootstrapServers.toString()+'");\n\n        final KafkaConsumer<String, String> consumer = new KafkaConsumer<>(props);\n        consumer.subscribe(Arrays.asList("'+t+'"));\n\n        while (true) {\n            final ConsumerRecords<String, String> records = consumer.poll(1000);\n\n            for (final ConsumerRecord<String, String> record : records)\n                System.out.println(record.value());\n        }\n    }\n}';case"node":return"var Kafka = require('node-rdkafka');\n\n// For more information about the Node Kafka Client, visit:\n//     https://github.com/Blizzard/node-rdkafka\nvar driver_options = {\n    'metadata.broker.list': '"+n.bootstrapServers.toString()+"',\n    'security.protocol': 'sasl_ssl',\n    'ssl.ca.location': 'rootcerts.pem',\n    'sasl.mechanisms': 'PLAIN',\n    'sasl.username': '"+r+"',\n    'sasl.password': '"+a+"',\n    'api.version.request': true,\n    'socket.timeout.ms': 10000,\n    'client.id': 'sample-consumer',\n    'group.id': 'sample-group'\n};\n\nvar consumer = new Kafka.KafkaConsumer(driver_options);\n\nconsumer.on('ready', function() {\n    consumer.subscribe(['"+t+"']);\n    consumer.consume();\n});\n\nconsumer.on('data', function(m) {\n    console.log(m.value.toString());\n});\n\nconsumer.connect();";default:return"Unsupported Language"}}(0,t,n,e)})),r},c.generateCodeSnippets=function(e,t,n,i,r,a,o,s,u,l,h){if(a||(a="REPLACE_THIS_KEY"),o||(o="REPLACE_THIS_KEY"),l||(e.endpoint?l=e.endpoint:e["x-ibm-configuration"]&&e["x-ibm-configuration"].servers&&e["x-ibm-configuration"].servers[0]&&e["x-ibm-configuration"].servers[0].url?l=e["x-ibm-configuration"].servers[0].url:e["x-ibm-endpoints"]&&e["x-ibm-endpoints"][0]&&e["x-ibm-endpoints"][0].endpointUrl?(l=e["x-ibm-endpoints"][0].endpointUrl,l+=e.basePath?e.basePath:""):e.openapi&&e.servers&&e.servers[0]&&e.servers[0].url?l=e.servers[0].url:(l="://"+e.host,l=e.schemes?e.schemes[0]+l:"https"+l,l+=e.basePath?e.basePath:"")),"object"==typeof l){for(var p in l)var m=l[p];l=m}p=(l=l.replace(/\/$/,""))+t;var f=[],g=[],b=null;h||(h={}),r&&r.requiresClientId&&("query"==r.clientIdLocation?r.clientIdName?g.push({name:r.clientIdName,value:a}):g.push({name:"client_id",value:a}):"header"==r.clientIdLocation&&(r.clientIdName?f.push({name:r.clientIdName,value:a}):f.push({name:"X-IBM-Client-Id",value:a}))),r&&r.requiresClientSecret&&("query"==r.clientSecretLocation?r.clientSecretName?g.push({name:r.clientSecretName,value:o}):g.push({name:"client_secret",value:o}):"header"==r.clientSecretLocation&&(r.clientSecretName?f.push({name:r.clientSecretName,value:o}):f.push({name:"X-IBM-Client-Secret",value:o}))),r&&r.requiresBasicAuth&&(h.basicAuth?f.push({name:"Authorization",value:"Basic "+h.basicAuth}):f.push({name:"Authorization",value:"Basic REPLACE_BASIC_AUTH"})),r&&r.requiresOauth&&(h.oauthToken?f.push({name:"Authorization",value:"Bearer "+h.oauthToken}):f.push({name:"Authorization",value:"Bearer REPLACE_BEARER_TOKEN"})),r&&r.requiresHttpBearerToken&&(r.httpBearerToken?f.push({name:"Authorization",value:"Bearer "+r.httpBearerToken}):f.push({name:"Authorization",value:"Bearer REPLACE_BEARER_TOKEN"}));var v=r.parametersArray;v||(v=[]);var y=v.filter((function(e){return"path"==e.in}));y.length>0&&y.forEach((function(e){var t="REPLACE_"+e.name.toUpperCase();h[e.name]&&(t=h[e.name]),e.default?t=e.default.toString():e["x-example"]&&(t=e["x-example"].toString()),p=p.replace("{"+e.name+"}",t)}));var C=v.filter((function(e){return"query"==e.in}));if(C.length>0&&C.forEach((function(e){var t="REPLACE_THIS_VALUE";h[e.name]&&(t=h[e.name]),e.default?t=e.default.toString():e["x-example"]&&(t=e["x-example"].toString()),g.push({name:e.name,value:t})})),r.externalApiKeys&&0!==Object.keys(r.externalApiKeys).length)for(var x in r.externalApiKeys){var A=r.externalApiKeys[x],S="REPLACE_THIS_VALUE";h[A.name]&&(S=h[A.name]),"query"==A.in?g.push({name:A.name,value:S}):"header"==A.in&&f.push({name:A.name,value:S})}if(void 0!==r.soapAction){var D="/"+i.operationId;-1!==p.indexOf(D,this.length-D.length)&&(p=p.substring(0,p.length-D.length))}void 0!==r.soapAction&&f.push({name:"SOAPAction",value:r.soapAction});var E=function(e,t){if(!e.consumes&&!t.consumes)return"application/json";var n=e.consumes||t.consumes,i=null,r=null;return n.forEach((function(e){e.indexOf("json")>-1?i=e:e.indexOf("xml")>-1&&(r=e)})),i||(r||n[0])}(i,e),k=function(e,t){if(!e.produces&&!t.produces)return"application/json";var n=e.produces||t.produces,i=null,r=null;return n.forEach((function(e){e.indexOf("json")>-1?i=e:e.indexOf("xml")>-1&&(r=e)})),i||(r||n[0])}(i,e);r.contenttype&&(E=r.contenttype),r.accept&&(k=r.accept);var w=v.filter((function(e){return"header"==e.in}));w.length>0&&w.forEach((function(e){var t="REPLACE_THIS_VALUE";h[e.name]&&(t=h[e.name]),e.default?t=e.default.toString():e["x-example"]&&(t=e["x-example"].toString()),f.push({name:e.name,value:t})}));var M=v.filter((function(e){return"body"==e.in})),B=v.filter((function(e){return"formData"==e.in}));if(M.length>0)h[M[0].name]?b=h[M[0].name]:"string"==typeof(b=c.generateExampleParameter(e,t,n,M[0],E,!0,u))&&(b=b.replace(/\[\]/g,"{}"));else if(B.length>0){var T=[],F=[];B.forEach((function(e){var t=h[e.name];t||(t=d(e.name,e,!1)),T.push(e.name+": "+t),F.push({name:e.name,value:t})})),b=T.join("\n")}E&&b&&f.push({name:"content-type",value:E}),k&&f.push({name:"accept",value:k});var I={method:n.toUpperCase(),url:p,headers:f,queryString:g};b&&(I.postData={mimeType:E,text:b},B.length>0&&(I.postData.params=F));var P={},_=0;if(e.host){var L=e.host.match(/(\$\([^\)]*\))/g);if(L){for(var R=I.url,N=L.length,G=0;G<N;G++){var O="azazaz090909-"+(_+=1);P[O]=L[G],R=R.replace(L[G],O)}I.url=R}}var z=function(e){var t=e;if(_>0)for(var n in P){var i=P[n];t=t.replace(n,i)}return t},U=new window.HTTPSnippetInstance(I);s||(s=["curl","ruby","python","php","java","node","go","swift","c","csharp"]);var H={};return s.forEach((function(e){"curl"===e?H.curlContent=z(U.convert("shell","curl")):"httpie"===e?H.curlContent=z(U.convert("shell","httpie")):"wget"===e?H.curlContent=z(U.convert("shell","wget")):"java"===e?H.javaContent=z(U.convert("java","okhttp")):"node"===e?H.nodeContent=z(U.convert("node","request")):H[e+"Content"]=z(U.convert(e))})),H},c.generateResponse=function(e,t,n,i,r,a){var o=e.paths[t][n];return S(e,o.responses[i],p(o,e)&&!m(o,e),r,a)},c.generateOAI3Response=function(e,t,n,i,r,a){var o=e.paths[t][n];return S(e,i,p(o,e)&&!m(o,e),r,a)},c.generateEventResponse=function(e,t,n,i){var r;return Object.keys(e).forEach((function(t){"x-ibm-events"===t.toLowerCase()&&(r=e[t])})),S(e,r[t],!1,n,i)},c.generateEventExampleResponse=function(e,t){var n={};return Object.keys(e).forEach((function(i){if("x-ibm-events"===i.toLowerCase()){var r=Object.keys(e[i][t].content),a=x(e[i][t].content[r[0]],e,!1,!1,"","",{},0);n=JSON.stringify(a,null,2)}})),n},c.generateExampleResponse=function(e,t,n,i){var r,a=e.paths[t][n],o=p(a,e)&&!m(a,e),u={};if(a.responses[200]&&(a.responses[200].schema||a.responses[200].examples)?(r=x(a.responses[200],e,!1,o,"","",u,0,i),o&&A(r,u)):a.responses[201]&&(a.responses[201].schema||a.responses[201].examples)?(r=x(a.responses[201],e,!1,o,"","",u,0,i),o&&A(r,u)):a.responses[202]&&(a.responses[202].schema||a.responses[202].examples)?(r=x(a.responses[202],e,!1,o,"","",u,0,i),o&&A(r,u)):a.responses.default&&(a.responses.default.schema||a.responses.default.examples)&&(r=x(a.responses.default,e,!1,o,"","",u,0,i),o&&A(r,u)),r)return o?(r=window.vkbeautify.xml(h().js2xml(r)),r=s.unescape(r)):r=JSON.stringify(r,null,2),r},c.resetReferencePath=function(){l=[]},c.generateExampleParameter=function(e,t,n,i,r,a,u){var c=e.paths[t][n];if(!i){var l=[];e.paths[t][n].parameters&&(l=l.concat(JSON.parse(JSON.stringify(e.paths[t][n].parameters)))),l.length<1&&e.paths[t].parameters&&(l=l.concat(JSON.parse(JSON.stringify(e.paths[t].parameters)))),l.forEach((function(t){t.$ref&&(t=b(t,e,u))}));var p=l.filter((function(e){return e.name==i.name}));if(1!==p.length)return;i=p[0]}var m=function(e,t){return!(!e.consumes&&!t.consumes)&&JSON.stringify(e.consumes||t.consumes).indexOf("xml")>-1}(c,e)&&!function(e,t){return!e.consumes&&!t.consumes||JSON.stringify(e.consumes||t.consumes).indexOf("json")>-1}(c,e),d=!1;if(r&&(r.indexOf("json")>=0?m=!1:r.indexOf("xml")>=0&&(m=!0),d=r.indexOf("yaml")>=0),e.openapi){var f=null;if(i.example?f=i.example:i.examples?f=i.examples[Object.keys(i.examples)[0]]:i["x-example"]?f=i["x-example"]:i.schema&&i.schema.examples?f=i.schema.examples[Object.keys(i.schema.examples)[0]]:i.schema&&i.schema.example?f=i.schema.example:i.schema&&i.schema["x-example"]&&(f=i.schema["x-example"]),f){if(f.$ref){var y=f.$ref;null===(f=v(f,e,u))&&(f={circular_reference:y})}return f.value&&(f=f.value),"body"!=i.in&&"object"!=typeof f||(f=a?d?o.safeDump(f,{lineWidth:-1}):JSON.stringify(f):d?o.safeDump(f,{lineWidth:-1}):JSON.stringify(f,null,2)),f}}var C={},S=x(i,e,!1,m,"","",C,0,u);if(m)if(i.schema){var D=i.schema;if(D.example)return D.example;var E="",k=null;if(D.$ref&&(k=D.$ref,D=g(D,e,u)),(D.items&&D.items[0]&&D.items[0].$ref||D.items&&D.items.$ref)&&(D=g(D,e,u)),D.xml&&D.xml.name)E=D.xml.name;else if(!D.properties||!D.properties.Envelope)if(k){var w=k.lastIndexOf("/");E=k.substr(w+1)}else E=i.name;if(E){var M={};M[E]=S,A(M,C),S=h().js2xml(M),a||(S=window.vkbeautify.xml(S),S=s.unescape(S))}else A(S,C),S=h().js2xml(S),a||(S=window.vkbeautify.xml(S),S=s.unescape(S))}else A(S,C),S=h().js2xml(S),a||(S=window.vkbeautify.xml(S),S=s.unescape(S));else"body"!=i.in&&"object"!=typeof S||(S=a?d?o.safeDump(S,{lineWidth:-1}):JSON.stringify(S):d?o.safeDump(S,{lineWidth:-1}):JSON.stringify(S,null,2));return S},e.exports&&(t=e.exports=c),t.exampleGen=c,void 0===(i=function(){return c}.apply(t,[]))||(e.exports=i),"object"==typeof window&&"object"==typeof window.document&&(window.exampleGenerator=c)}()},function(e,t){var n=/~/,i=/~[01]/g;function r(e){switch(e){case"~1":return"/";case"~0":return"~"}throw new Error("Invalid tilde escape: "+e)}function a(e){return n.test(e)?e.replace(i,r):e}function o(e){if("string"==typeof e){if(""===(e=e.split("/"))[0])return e;throw new Error("Invalid JSON pointer.")}if(Array.isArray(e))return e;throw new Error("Invalid JSON pointer.")}function s(e,t){if("object"!=typeof e)throw new Error("Invalid input object.");var n=(t=o(t)).length;if(1===n)return e;for(var i=1;i<n;){if(e=e[a(t[i++])],n===i)return e;if("object"!=typeof e)return}}function u(e,t,n){if("object"!=typeof e)throw new Error("Invalid input object.");if(0===(t=o(t)).length)throw new Error("Invalid JSON pointer for set.");return function(e,t,n){for(var i,r,o=1,s=t.length;o<s&&(i=a(t[o++]),r=s>o,void 0===e[i]&&(Array.isArray(e)&&"-"===i&&(i=e.length),r&&(""!==t[o]&&t[o]<1/0||"-"===t[o]?e[i]=[]:e[i]={})),r);)e=e[i];var u=e[i];return void 0===n?delete e[i]:e[i]=n,u}(e,t,n)}t.get=s,t.set=u,t.compile=function(e){var t=o(e);return{get:function(e){return s(e,t)},set:function(e,n){return u(e,t,n)}}}},function(e,t,n){"use strict";var i=n(14);e.exports=i},function(e,t,n){"use strict";var i=n(15),r=n(37);function a(e){return function(){throw new Error("Function "+e+" is deprecated and cannot be used.")}}e.exports.Type=n(0),e.exports.Schema=n(2),e.exports.FAILSAFE_SCHEMA=n(6),e.exports.JSON_SCHEMA=n(8),e.exports.CORE_SCHEMA=n(7),e.exports.DEFAULT_SAFE_SCHEMA=n(4),e.exports.DEFAULT_FULL_SCHEMA=n(5),e.exports.load=i.load,e.exports.loadAll=i.loadAll,e.exports.safeLoad=i.safeLoad,e.exports.safeLoadAll=i.safeLoadAll,e.exports.dump=r.dump,e.exports.safeDump=r.safeDump,e.exports.YAMLException=n(3),e.exports.MINIMAL_SCHEMA=n(6),e.exports.SAFE_SCHEMA=n(4),e.exports.DEFAULT_SCHEMA=n(5),e.exports.scan=a("scan"),e.exports.parse=a("parse"),e.exports.compose=a("compose"),e.exports.addConstructor=a("addConstructor")},function(e,t,n){"use strict";var i=n(1),r=n(3),a=n(16),o=n(4),s=n(5),u=Object.prototype.hasOwnProperty,c=1,l=2,h=3,p=4,m=1,d=2,f=3,g=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,b=/[\x85\u2028\u2029]/,v=/[,\[\]\{\}]/,y=/^(?:!|!!|![a-z\-]+!)$/i,C=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function x(e){return Object.prototype.toString.call(e)}function A(e){return 10===e||13===e}function S(e){return 9===e||32===e}function D(e){return 9===e||32===e||10===e||13===e}function E(e){return 44===e||91===e||93===e||123===e||125===e}function k(e){var t;return 48<=e&&e<=57?e-48:97<=(t=32|e)&&t<=102?t-97+10:-1}function w(e){return 48===e?"\0":97===e?"":98===e?"\b":116===e?"\t":9===e?"\t":110===e?"\n":118===e?"\v":102===e?"\f":114===e?"\r":101===e?"":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"Â":95===e?"Â ":76===e?"\u2028":80===e?"\u2029":""}function M(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10),56320+(e-65536&1023))}for(var B=new Array(256),T=new Array(256),F=0;F<256;F++)B[F]=w(F)?1:0,T[F]=w(F);function I(e,t){this.input=e,this.filename=t.filename||null,this.schema=t.schema||s,this.onWarning=t.onWarning||null,this.legacy=t.legacy||!1,this.json=t.json||!1,this.listener=t.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.documents=[]}function P(e,t){return new r(t,new a(e.filename,e.input,e.position,e.line,e.position-e.lineStart))}function _(e,t){throw P(e,t)}function L(e,t){e.onWarning&&e.onWarning.call(null,P(e,t))}var R={YAML:function(e,t,n){var i,r,a;null!==e.version&&_(e,"duplication of %YAML directive"),1!==n.length&&_(e,"YAML directive accepts exactly one argument"),null===(i=/^([0-9]+)\.([0-9]+)$/.exec(n[0]))&&_(e,"ill-formed argument of the YAML directive"),r=parseInt(i[1],10),a=parseInt(i[2],10),1!==r&&_(e,"unacceptable YAML version of the document"),e.version=n[0],e.checkLineBreaks=a<2,1!==a&&2!==a&&L(e,"unsupported YAML version of the document")},TAG:function(e,t,n){var i,r;2!==n.length&&_(e,"TAG directive accepts exactly two arguments"),i=n[0],r=n[1],y.test(i)||_(e,"ill-formed tag handle (first argument) of the TAG directive"),u.call(e.tagMap,i)&&_(e,'there is a previously declared suffix for "'+i+'" tag handle'),C.test(r)||_(e,"ill-formed tag prefix (second argument) of the TAG directive"),e.tagMap[i]=r}};function N(e,t,n,i){var r,a,o,s;if(t<n){if(s=e.input.slice(t,n),i)for(r=0,a=s.length;r<a;r+=1)9===(o=s.charCodeAt(r))||32<=o&&o<=1114111||_(e,"expected valid JSON character");else g.test(s)&&_(e,"the stream contains non-printable characters");e.result+=s}}function G(e,t,n,r){var a,o,s,c;for(i.isObject(n)||_(e,"cannot merge mappings; the provided source object is unacceptable"),s=0,c=(a=Object.keys(n)).length;s<c;s+=1)o=a[s],u.call(t,o)||(t[o]=n[o],r[o]=!0)}function O(e,t,n,i,r,a,o,s){var c,l;if(Array.isArray(r))for(c=0,l=(r=Array.prototype.slice.call(r)).length;c<l;c+=1)Array.isArray(r[c])&&_(e,"nested arrays are not supported inside keys"),"object"==typeof r&&"[object Object]"===x(r[c])&&(r[c]="[object Object]");if("object"==typeof r&&"[object Object]"===x(r)&&(r="[object Object]"),r=String(r),null===t&&(t={}),"tag:yaml.org,2002:merge"===i)if(Array.isArray(a))for(c=0,l=a.length;c<l;c+=1)G(e,t,a[c],n);else G(e,t,a,n);else e.json||u.call(n,r)||!u.call(t,r)||(e.line=o||e.line,e.position=s||e.position,_(e,"duplicated mapping key")),t[r]=a,delete n[r];return t}function z(e){var t;10===(t=e.input.charCodeAt(e.position))?e.position++:13===t?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):_(e,"a line break is expected"),e.line+=1,e.lineStart=e.position}function U(e,t,n){for(var i=0,r=e.input.charCodeAt(e.position);0!==r;){for(;S(r);)r=e.input.charCodeAt(++e.position);if(t&&35===r)do{r=e.input.charCodeAt(++e.position)}while(10!==r&&13!==r&&0!==r);if(!A(r))break;for(z(e),r=e.input.charCodeAt(e.position),i++,e.lineIndent=0;32===r;)e.lineIndent++,r=e.input.charCodeAt(++e.position)}return-1!==n&&0!==i&&e.lineIndent<n&&L(e,"deficient indentation"),i}function H(e){var t,n=e.position;return!(45!==(t=e.input.charCodeAt(n))&&46!==t||t!==e.input.charCodeAt(n+1)||t!==e.input.charCodeAt(n+2)||(n+=3,0!==(t=e.input.charCodeAt(n))&&!D(t)))}function J(e,t){1===t?e.result+=" ":t>1&&(e.result+=i.repeat("\n",t-1))}function W(e,t){var n,i,r=e.tag,a=e.anchor,o=[],s=!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=o),i=e.input.charCodeAt(e.position);0!==i&&45===i&&D(e.input.charCodeAt(e.position+1));)if(s=!0,e.position++,U(e,!0,-1)&&e.lineIndent<=t)o.push(null),i=e.input.charCodeAt(e.position);else if(n=e.line,V(e,t,h,!1,!0),o.push(e.result),U(e,!0,-1),i=e.input.charCodeAt(e.position),(e.line===n||e.lineIndent>t)&&0!==i)_(e,"bad indentation of a sequence entry");else if(e.lineIndent<t)break;return!!s&&(e.tag=r,e.anchor=a,e.kind="sequence",e.result=o,!0)}function K(e){var t,n,i,r,a=!1,o=!1;if(33!==(r=e.input.charCodeAt(e.position)))return!1;if(null!==e.tag&&_(e,"duplication of a tag property"),60===(r=e.input.charCodeAt(++e.position))?(a=!0,r=e.input.charCodeAt(++e.position)):33===r?(o=!0,n="!!",r=e.input.charCodeAt(++e.position)):n="!",t=e.position,a){do{r=e.input.charCodeAt(++e.position)}while(0!==r&&62!==r);e.position<e.length?(i=e.input.slice(t,e.position),r=e.input.charCodeAt(++e.position)):_(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==r&&!D(r);)33===r&&(o?_(e,"tag suffix cannot contain exclamation marks"):(n=e.input.slice(t-1,e.position+1),y.test(n)||_(e,"named tag handle cannot contain such characters"),o=!0,t=e.position+1)),r=e.input.charCodeAt(++e.position);i=e.input.slice(t,e.position),v.test(i)&&_(e,"tag suffix cannot contain flow indicator characters")}return i&&!C.test(i)&&_(e,"tag name cannot contain such characters: "+i),a?e.tag=i:u.call(e.tagMap,n)?e.tag=e.tagMap[n]+i:"!"===n?e.tag="!"+i:"!!"===n?e.tag="tag:yaml.org,2002:"+i:_(e,'undeclared tag handle "'+n+'"'),!0}function j(e){var t,n;if(38!==(n=e.input.charCodeAt(e.position)))return!1;for(null!==e.anchor&&_(e,"duplication of an anchor property"),n=e.input.charCodeAt(++e.position),t=e.position;0!==n&&!D(n)&&!E(n);)n=e.input.charCodeAt(++e.position);return e.position===t&&_(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(t,e.position),!0}function V(e,t,n,r,a){var o,s,g,b,v,y,C,x,w=1,F=!1,I=!1;if(null!==e.listener&&e.listener("open",e),e.tag=null,e.anchor=null,e.kind=null,e.result=null,o=s=g=p===n||h===n,r&&U(e,!0,-1)&&(F=!0,e.lineIndent>t?w=1:e.lineIndent===t?w=0:e.lineIndent<t&&(w=-1)),1===w)for(;K(e)||j(e);)U(e,!0,-1)?(F=!0,g=o,e.lineIndent>t?w=1:e.lineIndent===t?w=0:e.lineIndent<t&&(w=-1)):g=!1;if(g&&(g=F||a),1!==w&&p!==n||(C=c===n||l===n?t:t+1,x=e.position-e.lineStart,1===w?g&&(W(e,x)||function(e,t,n){var i,r,a,o,s,u=e.tag,c=e.anchor,h={},m={},d=null,f=null,g=null,b=!1,v=!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=h),s=e.input.charCodeAt(e.position);0!==s;){if(i=e.input.charCodeAt(e.position+1),a=e.line,o=e.position,63!==s&&58!==s||!D(i)){if(!V(e,n,l,!1,!0))break;if(e.line===a){for(s=e.input.charCodeAt(e.position);S(s);)s=e.input.charCodeAt(++e.position);if(58===s)D(s=e.input.charCodeAt(++e.position))||_(e,"a whitespace character is expected after the key-value separator within a block mapping"),b&&(O(e,h,m,d,f,null),d=f=g=null),v=!0,b=!1,r=!1,d=e.tag,f=e.result;else{if(!v)return e.tag=u,e.anchor=c,!0;_(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!v)return e.tag=u,e.anchor=c,!0;_(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===s?(b&&(O(e,h,m,d,f,null),d=f=g=null),v=!0,b=!0,r=!0):b?(b=!1,r=!0):_(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),e.position+=1,s=i;if((e.line===a||e.lineIndent>t)&&(V(e,t,p,!0,r)&&(b?f=e.result:g=e.result),b||(O(e,h,m,d,f,g,a,o),d=f=g=null),U(e,!0,-1),s=e.input.charCodeAt(e.position)),e.lineIndent>t&&0!==s)_(e,"bad indentation of a mapping entry");else if(e.lineIndent<t)break}return b&&O(e,h,m,d,f,null),v&&(e.tag=u,e.anchor=c,e.kind="mapping",e.result=h),v}(e,x,C))||function(e,t){var n,i,r,a,o,s,u,l,h,p,m=!0,d=e.tag,f=e.anchor,g={};if(91===(p=e.input.charCodeAt(e.position)))r=93,s=!1,i=[];else{if(123!==p)return!1;r=125,s=!0,i={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=i),p=e.input.charCodeAt(++e.position);0!==p;){if(U(e,!0,t),(p=e.input.charCodeAt(e.position))===r)return e.position++,e.tag=d,e.anchor=f,e.kind=s?"mapping":"sequence",e.result=i,!0;m||_(e,"missed comma between flow collection entries"),h=null,a=o=!1,63===p&&D(e.input.charCodeAt(e.position+1))&&(a=o=!0,e.position++,U(e,!0,t)),n=e.line,V(e,t,c,!1,!0),l=e.tag,u=e.result,U(e,!0,t),p=e.input.charCodeAt(e.position),!o&&e.line!==n||58!==p||(a=!0,p=e.input.charCodeAt(++e.position),U(e,!0,t),V(e,t,c,!1,!0),h=e.result),s?O(e,i,g,l,u,h):a?i.push(O(e,null,g,l,u,h)):i.push(u),U(e,!0,t),44===(p=e.input.charCodeAt(e.position))?(m=!0,p=e.input.charCodeAt(++e.position)):m=!1}_(e,"unexpected end of the stream within a flow collection")}(e,C)?I=!0:(s&&function(e,t){var n,r,a,o,s,u=m,c=!1,l=!1,h=t,p=0,g=!1;if(124===(o=e.input.charCodeAt(e.position)))r=!1;else{if(62!==o)return!1;r=!0}for(e.kind="scalar",e.result="";0!==o;)if(43===(o=e.input.charCodeAt(++e.position))||45===o)m===u?u=43===o?f:d:_(e,"repeat of a chomping mode identifier");else{if(!((a=48<=(s=o)&&s<=57?s-48:-1)>=0))break;0===a?_(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):l?_(e,"repeat of an indentation width identifier"):(h=t+a-1,l=!0)}if(S(o)){do{o=e.input.charCodeAt(++e.position)}while(S(o));if(35===o)do{o=e.input.charCodeAt(++e.position)}while(!A(o)&&0!==o)}for(;0!==o;){for(z(e),e.lineIndent=0,o=e.input.charCodeAt(e.position);(!l||e.lineIndent<h)&&32===o;)e.lineIndent++,o=e.input.charCodeAt(++e.position);if(!l&&e.lineIndent>h&&(h=e.lineIndent),A(o))p++;else{if(e.lineIndent<h){u===f?e.result+=i.repeat("\n",c?1+p:p):u===m&&c&&(e.result+="\n");break}for(r?S(o)?(g=!0,e.result+=i.repeat("\n",c?1+p:p)):g?(g=!1,e.result+=i.repeat("\n",p+1)):0===p?c&&(e.result+=" "):e.result+=i.repeat("\n",p):e.result+=i.repeat("\n",c?1+p:p),c=!0,l=!0,p=0,n=e.position;!A(o)&&0!==o;)o=e.input.charCodeAt(++e.position);N(e,n,e.position,!1)}}return!0}(e,C)||function(e,t){var n,i,r;if(39!==(n=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,i=r=e.position;0!==(n=e.input.charCodeAt(e.position));)if(39===n){if(N(e,i,e.position,!0),39!==(n=e.input.charCodeAt(++e.position)))return!0;i=e.position,e.position++,r=e.position}else A(n)?(N(e,i,r,!0),J(e,U(e,!1,t)),i=r=e.position):e.position===e.lineStart&&H(e)?_(e,"unexpected end of the document within a single quoted scalar"):(e.position++,r=e.position);_(e,"unexpected end of the stream within a single quoted scalar")}(e,C)||function(e,t){var n,i,r,a,o,s,u;if(34!==(s=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,n=i=e.position;0!==(s=e.input.charCodeAt(e.position));){if(34===s)return N(e,n,e.position,!0),e.position++,!0;if(92===s){if(N(e,n,e.position,!0),A(s=e.input.charCodeAt(++e.position)))U(e,!1,t);else if(s<256&&B[s])e.result+=T[s],e.position++;else if((o=120===(u=s)?2:117===u?4:85===u?8:0)>0){for(r=o,a=0;r>0;r--)(o=k(s=e.input.charCodeAt(++e.position)))>=0?a=(a<<4)+o:_(e,"expected hexadecimal character");e.result+=M(a),e.position++}else _(e,"unknown escape sequence");n=i=e.position}else A(s)?(N(e,n,i,!0),J(e,U(e,!1,t)),n=i=e.position):e.position===e.lineStart&&H(e)?_(e,"unexpected end of the document within a double quoted scalar"):(e.position++,i=e.position)}_(e,"unexpected end of the stream within a double quoted scalar")}(e,C)?I=!0:!function(e){var t,n,i;if(42!==(i=e.input.charCodeAt(e.position)))return!1;for(i=e.input.charCodeAt(++e.position),t=e.position;0!==i&&!D(i)&&!E(i);)i=e.input.charCodeAt(++e.position);return e.position===t&&_(e,"name of an alias node must contain at least one character"),n=e.input.slice(t,e.position),e.anchorMap.hasOwnProperty(n)||_(e,'unidentified alias "'+n+'"'),e.result=e.anchorMap[n],U(e,!0,-1),!0}(e)?function(e,t,n){var i,r,a,o,s,u,c,l,h=e.kind,p=e.result;if(D(l=e.input.charCodeAt(e.position))||E(l)||35===l||38===l||42===l||33===l||124===l||62===l||39===l||34===l||37===l||64===l||96===l)return!1;if((63===l||45===l)&&(D(i=e.input.charCodeAt(e.position+1))||n&&E(i)))return!1;for(e.kind="scalar",e.result="",r=a=e.position,o=!1;0!==l;){if(58===l){if(D(i=e.input.charCodeAt(e.position+1))||n&&E(i))break}else if(35===l){if(D(e.input.charCodeAt(e.position-1)))break}else{if(e.position===e.lineStart&&H(e)||n&&E(l))break;if(A(l)){if(s=e.line,u=e.lineStart,c=e.lineIndent,U(e,!1,-1),e.lineIndent>=t){o=!0,l=e.input.charCodeAt(e.position);continue}e.position=a,e.line=s,e.lineStart=u,e.lineIndent=c;break}}o&&(N(e,r,a,!1),J(e,e.line-s),r=a=e.position,o=!1),S(l)||(a=e.position+1),l=e.input.charCodeAt(++e.position)}return N(e,r,a,!1),!!e.result||(e.kind=h,e.result=p,!1)}(e,C,c===n)&&(I=!0,null===e.tag&&(e.tag="?")):(I=!0,null===e.tag&&null===e.anchor||_(e,"alias node should not have any properties")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===w&&(I=g&&W(e,x))),null!==e.tag&&"!"!==e.tag)if("?"===e.tag){for(b=0,v=e.implicitTypes.length;b<v;b+=1)if((y=e.implicitTypes[b]).resolve(e.result)){e.result=y.construct(e.result),e.tag=y.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else u.call(e.typeMap[e.kind||"fallback"],e.tag)?(y=e.typeMap[e.kind||"fallback"][e.tag],null!==e.result&&y.kind!==e.kind&&_(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+y.kind+'", not "'+e.kind+'"'),y.resolve(e.result)?(e.result=y.construct(e.result),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):_(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")):_(e,"unknown tag !<"+e.tag+">");return null!==e.listener&&e.listener("close",e),null!==e.tag||null!==e.anchor||I}function X(e){var t,n,i,r,a=e.position,o=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap={},e.anchorMap={};0!==(r=e.input.charCodeAt(e.position))&&(U(e,!0,-1),r=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==r));){for(o=!0,r=e.input.charCodeAt(++e.position),t=e.position;0!==r&&!D(r);)r=e.input.charCodeAt(++e.position);for(i=[],(n=e.input.slice(t,e.position)).length<1&&_(e,"directive name must not be less than one character in length");0!==r;){for(;S(r);)r=e.input.charCodeAt(++e.position);if(35===r){do{r=e.input.charCodeAt(++e.position)}while(0!==r&&!A(r));break}if(A(r))break;for(t=e.position;0!==r&&!D(r);)r=e.input.charCodeAt(++e.position);i.push(e.input.slice(t,e.position))}0!==r&&z(e),u.call(R,n)?R[n](e,n,i):L(e,'unknown document directive "'+n+'"')}U(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,U(e,!0,-1)):o&&_(e,"directives end mark is expected"),V(e,e.lineIndent-1,p,!1,!0),U(e,!0,-1),e.checkLineBreaks&&b.test(e.input.slice(a,e.position))&&L(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&H(e)?46===e.input.charCodeAt(e.position)&&(e.position+=3,U(e,!0,-1)):e.position<e.length-1&&_(e,"end of the stream or a document separator is expected")}function Y(e,t){t=t||{},0!==(e=String(e)).length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var n=new I(e,t);for(n.input+="\0";32===n.input.charCodeAt(n.position);)n.lineIndent+=1,n.position+=1;for(;n.position<n.length-1;)X(n);return n.documents}function q(e,t,n){var i,r,a=Y(e,n);if("function"!=typeof t)return a;for(i=0,r=a.length;i<r;i+=1)t(a[i])}function Z(e,t){var n=Y(e,t);if(0!==n.length){if(1===n.length)return n[0];throw new r("expected a single document in the stream, but found more")}}e.exports.loadAll=q,e.exports.load=Z,e.exports.safeLoadAll=function(e,t,n){if("function"!=typeof t)return q(e,i.extend({schema:o},n));q(e,t,i.extend({schema:o},n))},e.exports.safeLoad=function(e,t){return Z(e,i.extend({schema:o},t))}},function(e,t,n){"use strict";var i=n(1);function r(e,t,n,i,r){this.name=e,this.buffer=t,this.position=n,this.line=i,this.column=r}r.prototype.getSnippet=function(e,t){var n,r,a,o,s;if(!this.buffer)return null;for(e=e||4,t=t||75,n="",r=this.position;r>0&&-1==="\0\r\nÂ\u2028\u2029".indexOf(this.buffer.charAt(r-1));)if(r-=1,this.position-r>t/2-1){n=" ... ",r+=5;break}for(a="",o=this.position;o<this.buffer.length&&-1==="\0\r\nÂ\u2028\u2029".indexOf(this.buffer.charAt(o));)if((o+=1)-this.position>t/2-1){a=" ... ",o-=5;break}return s=this.buffer.slice(r,o),i.repeat(" ",e)+n+s+a+"\n"+i.repeat(" ",e+this.position-r+n.length)+"^"},r.prototype.toString=function(e){var t,n="";return this.name&&(n+='in "'+this.name+'" '),n+="at line "+(this.line+1)+", column "+(this.column+1),e||(t=this.getSnippet())&&(n+=":\n"+t),n},e.exports=r},function(e,t,n){"use strict";var i=n(0);e.exports=new i("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return null!==e?e:""}})},function(e,t,n){"use strict";var i=n(0);e.exports=new i("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}})},function(e,t,n){"use strict";var i=n(0);e.exports=new i("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}})},function(e,t,n){"use strict";var i=n(0);e.exports=new i("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(e){if(null===e)return!0;var t=e.length;return 1===t&&"~"===e||4===t&&("null"===e||"Null"===e||"NULL"===e)},construct:function(){return null},predicate:function(e){return null===e},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"}},defaultStyle:"lowercase"})},function(e,t,n){"use strict";var i=n(0);e.exports=new i("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t=e.length;return 4===t&&("true"===e||"True"===e||"TRUE"===e)||5===t&&("false"===e||"False"===e||"FALSE"===e)},construct:function(e){return"true"===e||"True"===e||"TRUE"===e},predicate:function(e){return"[object Boolean]"===Object.prototype.toString.call(e)},represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"})},function(e,t,n){"use strict";var i=n(1),r=n(0);function a(e){return 48<=e&&e<=55}function o(e){return 48<=e&&e<=57}e.exports=new r("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,n,i=e.length,r=0,s=!1;if(!i)return!1;if("-"!==(t=e[r])&&"+"!==t||(t=e[++r]),"0"===t){if(r+1===i)return!0;if("b"===(t=e[++r])){for(r++;r<i;r++)if("_"!==(t=e[r])){if("0"!==t&&"1"!==t)return!1;s=!0}return s&&"_"!==t}if("x"===t){for(r++;r<i;r++)if("_"!==(t=e[r])){if(!(48<=(n=e.charCodeAt(r))&&n<=57||65<=n&&n<=70||97<=n&&n<=102))return!1;s=!0}return s&&"_"!==t}for(;r<i;r++)if("_"!==(t=e[r])){if(!a(e.charCodeAt(r)))return!1;s=!0}return s&&"_"!==t}if("_"===t)return!1;for(;r<i;r++)if("_"!==(t=e[r])){if(":"===t)break;if(!o(e.charCodeAt(r)))return!1;s=!0}return!(!s||"_"===t)&&(":"!==t||/^(:[0-5]?[0-9])+$/.test(e.slice(r)))},construct:function(e){var t,n,i=e,r=1,a=[];return-1!==i.indexOf("_")&&(i=i.replace(/_/g,"")),"-"!==(t=i[0])&&"+"!==t||("-"===t&&(r=-1),t=(i=i.slice(1))[0]),"0"===i?0:"0"===t?"b"===i[1]?r*parseInt(i.slice(2),2):"x"===i[1]?r*parseInt(i,16):r*parseInt(i,8):-1!==i.indexOf(":")?(i.split(":").forEach((function(e){a.unshift(parseInt(e,10))})),i=0,n=1,a.forEach((function(e){i+=e*n,n*=60})),r*i):r*parseInt(i,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&e%1==0&&!i.isNegativeZero(e)},represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0"+e.toString(8):"-0"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},function(e,t,n){"use strict";var i=n(1),r=n(0),a=new RegExp("^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");var o=/^[-+]?[0-9]+e/;e.exports=new r("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(e){return null!==e&&!(!a.test(e)||"_"===e[e.length-1])},construct:function(e){var t,n,i,r;return n="-"===(t=e.replace(/_/g,"").toLowerCase())[0]?-1:1,r=[],"+-".indexOf(t[0])>=0&&(t=t.slice(1)),".inf"===t?1===n?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===t?NaN:t.indexOf(":")>=0?(t.split(":").forEach((function(e){r.unshift(parseFloat(e,10))})),t=0,i=1,r.forEach((function(e){t+=e*i,i*=60})),n*t):n*parseFloat(t,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&(e%1!=0||i.isNegativeZero(e))},represent:function(e,t){var n;if(isNaN(e))switch(t){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(t){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(t){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(i.isNegativeZero(e))return"-0.0";return n=e.toString(10),o.test(n)?n.replace("e",".e"):n},defaultStyle:"lowercase"})},function(e,t,n){"use strict";var i=n(0),r=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),a=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");e.exports=new i("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(e){return null!==e&&(null!==r.exec(e)||null!==a.exec(e))},construct:function(e){var t,n,i,o,s,u,c,l,h=0,p=null;if(null===(t=r.exec(e))&&(t=a.exec(e)),null===t)throw new Error("Date resolve error");if(n=+t[1],i=+t[2]-1,o=+t[3],!t[4])return new Date(Date.UTC(n,i,o));if(s=+t[4],u=+t[5],c=+t[6],t[7]){for(h=t[7].slice(0,3);h.length<3;)h+="0";h=+h}return t[9]&&(p=6e4*(60*+t[10]+ +(t[11]||0)),"-"===t[9]&&(p=-p)),l=new Date(Date.UTC(n,i,o,s,u,c,h)),p&&l.setTime(l.getTime()-p),l},instanceOf:Date,represent:function(e){return e.toISOString()}})},function(e,t,n){"use strict";var i=n(0);e.exports=new i("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(e){return"<<"===e||null===e}})},function(e,t,n){"use strict";var i;try{i=n(9).Buffer}catch(e){}var r=n(0),a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";e.exports=new r("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(e){if(null===e)return!1;var t,n,i=0,r=e.length,o=a;for(n=0;n<r;n++)if(!((t=o.indexOf(e.charAt(n)))>64)){if(t<0)return!1;i+=6}return i%8==0},construct:function(e){var t,n,r=e.replace(/[\r\n=]/g,""),o=r.length,s=a,u=0,c=[];for(t=0;t<o;t++)t%4==0&&t&&(c.push(u>>16&255),c.push(u>>8&255),c.push(255&u)),u=u<<6|s.indexOf(r.charAt(t));return 0===(n=o%4*6)?(c.push(u>>16&255),c.push(u>>8&255),c.push(255&u)):18===n?(c.push(u>>10&255),c.push(u>>2&255)):12===n&&c.push(u>>4&255),i?i.from?i.from(c):new i(c):c},predicate:function(e){return i&&i.isBuffer(e)},represent:function(e){var t,n,i="",r=0,o=e.length,s=a;for(t=0;t<o;t++)t%3==0&&t&&(i+=s[r>>18&63],i+=s[r>>12&63],i+=s[r>>6&63],i+=s[63&r]),r=(r<<8)+e[t];return 0===(n=o%3)?(i+=s[r>>18&63],i+=s[r>>12&63],i+=s[r>>6&63],i+=s[63&r]):2===n?(i+=s[r>>10&63],i+=s[r>>4&63],i+=s[r<<2&63],i+=s[64]):1===n&&(i+=s[r>>2&63],i+=s[r<<4&63],i+=s[64],i+=s[64]),i}})},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],i=t[1];return 3*(n+i)/4-i},t.toByteArray=function(e){var t,n,i=c(e),o=i[0],s=i[1],u=new a(function(e,t,n){return 3*(t+n)/4-n}(0,o,s)),l=0,h=s>0?o-4:o;for(n=0;n<h;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===s&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,u[l++]=255&t);1===s&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,r=n%3,a=[],o=0,s=n-r;o<s;o+=16383)a.push(l(e,o,o+16383>s?s:o+16383));1===r?(t=e[n-1],a.push(i[t>>2]+i[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],a.push(i[t>>10]+i[t>>4&63]+i[t<<2&63]+"="));return a.join("")};for(var i=[],r=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,u=o.length;s<u;++s)i[s]=o[s],r[o.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,n){for(var r,a,o=[],s=t;s<n;s+=3)r=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),o.push(i[(a=r)>>18&63]+i[a>>12&63]+i[a>>6&63]+i[63&a]);return o.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,i,r){var a,o,s=8*r-i-1,u=(1<<s)-1,c=u>>1,l=-7,h=n?r-1:0,p=n?-1:1,m=e[t+h];for(h+=p,a=m&(1<<-l)-1,m>>=-l,l+=s;l>0;a=256*a+e[t+h],h+=p,l-=8);for(o=a&(1<<-l)-1,a>>=-l,l+=i;l>0;o=256*o+e[t+h],h+=p,l-=8);if(0===a)a=1-c;else{if(a===u)return o?NaN:1/0*(m?-1:1);o+=Math.pow(2,i),a-=c}return(m?-1:1)*o*Math.pow(2,a-i)},t.write=function(e,t,n,i,r,a){var o,s,u,c=8*a-r-1,l=(1<<c)-1,h=l>>1,p=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,m=i?0:a-1,d=i?1:-1,f=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,o=l):(o=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-o))<1&&(o--,u*=2),(t+=o+h>=1?p/u:p*Math.pow(2,1-h))*u>=2&&(o++,u/=2),o+h>=l?(s=0,o=l):o+h>=1?(s=(t*u-1)*Math.pow(2,r),o+=h):(s=t*Math.pow(2,h-1)*Math.pow(2,r),o=0));r>=8;e[n+m]=255&s,m+=d,s/=256,r-=8);for(o=o<<r|s,c+=r;c>0;e[n+m]=255&o,m+=d,o/=256,c-=8);e[n+m-d]|=128*f}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";var i=n(0),r=Object.prototype.hasOwnProperty,a=Object.prototype.toString;e.exports=new i("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,n,i,o,s,u=[],c=e;for(t=0,n=c.length;t<n;t+=1){if(i=c[t],s=!1,"[object Object]"!==a.call(i))return!1;for(o in i)if(r.call(i,o)){if(s)return!1;s=!0}if(!s)return!1;if(-1!==u.indexOf(o))return!1;u.push(o)}return!0},construct:function(e){return null!==e?e:[]}})},function(e,t,n){"use strict";var i=n(0),r=Object.prototype.toString;e.exports=new i("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(e){if(null===e)return!0;var t,n,i,a,o,s=e;for(o=new Array(s.length),t=0,n=s.length;t<n;t+=1){if(i=s[t],"[object Object]"!==r.call(i))return!1;if(1!==(a=Object.keys(i)).length)return!1;o[t]=[a[0],i[a[0]]]}return!0},construct:function(e){if(null===e)return[];var t,n,i,r,a,o=e;for(a=new Array(o.length),t=0,n=o.length;t<n;t+=1)i=o[t],r=Object.keys(i),a[t]=[r[0],i[r[0]]];return a}})},function(e,t,n){"use strict";var i=n(0),r=Object.prototype.hasOwnProperty;e.exports=new i("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(e){if(null===e)return!0;var t,n=e;for(t in n)if(r.call(n,t)&&null!==n[t])return!1;return!0},construct:function(e){return null!==e?e:{}}})},function(e,t,n){"use strict";var i=n(0);e.exports=new i("tag:yaml.org,2002:js/undefined",{kind:"scalar",resolve:function(){return!0},construct:function(){},predicate:function(e){return void 0===e},represent:function(){return""}})},function(e,t,n){"use strict";var i=n(0);e.exports=new i("tag:yaml.org,2002:js/regexp",{kind:"scalar",resolve:function(e){if(null===e)return!1;if(0===e.length)return!1;var t=e,n=/\/([gim]*)$/.exec(e),i="";if("/"===t[0]){if(n&&(i=n[1]),i.length>3)return!1;if("/"!==t[t.length-i.length-1])return!1}return!0},construct:function(e){var t=e,n=/\/([gim]*)$/.exec(e),i="";return"/"===t[0]&&(n&&(i=n[1]),t=t.slice(1,t.length-i.length-1)),new RegExp(t,i)},predicate:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},represent:function(e){var t="/"+e.source+"/";return e.global&&(t+="g"),e.multiline&&(t+="m"),e.ignoreCase&&(t+="i"),t}})},function(e,t,n){"use strict";var i;try{i=n(36)}catch(e){"undefined"!=typeof window&&(i=window.esprima)}var r=n(0);e.exports=new r("tag:yaml.org,2002:js/function",{kind:"scalar",resolve:function(e){if(null===e)return!1;try{var t="("+e+")",n=i.parse(t,{range:!0});return"Program"===n.type&&1===n.body.length&&"ExpressionStatement"===n.body[0].type&&("ArrowFunctionExpression"===n.body[0].expression.type||"FunctionExpression"===n.body[0].expression.type)}catch(e){return!1}},construct:function(e){var t,n="("+e+")",r=i.parse(n,{range:!0}),a=[];if("Program"!==r.type||1!==r.body.length||"ExpressionStatement"!==r.body[0].type||"ArrowFunctionExpression"!==r.body[0].expression.type&&"FunctionExpression"!==r.body[0].expression.type)throw new Error("Failed to resolve function");return r.body[0].expression.params.forEach((function(e){a.push(e.name)})),t=r.body[0].expression.body.range,"BlockStatement"===r.body[0].expression.body.type?new Function(a,n.slice(t[0]+1,t[1]-1)):new Function(a,"return "+n.slice(t[0],t[1]))},predicate:function(e){return"[object Function]"===Object.prototype.toString.call(e)},represent:function(e){return e.toString()}})},function(e,t,n){var i;i=function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var r=t[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}return n.m=e,n.c=t,n.p="",n(0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(1),r=n(3),a=n(8),o=n(15);function s(e,t,n){var o=null,s=function(e,t){n&&n(e,t),o&&o.visit(e,t)},u="function"==typeof n?s:null,c=!1;if(t){c="boolean"==typeof t.comment&&t.comment;var l="boolean"==typeof t.attachComment&&t.attachComment;(c||l)&&((o=new i.CommentHandler).attach=l,t.comment=!0,u=s)}var h,p=!1;t&&"string"==typeof t.sourceType&&(p="module"===t.sourceType),h=t&&"boolean"==typeof t.jsx&&t.jsx?new r.JSXParser(e,t,u):new a.Parser(e,t,u);var m=p?h.parseModule():h.parseScript();return c&&o&&(m.comments=o.comments),h.config.tokens&&(m.tokens=h.tokens),h.config.tolerant&&(m.errors=h.errorHandler.errors),m}t.parse=s,t.parseModule=function(e,t,n){var i=t||{};return i.sourceType="module",s(e,i,n)},t.parseScript=function(e,t,n){var i=t||{};return i.sourceType="script",s(e,i,n)},t.tokenize=function(e,t,n){var i,r=new o.Tokenizer(e,t);i=[];try{for(;;){var a=r.getNextToken();if(!a)break;n&&(a=n(a)),i.push(a)}}catch(e){r.errorHandler.tolerate(e)}return r.errorHandler.tolerant&&(i.errors=r.errors()),i};var u=n(2);t.Syntax=u.Syntax,t.version="4.0.1"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=function(){function e(){this.attach=!1,this.comments=[],this.stack=[],this.leading=[],this.trailing=[]}return e.prototype.insertInnerComments=function(e,t){if(e.type===i.Syntax.BlockStatement&&0===e.body.length){for(var n=[],r=this.leading.length-1;r>=0;--r){var a=this.leading[r];t.end.offset>=a.start&&(n.unshift(a.comment),this.leading.splice(r,1),this.trailing.splice(r,1))}n.length&&(e.innerComments=n)}},e.prototype.findTrailingComments=function(e){var t=[];if(this.trailing.length>0){for(var n=this.trailing.length-1;n>=0;--n){var i=this.trailing[n];i.start>=e.end.offset&&t.unshift(i.comment)}return this.trailing.length=0,t}var r=this.stack[this.stack.length-1];if(r&&r.node.trailingComments){var a=r.node.trailingComments[0];a&&a.range[0]>=e.end.offset&&(t=r.node.trailingComments,delete r.node.trailingComments)}return t},e.prototype.findLeadingComments=function(e){for(var t,n=[];this.stack.length>0&&((a=this.stack[this.stack.length-1])&&a.start>=e.start.offset);)t=a.node,this.stack.pop();if(t){for(var i=(t.leadingComments?t.leadingComments.length:0)-1;i>=0;--i){var r=t.leadingComments[i];r.range[1]<=e.start.offset&&(n.unshift(r),t.leadingComments.splice(i,1))}return t.leadingComments&&0===t.leadingComments.length&&delete t.leadingComments,n}for(i=this.leading.length-1;i>=0;--i){var a;(a=this.leading[i]).start<=e.start.offset&&(n.unshift(a.comment),this.leading.splice(i,1))}return n},e.prototype.visitNode=function(e,t){if(!(e.type===i.Syntax.Program&&e.body.length>0)){this.insertInnerComments(e,t);var n=this.findTrailingComments(t),r=this.findLeadingComments(t);r.length>0&&(e.leadingComments=r),n.length>0&&(e.trailingComments=n),this.stack.push({node:e,start:t.start.offset})}},e.prototype.visitComment=function(e,t){var n="L"===e.type[0]?"Line":"Block",i={type:n,value:e.value};if(e.range&&(i.range=e.range),e.loc&&(i.loc=e.loc),this.comments.push(i),this.attach){var r={comment:{type:n,value:e.value,range:[t.start.offset,t.end.offset]},start:t.start.offset};e.loc&&(r.comment.loc=e.loc),e.type=n,this.leading.push(r),this.trailing.push(r)}},e.prototype.visit=function(e,t){"LineComment"===e.type?this.visitComment(e,t):"BlockComment"===e.type?this.visitComment(e,t):this.attach&&this.visitNode(e,t)},e}();t.CommentHandler=r},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Syntax={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForOfStatement:"ForOfStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchCase:"SwitchCase",SwitchStatement:"SwitchStatement",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"}},function(e,t,n){"use strict";var i,r=this&&this.__extends||(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var a=n(4),o=n(5),s=n(6),u=n(7),c=n(8),l=n(13),h=n(14);function p(e){var t;switch(e.type){case s.JSXSyntax.JSXIdentifier:t=e.name;break;case s.JSXSyntax.JSXNamespacedName:var n=e;t=p(n.namespace)+":"+p(n.name);break;case s.JSXSyntax.JSXMemberExpression:var i=e;t=p(i.object)+"."+p(i.property)}return t}l.TokenName[100]="JSXIdentifier",l.TokenName[101]="JSXText";var m=function(e){function t(t,n,i){return e.call(this,t,n,i)||this}return r(t,e),t.prototype.parsePrimaryExpression=function(){return this.match("<")?this.parseJSXRoot():e.prototype.parsePrimaryExpression.call(this)},t.prototype.startJSX=function(){this.scanner.index=this.startMarker.index,this.scanner.lineNumber=this.startMarker.line,this.scanner.lineStart=this.startMarker.index-this.startMarker.column},t.prototype.finishJSX=function(){this.nextToken()},t.prototype.reenterJSX=function(){this.startJSX(),this.expectJSX("}"),this.config.tokens&&this.tokens.pop()},t.prototype.createJSXNode=function(){return this.collectComments(),{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.createJSXChildNode=function(){return{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},t.prototype.scanXHTMLEntity=function(e){for(var t="&",n=!0,i=!1,r=!1,o=!1;!this.scanner.eof()&&n&&!i;){var s=this.scanner.source[this.scanner.index];if(s===e)break;if(i=";"===s,t+=s,++this.scanner.index,!i)switch(t.length){case 2:r="#"===s;break;case 3:r&&(n=(o="x"===s)||a.Character.isDecimalDigit(s.charCodeAt(0)),r=r&&!o);break;default:n=(n=n&&!(r&&!a.Character.isDecimalDigit(s.charCodeAt(0))))&&!(o&&!a.Character.isHexDigit(s.charCodeAt(0)))}}if(n&&i&&t.length>2){var u=t.substr(1,t.length-2);r&&u.length>1?t=String.fromCharCode(parseInt(u.substr(1),10)):o&&u.length>2?t=String.fromCharCode(parseInt("0"+u.substr(1),16)):r||o||!h.XHTMLEntities[u]||(t=h.XHTMLEntities[u])}return t},t.prototype.lexJSX=function(){var e=this.scanner.source.charCodeAt(this.scanner.index);if(60===e||62===e||47===e||58===e||61===e||123===e||125===e)return{type:7,value:s=this.scanner.source[this.scanner.index++],lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index-1,end:this.scanner.index};if(34===e||39===e){for(var t=this.scanner.index,n=this.scanner.source[this.scanner.index++],i="";!this.scanner.eof()&&(u=this.scanner.source[this.scanner.index++])!==n;)i+="&"===u?this.scanXHTMLEntity(n):u;return{type:8,value:i,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(46===e){var r=this.scanner.source.charCodeAt(this.scanner.index+1),o=this.scanner.source.charCodeAt(this.scanner.index+2),s=46===r&&46===o?"...":".";return t=this.scanner.index,this.scanner.index+=s.length,{type:7,value:s,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}if(96===e)return{type:10,value:"",lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index,end:this.scanner.index};if(a.Character.isIdentifierStart(e)&&92!==e){for(t=this.scanner.index,++this.scanner.index;!this.scanner.eof();){var u=this.scanner.source.charCodeAt(this.scanner.index);if(a.Character.isIdentifierPart(u)&&92!==u)++this.scanner.index;else{if(45!==u)break;++this.scanner.index}}return{type:100,value:this.scanner.source.slice(t,this.scanner.index),lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:t,end:this.scanner.index}}return this.scanner.lex()},t.prototype.nextJSXToken=function(){this.collectComments(),this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;var e=this.lexJSX();return this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.config.tokens&&this.tokens.push(this.convertToken(e)),e},t.prototype.nextJSXText=function(){this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;for(var e=this.scanner.index,t="";!this.scanner.eof();){var n=this.scanner.source[this.scanner.index];if("{"===n||"<"===n)break;++this.scanner.index,t+=n,a.Character.isLineTerminator(n.charCodeAt(0))&&(++this.scanner.lineNumber,"\r"===n&&"\n"===this.scanner.source[this.scanner.index]&&++this.scanner.index,this.scanner.lineStart=this.scanner.index)}this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart;var i={type:101,value:t,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:e,end:this.scanner.index};return t.length>0&&this.config.tokens&&this.tokens.push(this.convertToken(i)),i},t.prototype.peekJSXToken=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.lexJSX();return this.scanner.restoreState(e),t},t.prototype.expectJSX=function(e){var t=this.nextJSXToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},t.prototype.matchJSX=function(e){var t=this.peekJSXToken();return 7===t.type&&t.value===e},t.prototype.parseJSXIdentifier=function(){var e=this.createJSXNode(),t=this.nextJSXToken();return 100!==t.type&&this.throwUnexpectedToken(t),this.finalize(e,new o.JSXIdentifier(t.value))},t.prototype.parseJSXElementName=function(){var e=this.createJSXNode(),t=this.parseJSXIdentifier();if(this.matchJSX(":")){var n=t;this.expectJSX(":");var i=this.parseJSXIdentifier();t=this.finalize(e,new o.JSXNamespacedName(n,i))}else if(this.matchJSX("."))for(;this.matchJSX(".");){var r=t;this.expectJSX(".");var a=this.parseJSXIdentifier();t=this.finalize(e,new o.JSXMemberExpression(r,a))}return t},t.prototype.parseJSXAttributeName=function(){var e,t=this.createJSXNode(),n=this.parseJSXIdentifier();if(this.matchJSX(":")){var i=n;this.expectJSX(":");var r=this.parseJSXIdentifier();e=this.finalize(t,new o.JSXNamespacedName(i,r))}else e=n;return e},t.prototype.parseJSXStringLiteralAttribute=function(){var e=this.createJSXNode(),t=this.nextJSXToken();8!==t.type&&this.throwUnexpectedToken(t);var n=this.getTokenRaw(t);return this.finalize(e,new u.Literal(t.value,n))},t.prototype.parseJSXExpressionAttribute=function(){var e=this.createJSXNode();this.expectJSX("{"),this.finishJSX(),this.match("}")&&this.tolerateError("JSX attributes must only be assigned a non-empty expression");var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new o.JSXExpressionContainer(t))},t.prototype.parseJSXAttributeValue=function(){return this.matchJSX("{")?this.parseJSXExpressionAttribute():this.matchJSX("<")?this.parseJSXElement():this.parseJSXStringLiteralAttribute()},t.prototype.parseJSXNameValueAttribute=function(){var e=this.createJSXNode(),t=this.parseJSXAttributeName(),n=null;return this.matchJSX("=")&&(this.expectJSX("="),n=this.parseJSXAttributeValue()),this.finalize(e,new o.JSXAttribute(t,n))},t.prototype.parseJSXSpreadAttribute=function(){var e=this.createJSXNode();this.expectJSX("{"),this.expectJSX("..."),this.finishJSX();var t=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(e,new o.JSXSpreadAttribute(t))},t.prototype.parseJSXAttributes=function(){for(var e=[];!this.matchJSX("/")&&!this.matchJSX(">");){var t=this.matchJSX("{")?this.parseJSXSpreadAttribute():this.parseJSXNameValueAttribute();e.push(t)}return e},t.prototype.parseJSXOpeningElement=function(){var e=this.createJSXNode();this.expectJSX("<");var t=this.parseJSXElementName(),n=this.parseJSXAttributes(),i=this.matchJSX("/");return i&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(e,new o.JSXOpeningElement(t,i,n))},t.prototype.parseJSXBoundaryElement=function(){var e=this.createJSXNode();if(this.expectJSX("<"),this.matchJSX("/")){this.expectJSX("/");var t=this.parseJSXElementName();return this.expectJSX(">"),this.finalize(e,new o.JSXClosingElement(t))}var n=this.parseJSXElementName(),i=this.parseJSXAttributes(),r=this.matchJSX("/");return r&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(e,new o.JSXOpeningElement(n,r,i))},t.prototype.parseJSXEmptyExpression=function(){var e=this.createJSXChildNode();return this.collectComments(),this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.finalize(e,new o.JSXEmptyExpression)},t.prototype.parseJSXExpressionContainer=function(){var e,t=this.createJSXNode();return this.expectJSX("{"),this.matchJSX("}")?(e=this.parseJSXEmptyExpression(),this.expectJSX("}")):(this.finishJSX(),e=this.parseAssignmentExpression(),this.reenterJSX()),this.finalize(t,new o.JSXExpressionContainer(e))},t.prototype.parseJSXChildren=function(){for(var e=[];!this.scanner.eof();){var t=this.createJSXChildNode(),n=this.nextJSXText();if(n.start<n.end){var i=this.getTokenRaw(n),r=this.finalize(t,new o.JSXText(n.value,i));e.push(r)}if("{"!==this.scanner.source[this.scanner.index])break;var a=this.parseJSXExpressionContainer();e.push(a)}return e},t.prototype.parseComplexJSXElement=function(e){for(var t=[];!this.scanner.eof();){e.children=e.children.concat(this.parseJSXChildren());var n=this.createJSXChildNode(),i=this.parseJSXBoundaryElement();if(i.type===s.JSXSyntax.JSXOpeningElement){var r=i;if(r.selfClosing){var a=this.finalize(n,new o.JSXElement(r,[],null));e.children.push(a)}else t.push(e),e={node:n,opening:r,closing:null,children:[]}}if(i.type===s.JSXSyntax.JSXClosingElement){e.closing=i;var u=p(e.opening.name);if(u!==p(e.closing.name)&&this.tolerateError("Expected corresponding JSX closing tag for %0",u),!(t.length>0))break;a=this.finalize(e.node,new o.JSXElement(e.opening,e.children,e.closing)),(e=t[t.length-1]).children.push(a),t.pop()}}return e},t.prototype.parseJSXElement=function(){var e=this.createJSXNode(),t=this.parseJSXOpeningElement(),n=[],i=null;if(!t.selfClosing){var r=this.parseComplexJSXElement({node:e,opening:t,closing:i,children:n});n=r.children,i=r.closing}return this.finalize(e,new o.JSXElement(t,n,i))},t.prototype.parseJSXRoot=function(){this.config.tokens&&this.tokens.pop(),this.startJSX();var e=this.parseJSXElement();return this.finishJSX(),e},t.prototype.isStartOfExpression=function(){return e.prototype.isStartOfExpression.call(this)||this.match("<")},t}(c.Parser);t.JSXParser=m},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};t.Character={fromCodePoint:function(e){return e<65536?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10))+String.fromCharCode(56320+(e-65536&1023))},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||92===e||e>=128&&n.NonAsciiIdentifierStart.test(t.Character.fromCodePoint(e))},isIdentifierPart:function(e){return 36===e||95===e||e>=65&&e<=90||e>=97&&e<=122||e>=48&&e<=57||92===e||e>=128&&n.NonAsciiIdentifierPart.test(t.Character.fromCodePoint(e))},isDecimalDigit:function(e){return e>=48&&e<=57},isHexDigit:function(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102},isOctalDigit:function(e){return e>=48&&e<=55}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(6),r=function(e){this.type=i.JSXSyntax.JSXClosingElement,this.name=e};t.JSXClosingElement=r;var a=function(e,t,n){this.type=i.JSXSyntax.JSXElement,this.openingElement=e,this.children=t,this.closingElement=n};t.JSXElement=a;var o=function(){this.type=i.JSXSyntax.JSXEmptyExpression};t.JSXEmptyExpression=o;var s=function(e){this.type=i.JSXSyntax.JSXExpressionContainer,this.expression=e};t.JSXExpressionContainer=s;var u=function(e){this.type=i.JSXSyntax.JSXIdentifier,this.name=e};t.JSXIdentifier=u;var c=function(e,t){this.type=i.JSXSyntax.JSXMemberExpression,this.object=e,this.property=t};t.JSXMemberExpression=c;var l=function(e,t){this.type=i.JSXSyntax.JSXAttribute,this.name=e,this.value=t};t.JSXAttribute=l;var h=function(e,t){this.type=i.JSXSyntax.JSXNamespacedName,this.namespace=e,this.name=t};t.JSXNamespacedName=h;var p=function(e,t,n){this.type=i.JSXSyntax.JSXOpeningElement,this.name=e,this.selfClosing=t,this.attributes=n};t.JSXOpeningElement=p;var m=function(e){this.type=i.JSXSyntax.JSXSpreadAttribute,this.argument=e};t.JSXSpreadAttribute=m;var d=function(e,t){this.type=i.JSXSyntax.JSXText,this.value=e,this.raw=t};t.JSXText=d},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JSXSyntax={JSXAttribute:"JSXAttribute",JSXClosingElement:"JSXClosingElement",JSXElement:"JSXElement",JSXEmptyExpression:"JSXEmptyExpression",JSXExpressionContainer:"JSXExpressionContainer",JSXIdentifier:"JSXIdentifier",JSXMemberExpression:"JSXMemberExpression",JSXNamespacedName:"JSXNamespacedName",JSXOpeningElement:"JSXOpeningElement",JSXSpreadAttribute:"JSXSpreadAttribute",JSXText:"JSXText"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),r=function(e){this.type=i.Syntax.ArrayExpression,this.elements=e};t.ArrayExpression=r;var a=function(e){this.type=i.Syntax.ArrayPattern,this.elements=e};t.ArrayPattern=a;var o=function(e,t,n){this.type=i.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=n,this.async=!1};t.ArrowFunctionExpression=o;var s=function(e,t,n){this.type=i.Syntax.AssignmentExpression,this.operator=e,this.left=t,this.right=n};t.AssignmentExpression=s;var u=function(e,t){this.type=i.Syntax.AssignmentPattern,this.left=e,this.right=t};t.AssignmentPattern=u;var c=function(e,t,n){this.type=i.Syntax.ArrowFunctionExpression,this.id=null,this.params=e,this.body=t,this.generator=!1,this.expression=n,this.async=!0};t.AsyncArrowFunctionExpression=c;var l=function(e,t,n){this.type=i.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=n,this.generator=!1,this.expression=!1,this.async=!0};t.AsyncFunctionDeclaration=l;var h=function(e,t,n){this.type=i.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=n,this.generator=!1,this.expression=!1,this.async=!0};t.AsyncFunctionExpression=h;var p=function(e){this.type=i.Syntax.AwaitExpression,this.argument=e};t.AwaitExpression=p;var m=function(e,t,n){var r="||"===e||"&&"===e;this.type=r?i.Syntax.LogicalExpression:i.Syntax.BinaryExpression,this.operator=e,this.left=t,this.right=n};t.BinaryExpression=m;var d=function(e){this.type=i.Syntax.BlockStatement,this.body=e};t.BlockStatement=d;var f=function(e){this.type=i.Syntax.BreakStatement,this.label=e};t.BreakStatement=f;var g=function(e,t){this.type=i.Syntax.CallExpression,this.callee=e,this.arguments=t};t.CallExpression=g;var b=function(e,t){this.type=i.Syntax.CatchClause,this.param=e,this.body=t};t.CatchClause=b;var v=function(e){this.type=i.Syntax.ClassBody,this.body=e};t.ClassBody=v;var y=function(e,t,n){this.type=i.Syntax.ClassDeclaration,this.id=e,this.superClass=t,this.body=n};t.ClassDeclaration=y;var C=function(e,t,n){this.type=i.Syntax.ClassExpression,this.id=e,this.superClass=t,this.body=n};t.ClassExpression=C;var x=function(e,t){this.type=i.Syntax.MemberExpression,this.computed=!0,this.object=e,this.property=t};t.ComputedMemberExpression=x;var A=function(e,t,n){this.type=i.Syntax.ConditionalExpression,this.test=e,this.consequent=t,this.alternate=n};t.ConditionalExpression=A;var S=function(e){this.type=i.Syntax.ContinueStatement,this.label=e};t.ContinueStatement=S;var D=function(){this.type=i.Syntax.DebuggerStatement};t.DebuggerStatement=D;var E=function(e,t){this.type=i.Syntax.ExpressionStatement,this.expression=e,this.directive=t};t.Directive=E;var k=function(e,t){this.type=i.Syntax.DoWhileStatement,this.body=e,this.test=t};t.DoWhileStatement=k;var w=function(){this.type=i.Syntax.EmptyStatement};t.EmptyStatement=w;var M=function(e){this.type=i.Syntax.ExportAllDeclaration,this.source=e};t.ExportAllDeclaration=M;var B=function(e){this.type=i.Syntax.ExportDefaultDeclaration,this.declaration=e};t.ExportDefaultDeclaration=B;var T=function(e,t,n){this.type=i.Syntax.ExportNamedDeclaration,this.declaration=e,this.specifiers=t,this.source=n};t.ExportNamedDeclaration=T;var F=function(e,t){this.type=i.Syntax.ExportSpecifier,this.exported=t,this.local=e};t.ExportSpecifier=F;var I=function(e){this.type=i.Syntax.ExpressionStatement,this.expression=e};t.ExpressionStatement=I;var P=function(e,t,n){this.type=i.Syntax.ForInStatement,this.left=e,this.right=t,this.body=n,this.each=!1};t.ForInStatement=P;var _=function(e,t,n){this.type=i.Syntax.ForOfStatement,this.left=e,this.right=t,this.body=n};t.ForOfStatement=_;var L=function(e,t,n,r){this.type=i.Syntax.ForStatement,this.init=e,this.test=t,this.update=n,this.body=r};t.ForStatement=L;var R=function(e,t,n,r){this.type=i.Syntax.FunctionDeclaration,this.id=e,this.params=t,this.body=n,this.generator=r,this.expression=!1,this.async=!1};t.FunctionDeclaration=R;var N=function(e,t,n,r){this.type=i.Syntax.FunctionExpression,this.id=e,this.params=t,this.body=n,this.generator=r,this.expression=!1,this.async=!1};t.FunctionExpression=N;var G=function(e){this.type=i.Syntax.Identifier,this.name=e};t.Identifier=G;var O=function(e,t,n){this.type=i.Syntax.IfStatement,this.test=e,this.consequent=t,this.alternate=n};t.IfStatement=O;var z=function(e,t){this.type=i.Syntax.ImportDeclaration,this.specifiers=e,this.source=t};t.ImportDeclaration=z;var U=function(e){this.type=i.Syntax.ImportDefaultSpecifier,this.local=e};t.ImportDefaultSpecifier=U;var H=function(e){this.type=i.Syntax.ImportNamespaceSpecifier,this.local=e};t.ImportNamespaceSpecifier=H;var J=function(e,t){this.type=i.Syntax.ImportSpecifier,this.local=e,this.imported=t};t.ImportSpecifier=J;var W=function(e,t){this.type=i.Syntax.LabeledStatement,this.label=e,this.body=t};t.LabeledStatement=W;var K=function(e,t){this.type=i.Syntax.Literal,this.value=e,this.raw=t};t.Literal=K;var j=function(e,t){this.type=i.Syntax.MetaProperty,this.meta=e,this.property=t};t.MetaProperty=j;var V=function(e,t,n,r,a){this.type=i.Syntax.MethodDefinition,this.key=e,this.computed=t,this.value=n,this.kind=r,this.static=a};t.MethodDefinition=V;var X=function(e){this.type=i.Syntax.Program,this.body=e,this.sourceType="module"};t.Module=X;var Y=function(e,t){this.type=i.Syntax.NewExpression,this.callee=e,this.arguments=t};t.NewExpression=Y;var q=function(e){this.type=i.Syntax.ObjectExpression,this.properties=e};t.ObjectExpression=q;var Z=function(e){this.type=i.Syntax.ObjectPattern,this.properties=e};t.ObjectPattern=Z;var $=function(e,t,n,r,a,o){this.type=i.Syntax.Property,this.key=t,this.computed=n,this.value=r,this.kind=e,this.method=a,this.shorthand=o};t.Property=$;var Q=function(e,t,n,r){this.type=i.Syntax.Literal,this.value=e,this.raw=t,this.regex={pattern:n,flags:r}};t.RegexLiteral=Q;var ee=function(e){this.type=i.Syntax.RestElement,this.argument=e};t.RestElement=ee;var te=function(e){this.type=i.Syntax.ReturnStatement,this.argument=e};t.ReturnStatement=te;var ne=function(e){this.type=i.Syntax.Program,this.body=e,this.sourceType="script"};t.Script=ne;var ie=function(e){this.type=i.Syntax.SequenceExpression,this.expressions=e};t.SequenceExpression=ie;var re=function(e){this.type=i.Syntax.SpreadElement,this.argument=e};t.SpreadElement=re;var ae=function(e,t){this.type=i.Syntax.MemberExpression,this.computed=!1,this.object=e,this.property=t};t.StaticMemberExpression=ae;var oe=function(){this.type=i.Syntax.Super};t.Super=oe;var se=function(e,t){this.type=i.Syntax.SwitchCase,this.test=e,this.consequent=t};t.SwitchCase=se;var ue=function(e,t){this.type=i.Syntax.SwitchStatement,this.discriminant=e,this.cases=t};t.SwitchStatement=ue;var ce=function(e,t){this.type=i.Syntax.TaggedTemplateExpression,this.tag=e,this.quasi=t};t.TaggedTemplateExpression=ce;var le=function(e,t){this.type=i.Syntax.TemplateElement,this.value=e,this.tail=t};t.TemplateElement=le;var he=function(e,t){this.type=i.Syntax.TemplateLiteral,this.quasis=e,this.expressions=t};t.TemplateLiteral=he;var pe=function(){this.type=i.Syntax.ThisExpression};t.ThisExpression=pe;var me=function(e){this.type=i.Syntax.ThrowStatement,this.argument=e};t.ThrowStatement=me;var de=function(e,t,n){this.type=i.Syntax.TryStatement,this.block=e,this.handler=t,this.finalizer=n};t.TryStatement=de;var fe=function(e,t){this.type=i.Syntax.UnaryExpression,this.operator=e,this.argument=t,this.prefix=!0};t.UnaryExpression=fe;var ge=function(e,t,n){this.type=i.Syntax.UpdateExpression,this.operator=e,this.argument=t,this.prefix=n};t.UpdateExpression=ge;var be=function(e,t){this.type=i.Syntax.VariableDeclaration,this.declarations=e,this.kind=t};t.VariableDeclaration=be;var ve=function(e,t){this.type=i.Syntax.VariableDeclarator,this.id=e,this.init=t};t.VariableDeclarator=ve;var ye=function(e,t){this.type=i.Syntax.WhileStatement,this.test=e,this.body=t};t.WhileStatement=ye;var Ce=function(e,t){this.type=i.Syntax.WithStatement,this.object=e,this.body=t};t.WithStatement=Ce;var xe=function(e,t){this.type=i.Syntax.YieldExpression,this.argument=e,this.delegate=t};t.YieldExpression=xe},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(9),r=n(10),a=n(11),o=n(7),s=n(12),u=n(2),c=n(13),l=function(){function e(e,t,n){void 0===t&&(t={}),this.config={range:"boolean"==typeof t.range&&t.range,loc:"boolean"==typeof t.loc&&t.loc,source:null,tokens:"boolean"==typeof t.tokens&&t.tokens,comment:"boolean"==typeof t.comment&&t.comment,tolerant:"boolean"==typeof t.tolerant&&t.tolerant},this.config.loc&&t.source&&null!==t.source&&(this.config.source=String(t.source)),this.delegate=n,this.errorHandler=new r.ErrorHandler,this.errorHandler.tolerant=this.config.tolerant,this.scanner=new s.Scanner(e,this.errorHandler),this.scanner.trackComment=this.config.comment,this.operatorPrecedence={")":0,";":0,",":0,"=":0,"]":0,"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":11,"/":11,"%":11},this.lookahead={type:2,value:"",lineNumber:this.scanner.lineNumber,lineStart:0,start:0,end:0},this.hasLineTerminator=!1,this.context={isModule:!1,await:!1,allowIn:!0,allowStrictDirective:!0,allowYield:!0,firstCoverInitializedNameError:null,isAssignmentTarget:!1,isBindingElement:!1,inFunctionBody:!1,inIteration:!1,inSwitch:!1,labelSet:{},strict:!1},this.tokens=[],this.startMarker={index:0,line:this.scanner.lineNumber,column:0},this.lastMarker={index:0,line:this.scanner.lineNumber,column:0},this.nextToken(),this.lastMarker={index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}return e.prototype.throwError=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=Array.prototype.slice.call(arguments,1),a=e.replace(/%(\d)/g,(function(e,t){return i.assert(t<r.length,"Message reference must be in range"),r[t]})),o=this.lastMarker.index,s=this.lastMarker.line,u=this.lastMarker.column+1;throw this.errorHandler.createError(o,s,u,a)},e.prototype.tolerateError=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=Array.prototype.slice.call(arguments,1),a=e.replace(/%(\d)/g,(function(e,t){return i.assert(t<r.length,"Message reference must be in range"),r[t]})),o=this.lastMarker.index,s=this.scanner.lineNumber,u=this.lastMarker.column+1;this.errorHandler.tolerateError(o,s,u,a)},e.prototype.unexpectedTokenError=function(e,t){var n,i=t||a.Messages.UnexpectedToken;if(e?(t||(i=2===e.type?a.Messages.UnexpectedEOS:3===e.type?a.Messages.UnexpectedIdentifier:6===e.type?a.Messages.UnexpectedNumber:8===e.type?a.Messages.UnexpectedString:10===e.type?a.Messages.UnexpectedTemplate:a.Messages.UnexpectedToken,4===e.type&&(this.scanner.isFutureReservedWord(e.value)?i=a.Messages.UnexpectedReserved:this.context.strict&&this.scanner.isStrictModeReservedWord(e.value)&&(i=a.Messages.StrictReservedWord))),n=e.value):n="ILLEGAL",i=i.replace("%0",n),e&&"number"==typeof e.lineNumber){var r=e.start,o=e.lineNumber,s=this.lastMarker.index-this.lastMarker.column,u=e.start-s+1;return this.errorHandler.createError(r,o,u,i)}return r=this.lastMarker.index,o=this.lastMarker.line,u=this.lastMarker.column+1,this.errorHandler.createError(r,o,u,i)},e.prototype.throwUnexpectedToken=function(e,t){throw this.unexpectedTokenError(e,t)},e.prototype.tolerateUnexpectedToken=function(e,t){this.errorHandler.tolerate(this.unexpectedTokenError(e,t))},e.prototype.collectComments=function(){if(this.config.comment){var e=this.scanner.scanComments();if(e.length>0&&this.delegate)for(var t=0;t<e.length;++t){var n=e[t],i=void 0;i={type:n.multiLine?"BlockComment":"LineComment",value:this.scanner.source.slice(n.slice[0],n.slice[1])},this.config.range&&(i.range=n.range),this.config.loc&&(i.loc=n.loc);var r={start:{line:n.loc.start.line,column:n.loc.start.column,offset:n.range[0]},end:{line:n.loc.end.line,column:n.loc.end.column,offset:n.range[1]}};this.delegate(i,r)}}else this.scanner.scanComments()},e.prototype.getTokenRaw=function(e){return this.scanner.source.slice(e.start,e.end)},e.prototype.convertToken=function(e){var t={type:c.TokenName[e.type],value:this.getTokenRaw(e)};if(this.config.range&&(t.range=[e.start,e.end]),this.config.loc&&(t.loc={start:{line:this.startMarker.line,column:this.startMarker.column},end:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}),9===e.type){var n=e.pattern,i=e.flags;t.regex={pattern:n,flags:i}}return t},e.prototype.nextToken=function(){var e=this.lookahead;this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.collectComments(),this.scanner.index!==this.startMarker.index&&(this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart);var t=this.scanner.lex();return this.hasLineTerminator=e.lineNumber!==t.lineNumber,t&&this.context.strict&&3===t.type&&this.scanner.isStrictModeReservedWord(t.value)&&(t.type=4),this.lookahead=t,this.config.tokens&&2!==t.type&&this.tokens.push(this.convertToken(t)),e},e.prototype.nextRegexToken=function(){this.collectComments();var e=this.scanner.scanRegExp();return this.config.tokens&&(this.tokens.pop(),this.tokens.push(this.convertToken(e))),this.lookahead=e,this.nextToken(),e},e.prototype.createNode=function(){return{index:this.startMarker.index,line:this.startMarker.line,column:this.startMarker.column}},e.prototype.startNode=function(e,t){void 0===t&&(t=0);var n=e.start-e.lineStart,i=e.lineNumber;return n<0&&(n+=t,i--),{index:e.start,line:i,column:n}},e.prototype.finalize=function(e,t){if(this.config.range&&(t.range=[e.index,this.lastMarker.index]),this.config.loc&&(t.loc={start:{line:e.line,column:e.column},end:{line:this.lastMarker.line,column:this.lastMarker.column}},this.config.source&&(t.loc.source=this.config.source)),this.delegate){var n={start:{line:e.line,column:e.column,offset:e.index},end:{line:this.lastMarker.line,column:this.lastMarker.column,offset:this.lastMarker.index}};this.delegate(t,n)}return t},e.prototype.expect=function(e){var t=this.nextToken();7===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.expectCommaSeparator=function(){if(this.config.tolerant){var e=this.lookahead;7===e.type&&","===e.value?this.nextToken():7===e.type&&";"===e.value?(this.nextToken(),this.tolerateUnexpectedToken(e)):this.tolerateUnexpectedToken(e,a.Messages.UnexpectedToken)}else this.expect(",")},e.prototype.expectKeyword=function(e){var t=this.nextToken();4===t.type&&t.value===e||this.throwUnexpectedToken(t)},e.prototype.match=function(e){return 7===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchKeyword=function(e){return 4===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchContextualKeyword=function(e){return 3===this.lookahead.type&&this.lookahead.value===e},e.prototype.matchAssign=function(){if(7!==this.lookahead.type)return!1;var e=this.lookahead.value;return"="===e||"*="===e||"**="===e||"/="===e||"%="===e||"+="===e||"-="===e||"<<="===e||">>="===e||">>>="===e||"&="===e||"^="===e||"|="===e},e.prototype.isolateCoverGrammar=function(e){var t=this.context.isBindingElement,n=this.context.isAssignmentTarget,i=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var r=e.call(this);return null!==this.context.firstCoverInitializedNameError&&this.throwUnexpectedToken(this.context.firstCoverInitializedNameError),this.context.isBindingElement=t,this.context.isAssignmentTarget=n,this.context.firstCoverInitializedNameError=i,r},e.prototype.inheritCoverGrammar=function(e){var t=this.context.isBindingElement,n=this.context.isAssignmentTarget,i=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var r=e.call(this);return this.context.isBindingElement=this.context.isBindingElement&&t,this.context.isAssignmentTarget=this.context.isAssignmentTarget&&n,this.context.firstCoverInitializedNameError=i||this.context.firstCoverInitializedNameError,r},e.prototype.consumeSemicolon=function(){this.match(";")?this.nextToken():this.hasLineTerminator||(2===this.lookahead.type||this.match("}")||this.throwUnexpectedToken(this.lookahead),this.lastMarker.index=this.startMarker.index,this.lastMarker.line=this.startMarker.line,this.lastMarker.column=this.startMarker.column)},e.prototype.parsePrimaryExpression=function(){var e,t,n,i=this.createNode();switch(this.lookahead.type){case 3:(this.context.isModule||this.context.await)&&"await"===this.lookahead.value&&this.tolerateUnexpectedToken(this.lookahead),e=this.matchAsyncFunction()?this.parseFunctionExpression():this.finalize(i,new o.Identifier(this.nextToken().value));break;case 6:case 8:this.context.strict&&this.lookahead.octal&&this.tolerateUnexpectedToken(this.lookahead,a.Messages.StrictOctalLiteral),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),n=this.getTokenRaw(t),e=this.finalize(i,new o.Literal(t.value,n));break;case 1:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),n=this.getTokenRaw(t),e=this.finalize(i,new o.Literal("true"===t.value,n));break;case 5:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,t=this.nextToken(),n=this.getTokenRaw(t),e=this.finalize(i,new o.Literal(null,n));break;case 10:e=this.parseTemplateLiteral();break;case 7:switch(this.lookahead.value){case"(":this.context.isBindingElement=!1,e=this.inheritCoverGrammar(this.parseGroupExpression);break;case"[":e=this.inheritCoverGrammar(this.parseArrayInitializer);break;case"{":e=this.inheritCoverGrammar(this.parseObjectInitializer);break;case"/":case"/=":this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.scanner.index=this.startMarker.index,t=this.nextRegexToken(),n=this.getTokenRaw(t),e=this.finalize(i,new o.RegexLiteral(t.regex,n,t.pattern,t.flags));break;default:e=this.throwUnexpectedToken(this.nextToken())}break;case 4:!this.context.strict&&this.context.allowYield&&this.matchKeyword("yield")?e=this.parseIdentifierName():!this.context.strict&&this.matchKeyword("let")?e=this.finalize(i,new o.Identifier(this.nextToken().value)):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.matchKeyword("function")?e=this.parseFunctionExpression():this.matchKeyword("this")?(this.nextToken(),e=this.finalize(i,new o.ThisExpression)):e=this.matchKeyword("class")?this.parseClassExpression():this.throwUnexpectedToken(this.nextToken()));break;default:e=this.throwUnexpectedToken(this.nextToken())}return e},e.prototype.parseSpreadElement=function(){var e=this.createNode();this.expect("...");var t=this.inheritCoverGrammar(this.parseAssignmentExpression);return this.finalize(e,new o.SpreadElement(t))},e.prototype.parseArrayInitializer=function(){var e=this.createNode(),t=[];for(this.expect("[");!this.match("]");)if(this.match(","))this.nextToken(),t.push(null);else if(this.match("...")){var n=this.parseSpreadElement();this.match("]")||(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.expect(",")),t.push(n)}else t.push(this.inheritCoverGrammar(this.parseAssignmentExpression)),this.match("]")||this.expect(",");return this.expect("]"),this.finalize(e,new o.ArrayExpression(t))},e.prototype.parsePropertyMethod=function(e){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var t=this.context.strict,n=this.context.allowStrictDirective;this.context.allowStrictDirective=e.simple;var i=this.isolateCoverGrammar(this.parseFunctionSourceElements);return this.context.strict&&e.firstRestricted&&this.tolerateUnexpectedToken(e.firstRestricted,e.message),this.context.strict&&e.stricted&&this.tolerateUnexpectedToken(e.stricted,e.message),this.context.strict=t,this.context.allowStrictDirective=n,i},e.prototype.parsePropertyMethodFunction=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var n=this.parseFormalParameters(),i=this.parsePropertyMethod(n);return this.context.allowYield=t,this.finalize(e,new o.FunctionExpression(null,n.params,i,!1))},e.prototype.parsePropertyMethodAsyncFunction=function(){var e=this.createNode(),t=this.context.allowYield,n=this.context.await;this.context.allowYield=!1,this.context.await=!0;var i=this.parseFormalParameters(),r=this.parsePropertyMethod(i);return this.context.allowYield=t,this.context.await=n,this.finalize(e,new o.AsyncFunctionExpression(null,i.params,r))},e.prototype.parseObjectPropertyKey=function(){var e,t=this.createNode(),n=this.nextToken();switch(n.type){case 8:case 6:this.context.strict&&n.octal&&this.tolerateUnexpectedToken(n,a.Messages.StrictOctalLiteral);var i=this.getTokenRaw(n);e=this.finalize(t,new o.Literal(n.value,i));break;case 3:case 1:case 5:case 4:e=this.finalize(t,new o.Identifier(n.value));break;case 7:"["===n.value?(e=this.isolateCoverGrammar(this.parseAssignmentExpression),this.expect("]")):e=this.throwUnexpectedToken(n);break;default:e=this.throwUnexpectedToken(n)}return e},e.prototype.isPropertyKey=function(e,t){return e.type===u.Syntax.Identifier&&e.name===t||e.type===u.Syntax.Literal&&e.value===t},e.prototype.parseObjectProperty=function(e){var t,n=this.createNode(),i=this.lookahead,r=null,s=null,u=!1,c=!1,l=!1,h=!1;if(3===i.type){var p=i.value;this.nextToken(),u=this.match("["),r=(h=!(this.hasLineTerminator||"async"!==p||this.match(":")||this.match("(")||this.match("*")||this.match(",")))?this.parseObjectPropertyKey():this.finalize(n,new o.Identifier(p))}else this.match("*")?this.nextToken():(u=this.match("["),r=this.parseObjectPropertyKey());var m=this.qualifiedPropertyName(this.lookahead);if(3===i.type&&!h&&"get"===i.value&&m)t="get",u=this.match("["),r=this.parseObjectPropertyKey(),this.context.allowYield=!1,s=this.parseGetterMethod();else if(3===i.type&&!h&&"set"===i.value&&m)t="set",u=this.match("["),r=this.parseObjectPropertyKey(),s=this.parseSetterMethod();else if(7===i.type&&"*"===i.value&&m)t="init",u=this.match("["),r=this.parseObjectPropertyKey(),s=this.parseGeneratorMethod(),c=!0;else if(r||this.throwUnexpectedToken(this.lookahead),t="init",this.match(":")&&!h)!u&&this.isPropertyKey(r,"__proto__")&&(e.value&&this.tolerateError(a.Messages.DuplicateProtoProperty),e.value=!0),this.nextToken(),s=this.inheritCoverGrammar(this.parseAssignmentExpression);else if(this.match("("))s=h?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),c=!0;else if(3===i.type)if(p=this.finalize(n,new o.Identifier(i.value)),this.match("=")){this.context.firstCoverInitializedNameError=this.lookahead,this.nextToken(),l=!0;var d=this.isolateCoverGrammar(this.parseAssignmentExpression);s=this.finalize(n,new o.AssignmentPattern(p,d))}else l=!0,s=p;else this.throwUnexpectedToken(this.nextToken());return this.finalize(n,new o.Property(t,r,u,s,c,l))},e.prototype.parseObjectInitializer=function(){var e=this.createNode();this.expect("{");for(var t=[],n={value:!1};!this.match("}");)t.push(this.parseObjectProperty(n)),this.match("}")||this.expectCommaSeparator();return this.expect("}"),this.finalize(e,new o.ObjectExpression(t))},e.prototype.parseTemplateHead=function(){i.assert(this.lookahead.head,"Template literal must start with a template head");var e=this.createNode(),t=this.nextToken(),n=t.value,r=t.cooked;return this.finalize(e,new o.TemplateElement({raw:n,cooked:r},t.tail))},e.prototype.parseTemplateElement=function(){10!==this.lookahead.type&&this.throwUnexpectedToken();var e=this.createNode(),t=this.nextToken(),n=t.value,i=t.cooked;return this.finalize(e,new o.TemplateElement({raw:n,cooked:i},t.tail))},e.prototype.parseTemplateLiteral=function(){var e=this.createNode(),t=[],n=[],i=this.parseTemplateHead();for(n.push(i);!i.tail;)t.push(this.parseExpression()),i=this.parseTemplateElement(),n.push(i);return this.finalize(e,new o.TemplateLiteral(n,t))},e.prototype.reinterpretExpressionAsPattern=function(e){switch(e.type){case u.Syntax.Identifier:case u.Syntax.MemberExpression:case u.Syntax.RestElement:case u.Syntax.AssignmentPattern:break;case u.Syntax.SpreadElement:e.type=u.Syntax.RestElement,this.reinterpretExpressionAsPattern(e.argument);break;case u.Syntax.ArrayExpression:e.type=u.Syntax.ArrayPattern;for(var t=0;t<e.elements.length;t++)null!==e.elements[t]&&this.reinterpretExpressionAsPattern(e.elements[t]);break;case u.Syntax.ObjectExpression:for(e.type=u.Syntax.ObjectPattern,t=0;t<e.properties.length;t++)this.reinterpretExpressionAsPattern(e.properties[t].value);break;case u.Syntax.AssignmentExpression:e.type=u.Syntax.AssignmentPattern,delete e.operator,this.reinterpretExpressionAsPattern(e.left)}},e.prototype.parseGroupExpression=function(){var e;if(this.expect("("),this.match(")"))this.nextToken(),this.match("=>")||this.expect("=>"),e={type:"ArrowParameterPlaceHolder",params:[],async:!1};else{var t=this.lookahead,n=[];if(this.match("..."))e=this.parseRestElement(n),this.expect(")"),this.match("=>")||this.expect("=>"),e={type:"ArrowParameterPlaceHolder",params:[e],async:!1};else{var i=!1;if(this.context.isBindingElement=!0,e=this.inheritCoverGrammar(this.parseAssignmentExpression),this.match(",")){var r=[];for(this.context.isAssignmentTarget=!1,r.push(e);2!==this.lookahead.type&&this.match(",");){if(this.nextToken(),this.match(")")){this.nextToken();for(var a=0;a<r.length;a++)this.reinterpretExpressionAsPattern(r[a]);i=!0,e={type:"ArrowParameterPlaceHolder",params:r,async:!1}}else if(this.match("...")){for(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),r.push(this.parseRestElement(n)),this.expect(")"),this.match("=>")||this.expect("=>"),this.context.isBindingElement=!1,a=0;a<r.length;a++)this.reinterpretExpressionAsPattern(r[a]);i=!0,e={type:"ArrowParameterPlaceHolder",params:r,async:!1}}else r.push(this.inheritCoverGrammar(this.parseAssignmentExpression));if(i)break}i||(e=this.finalize(this.startNode(t),new o.SequenceExpression(r)))}if(!i){if(this.expect(")"),this.match("=>")&&(e.type===u.Syntax.Identifier&&"yield"===e.name&&(i=!0,e={type:"ArrowParameterPlaceHolder",params:[e],async:!1}),!i)){if(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),e.type===u.Syntax.SequenceExpression)for(a=0;a<e.expressions.length;a++)this.reinterpretExpressionAsPattern(e.expressions[a]);else this.reinterpretExpressionAsPattern(e);e={type:"ArrowParameterPlaceHolder",params:e.type===u.Syntax.SequenceExpression?e.expressions:[e],async:!1}}this.context.isBindingElement=!1}}}return e},e.prototype.parseArguments=function(){this.expect("(");var e=[];if(!this.match(")"))for(;;){var t=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAssignmentExpression);if(e.push(t),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),e},e.prototype.isIdentifierName=function(e){return 3===e.type||4===e.type||1===e.type||5===e.type},e.prototype.parseIdentifierName=function(){var e=this.createNode(),t=this.nextToken();return this.isIdentifierName(t)||this.throwUnexpectedToken(t),this.finalize(e,new o.Identifier(t.value))},e.prototype.parseNewExpression=function(){var e,t=this.createNode(),n=this.parseIdentifierName();if(i.assert("new"===n.name,"New expression must start with `new`"),this.match("."))if(this.nextToken(),3===this.lookahead.type&&this.context.inFunctionBody&&"target"===this.lookahead.value){var r=this.parseIdentifierName();e=new o.MetaProperty(n,r)}else this.throwUnexpectedToken(this.lookahead);else{var a=this.isolateCoverGrammar(this.parseLeftHandSideExpression),s=this.match("(")?this.parseArguments():[];e=new o.NewExpression(a,s),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return this.finalize(t,e)},e.prototype.parseAsyncArgument=function(){var e=this.parseAssignmentExpression();return this.context.firstCoverInitializedNameError=null,e},e.prototype.parseAsyncArguments=function(){this.expect("(");var e=[];if(!this.match(")"))for(;;){var t=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAsyncArgument);if(e.push(t),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),e},e.prototype.parseLeftHandSideExpressionAllowCall=function(){var e,t=this.lookahead,n=this.matchContextualKeyword("async"),i=this.context.allowIn;for(this.context.allowIn=!0,this.matchKeyword("super")&&this.context.inFunctionBody?(e=this.createNode(),this.nextToken(),e=this.finalize(e,new o.Super),this.match("(")||this.match(".")||this.match("[")||this.throwUnexpectedToken(this.lookahead)):e=this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match(".")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(".");var r=this.parseIdentifierName();e=this.finalize(this.startNode(t),new o.StaticMemberExpression(e,r))}else if(this.match("(")){var a=n&&t.lineNumber===this.lookahead.lineNumber;this.context.isBindingElement=!1,this.context.isAssignmentTarget=!1;var s=a?this.parseAsyncArguments():this.parseArguments();if(e=this.finalize(this.startNode(t),new o.CallExpression(e,s)),a&&this.match("=>")){for(var u=0;u<s.length;++u)this.reinterpretExpressionAsPattern(s[u]);e={type:"ArrowParameterPlaceHolder",params:s,async:!0}}}else if(this.match("["))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("["),r=this.isolateCoverGrammar(this.parseExpression),this.expect("]"),e=this.finalize(this.startNode(t),new o.ComputedMemberExpression(e,r));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var c=this.parseTemplateLiteral();e=this.finalize(this.startNode(t),new o.TaggedTemplateExpression(e,c))}return this.context.allowIn=i,e},e.prototype.parseSuper=function(){var e=this.createNode();return this.expectKeyword("super"),this.match("[")||this.match(".")||this.throwUnexpectedToken(this.lookahead),this.finalize(e,new o.Super)},e.prototype.parseLeftHandSideExpression=function(){i.assert(this.context.allowIn,"callee of new expression always allow in keyword.");for(var e=this.startNode(this.lookahead),t=this.matchKeyword("super")&&this.context.inFunctionBody?this.parseSuper():this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match("[")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("[");var n=this.isolateCoverGrammar(this.parseExpression);this.expect("]"),t=this.finalize(e,new o.ComputedMemberExpression(t,n))}else if(this.match("."))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("."),n=this.parseIdentifierName(),t=this.finalize(e,new o.StaticMemberExpression(t,n));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var r=this.parseTemplateLiteral();t=this.finalize(e,new o.TaggedTemplateExpression(t,r))}return t},e.prototype.parseUpdateExpression=function(){var e,t=this.lookahead;if(this.match("++")||this.match("--")){var n=this.startNode(t),i=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),this.context.strict&&e.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(a.Messages.StrictLHSPrefix),this.context.isAssignmentTarget||this.tolerateError(a.Messages.InvalidLHSInAssignment);var r=!0;e=this.finalize(n,new o.UpdateExpression(i.value,e,r)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else if(e=this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall),!this.hasLineTerminator&&7===this.lookahead.type&&(this.match("++")||this.match("--"))){this.context.strict&&e.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(a.Messages.StrictLHSPostfix),this.context.isAssignmentTarget||this.tolerateError(a.Messages.InvalidLHSInAssignment),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var s=this.nextToken().value;r=!1,e=this.finalize(this.startNode(t),new o.UpdateExpression(s,e,r))}return e},e.prototype.parseAwaitExpression=function(){var e=this.createNode();this.nextToken();var t=this.parseUnaryExpression();return this.finalize(e,new o.AwaitExpression(t))},e.prototype.parseUnaryExpression=function(){var e;if(this.match("+")||this.match("-")||this.match("~")||this.match("!")||this.matchKeyword("delete")||this.matchKeyword("void")||this.matchKeyword("typeof")){var t=this.startNode(this.lookahead),n=this.nextToken();e=this.inheritCoverGrammar(this.parseUnaryExpression),e=this.finalize(t,new o.UnaryExpression(n.value,e)),this.context.strict&&"delete"===e.operator&&e.argument.type===u.Syntax.Identifier&&this.tolerateError(a.Messages.StrictDelete),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else e=this.context.await&&this.matchContextualKeyword("await")?this.parseAwaitExpression():this.parseUpdateExpression();return e},e.prototype.parseExponentiationExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseUnaryExpression);if(t.type!==u.Syntax.UnaryExpression&&this.match("**")){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var n=t,i=this.isolateCoverGrammar(this.parseExponentiationExpression);t=this.finalize(this.startNode(e),new o.BinaryExpression("**",n,i))}return t},e.prototype.binaryPrecedence=function(e){var t=e.value;return 7===e.type?this.operatorPrecedence[t]||0:4===e.type&&("instanceof"===t||this.context.allowIn&&"in"===t)?7:0},e.prototype.parseBinaryExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseExponentiationExpression),n=this.lookahead,i=this.binaryPrecedence(n);if(i>0){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;for(var r=[e,this.lookahead],a=t,s=this.isolateCoverGrammar(this.parseExponentiationExpression),u=[a,n.value,s],c=[i];!((i=this.binaryPrecedence(this.lookahead))<=0);){for(;u.length>2&&i<=c[c.length-1];){s=u.pop();var l=u.pop();c.pop(),a=u.pop(),r.pop();var h=this.startNode(r[r.length-1]);u.push(this.finalize(h,new o.BinaryExpression(l,a,s)))}u.push(this.nextToken().value),c.push(i),r.push(this.lookahead),u.push(this.isolateCoverGrammar(this.parseExponentiationExpression))}var p=u.length-1;t=u[p];for(var m=r.pop();p>1;){var d=r.pop(),f=m&&m.lineStart;h=this.startNode(d,f),l=u[p-1],t=this.finalize(h,new o.BinaryExpression(l,u[p-2],t)),p-=2,m=d}}return t},e.prototype.parseConditionalExpression=function(){var e=this.lookahead,t=this.inheritCoverGrammar(this.parseBinaryExpression);if(this.match("?")){this.nextToken();var n=this.context.allowIn;this.context.allowIn=!0;var i=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowIn=n,this.expect(":");var r=this.isolateCoverGrammar(this.parseAssignmentExpression);t=this.finalize(this.startNode(e),new o.ConditionalExpression(t,i,r)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return t},e.prototype.checkPatternParam=function(e,t){switch(t.type){case u.Syntax.Identifier:this.validateParam(e,t,t.name);break;case u.Syntax.RestElement:this.checkPatternParam(e,t.argument);break;case u.Syntax.AssignmentPattern:this.checkPatternParam(e,t.left);break;case u.Syntax.ArrayPattern:for(var n=0;n<t.elements.length;n++)null!==t.elements[n]&&this.checkPatternParam(e,t.elements[n]);break;case u.Syntax.ObjectPattern:for(n=0;n<t.properties.length;n++)this.checkPatternParam(e,t.properties[n].value)}e.simple=e.simple&&t instanceof o.Identifier},e.prototype.reinterpretAsCoverFormalsList=function(e){var t,n=[e],i=!1;switch(e.type){case u.Syntax.Identifier:break;case"ArrowParameterPlaceHolder":n=e.params,i=e.async;break;default:return null}t={simple:!0,paramSet:{}};for(var r=0;r<n.length;++r)(o=n[r]).type===u.Syntax.AssignmentPattern?o.right.type===u.Syntax.YieldExpression&&(o.right.argument&&this.throwUnexpectedToken(this.lookahead),o.right.type=u.Syntax.Identifier,o.right.name="yield",delete o.right.argument,delete o.right.delegate):i&&o.type===u.Syntax.Identifier&&"await"===o.name&&this.throwUnexpectedToken(this.lookahead),this.checkPatternParam(t,o),n[r]=o;if(this.context.strict||!this.context.allowYield)for(r=0;r<n.length;++r){var o;(o=n[r]).type===u.Syntax.YieldExpression&&this.throwUnexpectedToken(this.lookahead)}if(t.message===a.Messages.StrictParamDupe){var s=this.context.strict?t.stricted:t.firstRestricted;this.throwUnexpectedToken(s,t.message)}return{simple:t.simple,params:n,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.parseAssignmentExpression=function(){var e;if(!this.context.allowYield&&this.matchKeyword("yield"))e=this.parseYieldExpression();else{var t=this.lookahead,n=t;if(e=this.parseConditionalExpression(),3===n.type&&n.lineNumber===this.lookahead.lineNumber&&"async"===n.value&&(3===this.lookahead.type||this.matchKeyword("yield"))){var i=this.parsePrimaryExpression();this.reinterpretExpressionAsPattern(i),e={type:"ArrowParameterPlaceHolder",params:[i],async:!0}}if("ArrowParameterPlaceHolder"===e.type||this.match("=>")){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var r=e.async,s=this.reinterpretAsCoverFormalsList(e);if(s){this.hasLineTerminator&&this.tolerateUnexpectedToken(this.lookahead),this.context.firstCoverInitializedNameError=null;var c=this.context.strict,l=this.context.allowStrictDirective;this.context.allowStrictDirective=s.simple;var h=this.context.allowYield,p=this.context.await;this.context.allowYield=!0,this.context.await=r;var m=this.startNode(t);this.expect("=>");var d=void 0;if(this.match("{")){var f=this.context.allowIn;this.context.allowIn=!0,d=this.parseFunctionSourceElements(),this.context.allowIn=f}else d=this.isolateCoverGrammar(this.parseAssignmentExpression);var g=d.type!==u.Syntax.BlockStatement;this.context.strict&&s.firstRestricted&&this.throwUnexpectedToken(s.firstRestricted,s.message),this.context.strict&&s.stricted&&this.tolerateUnexpectedToken(s.stricted,s.message),e=r?this.finalize(m,new o.AsyncArrowFunctionExpression(s.params,d,g)):this.finalize(m,new o.ArrowFunctionExpression(s.params,d,g)),this.context.strict=c,this.context.allowStrictDirective=l,this.context.allowYield=h,this.context.await=p}}else if(this.matchAssign()){if(this.context.isAssignmentTarget||this.tolerateError(a.Messages.InvalidLHSInAssignment),this.context.strict&&e.type===u.Syntax.Identifier){var b=e;this.scanner.isRestrictedWord(b.name)&&this.tolerateUnexpectedToken(n,a.Messages.StrictLHSAssignment),this.scanner.isStrictModeReservedWord(b.name)&&this.tolerateUnexpectedToken(n,a.Messages.StrictReservedWord)}this.match("=")?this.reinterpretExpressionAsPattern(e):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1);var v=(n=this.nextToken()).value,y=this.isolateCoverGrammar(this.parseAssignmentExpression);e=this.finalize(this.startNode(t),new o.AssignmentExpression(v,e,y)),this.context.firstCoverInitializedNameError=null}}return e},e.prototype.parseExpression=function(){var e=this.lookahead,t=this.isolateCoverGrammar(this.parseAssignmentExpression);if(this.match(",")){var n=[];for(n.push(t);2!==this.lookahead.type&&this.match(",");)this.nextToken(),n.push(this.isolateCoverGrammar(this.parseAssignmentExpression));t=this.finalize(this.startNode(e),new o.SequenceExpression(n))}return t},e.prototype.parseStatementListItem=function(){var e;if(this.context.isAssignmentTarget=!0,this.context.isBindingElement=!0,4===this.lookahead.type)switch(this.lookahead.value){case"export":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,a.Messages.IllegalExportDeclaration),e=this.parseExportDeclaration();break;case"import":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,a.Messages.IllegalImportDeclaration),e=this.parseImportDeclaration();break;case"const":e=this.parseLexicalDeclaration({inFor:!1});break;case"function":e=this.parseFunctionDeclaration();break;case"class":e=this.parseClassDeclaration();break;case"let":e=this.isLexicalDeclaration()?this.parseLexicalDeclaration({inFor:!1}):this.parseStatement();break;default:e=this.parseStatement()}else e=this.parseStatement();return e},e.prototype.parseBlock=function(){var e=this.createNode();this.expect("{");for(var t=[];!this.match("}");)t.push(this.parseStatementListItem());return this.expect("}"),this.finalize(e,new o.BlockStatement(t))},e.prototype.parseLexicalBinding=function(e,t){var n=this.createNode(),i=this.parsePattern([],e);this.context.strict&&i.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(i.name)&&this.tolerateError(a.Messages.StrictVarName);var r=null;return"const"===e?this.matchKeyword("in")||this.matchContextualKeyword("of")||(this.match("=")?(this.nextToken(),r=this.isolateCoverGrammar(this.parseAssignmentExpression)):this.throwError(a.Messages.DeclarationMissingInitializer,"const")):(!t.inFor&&i.type!==u.Syntax.Identifier||this.match("="))&&(this.expect("="),r=this.isolateCoverGrammar(this.parseAssignmentExpression)),this.finalize(n,new o.VariableDeclarator(i,r))},e.prototype.parseBindingList=function(e,t){for(var n=[this.parseLexicalBinding(e,t)];this.match(",");)this.nextToken(),n.push(this.parseLexicalBinding(e,t));return n},e.prototype.isLexicalDeclaration=function(){var e=this.scanner.saveState();this.scanner.scanComments();var t=this.scanner.lex();return this.scanner.restoreState(e),3===t.type||7===t.type&&"["===t.value||7===t.type&&"{"===t.value||4===t.type&&"let"===t.value||4===t.type&&"yield"===t.value},e.prototype.parseLexicalDeclaration=function(e){var t=this.createNode(),n=this.nextToken().value;i.assert("let"===n||"const"===n,"Lexical declaration must be either let or const");var r=this.parseBindingList(n,e);return this.consumeSemicolon(),this.finalize(t,new o.VariableDeclaration(r,n))},e.prototype.parseBindingRestElement=function(e,t){var n=this.createNode();this.expect("...");var i=this.parsePattern(e,t);return this.finalize(n,new o.RestElement(i))},e.prototype.parseArrayPattern=function(e,t){var n=this.createNode();this.expect("[");for(var i=[];!this.match("]");)if(this.match(","))this.nextToken(),i.push(null);else{if(this.match("...")){i.push(this.parseBindingRestElement(e,t));break}i.push(this.parsePatternWithDefault(e,t)),this.match("]")||this.expect(",")}return this.expect("]"),this.finalize(n,new o.ArrayPattern(i))},e.prototype.parsePropertyPattern=function(e,t){var n,i,r=this.createNode(),a=!1,s=!1;if(3===this.lookahead.type){var u=this.lookahead;n=this.parseVariableIdentifier();var c=this.finalize(r,new o.Identifier(u.value));if(this.match("=")){e.push(u),s=!0,this.nextToken();var l=this.parseAssignmentExpression();i=this.finalize(this.startNode(u),new o.AssignmentPattern(c,l))}else this.match(":")?(this.expect(":"),i=this.parsePatternWithDefault(e,t)):(e.push(u),s=!0,i=c)}else a=this.match("["),n=this.parseObjectPropertyKey(),this.expect(":"),i=this.parsePatternWithDefault(e,t);return this.finalize(r,new o.Property("init",n,a,i,!1,s))},e.prototype.parseObjectPattern=function(e,t){var n=this.createNode(),i=[];for(this.expect("{");!this.match("}");)i.push(this.parsePropertyPattern(e,t)),this.match("}")||this.expect(",");return this.expect("}"),this.finalize(n,new o.ObjectPattern(i))},e.prototype.parsePattern=function(e,t){var n;return this.match("[")?n=this.parseArrayPattern(e,t):this.match("{")?n=this.parseObjectPattern(e,t):(!this.matchKeyword("let")||"const"!==t&&"let"!==t||this.tolerateUnexpectedToken(this.lookahead,a.Messages.LetInLexicalBinding),e.push(this.lookahead),n=this.parseVariableIdentifier(t)),n},e.prototype.parsePatternWithDefault=function(e,t){var n=this.lookahead,i=this.parsePattern(e,t);if(this.match("=")){this.nextToken();var r=this.context.allowYield;this.context.allowYield=!0;var a=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowYield=r,i=this.finalize(this.startNode(n),new o.AssignmentPattern(i,a))}return i},e.prototype.parseVariableIdentifier=function(e){var t=this.createNode(),n=this.nextToken();return 4===n.type&&"yield"===n.value?this.context.strict?this.tolerateUnexpectedToken(n,a.Messages.StrictReservedWord):this.context.allowYield||this.throwUnexpectedToken(n):3!==n.type?this.context.strict&&4===n.type&&this.scanner.isStrictModeReservedWord(n.value)?this.tolerateUnexpectedToken(n,a.Messages.StrictReservedWord):(this.context.strict||"let"!==n.value||"var"!==e)&&this.throwUnexpectedToken(n):(this.context.isModule||this.context.await)&&3===n.type&&"await"===n.value&&this.tolerateUnexpectedToken(n),this.finalize(t,new o.Identifier(n.value))},e.prototype.parseVariableDeclaration=function(e){var t=this.createNode(),n=this.parsePattern([],"var");this.context.strict&&n.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(n.name)&&this.tolerateError(a.Messages.StrictVarName);var i=null;return this.match("=")?(this.nextToken(),i=this.isolateCoverGrammar(this.parseAssignmentExpression)):n.type===u.Syntax.Identifier||e.inFor||this.expect("="),this.finalize(t,new o.VariableDeclarator(n,i))},e.prototype.parseVariableDeclarationList=function(e){var t={inFor:e.inFor},n=[];for(n.push(this.parseVariableDeclaration(t));this.match(",");)this.nextToken(),n.push(this.parseVariableDeclaration(t));return n},e.prototype.parseVariableStatement=function(){var e=this.createNode();this.expectKeyword("var");var t=this.parseVariableDeclarationList({inFor:!1});return this.consumeSemicolon(),this.finalize(e,new o.VariableDeclaration(t,"var"))},e.prototype.parseEmptyStatement=function(){var e=this.createNode();return this.expect(";"),this.finalize(e,new o.EmptyStatement)},e.prototype.parseExpressionStatement=function(){var e=this.createNode(),t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new o.ExpressionStatement(t))},e.prototype.parseIfClause=function(){return this.context.strict&&this.matchKeyword("function")&&this.tolerateError(a.Messages.StrictFunction),this.parseStatement()},e.prototype.parseIfStatement=function(){var e,t=this.createNode(),n=null;this.expectKeyword("if"),this.expect("(");var i=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new o.EmptyStatement)):(this.expect(")"),e=this.parseIfClause(),this.matchKeyword("else")&&(this.nextToken(),n=this.parseIfClause())),this.finalize(t,new o.IfStatement(i,e,n))},e.prototype.parseDoWhileStatement=function(){var e=this.createNode();this.expectKeyword("do");var t=this.context.inIteration;this.context.inIteration=!0;var n=this.parseStatement();this.context.inIteration=t,this.expectKeyword("while"),this.expect("(");var i=this.parseExpression();return!this.match(")")&&this.config.tolerant?this.tolerateUnexpectedToken(this.nextToken()):(this.expect(")"),this.match(";")&&this.nextToken()),this.finalize(e,new o.DoWhileStatement(n,i))},e.prototype.parseWhileStatement=function(){var e,t=this.createNode();this.expectKeyword("while"),this.expect("(");var n=this.parseExpression();if(!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new o.EmptyStatement);else{this.expect(")");var i=this.context.inIteration;this.context.inIteration=!0,e=this.parseStatement(),this.context.inIteration=i}return this.finalize(t,new o.WhileStatement(n,e))},e.prototype.parseForStatement=function(){var e,t,n,i=null,r=null,s=null,c=!0,l=this.createNode();if(this.expectKeyword("for"),this.expect("("),this.match(";"))this.nextToken();else if(this.matchKeyword("var")){i=this.createNode(),this.nextToken();var h=this.context.allowIn;this.context.allowIn=!1;var p=this.parseVariableDeclarationList({inFor:!0});if(this.context.allowIn=h,1===p.length&&this.matchKeyword("in")){var m=p[0];m.init&&(m.id.type===u.Syntax.ArrayPattern||m.id.type===u.Syntax.ObjectPattern||this.context.strict)&&this.tolerateError(a.Messages.ForInOfLoopInitializer,"for-in"),i=this.finalize(i,new o.VariableDeclaration(p,"var")),this.nextToken(),e=i,t=this.parseExpression(),i=null}else 1===p.length&&null===p[0].init&&this.matchContextualKeyword("of")?(i=this.finalize(i,new o.VariableDeclaration(p,"var")),this.nextToken(),e=i,t=this.parseAssignmentExpression(),i=null,c=!1):(i=this.finalize(i,new o.VariableDeclaration(p,"var")),this.expect(";"))}else if(this.matchKeyword("const")||this.matchKeyword("let")){i=this.createNode();var d=this.nextToken().value;this.context.strict||"in"!==this.lookahead.value?(h=this.context.allowIn,this.context.allowIn=!1,p=this.parseBindingList(d,{inFor:!0}),this.context.allowIn=h,1===p.length&&null===p[0].init&&this.matchKeyword("in")?(i=this.finalize(i,new o.VariableDeclaration(p,d)),this.nextToken(),e=i,t=this.parseExpression(),i=null):1===p.length&&null===p[0].init&&this.matchContextualKeyword("of")?(i=this.finalize(i,new o.VariableDeclaration(p,d)),this.nextToken(),e=i,t=this.parseAssignmentExpression(),i=null,c=!1):(this.consumeSemicolon(),i=this.finalize(i,new o.VariableDeclaration(p,d)))):(i=this.finalize(i,new o.Identifier(d)),this.nextToken(),e=i,t=this.parseExpression(),i=null)}else{var f=this.lookahead;if(h=this.context.allowIn,this.context.allowIn=!1,i=this.inheritCoverGrammar(this.parseAssignmentExpression),this.context.allowIn=h,this.matchKeyword("in"))this.context.isAssignmentTarget&&i.type!==u.Syntax.AssignmentExpression||this.tolerateError(a.Messages.InvalidLHSInForIn),this.nextToken(),this.reinterpretExpressionAsPattern(i),e=i,t=this.parseExpression(),i=null;else if(this.matchContextualKeyword("of"))this.context.isAssignmentTarget&&i.type!==u.Syntax.AssignmentExpression||this.tolerateError(a.Messages.InvalidLHSInForLoop),this.nextToken(),this.reinterpretExpressionAsPattern(i),e=i,t=this.parseAssignmentExpression(),i=null,c=!1;else{if(this.match(",")){for(var g=[i];this.match(",");)this.nextToken(),g.push(this.isolateCoverGrammar(this.parseAssignmentExpression));i=this.finalize(this.startNode(f),new o.SequenceExpression(g))}this.expect(";")}}if(void 0===e&&(this.match(";")||(r=this.parseExpression()),this.expect(";"),this.match(")")||(s=this.parseExpression())),!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),n=this.finalize(this.createNode(),new o.EmptyStatement);else{this.expect(")");var b=this.context.inIteration;this.context.inIteration=!0,n=this.isolateCoverGrammar(this.parseStatement),this.context.inIteration=b}return void 0===e?this.finalize(l,new o.ForStatement(i,r,s,n)):c?this.finalize(l,new o.ForInStatement(e,t,n)):this.finalize(l,new o.ForOfStatement(e,t,n))},e.prototype.parseContinueStatement=function(){var e=this.createNode();this.expectKeyword("continue");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var n=this.parseVariableIdentifier();t=n;var i="$"+n.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,i)||this.throwError(a.Messages.UnknownLabel,n.name)}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.throwError(a.Messages.IllegalContinue),this.finalize(e,new o.ContinueStatement(t))},e.prototype.parseBreakStatement=function(){var e=this.createNode();this.expectKeyword("break");var t=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var n=this.parseVariableIdentifier(),i="$"+n.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,i)||this.throwError(a.Messages.UnknownLabel,n.name),t=n}return this.consumeSemicolon(),null!==t||this.context.inIteration||this.context.inSwitch||this.throwError(a.Messages.IllegalBreak),this.finalize(e,new o.BreakStatement(t))},e.prototype.parseReturnStatement=function(){this.context.inFunctionBody||this.tolerateError(a.Messages.IllegalReturn);var e=this.createNode();this.expectKeyword("return");var t=(this.match(";")||this.match("}")||this.hasLineTerminator||2===this.lookahead.type)&&8!==this.lookahead.type&&10!==this.lookahead.type?null:this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new o.ReturnStatement(t))},e.prototype.parseWithStatement=function(){this.context.strict&&this.tolerateError(a.Messages.StrictModeWith);var e,t=this.createNode();this.expectKeyword("with"),this.expect("(");var n=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),e=this.finalize(this.createNode(),new o.EmptyStatement)):(this.expect(")"),e=this.parseStatement()),this.finalize(t,new o.WithStatement(n,e))},e.prototype.parseSwitchCase=function(){var e,t=this.createNode();this.matchKeyword("default")?(this.nextToken(),e=null):(this.expectKeyword("case"),e=this.parseExpression()),this.expect(":");for(var n=[];!(this.match("}")||this.matchKeyword("default")||this.matchKeyword("case"));)n.push(this.parseStatementListItem());return this.finalize(t,new o.SwitchCase(e,n))},e.prototype.parseSwitchStatement=function(){var e=this.createNode();this.expectKeyword("switch"),this.expect("(");var t=this.parseExpression();this.expect(")");var n=this.context.inSwitch;this.context.inSwitch=!0;var i=[],r=!1;for(this.expect("{");!this.match("}");){var s=this.parseSwitchCase();null===s.test&&(r&&this.throwError(a.Messages.MultipleDefaultsInSwitch),r=!0),i.push(s)}return this.expect("}"),this.context.inSwitch=n,this.finalize(e,new o.SwitchStatement(t,i))},e.prototype.parseLabelledStatement=function(){var e,t=this.createNode(),n=this.parseExpression();if(n.type===u.Syntax.Identifier&&this.match(":")){this.nextToken();var i=n,r="$"+i.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,r)&&this.throwError(a.Messages.Redeclaration,"Label",i.name),this.context.labelSet[r]=!0;var s=void 0;if(this.matchKeyword("class"))this.tolerateUnexpectedToken(this.lookahead),s=this.parseClassDeclaration();else if(this.matchKeyword("function")){var c=this.lookahead,l=this.parseFunctionDeclaration();this.context.strict?this.tolerateUnexpectedToken(c,a.Messages.StrictFunction):l.generator&&this.tolerateUnexpectedToken(c,a.Messages.GeneratorInLegacyContext),s=l}else s=this.parseStatement();delete this.context.labelSet[r],e=new o.LabeledStatement(i,s)}else this.consumeSemicolon(),e=new o.ExpressionStatement(n);return this.finalize(t,e)},e.prototype.parseThrowStatement=function(){var e=this.createNode();this.expectKeyword("throw"),this.hasLineTerminator&&this.throwError(a.Messages.NewlineAfterThrow);var t=this.parseExpression();return this.consumeSemicolon(),this.finalize(e,new o.ThrowStatement(t))},e.prototype.parseCatchClause=function(){var e=this.createNode();this.expectKeyword("catch"),this.expect("("),this.match(")")&&this.throwUnexpectedToken(this.lookahead);for(var t=[],n=this.parsePattern(t),i={},r=0;r<t.length;r++){var s="$"+t[r].value;Object.prototype.hasOwnProperty.call(i,s)&&this.tolerateError(a.Messages.DuplicateBinding,t[r].value),i[s]=!0}this.context.strict&&n.type===u.Syntax.Identifier&&this.scanner.isRestrictedWord(n.name)&&this.tolerateError(a.Messages.StrictCatchVariable),this.expect(")");var c=this.parseBlock();return this.finalize(e,new o.CatchClause(n,c))},e.prototype.parseFinallyClause=function(){return this.expectKeyword("finally"),this.parseBlock()},e.prototype.parseTryStatement=function(){var e=this.createNode();this.expectKeyword("try");var t=this.parseBlock(),n=this.matchKeyword("catch")?this.parseCatchClause():null,i=this.matchKeyword("finally")?this.parseFinallyClause():null;return n||i||this.throwError(a.Messages.NoCatchOrFinally),this.finalize(e,new o.TryStatement(t,n,i))},e.prototype.parseDebuggerStatement=function(){var e=this.createNode();return this.expectKeyword("debugger"),this.consumeSemicolon(),this.finalize(e,new o.DebuggerStatement)},e.prototype.parseStatement=function(){var e;switch(this.lookahead.type){case 1:case 5:case 6:case 8:case 10:case 9:e=this.parseExpressionStatement();break;case 7:var t=this.lookahead.value;e="{"===t?this.parseBlock():"("===t?this.parseExpressionStatement():";"===t?this.parseEmptyStatement():this.parseExpressionStatement();break;case 3:e=this.matchAsyncFunction()?this.parseFunctionDeclaration():this.parseLabelledStatement();break;case 4:switch(this.lookahead.value){case"break":e=this.parseBreakStatement();break;case"continue":e=this.parseContinueStatement();break;case"debugger":e=this.parseDebuggerStatement();break;case"do":e=this.parseDoWhileStatement();break;case"for":e=this.parseForStatement();break;case"function":e=this.parseFunctionDeclaration();break;case"if":e=this.parseIfStatement();break;case"return":e=this.parseReturnStatement();break;case"switch":e=this.parseSwitchStatement();break;case"throw":e=this.parseThrowStatement();break;case"try":e=this.parseTryStatement();break;case"var":e=this.parseVariableStatement();break;case"while":e=this.parseWhileStatement();break;case"with":e=this.parseWithStatement();break;default:e=this.parseExpressionStatement()}break;default:e=this.throwUnexpectedToken(this.lookahead)}return e},e.prototype.parseFunctionSourceElements=function(){var e=this.createNode();this.expect("{");var t=this.parseDirectivePrologues(),n=this.context.labelSet,i=this.context.inIteration,r=this.context.inSwitch,a=this.context.inFunctionBody;for(this.context.labelSet={},this.context.inIteration=!1,this.context.inSwitch=!1,this.context.inFunctionBody=!0;2!==this.lookahead.type&&!this.match("}");)t.push(this.parseStatementListItem());return this.expect("}"),this.context.labelSet=n,this.context.inIteration=i,this.context.inSwitch=r,this.context.inFunctionBody=a,this.finalize(e,new o.BlockStatement(t))},e.prototype.validateParam=function(e,t,n){var i="$"+n;this.context.strict?(this.scanner.isRestrictedWord(n)&&(e.stricted=t,e.message=a.Messages.StrictParamName),Object.prototype.hasOwnProperty.call(e.paramSet,i)&&(e.stricted=t,e.message=a.Messages.StrictParamDupe)):e.firstRestricted||(this.scanner.isRestrictedWord(n)?(e.firstRestricted=t,e.message=a.Messages.StrictParamName):this.scanner.isStrictModeReservedWord(n)?(e.firstRestricted=t,e.message=a.Messages.StrictReservedWord):Object.prototype.hasOwnProperty.call(e.paramSet,i)&&(e.stricted=t,e.message=a.Messages.StrictParamDupe)),"function"==typeof Object.defineProperty?Object.defineProperty(e.paramSet,i,{value:!0,enumerable:!0,writable:!0,configurable:!0}):e.paramSet[i]=!0},e.prototype.parseRestElement=function(e){var t=this.createNode();this.expect("...");var n=this.parsePattern(e);return this.match("=")&&this.throwError(a.Messages.DefaultRestParameter),this.match(")")||this.throwError(a.Messages.ParameterAfterRestParameter),this.finalize(t,new o.RestElement(n))},e.prototype.parseFormalParameter=function(e){for(var t=[],n=this.match("...")?this.parseRestElement(t):this.parsePatternWithDefault(t),i=0;i<t.length;i++)this.validateParam(e,t[i],t[i].value);e.simple=e.simple&&n instanceof o.Identifier,e.params.push(n)},e.prototype.parseFormalParameters=function(e){var t;if(t={simple:!0,params:[],firstRestricted:e},this.expect("("),!this.match(")"))for(t.paramSet={};2!==this.lookahead.type&&(this.parseFormalParameter(t),!this.match(")"))&&(this.expect(","),!this.match(")")););return this.expect(")"),{simple:t.simple,params:t.params,stricted:t.stricted,firstRestricted:t.firstRestricted,message:t.message}},e.prototype.matchAsyncFunction=function(){var e=this.matchContextualKeyword("async");if(e){var t=this.scanner.saveState();this.scanner.scanComments();var n=this.scanner.lex();this.scanner.restoreState(t),e=t.lineNumber===n.lineNumber&&4===n.type&&"function"===n.value}return e},e.prototype.parseFunctionDeclaration=function(e){var t=this.createNode(),n=this.matchContextualKeyword("async");n&&this.nextToken(),this.expectKeyword("function");var i,r=!n&&this.match("*");r&&this.nextToken();var s=null,u=null;if(!e||!this.match("(")){var c=this.lookahead;s=this.parseVariableIdentifier(),this.context.strict?this.scanner.isRestrictedWord(c.value)&&this.tolerateUnexpectedToken(c,a.Messages.StrictFunctionName):this.scanner.isRestrictedWord(c.value)?(u=c,i=a.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(c.value)&&(u=c,i=a.Messages.StrictReservedWord)}var l=this.context.await,h=this.context.allowYield;this.context.await=n,this.context.allowYield=!r;var p=this.parseFormalParameters(u),m=p.params,d=p.stricted;u=p.firstRestricted,p.message&&(i=p.message);var f=this.context.strict,g=this.context.allowStrictDirective;this.context.allowStrictDirective=p.simple;var b=this.parseFunctionSourceElements();return this.context.strict&&u&&this.throwUnexpectedToken(u,i),this.context.strict&&d&&this.tolerateUnexpectedToken(d,i),this.context.strict=f,this.context.allowStrictDirective=g,this.context.await=l,this.context.allowYield=h,n?this.finalize(t,new o.AsyncFunctionDeclaration(s,m,b)):this.finalize(t,new o.FunctionDeclaration(s,m,b,r))},e.prototype.parseFunctionExpression=function(){var e=this.createNode(),t=this.matchContextualKeyword("async");t&&this.nextToken(),this.expectKeyword("function");var n,i=!t&&this.match("*");i&&this.nextToken();var r,s=null,u=this.context.await,c=this.context.allowYield;if(this.context.await=t,this.context.allowYield=!i,!this.match("(")){var l=this.lookahead;s=this.context.strict||i||!this.matchKeyword("yield")?this.parseVariableIdentifier():this.parseIdentifierName(),this.context.strict?this.scanner.isRestrictedWord(l.value)&&this.tolerateUnexpectedToken(l,a.Messages.StrictFunctionName):this.scanner.isRestrictedWord(l.value)?(r=l,n=a.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(l.value)&&(r=l,n=a.Messages.StrictReservedWord)}var h=this.parseFormalParameters(r),p=h.params,m=h.stricted;r=h.firstRestricted,h.message&&(n=h.message);var d=this.context.strict,f=this.context.allowStrictDirective;this.context.allowStrictDirective=h.simple;var g=this.parseFunctionSourceElements();return this.context.strict&&r&&this.throwUnexpectedToken(r,n),this.context.strict&&m&&this.tolerateUnexpectedToken(m,n),this.context.strict=d,this.context.allowStrictDirective=f,this.context.await=u,this.context.allowYield=c,t?this.finalize(e,new o.AsyncFunctionExpression(s,p,g)):this.finalize(e,new o.FunctionExpression(s,p,g,i))},e.prototype.parseDirective=function(){var e=this.lookahead,t=this.createNode(),n=this.parseExpression(),i=n.type===u.Syntax.Literal?this.getTokenRaw(e).slice(1,-1):null;return this.consumeSemicolon(),this.finalize(t,i?new o.Directive(n,i):new o.ExpressionStatement(n))},e.prototype.parseDirectivePrologues=function(){for(var e=null,t=[];;){var n=this.lookahead;if(8!==n.type)break;var i=this.parseDirective();t.push(i);var r=i.directive;if("string"!=typeof r)break;"use strict"===r?(this.context.strict=!0,e&&this.tolerateUnexpectedToken(e,a.Messages.StrictOctalLiteral),this.context.allowStrictDirective||this.tolerateUnexpectedToken(n,a.Messages.IllegalLanguageModeDirective)):!e&&n.octal&&(e=n)}return t},e.prototype.qualifiedPropertyName=function(e){switch(e.type){case 3:case 8:case 1:case 5:case 6:case 4:return!0;case 7:return"["===e.value}return!1},e.prototype.parseGetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var n=this.parseFormalParameters();n.params.length>0&&this.tolerateError(a.Messages.BadGetterArity);var i=this.parsePropertyMethod(n);return this.context.allowYield=t,this.finalize(e,new o.FunctionExpression(null,n.params,i,!1))},e.prototype.parseSetterMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var n=this.parseFormalParameters();1!==n.params.length?this.tolerateError(a.Messages.BadSetterArity):n.params[0]instanceof o.RestElement&&this.tolerateError(a.Messages.BadSetterRestParameter);var i=this.parsePropertyMethod(n);return this.context.allowYield=t,this.finalize(e,new o.FunctionExpression(null,n.params,i,!1))},e.prototype.parseGeneratorMethod=function(){var e=this.createNode(),t=this.context.allowYield;this.context.allowYield=!0;var n=this.parseFormalParameters();this.context.allowYield=!1;var i=this.parsePropertyMethod(n);return this.context.allowYield=t,this.finalize(e,new o.FunctionExpression(null,n.params,i,!0))},e.prototype.isStartOfExpression=function(){var e=!0,t=this.lookahead.value;switch(this.lookahead.type){case 7:e="["===t||"("===t||"{"===t||"+"===t||"-"===t||"!"===t||"~"===t||"++"===t||"--"===t||"/"===t||"/="===t;break;case 4:e="class"===t||"delete"===t||"function"===t||"let"===t||"new"===t||"super"===t||"this"===t||"typeof"===t||"void"===t||"yield"===t}return e},e.prototype.parseYieldExpression=function(){var e=this.createNode();this.expectKeyword("yield");var t=null,n=!1;if(!this.hasLineTerminator){var i=this.context.allowYield;this.context.allowYield=!1,(n=this.match("*"))?(this.nextToken(),t=this.parseAssignmentExpression()):this.isStartOfExpression()&&(t=this.parseAssignmentExpression()),this.context.allowYield=i}return this.finalize(e,new o.YieldExpression(t,n))},e.prototype.parseClassElement=function(e){var t=this.lookahead,n=this.createNode(),i="",r=null,s=null,u=!1,c=!1,l=!1,h=!1;if(this.match("*"))this.nextToken();else if(u=this.match("["),"static"===(r=this.parseObjectPropertyKey()).name&&(this.qualifiedPropertyName(this.lookahead)||this.match("*"))&&(t=this.lookahead,l=!0,u=this.match("["),this.match("*")?this.nextToken():r=this.parseObjectPropertyKey()),3===t.type&&!this.hasLineTerminator&&"async"===t.value){var p=this.lookahead.value;":"!==p&&"("!==p&&"*"!==p&&(h=!0,t=this.lookahead,r=this.parseObjectPropertyKey(),3===t.type&&"constructor"===t.value&&this.tolerateUnexpectedToken(t,a.Messages.ConstructorIsAsync))}var m=this.qualifiedPropertyName(this.lookahead);return 3===t.type?"get"===t.value&&m?(i="get",u=this.match("["),r=this.parseObjectPropertyKey(),this.context.allowYield=!1,s=this.parseGetterMethod()):"set"===t.value&&m&&(i="set",u=this.match("["),r=this.parseObjectPropertyKey(),s=this.parseSetterMethod()):7===t.type&&"*"===t.value&&m&&(i="init",u=this.match("["),r=this.parseObjectPropertyKey(),s=this.parseGeneratorMethod(),c=!0),!i&&r&&this.match("(")&&(i="init",s=h?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),c=!0),i||this.throwUnexpectedToken(this.lookahead),"init"===i&&(i="method"),u||(l&&this.isPropertyKey(r,"prototype")&&this.throwUnexpectedToken(t,a.Messages.StaticPrototype),!l&&this.isPropertyKey(r,"constructor")&&(("method"!==i||!c||s&&s.generator)&&this.throwUnexpectedToken(t,a.Messages.ConstructorSpecialMethod),e.value?this.throwUnexpectedToken(t,a.Messages.DuplicateConstructor):e.value=!0,i="constructor")),this.finalize(n,new o.MethodDefinition(r,u,s,i,l))},e.prototype.parseClassElementList=function(){var e=[],t={value:!1};for(this.expect("{");!this.match("}");)this.match(";")?this.nextToken():e.push(this.parseClassElement(t));return this.expect("}"),e},e.prototype.parseClassBody=function(){var e=this.createNode(),t=this.parseClassElementList();return this.finalize(e,new o.ClassBody(t))},e.prototype.parseClassDeclaration=function(e){var t=this.createNode(),n=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var i=e&&3!==this.lookahead.type?null:this.parseVariableIdentifier(),r=null;this.matchKeyword("extends")&&(this.nextToken(),r=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var a=this.parseClassBody();return this.context.strict=n,this.finalize(t,new o.ClassDeclaration(i,r,a))},e.prototype.parseClassExpression=function(){var e=this.createNode(),t=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var n=3===this.lookahead.type?this.parseVariableIdentifier():null,i=null;this.matchKeyword("extends")&&(this.nextToken(),i=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var r=this.parseClassBody();return this.context.strict=t,this.finalize(e,new o.ClassExpression(n,i,r))},e.prototype.parseModule=function(){this.context.strict=!0,this.context.isModule=!0,this.scanner.isModule=!0;for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new o.Module(t))},e.prototype.parseScript=function(){for(var e=this.createNode(),t=this.parseDirectivePrologues();2!==this.lookahead.type;)t.push(this.parseStatementListItem());return this.finalize(e,new o.Script(t))},e.prototype.parseModuleSpecifier=function(){var e=this.createNode();8!==this.lookahead.type&&this.throwError(a.Messages.InvalidModuleSpecifier);var t=this.nextToken(),n=this.getTokenRaw(t);return this.finalize(e,new o.Literal(t.value,n))},e.prototype.parseImportSpecifier=function(){var e,t,n=this.createNode();return 3===this.lookahead.type?(t=e=this.parseVariableIdentifier(),this.matchContextualKeyword("as")&&(this.nextToken(),t=this.parseVariableIdentifier())):(t=e=this.parseIdentifierName(),this.matchContextualKeyword("as")?(this.nextToken(),t=this.parseVariableIdentifier()):this.throwUnexpectedToken(this.nextToken())),this.finalize(n,new o.ImportSpecifier(t,e))},e.prototype.parseNamedImports=function(){this.expect("{");for(var e=[];!this.match("}");)e.push(this.parseImportSpecifier()),this.match("}")||this.expect(",");return this.expect("}"),e},e.prototype.parseImportDefaultSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName();return this.finalize(e,new o.ImportDefaultSpecifier(t))},e.prototype.parseImportNamespaceSpecifier=function(){var e=this.createNode();this.expect("*"),this.matchContextualKeyword("as")||this.throwError(a.Messages.NoAsAfterImportNamespace),this.nextToken();var t=this.parseIdentifierName();return this.finalize(e,new o.ImportNamespaceSpecifier(t))},e.prototype.parseImportDeclaration=function(){this.context.inFunctionBody&&this.throwError(a.Messages.IllegalImportDeclaration);var e,t=this.createNode();this.expectKeyword("import");var n=[];if(8===this.lookahead.type)e=this.parseModuleSpecifier();else{if(this.match("{")?n=n.concat(this.parseNamedImports()):this.match("*")?n.push(this.parseImportNamespaceSpecifier()):this.isIdentifierName(this.lookahead)&&!this.matchKeyword("default")?(n.push(this.parseImportDefaultSpecifier()),this.match(",")&&(this.nextToken(),this.match("*")?n.push(this.parseImportNamespaceSpecifier()):this.match("{")?n=n.concat(this.parseNamedImports()):this.throwUnexpectedToken(this.lookahead))):this.throwUnexpectedToken(this.nextToken()),!this.matchContextualKeyword("from")){var i=this.lookahead.value?a.Messages.UnexpectedToken:a.Messages.MissingFromClause;this.throwError(i,this.lookahead.value)}this.nextToken(),e=this.parseModuleSpecifier()}return this.consumeSemicolon(),this.finalize(t,new o.ImportDeclaration(n,e))},e.prototype.parseExportSpecifier=function(){var e=this.createNode(),t=this.parseIdentifierName(),n=t;return this.matchContextualKeyword("as")&&(this.nextToken(),n=this.parseIdentifierName()),this.finalize(e,new o.ExportSpecifier(t,n))},e.prototype.parseExportDeclaration=function(){this.context.inFunctionBody&&this.throwError(a.Messages.IllegalExportDeclaration);var e,t=this.createNode();if(this.expectKeyword("export"),this.matchKeyword("default"))if(this.nextToken(),this.matchKeyword("function")){var n=this.parseFunctionDeclaration(!0);e=this.finalize(t,new o.ExportDefaultDeclaration(n))}else this.matchKeyword("class")?(n=this.parseClassDeclaration(!0),e=this.finalize(t,new o.ExportDefaultDeclaration(n))):this.matchContextualKeyword("async")?(n=this.matchAsyncFunction()?this.parseFunctionDeclaration(!0):this.parseAssignmentExpression(),e=this.finalize(t,new o.ExportDefaultDeclaration(n))):(this.matchContextualKeyword("from")&&this.throwError(a.Messages.UnexpectedToken,this.lookahead.value),n=this.match("{")?this.parseObjectInitializer():this.match("[")?this.parseArrayInitializer():this.parseAssignmentExpression(),this.consumeSemicolon(),e=this.finalize(t,new o.ExportDefaultDeclaration(n)));else if(this.match("*")){if(this.nextToken(),!this.matchContextualKeyword("from")){var i=this.lookahead.value?a.Messages.UnexpectedToken:a.Messages.MissingFromClause;this.throwError(i,this.lookahead.value)}this.nextToken();var r=this.parseModuleSpecifier();this.consumeSemicolon(),e=this.finalize(t,new o.ExportAllDeclaration(r))}else if(4===this.lookahead.type){switch(n=void 0,this.lookahead.value){case"let":case"const":n=this.parseLexicalDeclaration({inFor:!1});break;case"var":case"class":case"function":n=this.parseStatementListItem();break;default:this.throwUnexpectedToken(this.lookahead)}e=this.finalize(t,new o.ExportNamedDeclaration(n,[],null))}else if(this.matchAsyncFunction())n=this.parseFunctionDeclaration(),e=this.finalize(t,new o.ExportNamedDeclaration(n,[],null));else{var s=[],u=null,c=!1;for(this.expect("{");!this.match("}");)c=c||this.matchKeyword("default"),s.push(this.parseExportSpecifier()),this.match("}")||this.expect(",");this.expect("}"),this.matchContextualKeyword("from")?(this.nextToken(),u=this.parseModuleSpecifier(),this.consumeSemicolon()):c?(i=this.lookahead.value?a.Messages.UnexpectedToken:a.Messages.MissingFromClause,this.throwError(i,this.lookahead.value)):this.consumeSemicolon(),e=this.finalize(t,new o.ExportNamedDeclaration(null,s,u))}return e},e}();t.Parser=l},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.assert=function(e,t){if(!e)throw new Error("ASSERT: "+t)}},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(){this.errors=[],this.tolerant=!1}return e.prototype.recordError=function(e){this.errors.push(e)},e.prototype.tolerate=function(e){if(!this.tolerant)throw e;this.recordError(e)},e.prototype.constructError=function(e,t){var n=new Error(e);try{throw n}catch(e){Object.create&&Object.defineProperty&&(n=Object.create(e),Object.defineProperty(n,"column",{value:t}))}return n},e.prototype.createError=function(e,t,n,i){var r="Line "+t+": "+i,a=this.constructError(r,n);return a.index=e,a.lineNumber=t,a.description=i,a},e.prototype.throwError=function(e,t,n,i){throw this.createError(e,t,n,i)},e.prototype.tolerateError=function(e,t,n,i){var r=this.createError(e,t,n,i);if(!this.tolerant)throw r;this.recordError(r)},e}();t.ErrorHandler=n},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Messages={BadGetterArity:"Getter must not have any formal parameters",BadSetterArity:"Setter must have exactly one formal parameter",BadSetterRestParameter:"Setter function argument must not be a rest parameter",ConstructorIsAsync:"Class constructor may not be an async method",ConstructorSpecialMethod:"Class constructor may not be an accessor",DeclarationMissingInitializer:"Missing initializer in %0 declaration",DefaultRestParameter:"Unexpected token =",DuplicateBinding:"Duplicate binding %0",DuplicateConstructor:"A class may only have one constructor",DuplicateProtoProperty:"Duplicate __proto__ fields are not allowed in object literals",ForInOfLoopInitializer:"%0 loop variable declaration may not have an initializer",GeneratorInLegacyContext:"Generator declarations are not allowed in legacy contexts",IllegalBreak:"Illegal break statement",IllegalContinue:"Illegal continue statement",IllegalExportDeclaration:"Unexpected token",IllegalImportDeclaration:"Unexpected token",IllegalLanguageModeDirective:"Illegal 'use strict' directive in function with non-simple parameter list",IllegalReturn:"Illegal return statement",InvalidEscapedReservedWord:"Keyword must not contain escaped characters",InvalidHexEscapeSequence:"Invalid hexadecimal escape sequence",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",InvalidLHSInForLoop:"Invalid left-hand side in for-loop",InvalidModuleSpecifier:"Unexpected token",InvalidRegExp:"Invalid regular expression",LetInLexicalBinding:"let is disallowed as a lexically bound name",MissingFromClause:"Unexpected token",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NewlineAfterThrow:"Illegal newline after throw",NoAsAfterImportNamespace:"Unexpected token",NoCatchOrFinally:"Missing catch or finally after try",ParameterAfterRestParameter:"Rest parameter must be last formal parameter",Redeclaration:"%0 '%1' has already been declared",StaticPrototype:"Classes may not have static property named prototype",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictFunction:"In strict mode code, functions can only be declared at top level or inside a block",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictModeWith:"Strict mode code may not include a with statement",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictReservedWord:"Use of future reserved word in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",TemplateOctalLiteral:"Octal literals are not allowed in template strings.",UnexpectedEOS:"Unexpected end of input",UnexpectedIdentifier:"Unexpected identifier",UnexpectedNumber:"Unexpected number",UnexpectedReserved:"Unexpected reserved word",UnexpectedString:"Unexpected string",UnexpectedTemplate:"Unexpected quasi %0",UnexpectedToken:"Unexpected token %0",UnexpectedTokenIllegal:"Unexpected token ILLEGAL",UnknownLabel:"Undefined label '%0'",UnterminatedRegExp:"Invalid regular expression: missing /"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(9),r=n(4),a=n(11);function o(e){return"0123456789abcdef".indexOf(e.toLowerCase())}function s(e){return"01234567".indexOf(e)}var u=function(){function e(e,t){this.source=e,this.errorHandler=t,this.trackComment=!1,this.isModule=!1,this.length=e.length,this.index=0,this.lineNumber=e.length>0?1:0,this.lineStart=0,this.curlyStack=[]}return e.prototype.saveState=function(){return{index:this.index,lineNumber:this.lineNumber,lineStart:this.lineStart}},e.prototype.restoreState=function(e){this.index=e.index,this.lineNumber=e.lineNumber,this.lineStart=e.lineStart},e.prototype.eof=function(){return this.index>=this.length},e.prototype.throwUnexpectedToken=function(e){return void 0===e&&(e=a.Messages.UnexpectedTokenIllegal),this.errorHandler.throwError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.tolerateUnexpectedToken=function(e){void 0===e&&(e=a.Messages.UnexpectedTokenIllegal),this.errorHandler.tolerateError(this.index,this.lineNumber,this.index-this.lineStart+1,e)},e.prototype.skipSingleLineComment=function(e){var t,n,i=[];for(this.trackComment&&(i=[],t=this.index-e,n={start:{line:this.lineNumber,column:this.index-this.lineStart-e},end:{}});!this.eof();){var a=this.source.charCodeAt(this.index);if(++this.index,r.Character.isLineTerminator(a)){if(this.trackComment){n.end={line:this.lineNumber,column:this.index-this.lineStart-1};var o={multiLine:!1,slice:[t+e,this.index-1],range:[t,this.index-1],loc:n};i.push(o)}return 13===a&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,i}}return this.trackComment&&(n.end={line:this.lineNumber,column:this.index-this.lineStart},o={multiLine:!1,slice:[t+e,this.index],range:[t,this.index],loc:n},i.push(o)),i},e.prototype.skipMultiLineComment=function(){var e,t,n=[];for(this.trackComment&&(n=[],e=this.index-2,t={start:{line:this.lineNumber,column:this.index-this.lineStart-2},end:{}});!this.eof();){var i=this.source.charCodeAt(this.index);if(r.Character.isLineTerminator(i))13===i&&10===this.source.charCodeAt(this.index+1)&&++this.index,++this.lineNumber,++this.index,this.lineStart=this.index;else if(42===i){if(47===this.source.charCodeAt(this.index+1)){if(this.index+=2,this.trackComment){t.end={line:this.lineNumber,column:this.index-this.lineStart};var a={multiLine:!0,slice:[e+2,this.index-2],range:[e,this.index],loc:t};n.push(a)}return n}++this.index}else++this.index}return this.trackComment&&(t.end={line:this.lineNumber,column:this.index-this.lineStart},a={multiLine:!0,slice:[e+2,this.index],range:[e,this.index],loc:t},n.push(a)),this.tolerateUnexpectedToken(),n},e.prototype.scanComments=function(){var e;this.trackComment&&(e=[]);for(var t=0===this.index;!this.eof();){var n=this.source.charCodeAt(this.index);if(r.Character.isWhiteSpace(n))++this.index;else if(r.Character.isLineTerminator(n))++this.index,13===n&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,t=!0;else if(47===n)if(47===(n=this.source.charCodeAt(this.index+1))){this.index+=2;var i=this.skipSingleLineComment(2);this.trackComment&&(e=e.concat(i)),t=!0}else{if(42!==n)break;this.index+=2,i=this.skipMultiLineComment(),this.trackComment&&(e=e.concat(i))}else if(t&&45===n){if(45!==this.source.charCodeAt(this.index+1)||62!==this.source.charCodeAt(this.index+2))break;this.index+=3,i=this.skipSingleLineComment(3),this.trackComment&&(e=e.concat(i))}else{if(60!==n||this.isModule)break;if("!--"!==this.source.slice(this.index+1,this.index+4))break;this.index+=4,i=this.skipSingleLineComment(4),this.trackComment&&(e=e.concat(i))}}return e},e.prototype.isFutureReservedWord=function(e){switch(e){case"enum":case"export":case"import":case"super":return!0;default:return!1}},e.prototype.isStrictModeReservedWord=function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}},e.prototype.isRestrictedWord=function(e){return"eval"===e||"arguments"===e},e.prototype.isKeyword=function(e){switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e||"let"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}},e.prototype.codePointAt=function(e){var t=this.source.charCodeAt(e);if(t>=55296&&t<=56319){var n=this.source.charCodeAt(e+1);n>=56320&&n<=57343&&(t=1024*(t-55296)+n-56320+65536)}return t},e.prototype.scanHexEscape=function(e){for(var t="u"===e?4:2,n=0,i=0;i<t;++i){if(this.eof()||!r.Character.isHexDigit(this.source.charCodeAt(this.index)))return null;n=16*n+o(this.source[this.index++])}return String.fromCharCode(n)},e.prototype.scanUnicodeCodePointEscape=function(){var e=this.source[this.index],t=0;for("}"===e&&this.throwUnexpectedToken();!this.eof()&&(e=this.source[this.index++],r.Character.isHexDigit(e.charCodeAt(0)));)t=16*t+o(e);return(t>1114111||"}"!==e)&&this.throwUnexpectedToken(),r.Character.fromCodePoint(t)},e.prototype.getIdentifier=function(){for(var e=this.index++;!this.eof();){var t=this.source.charCodeAt(this.index);if(92===t)return this.index=e,this.getComplexIdentifier();if(t>=55296&&t<57343)return this.index=e,this.getComplexIdentifier();if(!r.Character.isIdentifierPart(t))break;++this.index}return this.source.slice(e,this.index)},e.prototype.getComplexIdentifier=function(){var e,t=this.codePointAt(this.index),n=r.Character.fromCodePoint(t);for(this.index+=n.length,92===t&&(117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape("u"))&&"\\"!==e&&r.Character.isIdentifierStart(e.charCodeAt(0))||this.throwUnexpectedToken(),n=e);!this.eof()&&(t=this.codePointAt(this.index),r.Character.isIdentifierPart(t));)n+=e=r.Character.fromCodePoint(t),this.index+=e.length,92===t&&(n=n.substr(0,n.length-1),117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,e=this.scanUnicodeCodePointEscape()):null!==(e=this.scanHexEscape("u"))&&"\\"!==e&&r.Character.isIdentifierPart(e.charCodeAt(0))||this.throwUnexpectedToken(),n+=e);return n},e.prototype.octalToDecimal=function(e){var t="0"!==e,n=s(e);return!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(t=!0,n=8*n+s(this.source[this.index++]),"0123".indexOf(e)>=0&&!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(n=8*n+s(this.source[this.index++]))),{code:n,octal:t}},e.prototype.scanIdentifier=function(){var e,t=this.index,n=92===this.source.charCodeAt(t)?this.getComplexIdentifier():this.getIdentifier();if(3!=(e=1===n.length?3:this.isKeyword(n)?4:"null"===n?5:"true"===n||"false"===n?1:3)&&t+n.length!==this.index){var i=this.index;this.index=t,this.tolerateUnexpectedToken(a.Messages.InvalidEscapedReservedWord),this.index=i}return{type:e,value:n,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.scanPunctuator=function(){var e=this.index,t=this.source[this.index];switch(t){case"(":case"{":"{"===t&&this.curlyStack.push("{"),++this.index;break;case".":++this.index,"."===this.source[this.index]&&"."===this.source[this.index+1]&&(this.index+=2,t="...");break;case"}":++this.index,this.curlyStack.pop();break;case")":case";":case",":case"[":case"]":case":":case"?":case"~":++this.index;break;default:">>>="===(t=this.source.substr(this.index,4))?this.index+=4:"==="===(t=t.substr(0,3))||"!=="===t||">>>"===t||"<<="===t||">>="===t||"**="===t?this.index+=3:"&&"===(t=t.substr(0,2))||"||"===t||"=="===t||"!="===t||"+="===t||"-="===t||"*="===t||"/="===t||"++"===t||"--"===t||"<<"===t||">>"===t||"&="===t||"|="===t||"^="===t||"%="===t||"<="===t||">="===t||"=>"===t||"**"===t?this.index+=2:(t=this.source[this.index],"<>=!+-*%&|^/".indexOf(t)>=0&&++this.index)}return this.index===e&&this.throwUnexpectedToken(),{type:7,value:t,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanHexLiteral=function(e){for(var t="";!this.eof()&&r.Character.isHexDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];return 0===t.length&&this.throwUnexpectedToken(),r.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseInt("0x"+t,16),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanBinaryLiteral=function(e){for(var t,n="";!this.eof()&&("0"===(t=this.source[this.index])||"1"===t);)n+=this.source[this.index++];return 0===n.length&&this.throwUnexpectedToken(),this.eof()||(t=this.source.charCodeAt(this.index),(r.Character.isIdentifierStart(t)||r.Character.isDecimalDigit(t))&&this.throwUnexpectedToken()),{type:6,value:parseInt(n,2),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanOctalLiteral=function(e,t){var n="",i=!1;for(r.Character.isOctalDigit(e.charCodeAt(0))?(i=!0,n="0"+this.source[this.index++]):++this.index;!this.eof()&&r.Character.isOctalDigit(this.source.charCodeAt(this.index));)n+=this.source[this.index++];return i||0!==n.length||this.throwUnexpectedToken(),(r.Character.isIdentifierStart(this.source.charCodeAt(this.index))||r.Character.isDecimalDigit(this.source.charCodeAt(this.index)))&&this.throwUnexpectedToken(),{type:6,value:parseInt(n,8),octal:i,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},e.prototype.isImplicitOctalLiteral=function(){for(var e=this.index+1;e<this.length;++e){var t=this.source[e];if("8"===t||"9"===t)return!1;if(!r.Character.isOctalDigit(t.charCodeAt(0)))return!0}return!0},e.prototype.scanNumericLiteral=function(){var e=this.index,t=this.source[e];i.assert(r.Character.isDecimalDigit(t.charCodeAt(0))||"."===t,"Numeric literal must start with a decimal digit or a decimal point");var n="";if("."!==t){if(n=this.source[this.index++],t=this.source[this.index],"0"===n){if("x"===t||"X"===t)return++this.index,this.scanHexLiteral(e);if("b"===t||"B"===t)return++this.index,this.scanBinaryLiteral(e);if("o"===t||"O"===t)return this.scanOctalLiteral(t,e);if(t&&r.Character.isOctalDigit(t.charCodeAt(0))&&this.isImplicitOctalLiteral())return this.scanOctalLiteral(t,e)}for(;r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)n+=this.source[this.index++];t=this.source[this.index]}if("."===t){for(n+=this.source[this.index++];r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)n+=this.source[this.index++];t=this.source[this.index]}if("e"===t||"E"===t)if(n+=this.source[this.index++],"+"!==(t=this.source[this.index])&&"-"!==t||(n+=this.source[this.index++]),r.Character.isDecimalDigit(this.source.charCodeAt(this.index)))for(;r.Character.isDecimalDigit(this.source.charCodeAt(this.index));)n+=this.source[this.index++];else this.throwUnexpectedToken();return r.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseFloat(n),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanStringLiteral=function(){var e=this.index,t=this.source[e];i.assert("'"===t||'"'===t,"String literal must starts with a quote"),++this.index;for(var n=!1,o="";!this.eof();){var s=this.source[this.index++];if(s===t){t="";break}if("\\"===s)if((s=this.source[this.index++])&&r.Character.isLineTerminator(s.charCodeAt(0)))++this.lineNumber,"\r"===s&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(s){case"u":if("{"===this.source[this.index])++this.index,o+=this.scanUnicodeCodePointEscape();else{var u=this.scanHexEscape(s);null===u&&this.throwUnexpectedToken(),o+=u}break;case"x":var c=this.scanHexEscape(s);null===c&&this.throwUnexpectedToken(a.Messages.InvalidHexEscapeSequence),o+=c;break;case"n":o+="\n";break;case"r":o+="\r";break;case"t":o+="\t";break;case"b":o+="\b";break;case"f":o+="\f";break;case"v":o+="\v";break;case"8":case"9":o+=s,this.tolerateUnexpectedToken();break;default:if(s&&r.Character.isOctalDigit(s.charCodeAt(0))){var l=this.octalToDecimal(s);n=l.octal||n,o+=String.fromCharCode(l.code)}else o+=s}else{if(r.Character.isLineTerminator(s.charCodeAt(0)))break;o+=s}}return""!==t&&(this.index=e,this.throwUnexpectedToken()),{type:8,value:o,octal:n,lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.scanTemplate=function(){var e="",t=!1,n=this.index,i="`"===this.source[n],o=!1,s=2;for(++this.index;!this.eof();){var u=this.source[this.index++];if("`"===u){s=1,o=!0,t=!0;break}if("$"===u){if("{"===this.source[this.index]){this.curlyStack.push("${"),++this.index,t=!0;break}e+=u}else if("\\"===u)if(u=this.source[this.index++],r.Character.isLineTerminator(u.charCodeAt(0)))++this.lineNumber,"\r"===u&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(u){case"n":e+="\n";break;case"r":e+="\r";break;case"t":e+="\t";break;case"u":if("{"===this.source[this.index])++this.index,e+=this.scanUnicodeCodePointEscape();else{var c=this.index,l=this.scanHexEscape(u);null!==l?e+=l:(this.index=c,e+=u)}break;case"x":var h=this.scanHexEscape(u);null===h&&this.throwUnexpectedToken(a.Messages.InvalidHexEscapeSequence),e+=h;break;case"b":e+="\b";break;case"f":e+="\f";break;case"v":e+="\v";break;default:"0"===u?(r.Character.isDecimalDigit(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(a.Messages.TemplateOctalLiteral),e+="\0"):r.Character.isOctalDigit(u.charCodeAt(0))?this.throwUnexpectedToken(a.Messages.TemplateOctalLiteral):e+=u}else r.Character.isLineTerminator(u.charCodeAt(0))?(++this.lineNumber,"\r"===u&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index,e+="\n"):e+=u}return t||this.throwUnexpectedToken(),i||this.curlyStack.pop(),{type:10,value:this.source.slice(n+1,this.index-s),cooked:e,head:i,tail:o,lineNumber:this.lineNumber,lineStart:this.lineStart,start:n,end:this.index}},e.prototype.testRegExp=function(e,t){var n=e,i=this;t.indexOf("u")>=0&&(n=n.replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g,(function(e,t,n){var r=parseInt(t||n,16);return r>1114111&&i.throwUnexpectedToken(a.Messages.InvalidRegExp),r<=65535?String.fromCharCode(r):"ï¿¿"})).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"ï¿¿"));try{RegExp(n)}catch(e){this.throwUnexpectedToken(a.Messages.InvalidRegExp)}try{return new RegExp(e,t)}catch(e){return null}},e.prototype.scanRegExpBody=function(){var e=this.source[this.index];i.assert("/"===e,"Regular expression literal must start with a slash");for(var t=this.source[this.index++],n=!1,o=!1;!this.eof();)if(t+=e=this.source[this.index++],"\\"===e)e=this.source[this.index++],r.Character.isLineTerminator(e.charCodeAt(0))&&this.throwUnexpectedToken(a.Messages.UnterminatedRegExp),t+=e;else if(r.Character.isLineTerminator(e.charCodeAt(0)))this.throwUnexpectedToken(a.Messages.UnterminatedRegExp);else if(n)"]"===e&&(n=!1);else{if("/"===e){o=!0;break}"["===e&&(n=!0)}return o||this.throwUnexpectedToken(a.Messages.UnterminatedRegExp),t.substr(1,t.length-2)},e.prototype.scanRegExpFlags=function(){for(var e="";!this.eof();){var t=this.source[this.index];if(!r.Character.isIdentifierPart(t.charCodeAt(0)))break;if(++this.index,"\\"!==t||this.eof())e+=t;else if("u"===(t=this.source[this.index])){++this.index;var n=this.index,i=this.scanHexEscape("u");if(null!==i)for(e+=i;n<this.index;++n)this.source[n];else this.index=n,e+="u";this.tolerateUnexpectedToken()}else this.tolerateUnexpectedToken()}return e},e.prototype.scanRegExp=function(){var e=this.index,t=this.scanRegExpBody(),n=this.scanRegExpFlags();return{type:9,value:"",pattern:t,flags:n,regex:this.testRegExp(t,n),lineNumber:this.lineNumber,lineStart:this.lineStart,start:e,end:this.index}},e.prototype.lex=function(){if(this.eof())return{type:2,value:"",lineNumber:this.lineNumber,lineStart:this.lineStart,start:this.index,end:this.index};var e=this.source.charCodeAt(this.index);return r.Character.isIdentifierStart(e)?this.scanIdentifier():40===e||41===e||59===e?this.scanPunctuator():39===e||34===e?this.scanStringLiteral():46===e?r.Character.isDecimalDigit(this.source.charCodeAt(this.index+1))?this.scanNumericLiteral():this.scanPunctuator():r.Character.isDecimalDigit(e)?this.scanNumericLiteral():96===e||125===e&&"${"===this.curlyStack[this.curlyStack.length-1]?this.scanTemplate():e>=55296&&e<57343&&r.Character.isIdentifierStart(this.codePointAt(this.index))?this.scanIdentifier():this.scanPunctuator()},e}();t.Scanner=u},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TokenName={},t.TokenName[1]="Boolean",t.TokenName[2]="<end>",t.TokenName[3]="Identifier",t.TokenName[4]="Keyword",t.TokenName[5]="Null",t.TokenName[6]="Numeric",t.TokenName[7]="Punctuator",t.TokenName[8]="String",t.TokenName[9]="RegularExpression",t.TokenName[10]="Template"},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.XHTMLEntities={quot:'"',amp:"&",apos:"'",gt:">",nbsp:"Â ",iexcl:"Â¡",cent:"Â¢",pound:"Â£",curren:"Â¤",yen:"Â¥",brvbar:"Â¦",sect:"Â§",uml:"Â¨",copy:"Â©",ordf:"Âª",laquo:"Â«",not:"Â¬",shy:"Â­",reg:"Â®",macr:"Â¯",deg:"Â°",plusmn:"Â±",sup2:"Â²",sup3:"Â³",acute:"Â´",micro:"Âµ",para:"Â¶",middot:"Â·",cedil:"Â¸",sup1:"Â¹",ordm:"Âº",raquo:"Â»",frac14:"Â¼",frac12:"Â½",frac34:"Â¾",iquest:"Â¿",Agrave:"Ã",Aacute:"Ã",Acirc:"Ã",Atilde:"Ã",Auml:"Ã",Aring:"Ã",AElig:"Ã",Ccedil:"Ã",Egrave:"Ã",Eacute:"Ã",Ecirc:"Ã",Euml:"Ã",Igrave:"Ã",Iacute:"Ã",Icirc:"Ã",Iuml:"Ã",ETH:"Ã",Ntilde:"Ã",Ograve:"Ã",Oacute:"Ã",Ocirc:"Ã",Otilde:"Ã",Ouml:"Ã",times:"Ã",Oslash:"Ã",Ugrave:"Ã",Uacute:"Ã",Ucirc:"Ã",Uuml:"Ã",Yacute:"Ã",THORN:"Ã",szlig:"Ã",agrave:"Ã ",aacute:"Ã¡",acirc:"Ã¢",atilde:"Ã£",auml:"Ã¤",aring:"Ã¥",aelig:"Ã¦",ccedil:"Ã§",egrave:"Ã¨",eacute:"Ã©",ecirc:"Ãª",euml:"Ã«",igrave:"Ã¬",iacute:"Ã­",icirc:"Ã®",iuml:"Ã¯",eth:"Ã°",ntilde:"Ã±",ograve:"Ã²",oacute:"Ã³",ocirc:"Ã´",otilde:"Ãµ",ouml:"Ã¶",divide:"Ã·",oslash:"Ã¸",ugrave:"Ã¹",uacute:"Ãº",ucirc:"Ã»",uuml:"Ã¼",yacute:"Ã½",thorn:"Ã¾",yuml:"Ã¿",OElig:"Å",oelig:"Å",Scaron:"Å ",scaron:"Å¡",Yuml:"Å¸",fnof:"Æ",circ:"Ë",tilde:"Ë",Alpha:"Î",Beta:"Î",Gamma:"Î",Delta:"Î",Epsilon:"Î",Zeta:"Î",Eta:"Î",Theta:"Î",Iota:"Î",Kappa:"Î",Lambda:"Î",Mu:"Î",Nu:"Î",Xi:"Î",Omicron:"Î",Pi:"Î ",Rho:"Î¡",Sigma:"Î£",Tau:"Î¤",Upsilon:"Î¥",Phi:"Î¦",Chi:"Î§",Psi:"Î¨",Omega:"Î©",alpha:"Î±",beta:"Î²",gamma:"Î³",delta:"Î´",epsilon:"Îµ",zeta:"Î¶",eta:"Î·",theta:"Î¸",iota:"Î¹",kappa:"Îº",lambda:"Î»",mu:"Î¼",nu:"Î½",xi:"Î¾",omicron:"Î¿",pi:"Ï",rho:"Ï",sigmaf:"Ï",sigma:"Ï",tau:"Ï",upsilon:"Ï",phi:"Ï",chi:"Ï",psi:"Ï",omega:"Ï",thetasym:"Ï",upsih:"Ï",piv:"Ï",ensp:"â",emsp:"â",thinsp:"â",zwnj:"â",zwj:"â",lrm:"â",rlm:"â",ndash:"â",mdash:"â",lsquo:"â",rsquo:"â",sbquo:"â",ldquo:"â",rdquo:"â",bdquo:"â",dagger:"â ",Dagger:"â¡",bull:"â¢",hellip:"â¦",permil:"â°",prime:"â²",Prime:"â³",lsaquo:"â¹",rsaquo:"âº",oline:"â¾",frasl:"â",euro:"â¬",image:"â",weierp:"â",real:"â",trade:"â¢",alefsym:"âµ",larr:"â",uarr:"â",rarr:"â",darr:"â",harr:"â",crarr:"âµ",lArr:"â",uArr:"â",rArr:"â",dArr:"â",hArr:"â",forall:"â",part:"â",exist:"â",empty:"â",nabla:"â",isin:"â",notin:"â",ni:"â",prod:"â",sum:"â",minus:"â",lowast:"â",radic:"â",prop:"â",infin:"â",ang:"â ",and:"â§",or:"â¨",cap:"â©",cup:"âª",int:"â«",there4:"â´",sim:"â¼",cong:"â",asymp:"â",ne:"â ",equiv:"â¡",le:"â¤",ge:"â¥",sub:"â",sup:"â",nsub:"â",sube:"â",supe:"â",oplus:"â",otimes:"â",perp:"â¥",sdot:"â",lceil:"â",rceil:"â",lfloor:"â",rfloor:"â",loz:"â",spades:"â ",clubs:"â£",hearts:"â¥",diams:"â¦",lang:"â¨",rang:"â©"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=n(10),r=n(12),a=n(13),o=function(){function e(){this.values=[],this.curly=this.paren=-1}return e.prototype.beforeFunctionExpression=function(e){return["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","**","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="].indexOf(e)>=0},e.prototype.isRegexStart=function(){var e=this.values[this.values.length-1],t=null!==e;switch(e){case"this":case"]":t=!1;break;case")":var n=this.values[this.paren-1];t="if"===n||"while"===n||"for"===n||"with"===n;break;case"}":if(t=!1,"function"===this.values[this.curly-3])t=!!(i=this.values[this.curly-4])&&!this.beforeFunctionExpression(i);else if("function"===this.values[this.curly-4]){var i;t=!(i=this.values[this.curly-5])||!this.beforeFunctionExpression(i)}}return t},e.prototype.push=function(e){7===e.type||4===e.type?("{"===e.value?this.curly=this.values.length:"("===e.value&&(this.paren=this.values.length),this.values.push(e.value)):this.values.push(null)},e}(),s=function(){function e(e,t){this.errorHandler=new i.ErrorHandler,this.errorHandler.tolerant=!!t&&"boolean"==typeof t.tolerant&&t.tolerant,this.scanner=new r.Scanner(e,this.errorHandler),this.scanner.trackComment=!!t&&"boolean"==typeof t.comment&&t.comment,this.trackRange=!!t&&"boolean"==typeof t.range&&t.range,this.trackLoc=!!t&&"boolean"==typeof t.loc&&t.loc,this.buffer=[],this.reader=new o}return e.prototype.errors=function(){return this.errorHandler.errors},e.prototype.getNextToken=function(){if(0===this.buffer.length){var e=this.scanner.scanComments();if(this.scanner.trackComment)for(var t=0;t<e.length;++t){var n=e[t],i=this.scanner.source.slice(n.slice[0],n.slice[1]),r={type:n.multiLine?"BlockComment":"LineComment",value:i};this.trackRange&&(r.range=n.range),this.trackLoc&&(r.loc=n.loc),this.buffer.push(r)}if(!this.scanner.eof()){var o=void 0;this.trackLoc&&(o={start:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},end:{}});var s="/"===this.scanner.source[this.scanner.index]&&this.reader.isRegexStart()?this.scanner.scanRegExp():this.scanner.lex();this.reader.push(s);var u={type:a.TokenName[s.type],value:this.scanner.source.slice(s.start,s.end)};if(this.trackRange&&(u.range=[s.start,s.end]),this.trackLoc&&(o.end={line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},u.loc=o),9===s.type){var c=s.pattern,l=s.flags;u.regex={pattern:c,flags:l}}this.buffer.push(u)}}return this.buffer.shift()},e}();t.Tokenizer=s}])},e.exports=i()},function(e,t,n){"use strict";var i=n(1),r=n(3),a=n(5),o=n(4),s=Object.prototype.toString,u=Object.prototype.hasOwnProperty,c=9,l=10,h=32,p=33,m=34,d=35,f=37,g=38,b=39,v=42,y=44,C=45,x=58,A=62,S=63,D=64,E=91,k=93,w=96,M=123,B=124,T=125,F={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},I=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"];function P(e){var t,n,a;if(t=e.toString(16).toUpperCase(),e<=255)n="x",a=2;else if(e<=65535)n="u",a=4;else{if(!(e<=4294967295))throw new r("code point within a string may not be greater than 0xFFFFFFFF");n="U",a=8}return"\\"+n+i.repeat("0",a-t.length)+t}function _(e){this.schema=e.schema||a,this.indent=Math.max(1,e.indent||2),this.noArrayIndent=e.noArrayIndent||!1,this.skipInvalid=e.skipInvalid||!1,this.flowLevel=i.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=function(e,t){var n,i,r,a,o,s,c;if(null===t)return{};for(n={},r=0,a=(i=Object.keys(t)).length;r<a;r+=1)o=i[r],s=String(t[o]),"!!"===o.slice(0,2)&&(o="tag:yaml.org,2002:"+o.slice(2)),(c=e.compiledTypeMap.fallback[o])&&u.call(c.styleAliases,s)&&(s=c.styleAliases[s]),n[o]=s;return n}(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.lineWidth=e.lineWidth||80,this.noRefs=e.noRefs||!1,this.noCompatMode=e.noCompatMode||!1,this.condenseFlow=e.condenseFlow||!1,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function L(e,t){for(var n,r=i.repeat(" ",t),a=0,o=-1,s="",u=e.length;a<u;)-1===(o=e.indexOf("\n",a))?(n=e.slice(a),a=u):(n=e.slice(a,o+1),a=o+1),n.length&&"\n"!==n&&(s+=r),s+=n;return s}function R(e,t){return"\n"+i.repeat(" ",e.indent*t)}function N(e){return e===h||e===c}function G(e){return 32<=e&&e<=126||161<=e&&e<=55295&&8232!==e&&8233!==e||57344<=e&&e<=65533&&65279!==e||65536<=e&&e<=1114111}function O(e){return G(e)&&65279!==e&&e!==y&&e!==E&&e!==k&&e!==M&&e!==T&&e!==x&&e!==d}function z(e){return/^\n* /.test(e)}var U=1,H=2,J=3,W=4,K=5;function j(e,t,n,i,r){var a,o,s,u=!1,c=!1,h=-1!==i,F=-1,I=G(s=e.charCodeAt(0))&&65279!==s&&!N(s)&&s!==C&&s!==S&&s!==x&&s!==y&&s!==E&&s!==k&&s!==M&&s!==T&&s!==d&&s!==g&&s!==v&&s!==p&&s!==B&&s!==A&&s!==b&&s!==m&&s!==f&&s!==D&&s!==w&&!N(e.charCodeAt(e.length-1));if(t)for(a=0;a<e.length;a++){if(!G(o=e.charCodeAt(a)))return K;I=I&&O(o)}else{for(a=0;a<e.length;a++){if((o=e.charCodeAt(a))===l)u=!0,h&&(c=c||a-F-1>i&&" "!==e[F+1],F=a);else if(!G(o))return K;I=I&&O(o)}c=c||h&&a-F-1>i&&" "!==e[F+1]}return u||c?n>9&&z(e)?K:c?W:J:I&&!r(e)?U:H}function V(e,t,n,i){e.dump=function(){if(0===t.length)return"''";if(!e.noCompatMode&&-1!==I.indexOf(t))return"'"+t+"'";var a=e.indent*Math.max(1,n),o=-1===e.lineWidth?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-a),s=i||e.flowLevel>-1&&n>=e.flowLevel;switch(j(t,s,e.indent,o,(function(t){return function(e,t){var n,i;for(n=0,i=e.implicitTypes.length;n<i;n+=1)if(e.implicitTypes[n].resolve(t))return!0;return!1}(e,t)}))){case U:return t;case H:return"'"+t.replace(/'/g,"''")+"'";case J:return"|"+X(t,e.indent)+Y(L(t,a));case W:return">"+X(t,e.indent)+Y(L(function(e,t){var n,i,r=/(\n+)([^\n]*)/g,a=(s=e.indexOf("\n"),s=-1!==s?s:e.length,r.lastIndex=s,q(e.slice(0,s),t)),o="\n"===e[0]||" "===e[0];var s;for(;i=r.exec(e);){var u=i[1],c=i[2];n=" "===c[0],a+=u+(o||n||""===c?"":"\n")+q(c,t),o=n}return a}(t,o),a));case K:return'"'+function(e){for(var t,n,i,r="",a=0;a<e.length;a++)(t=e.charCodeAt(a))>=55296&&t<=56319&&(n=e.charCodeAt(a+1))>=56320&&n<=57343?(r+=P(1024*(t-55296)+n-56320+65536),a++):(i=F[t],r+=!i&&G(t)?e[a]:i||P(t));return r}(t)+'"';default:throw new r("impossible error: invalid scalar style")}}()}function X(e,t){var n=z(e)?String(t):"",i="\n"===e[e.length-1];return n+(i&&("\n"===e[e.length-2]||"\n"===e)?"+":i?"":"-")+"\n"}function Y(e){return"\n"===e[e.length-1]?e.slice(0,-1):e}function q(e,t){if(""===e||" "===e[0])return e;for(var n,i,r=/ [^ ]/g,a=0,o=0,s=0,u="";n=r.exec(e);)(s=n.index)-a>t&&(i=o>a?o:s,u+="\n"+e.slice(a,i),a=i+1),o=s;return u+="\n",e.length-a>t&&o>a?u+=e.slice(a,o)+"\n"+e.slice(o+1):u+=e.slice(a),u.slice(1)}function Z(e,t,n){var i,a,o,c,l,h;for(o=0,c=(a=n?e.explicitTypes:e.implicitTypes).length;o<c;o+=1)if(((l=a[o]).instanceOf||l.predicate)&&(!l.instanceOf||"object"==typeof t&&t instanceof l.instanceOf)&&(!l.predicate||l.predicate(t))){if(e.tag=n?l.tag:"?",l.represent){if(h=e.styleMap[l.tag]||l.defaultStyle,"[object Function]"===s.call(l.represent))i=l.represent(t,h);else{if(!u.call(l.represent,h))throw new r("!<"+l.tag+'> tag resolver accepts not "'+h+'" style');i=l.represent[h](t,h)}e.dump=i}return!0}return!1}function $(e,t,n,i,a,o){e.tag=null,e.dump=n,Z(e,n,!1)||Z(e,n,!0);var u=s.call(e.dump);i&&(i=e.flowLevel<0||e.flowLevel>t);var c,h,p="[object Object]"===u||"[object Array]"===u;if(p&&(h=-1!==(c=e.duplicates.indexOf(n))),(null!==e.tag&&"?"!==e.tag||h||2!==e.indent&&t>0)&&(a=!1),h&&e.usedDuplicates[c])e.dump="*ref_"+c;else{if(p&&h&&!e.usedDuplicates[c]&&(e.usedDuplicates[c]=!0),"[object Object]"===u)i&&0!==Object.keys(e.dump).length?(!function(e,t,n,i){var a,o,s,u,c,h,p="",m=e.tag,d=Object.keys(n);if(!0===e.sortKeys)d.sort();else if("function"==typeof e.sortKeys)d.sort(e.sortKeys);else if(e.sortKeys)throw new r("sortKeys must be a boolean or a function");for(a=0,o=d.length;a<o;a+=1)h="",i&&0===a||(h+=R(e,t)),u=n[s=d[a]],$(e,t+1,s,!0,!0,!0)&&((c=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024)&&(e.dump&&l===e.dump.charCodeAt(0)?h+="?":h+="? "),h+=e.dump,c&&(h+=R(e,t)),$(e,t+1,u,!0,c)&&(e.dump&&l===e.dump.charCodeAt(0)?h+=":":h+=": ",p+=h+=e.dump));e.tag=m,e.dump=p||"{}"}(e,t,e.dump,a),h&&(e.dump="&ref_"+c+e.dump)):(!function(e,t,n){var i,r,a,o,s,u="",c=e.tag,l=Object.keys(n);for(i=0,r=l.length;i<r;i+=1)s=e.condenseFlow?'"':"",0!==i&&(s+=", "),o=n[a=l[i]],$(e,t,a,!1,!1)&&(e.dump.length>1024&&(s+="? "),s+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" "),$(e,t,o,!1,!1)&&(u+=s+=e.dump));e.tag=c,e.dump="{"+u+"}"}(e,t,e.dump),h&&(e.dump="&ref_"+c+" "+e.dump));else if("[object Array]"===u){var m=e.noArrayIndent&&t>0?t-1:t;i&&0!==e.dump.length?(!function(e,t,n,i){var r,a,o="",s=e.tag;for(r=0,a=n.length;r<a;r+=1)$(e,t+1,n[r],!0,!0)&&(i&&0===r||(o+=R(e,t)),e.dump&&l===e.dump.charCodeAt(0)?o+="-":o+="- ",o+=e.dump);e.tag=s,e.dump=o||"[]"}(e,m,e.dump,a),h&&(e.dump="&ref_"+c+e.dump)):(!function(e,t,n){var i,r,a="",o=e.tag;for(i=0,r=n.length;i<r;i+=1)$(e,t,n[i],!1,!1)&&(0!==i&&(a+=","+(e.condenseFlow?"":" ")),a+=e.dump);e.tag=o,e.dump="["+a+"]"}(e,m,e.dump),h&&(e.dump="&ref_"+c+" "+e.dump))}else{if("[object String]"!==u){if(e.skipInvalid)return!1;throw new r("unacceptable kind of an object to dump "+u)}"?"!==e.tag&&V(e,e.dump,t,o)}null!==e.tag&&"?"!==e.tag&&(e.dump="!<"+e.tag+"> "+e.dump)}return!0}function Q(e,t){var n,i,r=[],a=[];for(function e(t,n,i){var r,a,o;if(null!==t&&"object"==typeof t)if(-1!==(a=n.indexOf(t)))-1===i.indexOf(a)&&i.push(a);else if(n.push(t),Array.isArray(t))for(a=0,o=t.length;a<o;a+=1)e(t[a],n,i);else for(r=Object.keys(t),a=0,o=r.length;a<o;a+=1)e(t[r[a]],n,i)}(e,r,a),n=0,i=a.length;n<i;n+=1)t.duplicates.push(r[a[n]]);t.usedDuplicates=new Array(i)}function ee(e,t){var n=new _(t=t||{});return n.noRefs||Q(e,n),$(n,0,e,!0,!0)?n.dump+"\n":""}e.exports.dump=ee,e.exports.safeDump=function(e,t){return ee(e,i.extend({schema:o},t))}},function(e,t,n){(function(e,i){var r;
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */(function(){var a,o=200,s="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",u="Expected a function",c="__lodash_hash_undefined__",l=500,h="__lodash_placeholder__",p=1,m=2,d=4,f=1,g=2,b=1,v=2,y=4,C=8,x=16,A=32,S=64,D=128,E=256,k=512,w=30,M="...",B=800,T=16,F=1,I=2,P=1/0,_=9007199254740991,L=17976931348623157e292,R=NaN,N=4294967295,G=N-1,O=N>>>1,z=[["ary",D],["bind",b],["bindKey",v],["curry",C],["curryRight",x],["flip",k],["partial",A],["partialRight",S],["rearg",E]],U="[object Arguments]",H="[object Array]",J="[object AsyncFunction]",W="[object Boolean]",K="[object Date]",j="[object DOMException]",V="[object Error]",X="[object Function]",Y="[object GeneratorFunction]",q="[object Map]",Z="[object Number]",$="[object Null]",Q="[object Object]",ee="[object Proxy]",te="[object RegExp]",ne="[object Set]",ie="[object String]",re="[object Symbol]",ae="[object Undefined]",oe="[object WeakMap]",se="[object WeakSet]",ue="[object ArrayBuffer]",ce="[object DataView]",le="[object Float32Array]",he="[object Float64Array]",pe="[object Int8Array]",me="[object Int16Array]",de="[object Int32Array]",fe="[object Uint8Array]",ge="[object Uint8ClampedArray]",be="[object Uint16Array]",ve="[object Uint32Array]",ye=/\b__p \+= '';/g,Ce=/\b(__p \+=) '' \+/g,xe=/(__e\(.*?\)|\b__t\)) \+\n'';/g,Ae=/&(?:amp|lt|gt|quot|#39);/g,Se=/[&<>"']/g,De=RegExp(Ae.source),Ee=RegExp(Se.source),ke=/<%-([\s\S]+?)%>/g,we=/<%([\s\S]+?)%>/g,Me=/<%=([\s\S]+?)%>/g,Be=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Te=/^\w*$/,Fe=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Ie=/[\\^$.*+?()[\]{}|]/g,Pe=RegExp(Ie.source),_e=/^\s+|\s+$/g,Le=/^\s+/,Re=/\s+$/,Ne=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Ge=/\{\n\/\* \[wrapped with (.+)\] \*/,Oe=/,? & /,ze=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Ue=/\\(\\)?/g,He=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Je=/\w*$/,We=/^[-+]0x[0-9a-f]+$/i,Ke=/^0b[01]+$/i,je=/^\[object .+?Constructor\]$/,Ve=/^0o[0-7]+$/i,Xe=/^(?:0|[1-9]\d*)$/,Ye=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,qe=/($^)/,Ze=/['\n\r\u2028\u2029\\]/g,$e="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Qe="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",et="[\\ud800-\\udfff]",tt="["+Qe+"]",nt="["+$e+"]",it="\\d+",rt="[\\u2700-\\u27bf]",at="[a-z\\xdf-\\xf6\\xf8-\\xff]",ot="[^\\ud800-\\udfff"+Qe+it+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",st="\\ud83c[\\udffb-\\udfff]",ut="[^\\ud800-\\udfff]",ct="(?:\\ud83c[\\udde6-\\uddff]){2}",lt="[\\ud800-\\udbff][\\udc00-\\udfff]",ht="[A-Z\\xc0-\\xd6\\xd8-\\xde]",pt="(?:"+at+"|"+ot+")",mt="(?:"+ht+"|"+ot+")",dt="(?:"+nt+"|"+st+")"+"?",ft="[\\ufe0e\\ufe0f]?"+dt+("(?:\\u200d(?:"+[ut,ct,lt].join("|")+")[\\ufe0e\\ufe0f]?"+dt+")*"),gt="(?:"+[rt,ct,lt].join("|")+")"+ft,bt="(?:"+[ut+nt+"?",nt,ct,lt,et].join("|")+")",vt=RegExp("['â]","g"),yt=RegExp(nt,"g"),Ct=RegExp(st+"(?="+st+")|"+bt+ft,"g"),xt=RegExp([ht+"?"+at+"+(?:['â](?:d|ll|m|re|s|t|ve))?(?="+[tt,ht,"$"].join("|")+")",mt+"+(?:['â](?:D|LL|M|RE|S|T|VE))?(?="+[tt,ht+pt,"$"].join("|")+")",ht+"?"+pt+"+(?:['â](?:d|ll|m|re|s|t|ve))?",ht+"+(?:['â](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",it,gt].join("|"),"g"),At=RegExp("[\\u200d\\ud800-\\udfff"+$e+"\\ufe0e\\ufe0f]"),St=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Dt=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Et=-1,kt={};kt[le]=kt[he]=kt[pe]=kt[me]=kt[de]=kt[fe]=kt[ge]=kt[be]=kt[ve]=!0,kt[U]=kt[H]=kt[ue]=kt[W]=kt[ce]=kt[K]=kt[V]=kt[X]=kt[q]=kt[Z]=kt[Q]=kt[te]=kt[ne]=kt[ie]=kt[oe]=!1;var wt={};wt[U]=wt[H]=wt[ue]=wt[ce]=wt[W]=wt[K]=wt[le]=wt[he]=wt[pe]=wt[me]=wt[de]=wt[q]=wt[Z]=wt[Q]=wt[te]=wt[ne]=wt[ie]=wt[re]=wt[fe]=wt[ge]=wt[be]=wt[ve]=!0,wt[V]=wt[X]=wt[oe]=!1;var Mt={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Bt=parseFloat,Tt=parseInt,Ft="object"==typeof e&&e&&e.Object===Object&&e,It="object"==typeof self&&self&&self.Object===Object&&self,Pt=Ft||It||Function("return this")(),_t=t&&!t.nodeType&&t,Lt=_t&&"object"==typeof i&&i&&!i.nodeType&&i,Rt=Lt&&Lt.exports===_t,Nt=Rt&&Ft.process,Gt=function(){try{var e=Lt&&Lt.require&&Lt.require("util").types;return e||Nt&&Nt.binding&&Nt.binding("util")}catch(e){}}(),Ot=Gt&&Gt.isArrayBuffer,zt=Gt&&Gt.isDate,Ut=Gt&&Gt.isMap,Ht=Gt&&Gt.isRegExp,Jt=Gt&&Gt.isSet,Wt=Gt&&Gt.isTypedArray;function Kt(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function jt(e,t,n,i){for(var r=-1,a=null==e?0:e.length;++r<a;){var o=e[r];t(i,o,n(o),e)}return i}function Vt(e,t){for(var n=-1,i=null==e?0:e.length;++n<i&&!1!==t(e[n],n,e););return e}function Xt(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function Yt(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(!t(e[n],n,e))return!1;return!0}function qt(e,t){for(var n=-1,i=null==e?0:e.length,r=0,a=[];++n<i;){var o=e[n];t(o,n,e)&&(a[r++]=o)}return a}function Zt(e,t){return!!(null==e?0:e.length)&&un(e,t,0)>-1}function $t(e,t,n){for(var i=-1,r=null==e?0:e.length;++i<r;)if(n(t,e[i]))return!0;return!1}function Qt(e,t){for(var n=-1,i=null==e?0:e.length,r=Array(i);++n<i;)r[n]=t(e[n],n,e);return r}function en(e,t){for(var n=-1,i=t.length,r=e.length;++n<i;)e[r+n]=t[n];return e}function tn(e,t,n,i){var r=-1,a=null==e?0:e.length;for(i&&a&&(n=e[++r]);++r<a;)n=t(n,e[r],r,e);return n}function nn(e,t,n,i){var r=null==e?0:e.length;for(i&&r&&(n=e[--r]);r--;)n=t(n,e[r],r,e);return n}function rn(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(t(e[n],n,e))return!0;return!1}var an=pn("length");function on(e,t,n){var i;return n(e,(function(e,n,r){if(t(e,n,r))return i=n,!1})),i}function sn(e,t,n,i){for(var r=e.length,a=n+(i?1:-1);i?a--:++a<r;)if(t(e[a],a,e))return a;return-1}function un(e,t,n){return t==t?function(e,t,n){var i=n-1,r=e.length;for(;++i<r;)if(e[i]===t)return i;return-1}(e,t,n):sn(e,ln,n)}function cn(e,t,n,i){for(var r=n-1,a=e.length;++r<a;)if(i(e[r],t))return r;return-1}function ln(e){return e!=e}function hn(e,t){var n=null==e?0:e.length;return n?fn(e,t)/n:R}function pn(e){return function(t){return null==t?a:t[e]}}function mn(e){return function(t){return null==e?a:e[t]}}function dn(e,t,n,i,r){return r(e,(function(e,r,a){n=i?(i=!1,e):t(n,e,r,a)})),n}function fn(e,t){for(var n,i=-1,r=e.length;++i<r;){var o=t(e[i]);o!==a&&(n=n===a?o:n+o)}return n}function gn(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}function bn(e){return function(t){return e(t)}}function vn(e,t){return Qt(t,(function(t){return e[t]}))}function yn(e,t){return e.has(t)}function Cn(e,t){for(var n=-1,i=e.length;++n<i&&un(t,e[n],0)>-1;);return n}function xn(e,t){for(var n=e.length;n--&&un(t,e[n],0)>-1;);return n}var An=mn({"Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã ":"a","Ã¡":"a","Ã¢":"a","Ã£":"a","Ã¤":"a","Ã¥":"a","Ã":"C","Ã§":"c","Ã":"D","Ã°":"d","Ã":"E","Ã":"E","Ã":"E","Ã":"E","Ã¨":"e","Ã©":"e","Ãª":"e","Ã«":"e","Ã":"I","Ã":"I","Ã":"I","Ã":"I","Ã¬":"i","Ã­":"i","Ã®":"i","Ã¯":"i","Ã":"N","Ã±":"n","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã²":"o","Ã³":"o","Ã´":"o","Ãµ":"o","Ã¶":"o","Ã¸":"o","Ã":"U","Ã":"U","Ã":"U","Ã":"U","Ã¹":"u","Ãº":"u","Ã»":"u","Ã¼":"u","Ã":"Y","Ã½":"y","Ã¿":"y","Ã":"Ae","Ã¦":"ae","Ã":"Th","Ã¾":"th","Ã":"ss","Ä":"A","Ä":"A","Ä":"A","Ä":"a","Ä":"a","Ä":"a","Ä":"C","Ä":"C","Ä":"C","Ä":"C","Ä":"c","Ä":"c","Ä":"c","Ä":"c","Ä":"D","Ä":"D","Ä":"d","Ä":"d","Ä":"E","Ä":"E","Ä":"E","Ä":"E","Ä":"E","Ä":"e","Ä":"e","Ä":"e","Ä":"e","Ä":"e","Ä":"G","Ä":"G","Ä ":"G","Ä¢":"G","Ä":"g","Ä":"g","Ä¡":"g","Ä£":"g","Ä¤":"H","Ä¦":"H","Ä¥":"h","Ä§":"h","Ä¨":"I","Äª":"I","Ä¬":"I","Ä®":"I","Ä°":"I","Ä©":"i","Ä«":"i","Ä­":"i","Ä¯":"i","Ä±":"i","Ä´":"J","Äµ":"j","Ä¶":"K","Ä·":"k","Ä¸":"k","Ä¹":"L","Ä»":"L","Ä½":"L","Ä¿":"L","Å":"L","Äº":"l","Ä¼":"l","Ä¾":"l","Å":"l","Å":"l","Å":"N","Å":"N","Å":"N","Å":"N","Å":"n","Å":"n","Å":"n","Å":"n","Å":"O","Å":"O","Å":"O","Å":"o","Å":"o","Å":"o","Å":"R","Å":"R","Å":"R","Å":"r","Å":"r","Å":"r","Å":"S","Å":"S","Å":"S","Å ":"S","Å":"s","Å":"s","Å":"s","Å¡":"s","Å¢":"T","Å¤":"T","Å¦":"T","Å£":"t","Å¥":"t","Å§":"t","Å¨":"U","Åª":"U","Å¬":"U","Å®":"U","Å°":"U","Å²":"U","Å©":"u","Å«":"u","Å­":"u","Å¯":"u","Å±":"u","Å³":"u","Å´":"W","Åµ":"w","Å¶":"Y","Å·":"y","Å¸":"Y","Å¹":"Z","Å»":"Z","Å½":"Z","Åº":"z","Å¼":"z","Å¾":"z","Ä²":"IJ","Ä³":"ij","Å":"Oe","Å":"oe","Å":"'n","Å¿":"s"}),Sn=mn({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Dn(e){return"\\"+Mt[e]}function En(e){return At.test(e)}function kn(e){var t=-1,n=Array(e.size);return e.forEach((function(e,i){n[++t]=[i,e]})),n}function wn(e,t){return function(n){return e(t(n))}}function Mn(e,t){for(var n=-1,i=e.length,r=0,a=[];++n<i;){var o=e[n];o!==t&&o!==h||(e[n]=h,a[r++]=n)}return a}function Bn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function Tn(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}function Fn(e){return En(e)?function(e){var t=Ct.lastIndex=0;for(;Ct.test(e);)++t;return t}(e):an(e)}function In(e){return En(e)?function(e){return e.match(Ct)||[]}(e):function(e){return e.split("")}(e)}var Pn=mn({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var _n=function e(t){var n,i=(t=null==t?Pt:_n.defaults(Pt.Object(),t,_n.pick(Pt,Dt))).Array,r=t.Date,$e=t.Error,Qe=t.Function,et=t.Math,tt=t.Object,nt=t.RegExp,it=t.String,rt=t.TypeError,at=i.prototype,ot=Qe.prototype,st=tt.prototype,ut=t["__core-js_shared__"],ct=ot.toString,lt=st.hasOwnProperty,ht=0,pt=(n=/[^.]+$/.exec(ut&&ut.keys&&ut.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",mt=st.toString,dt=ct.call(tt),ft=Pt._,gt=nt("^"+ct.call(lt).replace(Ie,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),bt=Rt?t.Buffer:a,Ct=t.Symbol,At=t.Uint8Array,Mt=bt?bt.allocUnsafe:a,Ft=wn(tt.getPrototypeOf,tt),It=tt.create,_t=st.propertyIsEnumerable,Lt=at.splice,Nt=Ct?Ct.isConcatSpreadable:a,Gt=Ct?Ct.iterator:a,an=Ct?Ct.toStringTag:a,mn=function(){try{var e=Ga(tt,"defineProperty");return e({},"",{}),e}catch(e){}}(),Ln=t.clearTimeout!==Pt.clearTimeout&&t.clearTimeout,Rn=r&&r.now!==Pt.Date.now&&r.now,Nn=t.setTimeout!==Pt.setTimeout&&t.setTimeout,Gn=et.ceil,On=et.floor,zn=tt.getOwnPropertySymbols,Un=bt?bt.isBuffer:a,Hn=t.isFinite,Jn=at.join,Wn=wn(tt.keys,tt),Kn=et.max,jn=et.min,Vn=r.now,Xn=t.parseInt,Yn=et.random,qn=at.reverse,Zn=Ga(t,"DataView"),$n=Ga(t,"Map"),Qn=Ga(t,"Promise"),ei=Ga(t,"Set"),ti=Ga(t,"WeakMap"),ni=Ga(tt,"create"),ii=ti&&new ti,ri={},ai=lo(Zn),oi=lo($n),si=lo(Qn),ui=lo(ei),ci=lo(ti),li=Ct?Ct.prototype:a,hi=li?li.valueOf:a,pi=li?li.toString:a;function mi(e){if(Ms(e)&&!bs(e)&&!(e instanceof bi)){if(e instanceof gi)return e;if(lt.call(e,"__wrapped__"))return ho(e)}return new gi(e)}var di=function(){function e(){}return function(t){if(!ws(t))return{};if(It)return It(t);e.prototype=t;var n=new e;return e.prototype=a,n}}();function fi(){}function gi(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=a}function bi(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=N,this.__views__=[]}function vi(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function yi(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function Ci(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}function xi(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new Ci;++t<n;)this.add(e[t])}function Ai(e){var t=this.__data__=new yi(e);this.size=t.size}function Si(e,t){var n=bs(e),i=!n&&gs(e),r=!n&&!i&&xs(e),a=!n&&!i&&!r&&Rs(e),o=n||i||r||a,s=o?gn(e.length,it):[],u=s.length;for(var c in e)!t&&!lt.call(e,c)||o&&("length"==c||r&&("offset"==c||"parent"==c)||a&&("buffer"==c||"byteLength"==c||"byteOffset"==c)||Ka(c,u))||s.push(c);return s}function Di(e){var t=e.length;return t?e[xr(0,t-1)]:a}function Ei(e,t){return so(na(e),_i(t,0,e.length))}function ki(e){return so(na(e))}function wi(e,t,n){(n===a||ms(e[t],n))&&(n!==a||t in e)||Ii(e,t,n)}function Mi(e,t,n){var i=e[t];lt.call(e,t)&&ms(i,n)&&(n!==a||t in e)||Ii(e,t,n)}function Bi(e,t){for(var n=e.length;n--;)if(ms(e[n][0],t))return n;return-1}function Ti(e,t,n,i){return Oi(e,(function(e,r,a){t(i,e,n(e),a)})),i}function Fi(e,t){return e&&ia(t,ru(t),e)}function Ii(e,t,n){"__proto__"==t&&mn?mn(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function Pi(e,t){for(var n=-1,r=t.length,o=i(r),s=null==e;++n<r;)o[n]=s?a:Qs(e,t[n]);return o}function _i(e,t,n){return e==e&&(n!==a&&(e=e<=n?e:n),t!==a&&(e=e>=t?e:t)),e}function Li(e,t,n,i,r,o){var s,u=t&p,c=t&m,l=t&d;if(n&&(s=r?n(e,i,r,o):n(e)),s!==a)return s;if(!ws(e))return e;var h=bs(e);if(h){if(s=function(e){var t=e.length,n=new e.constructor(t);t&&"string"==typeof e[0]&&lt.call(e,"index")&&(n.index=e.index,n.input=e.input);return n}(e),!u)return na(e,s)}else{var f=Ua(e),g=f==X||f==Y;if(xs(e))return qr(e,u);if(f==Q||f==U||g&&!r){if(s=c||g?{}:Ja(e),!u)return c?function(e,t){return ia(e,za(e),t)}(e,function(e,t){return e&&ia(t,au(t),e)}(s,e)):function(e,t){return ia(e,Oa(e),t)}(e,Fi(s,e))}else{if(!wt[f])return r?e:{};s=function(e,t,n){var i=e.constructor;switch(t){case ue:return Zr(e);case W:case K:return new i(+e);case ce:return function(e,t){var n=t?Zr(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case le:case he:case pe:case me:case de:case fe:case ge:case be:case ve:return $r(e,n);case q:return new i;case Z:case ie:return new i(e);case te:return function(e){var t=new e.constructor(e.source,Je.exec(e));return t.lastIndex=e.lastIndex,t}(e);case ne:return new i;case re:return r=e,hi?tt(hi.call(r)):{}}var r}(e,f,u)}}o||(o=new Ai);var b=o.get(e);if(b)return b;o.set(e,s),Ps(e)?e.forEach((function(i){s.add(Li(i,t,n,i,e,o))})):Bs(e)&&e.forEach((function(i,r){s.set(r,Li(i,t,n,r,e,o))}));var v=h?a:(l?c?Fa:Ta:c?au:ru)(e);return Vt(v||e,(function(i,r){v&&(i=e[r=i]),Mi(s,r,Li(i,t,n,r,e,o))})),s}function Ri(e,t,n){var i=n.length;if(null==e)return!i;for(e=tt(e);i--;){var r=n[i],o=t[r],s=e[r];if(s===a&&!(r in e)||!o(s))return!1}return!0}function Ni(e,t,n){if("function"!=typeof e)throw new rt(u);return io((function(){e.apply(a,n)}),t)}function Gi(e,t,n,i){var r=-1,a=Zt,s=!0,u=e.length,c=[],l=t.length;if(!u)return c;n&&(t=Qt(t,bn(n))),i?(a=$t,s=!1):t.length>=o&&(a=yn,s=!1,t=new xi(t));e:for(;++r<u;){var h=e[r],p=null==n?h:n(h);if(h=i||0!==h?h:0,s&&p==p){for(var m=l;m--;)if(t[m]===p)continue e;c.push(h)}else a(t,p,i)||c.push(h)}return c}mi.templateSettings={escape:ke,evaluate:we,interpolate:Me,variable:"",imports:{_:mi}},mi.prototype=fi.prototype,mi.prototype.constructor=mi,gi.prototype=di(fi.prototype),gi.prototype.constructor=gi,bi.prototype=di(fi.prototype),bi.prototype.constructor=bi,vi.prototype.clear=function(){this.__data__=ni?ni(null):{},this.size=0},vi.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},vi.prototype.get=function(e){var t=this.__data__;if(ni){var n=t[e];return n===c?a:n}return lt.call(t,e)?t[e]:a},vi.prototype.has=function(e){var t=this.__data__;return ni?t[e]!==a:lt.call(t,e)},vi.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=ni&&t===a?c:t,this},yi.prototype.clear=function(){this.__data__=[],this.size=0},yi.prototype.delete=function(e){var t=this.__data__,n=Bi(t,e);return!(n<0)&&(n==t.length-1?t.pop():Lt.call(t,n,1),--this.size,!0)},yi.prototype.get=function(e){var t=this.__data__,n=Bi(t,e);return n<0?a:t[n][1]},yi.prototype.has=function(e){return Bi(this.__data__,e)>-1},yi.prototype.set=function(e,t){var n=this.__data__,i=Bi(n,e);return i<0?(++this.size,n.push([e,t])):n[i][1]=t,this},Ci.prototype.clear=function(){this.size=0,this.__data__={hash:new vi,map:new($n||yi),string:new vi}},Ci.prototype.delete=function(e){var t=Ra(this,e).delete(e);return this.size-=t?1:0,t},Ci.prototype.get=function(e){return Ra(this,e).get(e)},Ci.prototype.has=function(e){return Ra(this,e).has(e)},Ci.prototype.set=function(e,t){var n=Ra(this,e),i=n.size;return n.set(e,t),this.size+=n.size==i?0:1,this},xi.prototype.add=xi.prototype.push=function(e){return this.__data__.set(e,c),this},xi.prototype.has=function(e){return this.__data__.has(e)},Ai.prototype.clear=function(){this.__data__=new yi,this.size=0},Ai.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},Ai.prototype.get=function(e){return this.__data__.get(e)},Ai.prototype.has=function(e){return this.__data__.has(e)},Ai.prototype.set=function(e,t){var n=this.__data__;if(n instanceof yi){var i=n.__data__;if(!$n||i.length<o-1)return i.push([e,t]),this.size=++n.size,this;n=this.__data__=new Ci(i)}return n.set(e,t),this.size=n.size,this};var Oi=oa(Vi),zi=oa(Xi,!0);function Ui(e,t){var n=!0;return Oi(e,(function(e,i,r){return n=!!t(e,i,r)})),n}function Hi(e,t,n){for(var i=-1,r=e.length;++i<r;){var o=e[i],s=t(o);if(null!=s&&(u===a?s==s&&!Ls(s):n(s,u)))var u=s,c=o}return c}function Ji(e,t){var n=[];return Oi(e,(function(e,i,r){t(e,i,r)&&n.push(e)})),n}function Wi(e,t,n,i,r){var a=-1,o=e.length;for(n||(n=Wa),r||(r=[]);++a<o;){var s=e[a];t>0&&n(s)?t>1?Wi(s,t-1,n,i,r):en(r,s):i||(r[r.length]=s)}return r}var Ki=sa(),ji=sa(!0);function Vi(e,t){return e&&Ki(e,t,ru)}function Xi(e,t){return e&&ji(e,t,ru)}function Yi(e,t){return qt(t,(function(t){return Ds(e[t])}))}function qi(e,t){for(var n=0,i=(t=jr(t,e)).length;null!=e&&n<i;)e=e[co(t[n++])];return n&&n==i?e:a}function Zi(e,t,n){var i=t(e);return bs(e)?i:en(i,n(e))}function $i(e){return null==e?e===a?ae:$:an&&an in tt(e)?function(e){var t=lt.call(e,an),n=e[an];try{e[an]=a;var i=!0}catch(e){}var r=mt.call(e);i&&(t?e[an]=n:delete e[an]);return r}(e):function(e){return mt.call(e)}(e)}function Qi(e,t){return e>t}function er(e,t){return null!=e&&lt.call(e,t)}function tr(e,t){return null!=e&&t in tt(e)}function nr(e,t,n){for(var r=n?$t:Zt,o=e[0].length,s=e.length,u=s,c=i(s),l=1/0,h=[];u--;){var p=e[u];u&&t&&(p=Qt(p,bn(t))),l=jn(p.length,l),c[u]=!n&&(t||o>=120&&p.length>=120)?new xi(u&&p):a}p=e[0];var m=-1,d=c[0];e:for(;++m<o&&h.length<l;){var f=p[m],g=t?t(f):f;if(f=n||0!==f?f:0,!(d?yn(d,g):r(h,g,n))){for(u=s;--u;){var b=c[u];if(!(b?yn(b,g):r(e[u],g,n)))continue e}d&&d.push(g),h.push(f)}}return h}function ir(e,t,n){var i=null==(e=eo(e,t=jr(t,e)))?e:e[co(So(t))];return null==i?a:Kt(i,e,n)}function rr(e){return Ms(e)&&$i(e)==U}function ar(e,t,n,i,r){return e===t||(null==e||null==t||!Ms(e)&&!Ms(t)?e!=e&&t!=t:function(e,t,n,i,r,o){var s=bs(e),u=bs(t),c=s?H:Ua(e),l=u?H:Ua(t),h=(c=c==U?Q:c)==Q,p=(l=l==U?Q:l)==Q,m=c==l;if(m&&xs(e)){if(!xs(t))return!1;s=!0,h=!1}if(m&&!h)return o||(o=new Ai),s||Rs(e)?Ma(e,t,n,i,r,o):function(e,t,n,i,r,a,o){switch(n){case ce:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case ue:return!(e.byteLength!=t.byteLength||!a(new At(e),new At(t)));case W:case K:case Z:return ms(+e,+t);case V:return e.name==t.name&&e.message==t.message;case te:case ie:return e==t+"";case q:var s=kn;case ne:var u=i&f;if(s||(s=Bn),e.size!=t.size&&!u)return!1;var c=o.get(e);if(c)return c==t;i|=g,o.set(e,t);var l=Ma(s(e),s(t),i,r,a,o);return o.delete(e),l;case re:if(hi)return hi.call(e)==hi.call(t)}return!1}(e,t,c,n,i,r,o);if(!(n&f)){var d=h&&lt.call(e,"__wrapped__"),b=p&&lt.call(t,"__wrapped__");if(d||b){var v=d?e.value():e,y=b?t.value():t;return o||(o=new Ai),r(v,y,n,i,o)}}if(!m)return!1;return o||(o=new Ai),function(e,t,n,i,r,o){var s=n&f,u=Ta(e),c=u.length,l=Ta(t).length;if(c!=l&&!s)return!1;var h=c;for(;h--;){var p=u[h];if(!(s?p in t:lt.call(t,p)))return!1}var m=o.get(e);if(m&&o.get(t))return m==t;var d=!0;o.set(e,t),o.set(t,e);var g=s;for(;++h<c;){p=u[h];var b=e[p],v=t[p];if(i)var y=s?i(v,b,p,t,e,o):i(b,v,p,e,t,o);if(!(y===a?b===v||r(b,v,n,i,o):y)){d=!1;break}g||(g="constructor"==p)}if(d&&!g){var C=e.constructor,x=t.constructor;C!=x&&"constructor"in e&&"constructor"in t&&!("function"==typeof C&&C instanceof C&&"function"==typeof x&&x instanceof x)&&(d=!1)}return o.delete(e),o.delete(t),d}(e,t,n,i,r,o)}(e,t,n,i,ar,r))}function or(e,t,n,i){var r=n.length,o=r,s=!i;if(null==e)return!o;for(e=tt(e);r--;){var u=n[r];if(s&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++r<o;){var c=(u=n[r])[0],l=e[c],h=u[1];if(s&&u[2]){if(l===a&&!(c in e))return!1}else{var p=new Ai;if(i)var m=i(l,h,c,e,t,p);if(!(m===a?ar(h,l,f|g,i,p):m))return!1}}return!0}function sr(e){return!(!ws(e)||(t=e,pt&&pt in t))&&(Ds(e)?gt:je).test(lo(e));var t}function ur(e){return"function"==typeof e?e:null==e?Tu:"object"==typeof e?bs(e)?dr(e[0],e[1]):mr(e):Ou(e)}function cr(e){if(!qa(e))return Wn(e);var t=[];for(var n in tt(e))lt.call(e,n)&&"constructor"!=n&&t.push(n);return t}function lr(e){if(!ws(e))return function(e){var t=[];if(null!=e)for(var n in tt(e))t.push(n);return t}(e);var t=qa(e),n=[];for(var i in e)("constructor"!=i||!t&&lt.call(e,i))&&n.push(i);return n}function hr(e,t){return e<t}function pr(e,t){var n=-1,r=ys(e)?i(e.length):[];return Oi(e,(function(e,i,a){r[++n]=t(e,i,a)})),r}function mr(e){var t=Na(e);return 1==t.length&&t[0][2]?$a(t[0][0],t[0][1]):function(n){return n===e||or(n,e,t)}}function dr(e,t){return Va(e)&&Za(t)?$a(co(e),t):function(n){var i=Qs(n,e);return i===a&&i===t?eu(n,e):ar(t,i,f|g)}}function fr(e,t,n,i,r){e!==t&&Ki(t,(function(o,s){if(r||(r=new Ai),ws(o))!function(e,t,n,i,r,o,s){var u=to(e,n),c=to(t,n),l=s.get(c);if(l)return void wi(e,n,l);var h=o?o(u,c,n+"",e,t,s):a,p=h===a;if(p){var m=bs(c),d=!m&&xs(c),f=!m&&!d&&Rs(c);h=c,m||d||f?bs(u)?h=u:Cs(u)?h=na(u):d?(p=!1,h=qr(c,!0)):f?(p=!1,h=$r(c,!0)):h=[]:Fs(c)||gs(c)?(h=u,gs(u)?h=Ws(u):ws(u)&&!Ds(u)||(h=Ja(c))):p=!1}p&&(s.set(c,h),r(h,c,i,o,s),s.delete(c));wi(e,n,h)}(e,t,s,n,fr,i,r);else{var u=i?i(to(e,s),o,s+"",e,t,r):a;u===a&&(u=o),wi(e,s,u)}}),au)}function gr(e,t){var n=e.length;if(n)return Ka(t+=t<0?n:0,n)?e[t]:a}function br(e,t,n){var i=-1;return t=Qt(t.length?t:[Tu],bn(La())),function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e}(pr(e,(function(e,n,r){return{criteria:Qt(t,(function(t){return t(e)})),index:++i,value:e}})),(function(e,t){return function(e,t,n){var i=-1,r=e.criteria,a=t.criteria,o=r.length,s=n.length;for(;++i<o;){var u=Qr(r[i],a[i]);if(u){if(i>=s)return u;var c=n[i];return u*("desc"==c?-1:1)}}return e.index-t.index}(e,t,n)}))}function vr(e,t,n){for(var i=-1,r=t.length,a={};++i<r;){var o=t[i],s=qi(e,o);n(s,o)&&kr(a,jr(o,e),s)}return a}function yr(e,t,n,i){var r=i?cn:un,a=-1,o=t.length,s=e;for(e===t&&(t=na(t)),n&&(s=Qt(e,bn(n)));++a<o;)for(var u=0,c=t[a],l=n?n(c):c;(u=r(s,l,u,i))>-1;)s!==e&&Lt.call(s,u,1),Lt.call(e,u,1);return e}function Cr(e,t){for(var n=e?t.length:0,i=n-1;n--;){var r=t[n];if(n==i||r!==a){var a=r;Ka(r)?Lt.call(e,r,1):Gr(e,r)}}return e}function xr(e,t){return e+On(Yn()*(t-e+1))}function Ar(e,t){var n="";if(!e||t<1||t>_)return n;do{t%2&&(n+=e),(t=On(t/2))&&(e+=e)}while(t);return n}function Sr(e,t){return ro(Qa(e,t,Tu),e+"")}function Dr(e){return Di(mu(e))}function Er(e,t){var n=mu(e);return so(n,_i(t,0,n.length))}function kr(e,t,n,i){if(!ws(e))return e;for(var r=-1,o=(t=jr(t,e)).length,s=o-1,u=e;null!=u&&++r<o;){var c=co(t[r]),l=n;if(r!=s){var h=u[c];(l=i?i(h,c,u):a)===a&&(l=ws(h)?h:Ka(t[r+1])?[]:{})}Mi(u,c,l),u=u[c]}return e}var wr=ii?function(e,t){return ii.set(e,t),e}:Tu,Mr=mn?function(e,t){return mn(e,"toString",{configurable:!0,enumerable:!1,value:wu(t),writable:!0})}:Tu;function Br(e){return so(mu(e))}function Tr(e,t,n){var r=-1,a=e.length;t<0&&(t=-t>a?0:a+t),(n=n>a?a:n)<0&&(n+=a),a=t>n?0:n-t>>>0,t>>>=0;for(var o=i(a);++r<a;)o[r]=e[r+t];return o}function Fr(e,t){var n;return Oi(e,(function(e,i,r){return!(n=t(e,i,r))})),!!n}function Ir(e,t,n){var i=0,r=null==e?i:e.length;if("number"==typeof t&&t==t&&r<=O){for(;i<r;){var a=i+r>>>1,o=e[a];null!==o&&!Ls(o)&&(n?o<=t:o<t)?i=a+1:r=a}return r}return Pr(e,t,Tu,n)}function Pr(e,t,n,i){t=n(t);for(var r=0,o=null==e?0:e.length,s=t!=t,u=null===t,c=Ls(t),l=t===a;r<o;){var h=On((r+o)/2),p=n(e[h]),m=p!==a,d=null===p,f=p==p,g=Ls(p);if(s)var b=i||f;else b=l?f&&(i||m):u?f&&m&&(i||!d):c?f&&m&&!d&&(i||!g):!d&&!g&&(i?p<=t:p<t);b?r=h+1:o=h}return jn(o,G)}function _r(e,t){for(var n=-1,i=e.length,r=0,a=[];++n<i;){var o=e[n],s=t?t(o):o;if(!n||!ms(s,u)){var u=s;a[r++]=0===o?0:o}}return a}function Lr(e){return"number"==typeof e?e:Ls(e)?R:+e}function Rr(e){if("string"==typeof e)return e;if(bs(e))return Qt(e,Rr)+"";if(Ls(e))return pi?pi.call(e):"";var t=e+"";return"0"==t&&1/e==-P?"-0":t}function Nr(e,t,n){var i=-1,r=Zt,a=e.length,s=!0,u=[],c=u;if(n)s=!1,r=$t;else if(a>=o){var l=t?null:Aa(e);if(l)return Bn(l);s=!1,r=yn,c=new xi}else c=t?[]:u;e:for(;++i<a;){var h=e[i],p=t?t(h):h;if(h=n||0!==h?h:0,s&&p==p){for(var m=c.length;m--;)if(c[m]===p)continue e;t&&c.push(p),u.push(h)}else r(c,p,n)||(c!==u&&c.push(p),u.push(h))}return u}function Gr(e,t){return null==(e=eo(e,t=jr(t,e)))||delete e[co(So(t))]}function Or(e,t,n,i){return kr(e,t,n(qi(e,t)),i)}function zr(e,t,n,i){for(var r=e.length,a=i?r:-1;(i?a--:++a<r)&&t(e[a],a,e););return n?Tr(e,i?0:a,i?a+1:r):Tr(e,i?a+1:0,i?r:a)}function Ur(e,t){var n=e;return n instanceof bi&&(n=n.value()),tn(t,(function(e,t){return t.func.apply(t.thisArg,en([e],t.args))}),n)}function Hr(e,t,n){var r=e.length;if(r<2)return r?Nr(e[0]):[];for(var a=-1,o=i(r);++a<r;)for(var s=e[a],u=-1;++u<r;)u!=a&&(o[a]=Gi(o[a]||s,e[u],t,n));return Nr(Wi(o,1),t,n)}function Jr(e,t,n){for(var i=-1,r=e.length,o=t.length,s={};++i<r;){var u=i<o?t[i]:a;n(s,e[i],u)}return s}function Wr(e){return Cs(e)?e:[]}function Kr(e){return"function"==typeof e?e:Tu}function jr(e,t){return bs(e)?e:Va(e,t)?[e]:uo(Ks(e))}var Vr=Sr;function Xr(e,t,n){var i=e.length;return n=n===a?i:n,!t&&n>=i?e:Tr(e,t,n)}var Yr=Ln||function(e){return Pt.clearTimeout(e)};function qr(e,t){if(t)return e.slice();var n=e.length,i=Mt?Mt(n):new e.constructor(n);return e.copy(i),i}function Zr(e){var t=new e.constructor(e.byteLength);return new At(t).set(new At(e)),t}function $r(e,t){var n=t?Zr(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function Qr(e,t){if(e!==t){var n=e!==a,i=null===e,r=e==e,o=Ls(e),s=t!==a,u=null===t,c=t==t,l=Ls(t);if(!u&&!l&&!o&&e>t||o&&s&&c&&!u&&!l||i&&s&&c||!n&&c||!r)return 1;if(!i&&!o&&!l&&e<t||l&&n&&r&&!i&&!o||u&&n&&r||!s&&r||!c)return-1}return 0}function ea(e,t,n,r){for(var a=-1,o=e.length,s=n.length,u=-1,c=t.length,l=Kn(o-s,0),h=i(c+l),p=!r;++u<c;)h[u]=t[u];for(;++a<s;)(p||a<o)&&(h[n[a]]=e[a]);for(;l--;)h[u++]=e[a++];return h}function ta(e,t,n,r){for(var a=-1,o=e.length,s=-1,u=n.length,c=-1,l=t.length,h=Kn(o-u,0),p=i(h+l),m=!r;++a<h;)p[a]=e[a];for(var d=a;++c<l;)p[d+c]=t[c];for(;++s<u;)(m||a<o)&&(p[d+n[s]]=e[a++]);return p}function na(e,t){var n=-1,r=e.length;for(t||(t=i(r));++n<r;)t[n]=e[n];return t}function ia(e,t,n,i){var r=!n;n||(n={});for(var o=-1,s=t.length;++o<s;){var u=t[o],c=i?i(n[u],e[u],u,n,e):a;c===a&&(c=e[u]),r?Ii(n,u,c):Mi(n,u,c)}return n}function ra(e,t){return function(n,i){var r=bs(n)?jt:Ti,a=t?t():{};return r(n,e,La(i,2),a)}}function aa(e){return Sr((function(t,n){var i=-1,r=n.length,o=r>1?n[r-1]:a,s=r>2?n[2]:a;for(o=e.length>3&&"function"==typeof o?(r--,o):a,s&&ja(n[0],n[1],s)&&(o=r<3?a:o,r=1),t=tt(t);++i<r;){var u=n[i];u&&e(t,u,i,o)}return t}))}function oa(e,t){return function(n,i){if(null==n)return n;if(!ys(n))return e(n,i);for(var r=n.length,a=t?r:-1,o=tt(n);(t?a--:++a<r)&&!1!==i(o[a],a,o););return n}}function sa(e){return function(t,n,i){for(var r=-1,a=tt(t),o=i(t),s=o.length;s--;){var u=o[e?s:++r];if(!1===n(a[u],u,a))break}return t}}function ua(e){return function(t){var n=En(t=Ks(t))?In(t):a,i=n?n[0]:t.charAt(0),r=n?Xr(n,1).join(""):t.slice(1);return i[e]()+r}}function ca(e){return function(t){return tn(Du(gu(t).replace(vt,"")),e,"")}}function la(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=di(e.prototype),i=e.apply(n,t);return ws(i)?i:n}}function ha(e){return function(t,n,i){var r=tt(t);if(!ys(t)){var o=La(n,3);t=ru(t),n=function(e){return o(r[e],e,r)}}var s=e(t,n,i);return s>-1?r[o?t[s]:s]:a}}function pa(e){return Ba((function(t){var n=t.length,i=n,r=gi.prototype.thru;for(e&&t.reverse();i--;){var o=t[i];if("function"!=typeof o)throw new rt(u);if(r&&!s&&"wrapper"==Pa(o))var s=new gi([],!0)}for(i=s?i:n;++i<n;){var c=Pa(o=t[i]),l="wrapper"==c?Ia(o):a;s=l&&Xa(l[0])&&l[1]==(D|C|A|E)&&!l[4].length&&1==l[9]?s[Pa(l[0])].apply(s,l[3]):1==o.length&&Xa(o)?s[c]():s.thru(o)}return function(){var e=arguments,i=e[0];if(s&&1==e.length&&bs(i))return s.plant(i).value();for(var r=0,a=n?t[r].apply(this,e):i;++r<n;)a=t[r].call(this,a);return a}}))}function ma(e,t,n,r,o,s,u,c,l,h){var p=t&D,m=t&b,d=t&v,f=t&(C|x),g=t&k,y=d?a:la(e);return function b(){for(var v=arguments.length,C=i(v),x=v;x--;)C[x]=arguments[x];if(f)var A=_a(b),S=function(e,t){for(var n=e.length,i=0;n--;)e[n]===t&&++i;return i}(C,A);if(r&&(C=ea(C,r,o,f)),s&&(C=ta(C,s,u,f)),v-=S,f&&v<h){var D=Mn(C,A);return Ca(e,t,ma,b.placeholder,n,C,D,c,l,h-v)}var E=m?n:this,k=d?E[e]:e;return v=C.length,c?C=function(e,t){var n=e.length,i=jn(t.length,n),r=na(e);for(;i--;){var o=t[i];e[i]=Ka(o,n)?r[o]:a}return e}(C,c):g&&v>1&&C.reverse(),p&&l<v&&(C.length=l),this&&this!==Pt&&this instanceof b&&(k=y||la(k)),k.apply(E,C)}}function da(e,t){return function(n,i){return function(e,t,n,i){return Vi(e,(function(e,r,a){t(i,n(e),r,a)})),i}(n,e,t(i),{})}}function fa(e,t){return function(n,i){var r;if(n===a&&i===a)return t;if(n!==a&&(r=n),i!==a){if(r===a)return i;"string"==typeof n||"string"==typeof i?(n=Rr(n),i=Rr(i)):(n=Lr(n),i=Lr(i)),r=e(n,i)}return r}}function ga(e){return Ba((function(t){return t=Qt(t,bn(La())),Sr((function(n){var i=this;return e(t,(function(e){return Kt(e,i,n)}))}))}))}function ba(e,t){var n=(t=t===a?" ":Rr(t)).length;if(n<2)return n?Ar(t,e):t;var i=Ar(t,Gn(e/Fn(t)));return En(t)?Xr(In(i),0,e).join(""):i.slice(0,e)}function va(e){return function(t,n,r){return r&&"number"!=typeof r&&ja(t,n,r)&&(n=r=a),t=zs(t),n===a?(n=t,t=0):n=zs(n),function(e,t,n,r){for(var a=-1,o=Kn(Gn((t-e)/(n||1)),0),s=i(o);o--;)s[r?o:++a]=e,e+=n;return s}(t,n,r=r===a?t<n?1:-1:zs(r),e)}}function ya(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=Js(t),n=Js(n)),e(t,n)}}function Ca(e,t,n,i,r,o,s,u,c,l){var h=t&C;t|=h?A:S,(t&=~(h?S:A))&y||(t&=~(b|v));var p=[e,t,r,h?o:a,h?s:a,h?a:o,h?a:s,u,c,l],m=n.apply(a,p);return Xa(e)&&no(m,p),m.placeholder=i,ao(m,e,t)}function xa(e){var t=et[e];return function(e,n){if(e=Js(e),(n=null==n?0:jn(Us(n),292))&&Hn(e)){var i=(Ks(e)+"e").split("e");return+((i=(Ks(t(i[0]+"e"+(+i[1]+n)))+"e").split("e"))[0]+"e"+(+i[1]-n))}return t(e)}}var Aa=ei&&1/Bn(new ei([,-0]))[1]==P?function(e){return new ei(e)}:Lu;function Sa(e){return function(t){var n=Ua(t);return n==q?kn(t):n==ne?Tn(t):function(e,t){return Qt(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function Da(e,t,n,r,o,s,c,l){var p=t&v;if(!p&&"function"!=typeof e)throw new rt(u);var m=r?r.length:0;if(m||(t&=~(A|S),r=o=a),c=c===a?c:Kn(Us(c),0),l=l===a?l:Us(l),m-=o?o.length:0,t&S){var d=r,f=o;r=o=a}var g=p?a:Ia(e),k=[e,t,n,r,o,d,f,s,c,l];if(g&&function(e,t){var n=e[1],i=t[1],r=n|i,a=r<(b|v|D),o=i==D&&n==C||i==D&&n==E&&e[7].length<=t[8]||i==(D|E)&&t[7].length<=t[8]&&n==C;if(!a&&!o)return e;i&b&&(e[2]=t[2],r|=n&b?0:y);var s=t[3];if(s){var u=e[3];e[3]=u?ea(u,s,t[4]):s,e[4]=u?Mn(e[3],h):t[4]}(s=t[5])&&(u=e[5],e[5]=u?ta(u,s,t[6]):s,e[6]=u?Mn(e[5],h):t[6]);(s=t[7])&&(e[7]=s);i&D&&(e[8]=null==e[8]?t[8]:jn(e[8],t[8]));null==e[9]&&(e[9]=t[9]);e[0]=t[0],e[1]=r}(k,g),e=k[0],t=k[1],n=k[2],r=k[3],o=k[4],!(l=k[9]=k[9]===a?p?0:e.length:Kn(k[9]-m,0))&&t&(C|x)&&(t&=~(C|x)),t&&t!=b)w=t==C||t==x?function(e,t,n){var r=la(e);return function o(){for(var s=arguments.length,u=i(s),c=s,l=_a(o);c--;)u[c]=arguments[c];var h=s<3&&u[0]!==l&&u[s-1]!==l?[]:Mn(u,l);return(s-=h.length)<n?Ca(e,t,ma,o.placeholder,a,u,h,a,a,n-s):Kt(this&&this!==Pt&&this instanceof o?r:e,this,u)}}(e,t,l):t!=A&&t!=(b|A)||o.length?ma.apply(a,k):function(e,t,n,r){var a=t&b,o=la(e);return function t(){for(var s=-1,u=arguments.length,c=-1,l=r.length,h=i(l+u),p=this&&this!==Pt&&this instanceof t?o:e;++c<l;)h[c]=r[c];for(;u--;)h[c++]=arguments[++s];return Kt(p,a?n:this,h)}}(e,t,n,r);else var w=function(e,t,n){var i=t&b,r=la(e);return function t(){return(this&&this!==Pt&&this instanceof t?r:e).apply(i?n:this,arguments)}}(e,t,n);return ao((g?wr:no)(w,k),e,t)}function Ea(e,t,n,i){return e===a||ms(e,st[n])&&!lt.call(i,n)?t:e}function ka(e,t,n,i,r,o){return ws(e)&&ws(t)&&(o.set(t,e),fr(e,t,a,ka,o),o.delete(t)),e}function wa(e){return Fs(e)?a:e}function Ma(e,t,n,i,r,o){var s=n&f,u=e.length,c=t.length;if(u!=c&&!(s&&c>u))return!1;var l=o.get(e);if(l&&o.get(t))return l==t;var h=-1,p=!0,m=n&g?new xi:a;for(o.set(e,t),o.set(t,e);++h<u;){var d=e[h],b=t[h];if(i)var v=s?i(b,d,h,t,e,o):i(d,b,h,e,t,o);if(v!==a){if(v)continue;p=!1;break}if(m){if(!rn(t,(function(e,t){if(!yn(m,t)&&(d===e||r(d,e,n,i,o)))return m.push(t)}))){p=!1;break}}else if(d!==b&&!r(d,b,n,i,o)){p=!1;break}}return o.delete(e),o.delete(t),p}function Ba(e){return ro(Qa(e,a,vo),e+"")}function Ta(e){return Zi(e,ru,Oa)}function Fa(e){return Zi(e,au,za)}var Ia=ii?function(e){return ii.get(e)}:Lu;function Pa(e){for(var t=e.name+"",n=ri[t],i=lt.call(ri,t)?n.length:0;i--;){var r=n[i],a=r.func;if(null==a||a==e)return r.name}return t}function _a(e){return(lt.call(mi,"placeholder")?mi:e).placeholder}function La(){var e=mi.iteratee||Fu;return e=e===Fu?ur:e,arguments.length?e(arguments[0],arguments[1]):e}function Ra(e,t){var n,i,r=e.__data__;return("string"==(i=typeof(n=t))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==n:null===n)?r["string"==typeof t?"string":"hash"]:r.map}function Na(e){for(var t=ru(e),n=t.length;n--;){var i=t[n],r=e[i];t[n]=[i,r,Za(r)]}return t}function Ga(e,t){var n=function(e,t){return null==e?a:e[t]}(e,t);return sr(n)?n:a}var Oa=zn?function(e){return null==e?[]:(e=tt(e),qt(zn(e),(function(t){return _t.call(e,t)})))}:Hu,za=zn?function(e){for(var t=[];e;)en(t,Oa(e)),e=Ft(e);return t}:Hu,Ua=$i;function Ha(e,t,n){for(var i=-1,r=(t=jr(t,e)).length,a=!1;++i<r;){var o=co(t[i]);if(!(a=null!=e&&n(e,o)))break;e=e[o]}return a||++i!=r?a:!!(r=null==e?0:e.length)&&ks(r)&&Ka(o,r)&&(bs(e)||gs(e))}function Ja(e){return"function"!=typeof e.constructor||qa(e)?{}:di(Ft(e))}function Wa(e){return bs(e)||gs(e)||!!(Nt&&e&&e[Nt])}function Ka(e,t){var n=typeof e;return!!(t=null==t?_:t)&&("number"==n||"symbol"!=n&&Xe.test(e))&&e>-1&&e%1==0&&e<t}function ja(e,t,n){if(!ws(n))return!1;var i=typeof t;return!!("number"==i?ys(n)&&Ka(t,n.length):"string"==i&&t in n)&&ms(n[t],e)}function Va(e,t){if(bs(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!Ls(e))||(Te.test(e)||!Be.test(e)||null!=t&&e in tt(t))}function Xa(e){var t=Pa(e),n=mi[t];if("function"!=typeof n||!(t in bi.prototype))return!1;if(e===n)return!0;var i=Ia(n);return!!i&&e===i[0]}(Zn&&Ua(new Zn(new ArrayBuffer(1)))!=ce||$n&&Ua(new $n)!=q||Qn&&"[object Promise]"!=Ua(Qn.resolve())||ei&&Ua(new ei)!=ne||ti&&Ua(new ti)!=oe)&&(Ua=function(e){var t=$i(e),n=t==Q?e.constructor:a,i=n?lo(n):"";if(i)switch(i){case ai:return ce;case oi:return q;case si:return"[object Promise]";case ui:return ne;case ci:return oe}return t});var Ya=ut?Ds:Ju;function qa(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||st)}function Za(e){return e==e&&!ws(e)}function $a(e,t){return function(n){return null!=n&&(n[e]===t&&(t!==a||e in tt(n)))}}function Qa(e,t,n){return t=Kn(t===a?e.length-1:t,0),function(){for(var r=arguments,a=-1,o=Kn(r.length-t,0),s=i(o);++a<o;)s[a]=r[t+a];a=-1;for(var u=i(t+1);++a<t;)u[a]=r[a];return u[t]=n(s),Kt(e,this,u)}}function eo(e,t){return t.length<2?e:qi(e,Tr(t,0,-1))}function to(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var no=oo(wr),io=Nn||function(e,t){return Pt.setTimeout(e,t)},ro=oo(Mr);function ao(e,t,n){var i=t+"";return ro(e,function(e,t){var n=t.length;if(!n)return e;var i=n-1;return t[i]=(n>1?"& ":"")+t[i],t=t.join(n>2?", ":" "),e.replace(Ne,"{\n/* [wrapped with "+t+"] */\n")}(i,function(e,t){return Vt(z,(function(n){var i="_."+n[0];t&n[1]&&!Zt(e,i)&&e.push(i)})),e.sort()}(function(e){var t=e.match(Ge);return t?t[1].split(Oe):[]}(i),n)))}function oo(e){var t=0,n=0;return function(){var i=Vn(),r=T-(i-n);if(n=i,r>0){if(++t>=B)return arguments[0]}else t=0;return e.apply(a,arguments)}}function so(e,t){var n=-1,i=e.length,r=i-1;for(t=t===a?i:t;++n<t;){var o=xr(n,r),s=e[o];e[o]=e[n],e[n]=s}return e.length=t,e}var uo=function(e){var t=ss(e,(function(e){return n.size===l&&n.clear(),e})),n=t.cache;return t}((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(Fe,(function(e,n,i,r){t.push(i?r.replace(Ue,"$1"):n||e)})),t}));function co(e){if("string"==typeof e||Ls(e))return e;var t=e+"";return"0"==t&&1/e==-P?"-0":t}function lo(e){if(null!=e){try{return ct.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function ho(e){if(e instanceof bi)return e.clone();var t=new gi(e.__wrapped__,e.__chain__);return t.__actions__=na(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var po=Sr((function(e,t){return Cs(e)?Gi(e,Wi(t,1,Cs,!0)):[]})),mo=Sr((function(e,t){var n=So(t);return Cs(n)&&(n=a),Cs(e)?Gi(e,Wi(t,1,Cs,!0),La(n,2)):[]})),fo=Sr((function(e,t){var n=So(t);return Cs(n)&&(n=a),Cs(e)?Gi(e,Wi(t,1,Cs,!0),a,n):[]}));function go(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=null==n?0:Us(n);return r<0&&(r=Kn(i+r,0)),sn(e,La(t,3),r)}function bo(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=i-1;return n!==a&&(r=Us(n),r=n<0?Kn(i+r,0):jn(r,i-1)),sn(e,La(t,3),r,!0)}function vo(e){return(null==e?0:e.length)?Wi(e,1):[]}function yo(e){return e&&e.length?e[0]:a}var Co=Sr((function(e){var t=Qt(e,Wr);return t.length&&t[0]===e[0]?nr(t):[]})),xo=Sr((function(e){var t=So(e),n=Qt(e,Wr);return t===So(n)?t=a:n.pop(),n.length&&n[0]===e[0]?nr(n,La(t,2)):[]})),Ao=Sr((function(e){var t=So(e),n=Qt(e,Wr);return(t="function"==typeof t?t:a)&&n.pop(),n.length&&n[0]===e[0]?nr(n,a,t):[]}));function So(e){var t=null==e?0:e.length;return t?e[t-1]:a}var Do=Sr(Eo);function Eo(e,t){return e&&e.length&&t&&t.length?yr(e,t):e}var ko=Ba((function(e,t){var n=null==e?0:e.length,i=Pi(e,t);return Cr(e,Qt(t,(function(e){return Ka(e,n)?+e:e})).sort(Qr)),i}));function wo(e){return null==e?e:qn.call(e)}var Mo=Sr((function(e){return Nr(Wi(e,1,Cs,!0))})),Bo=Sr((function(e){var t=So(e);return Cs(t)&&(t=a),Nr(Wi(e,1,Cs,!0),La(t,2))})),To=Sr((function(e){var t=So(e);return t="function"==typeof t?t:a,Nr(Wi(e,1,Cs,!0),a,t)}));function Fo(e){if(!e||!e.length)return[];var t=0;return e=qt(e,(function(e){if(Cs(e))return t=Kn(e.length,t),!0})),gn(t,(function(t){return Qt(e,pn(t))}))}function Io(e,t){if(!e||!e.length)return[];var n=Fo(e);return null==t?n:Qt(n,(function(e){return Kt(t,a,e)}))}var Po=Sr((function(e,t){return Cs(e)?Gi(e,t):[]})),_o=Sr((function(e){return Hr(qt(e,Cs))})),Lo=Sr((function(e){var t=So(e);return Cs(t)&&(t=a),Hr(qt(e,Cs),La(t,2))})),Ro=Sr((function(e){var t=So(e);return t="function"==typeof t?t:a,Hr(qt(e,Cs),a,t)})),No=Sr(Fo);var Go=Sr((function(e){var t=e.length,n=t>1?e[t-1]:a;return n="function"==typeof n?(e.pop(),n):a,Io(e,n)}));function Oo(e){var t=mi(e);return t.__chain__=!0,t}function zo(e,t){return t(e)}var Uo=Ba((function(e){var t=e.length,n=t?e[0]:0,i=this.__wrapped__,r=function(t){return Pi(t,e)};return!(t>1||this.__actions__.length)&&i instanceof bi&&Ka(n)?((i=i.slice(n,+n+(t?1:0))).__actions__.push({func:zo,args:[r],thisArg:a}),new gi(i,this.__chain__).thru((function(e){return t&&!e.length&&e.push(a),e}))):this.thru(r)}));var Ho=ra((function(e,t,n){lt.call(e,n)?++e[n]:Ii(e,n,1)}));var Jo=ha(go),Wo=ha(bo);function Ko(e,t){return(bs(e)?Vt:Oi)(e,La(t,3))}function jo(e,t){return(bs(e)?Xt:zi)(e,La(t,3))}var Vo=ra((function(e,t,n){lt.call(e,n)?e[n].push(t):Ii(e,n,[t])}));var Xo=Sr((function(e,t,n){var r=-1,a="function"==typeof t,o=ys(e)?i(e.length):[];return Oi(e,(function(e){o[++r]=a?Kt(t,e,n):ir(e,t,n)})),o})),Yo=ra((function(e,t,n){Ii(e,n,t)}));function qo(e,t){return(bs(e)?Qt:pr)(e,La(t,3))}var Zo=ra((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]}));var $o=Sr((function(e,t){if(null==e)return[];var n=t.length;return n>1&&ja(e,t[0],t[1])?t=[]:n>2&&ja(t[0],t[1],t[2])&&(t=[t[0]]),br(e,Wi(t,1),[])})),Qo=Rn||function(){return Pt.Date.now()};function es(e,t,n){return t=n?a:t,t=e&&null==t?e.length:t,Da(e,D,a,a,a,a,t)}function ts(e,t){var n;if("function"!=typeof t)throw new rt(u);return e=Us(e),function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=a),n}}var ns=Sr((function(e,t,n){var i=b;if(n.length){var r=Mn(n,_a(ns));i|=A}return Da(e,i,t,n,r)})),is=Sr((function(e,t,n){var i=b|v;if(n.length){var r=Mn(n,_a(is));i|=A}return Da(t,i,e,n,r)}));function rs(e,t,n){var i,r,o,s,c,l,h=0,p=!1,m=!1,d=!0;if("function"!=typeof e)throw new rt(u);function f(t){var n=i,o=r;return i=r=a,h=t,s=e.apply(o,n)}function g(e){var n=e-l;return l===a||n>=t||n<0||m&&e-h>=o}function b(){var e=Qo();if(g(e))return v(e);c=io(b,function(e){var n=t-(e-l);return m?jn(n,o-(e-h)):n}(e))}function v(e){return c=a,d&&i?f(e):(i=r=a,s)}function y(){var e=Qo(),n=g(e);if(i=arguments,r=this,l=e,n){if(c===a)return function(e){return h=e,c=io(b,t),p?f(e):s}(l);if(m)return Yr(c),c=io(b,t),f(l)}return c===a&&(c=io(b,t)),s}return t=Js(t)||0,ws(n)&&(p=!!n.leading,o=(m="maxWait"in n)?Kn(Js(n.maxWait)||0,t):o,d="trailing"in n?!!n.trailing:d),y.cancel=function(){c!==a&&Yr(c),h=0,i=l=r=c=a},y.flush=function(){return c===a?s:v(Qo())},y}var as=Sr((function(e,t){return Ni(e,1,t)})),os=Sr((function(e,t,n){return Ni(e,Js(t)||0,n)}));function ss(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new rt(u);var n=function(){var i=arguments,r=t?t.apply(this,i):i[0],a=n.cache;if(a.has(r))return a.get(r);var o=e.apply(this,i);return n.cache=a.set(r,o)||a,o};return n.cache=new(ss.Cache||Ci),n}function us(e){if("function"!=typeof e)throw new rt(u);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}ss.Cache=Ci;var cs=Vr((function(e,t){var n=(t=1==t.length&&bs(t[0])?Qt(t[0],bn(La())):Qt(Wi(t,1),bn(La()))).length;return Sr((function(i){for(var r=-1,a=jn(i.length,n);++r<a;)i[r]=t[r].call(this,i[r]);return Kt(e,this,i)}))})),ls=Sr((function(e,t){var n=Mn(t,_a(ls));return Da(e,A,a,t,n)})),hs=Sr((function(e,t){var n=Mn(t,_a(hs));return Da(e,S,a,t,n)})),ps=Ba((function(e,t){return Da(e,E,a,a,a,t)}));function ms(e,t){return e===t||e!=e&&t!=t}var ds=ya(Qi),fs=ya((function(e,t){return e>=t})),gs=rr(function(){return arguments}())?rr:function(e){return Ms(e)&&lt.call(e,"callee")&&!_t.call(e,"callee")},bs=i.isArray,vs=Ot?bn(Ot):function(e){return Ms(e)&&$i(e)==ue};function ys(e){return null!=e&&ks(e.length)&&!Ds(e)}function Cs(e){return Ms(e)&&ys(e)}var xs=Un||Ju,As=zt?bn(zt):function(e){return Ms(e)&&$i(e)==K};function Ss(e){if(!Ms(e))return!1;var t=$i(e);return t==V||t==j||"string"==typeof e.message&&"string"==typeof e.name&&!Fs(e)}function Ds(e){if(!ws(e))return!1;var t=$i(e);return t==X||t==Y||t==J||t==ee}function Es(e){return"number"==typeof e&&e==Us(e)}function ks(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=_}function ws(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function Ms(e){return null!=e&&"object"==typeof e}var Bs=Ut?bn(Ut):function(e){return Ms(e)&&Ua(e)==q};function Ts(e){return"number"==typeof e||Ms(e)&&$i(e)==Z}function Fs(e){if(!Ms(e)||$i(e)!=Q)return!1;var t=Ft(e);if(null===t)return!0;var n=lt.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&ct.call(n)==dt}var Is=Ht?bn(Ht):function(e){return Ms(e)&&$i(e)==te};var Ps=Jt?bn(Jt):function(e){return Ms(e)&&Ua(e)==ne};function _s(e){return"string"==typeof e||!bs(e)&&Ms(e)&&$i(e)==ie}function Ls(e){return"symbol"==typeof e||Ms(e)&&$i(e)==re}var Rs=Wt?bn(Wt):function(e){return Ms(e)&&ks(e.length)&&!!kt[$i(e)]};var Ns=ya(hr),Gs=ya((function(e,t){return e<=t}));function Os(e){if(!e)return[];if(ys(e))return _s(e)?In(e):na(e);if(Gt&&e[Gt])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[Gt]());var t=Ua(e);return(t==q?kn:t==ne?Bn:mu)(e)}function zs(e){return e?(e=Js(e))===P||e===-P?(e<0?-1:1)*L:e==e?e:0:0===e?e:0}function Us(e){var t=zs(e),n=t%1;return t==t?n?t-n:t:0}function Hs(e){return e?_i(Us(e),0,N):0}function Js(e){if("number"==typeof e)return e;if(Ls(e))return R;if(ws(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=ws(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(_e,"");var n=Ke.test(e);return n||Ve.test(e)?Tt(e.slice(2),n?2:8):We.test(e)?R:+e}function Ws(e){return ia(e,au(e))}function Ks(e){return null==e?"":Rr(e)}var js=aa((function(e,t){if(qa(t)||ys(t))ia(t,ru(t),e);else for(var n in t)lt.call(t,n)&&Mi(e,n,t[n])})),Vs=aa((function(e,t){ia(t,au(t),e)})),Xs=aa((function(e,t,n,i){ia(t,au(t),e,i)})),Ys=aa((function(e,t,n,i){ia(t,ru(t),e,i)})),qs=Ba(Pi);var Zs=Sr((function(e,t){e=tt(e);var n=-1,i=t.length,r=i>2?t[2]:a;for(r&&ja(t[0],t[1],r)&&(i=1);++n<i;)for(var o=t[n],s=au(o),u=-1,c=s.length;++u<c;){var l=s[u],h=e[l];(h===a||ms(h,st[l])&&!lt.call(e,l))&&(e[l]=o[l])}return e})),$s=Sr((function(e){return e.push(a,ka),Kt(su,a,e)}));function Qs(e,t,n){var i=null==e?a:qi(e,t);return i===a?n:i}function eu(e,t){return null!=e&&Ha(e,t,tr)}var tu=da((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=mt.call(t)),e[t]=n}),wu(Tu)),nu=da((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=mt.call(t)),lt.call(e,t)?e[t].push(n):e[t]=[n]}),La),iu=Sr(ir);function ru(e){return ys(e)?Si(e):cr(e)}function au(e){return ys(e)?Si(e,!0):lr(e)}var ou=aa((function(e,t,n){fr(e,t,n)})),su=aa((function(e,t,n,i){fr(e,t,n,i)})),uu=Ba((function(e,t){var n={};if(null==e)return n;var i=!1;t=Qt(t,(function(t){return t=jr(t,e),i||(i=t.length>1),t})),ia(e,Fa(e),n),i&&(n=Li(n,p|m|d,wa));for(var r=t.length;r--;)Gr(n,t[r]);return n}));var cu=Ba((function(e,t){return null==e?{}:function(e,t){return vr(e,t,(function(t,n){return eu(e,n)}))}(e,t)}));function lu(e,t){if(null==e)return{};var n=Qt(Fa(e),(function(e){return[e]}));return t=La(t),vr(e,n,(function(e,n){return t(e,n[0])}))}var hu=Sa(ru),pu=Sa(au);function mu(e){return null==e?[]:vn(e,ru(e))}var du=ca((function(e,t,n){return t=t.toLowerCase(),e+(n?fu(t):t)}));function fu(e){return Su(Ks(e).toLowerCase())}function gu(e){return(e=Ks(e))&&e.replace(Ye,An).replace(yt,"")}var bu=ca((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),vu=ca((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),yu=ua("toLowerCase");var Cu=ca((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()}));var xu=ca((function(e,t,n){return e+(n?" ":"")+Su(t)}));var Au=ca((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),Su=ua("toUpperCase");function Du(e,t,n){return e=Ks(e),(t=n?a:t)===a?function(e){return St.test(e)}(e)?function(e){return e.match(xt)||[]}(e):function(e){return e.match(ze)||[]}(e):e.match(t)||[]}var Eu=Sr((function(e,t){try{return Kt(e,a,t)}catch(e){return Ss(e)?e:new $e(e)}})),ku=Ba((function(e,t){return Vt(t,(function(t){t=co(t),Ii(e,t,ns(e[t],e))})),e}));function wu(e){return function(){return e}}var Mu=pa(),Bu=pa(!0);function Tu(e){return e}function Fu(e){return ur("function"==typeof e?e:Li(e,p))}var Iu=Sr((function(e,t){return function(n){return ir(n,e,t)}})),Pu=Sr((function(e,t){return function(n){return ir(e,n,t)}}));function _u(e,t,n){var i=ru(t),r=Yi(t,i);null!=n||ws(t)&&(r.length||!i.length)||(n=t,t=e,e=this,r=Yi(t,ru(t)));var a=!(ws(n)&&"chain"in n&&!n.chain),o=Ds(e);return Vt(r,(function(n){var i=t[n];e[n]=i,o&&(e.prototype[n]=function(){var t=this.__chain__;if(a||t){var n=e(this.__wrapped__),r=n.__actions__=na(this.__actions__);return r.push({func:i,args:arguments,thisArg:e}),n.__chain__=t,n}return i.apply(e,en([this.value()],arguments))})})),e}function Lu(){}var Ru=ga(Qt),Nu=ga(Yt),Gu=ga(rn);function Ou(e){return Va(e)?pn(co(e)):function(e){return function(t){return qi(t,e)}}(e)}var zu=va(),Uu=va(!0);function Hu(){return[]}function Ju(){return!1}var Wu=fa((function(e,t){return e+t}),0),Ku=xa("ceil"),ju=fa((function(e,t){return e/t}),1),Vu=xa("floor");var Xu,Yu=fa((function(e,t){return e*t}),1),qu=xa("round"),Zu=fa((function(e,t){return e-t}),0);return mi.after=function(e,t){if("function"!=typeof t)throw new rt(u);return e=Us(e),function(){if(--e<1)return t.apply(this,arguments)}},mi.ary=es,mi.assign=js,mi.assignIn=Vs,mi.assignInWith=Xs,mi.assignWith=Ys,mi.at=qs,mi.before=ts,mi.bind=ns,mi.bindAll=ku,mi.bindKey=is,mi.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return bs(e)?e:[e]},mi.chain=Oo,mi.chunk=function(e,t,n){t=(n?ja(e,t,n):t===a)?1:Kn(Us(t),0);var r=null==e?0:e.length;if(!r||t<1)return[];for(var o=0,s=0,u=i(Gn(r/t));o<r;)u[s++]=Tr(e,o,o+=t);return u},mi.compact=function(e){for(var t=-1,n=null==e?0:e.length,i=0,r=[];++t<n;){var a=e[t];a&&(r[i++]=a)}return r},mi.concat=function(){var e=arguments.length;if(!e)return[];for(var t=i(e-1),n=arguments[0],r=e;r--;)t[r-1]=arguments[r];return en(bs(n)?na(n):[n],Wi(t,1))},mi.cond=function(e){var t=null==e?0:e.length,n=La();return e=t?Qt(e,(function(e){if("function"!=typeof e[1])throw new rt(u);return[n(e[0]),e[1]]})):[],Sr((function(n){for(var i=-1;++i<t;){var r=e[i];if(Kt(r[0],this,n))return Kt(r[1],this,n)}}))},mi.conforms=function(e){return function(e){var t=ru(e);return function(n){return Ri(n,e,t)}}(Li(e,p))},mi.constant=wu,mi.countBy=Ho,mi.create=function(e,t){var n=di(e);return null==t?n:Fi(n,t)},mi.curry=function e(t,n,i){var r=Da(t,C,a,a,a,a,a,n=i?a:n);return r.placeholder=e.placeholder,r},mi.curryRight=function e(t,n,i){var r=Da(t,x,a,a,a,a,a,n=i?a:n);return r.placeholder=e.placeholder,r},mi.debounce=rs,mi.defaults=Zs,mi.defaultsDeep=$s,mi.defer=as,mi.delay=os,mi.difference=po,mi.differenceBy=mo,mi.differenceWith=fo,mi.drop=function(e,t,n){var i=null==e?0:e.length;return i?Tr(e,(t=n||t===a?1:Us(t))<0?0:t,i):[]},mi.dropRight=function(e,t,n){var i=null==e?0:e.length;return i?Tr(e,0,(t=i-(t=n||t===a?1:Us(t)))<0?0:t):[]},mi.dropRightWhile=function(e,t){return e&&e.length?zr(e,La(t,3),!0,!0):[]},mi.dropWhile=function(e,t){return e&&e.length?zr(e,La(t,3),!0):[]},mi.fill=function(e,t,n,i){var r=null==e?0:e.length;return r?(n&&"number"!=typeof n&&ja(e,t,n)&&(n=0,i=r),function(e,t,n,i){var r=e.length;for((n=Us(n))<0&&(n=-n>r?0:r+n),(i=i===a||i>r?r:Us(i))<0&&(i+=r),i=n>i?0:Hs(i);n<i;)e[n++]=t;return e}(e,t,n,i)):[]},mi.filter=function(e,t){return(bs(e)?qt:Ji)(e,La(t,3))},mi.flatMap=function(e,t){return Wi(qo(e,t),1)},mi.flatMapDeep=function(e,t){return Wi(qo(e,t),P)},mi.flatMapDepth=function(e,t,n){return n=n===a?1:Us(n),Wi(qo(e,t),n)},mi.flatten=vo,mi.flattenDeep=function(e){return(null==e?0:e.length)?Wi(e,P):[]},mi.flattenDepth=function(e,t){return(null==e?0:e.length)?Wi(e,t=t===a?1:Us(t)):[]},mi.flip=function(e){return Da(e,k)},mi.flow=Mu,mi.flowRight=Bu,mi.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,i={};++t<n;){var r=e[t];i[r[0]]=r[1]}return i},mi.functions=function(e){return null==e?[]:Yi(e,ru(e))},mi.functionsIn=function(e){return null==e?[]:Yi(e,au(e))},mi.groupBy=Vo,mi.initial=function(e){return(null==e?0:e.length)?Tr(e,0,-1):[]},mi.intersection=Co,mi.intersectionBy=xo,mi.intersectionWith=Ao,mi.invert=tu,mi.invertBy=nu,mi.invokeMap=Xo,mi.iteratee=Fu,mi.keyBy=Yo,mi.keys=ru,mi.keysIn=au,mi.map=qo,mi.mapKeys=function(e,t){var n={};return t=La(t,3),Vi(e,(function(e,i,r){Ii(n,t(e,i,r),e)})),n},mi.mapValues=function(e,t){var n={};return t=La(t,3),Vi(e,(function(e,i,r){Ii(n,i,t(e,i,r))})),n},mi.matches=function(e){return mr(Li(e,p))},mi.matchesProperty=function(e,t){return dr(e,Li(t,p))},mi.memoize=ss,mi.merge=ou,mi.mergeWith=su,mi.method=Iu,mi.methodOf=Pu,mi.mixin=_u,mi.negate=us,mi.nthArg=function(e){return e=Us(e),Sr((function(t){return gr(t,e)}))},mi.omit=uu,mi.omitBy=function(e,t){return lu(e,us(La(t)))},mi.once=function(e){return ts(2,e)},mi.orderBy=function(e,t,n,i){return null==e?[]:(bs(t)||(t=null==t?[]:[t]),bs(n=i?a:n)||(n=null==n?[]:[n]),br(e,t,n))},mi.over=Ru,mi.overArgs=cs,mi.overEvery=Nu,mi.overSome=Gu,mi.partial=ls,mi.partialRight=hs,mi.partition=Zo,mi.pick=cu,mi.pickBy=lu,mi.property=Ou,mi.propertyOf=function(e){return function(t){return null==e?a:qi(e,t)}},mi.pull=Do,mi.pullAll=Eo,mi.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?yr(e,t,La(n,2)):e},mi.pullAllWith=function(e,t,n){return e&&e.length&&t&&t.length?yr(e,t,a,n):e},mi.pullAt=ko,mi.range=zu,mi.rangeRight=Uu,mi.rearg=ps,mi.reject=function(e,t){return(bs(e)?qt:Ji)(e,us(La(t,3)))},mi.remove=function(e,t){var n=[];if(!e||!e.length)return n;var i=-1,r=[],a=e.length;for(t=La(t,3);++i<a;){var o=e[i];t(o,i,e)&&(n.push(o),r.push(i))}return Cr(e,r),n},mi.rest=function(e,t){if("function"!=typeof e)throw new rt(u);return Sr(e,t=t===a?t:Us(t))},mi.reverse=wo,mi.sampleSize=function(e,t,n){return t=(n?ja(e,t,n):t===a)?1:Us(t),(bs(e)?Ei:Er)(e,t)},mi.set=function(e,t,n){return null==e?e:kr(e,t,n)},mi.setWith=function(e,t,n,i){return i="function"==typeof i?i:a,null==e?e:kr(e,t,n,i)},mi.shuffle=function(e){return(bs(e)?ki:Br)(e)},mi.slice=function(e,t,n){var i=null==e?0:e.length;return i?(n&&"number"!=typeof n&&ja(e,t,n)?(t=0,n=i):(t=null==t?0:Us(t),n=n===a?i:Us(n)),Tr(e,t,n)):[]},mi.sortBy=$o,mi.sortedUniq=function(e){return e&&e.length?_r(e):[]},mi.sortedUniqBy=function(e,t){return e&&e.length?_r(e,La(t,2)):[]},mi.split=function(e,t,n){return n&&"number"!=typeof n&&ja(e,t,n)&&(t=n=a),(n=n===a?N:n>>>0)?(e=Ks(e))&&("string"==typeof t||null!=t&&!Is(t))&&!(t=Rr(t))&&En(e)?Xr(In(e),0,n):e.split(t,n):[]},mi.spread=function(e,t){if("function"!=typeof e)throw new rt(u);return t=null==t?0:Kn(Us(t),0),Sr((function(n){var i=n[t],r=Xr(n,0,t);return i&&en(r,i),Kt(e,this,r)}))},mi.tail=function(e){var t=null==e?0:e.length;return t?Tr(e,1,t):[]},mi.take=function(e,t,n){return e&&e.length?Tr(e,0,(t=n||t===a?1:Us(t))<0?0:t):[]},mi.takeRight=function(e,t,n){var i=null==e?0:e.length;return i?Tr(e,(t=i-(t=n||t===a?1:Us(t)))<0?0:t,i):[]},mi.takeRightWhile=function(e,t){return e&&e.length?zr(e,La(t,3),!1,!0):[]},mi.takeWhile=function(e,t){return e&&e.length?zr(e,La(t,3)):[]},mi.tap=function(e,t){return t(e),e},mi.throttle=function(e,t,n){var i=!0,r=!0;if("function"!=typeof e)throw new rt(u);return ws(n)&&(i="leading"in n?!!n.leading:i,r="trailing"in n?!!n.trailing:r),rs(e,t,{leading:i,maxWait:t,trailing:r})},mi.thru=zo,mi.toArray=Os,mi.toPairs=hu,mi.toPairsIn=pu,mi.toPath=function(e){return bs(e)?Qt(e,co):Ls(e)?[e]:na(uo(Ks(e)))},mi.toPlainObject=Ws,mi.transform=function(e,t,n){var i=bs(e),r=i||xs(e)||Rs(e);if(t=La(t,4),null==n){var a=e&&e.constructor;n=r?i?new a:[]:ws(e)&&Ds(a)?di(Ft(e)):{}}return(r?Vt:Vi)(e,(function(e,i,r){return t(n,e,i,r)})),n},mi.unary=function(e){return es(e,1)},mi.union=Mo,mi.unionBy=Bo,mi.unionWith=To,mi.uniq=function(e){return e&&e.length?Nr(e):[]},mi.uniqBy=function(e,t){return e&&e.length?Nr(e,La(t,2)):[]},mi.uniqWith=function(e,t){return t="function"==typeof t?t:a,e&&e.length?Nr(e,a,t):[]},mi.unset=function(e,t){return null==e||Gr(e,t)},mi.unzip=Fo,mi.unzipWith=Io,mi.update=function(e,t,n){return null==e?e:Or(e,t,Kr(n))},mi.updateWith=function(e,t,n,i){return i="function"==typeof i?i:a,null==e?e:Or(e,t,Kr(n),i)},mi.values=mu,mi.valuesIn=function(e){return null==e?[]:vn(e,au(e))},mi.without=Po,mi.words=Du,mi.wrap=function(e,t){return ls(Kr(t),e)},mi.xor=_o,mi.xorBy=Lo,mi.xorWith=Ro,mi.zip=No,mi.zipObject=function(e,t){return Jr(e||[],t||[],Mi)},mi.zipObjectDeep=function(e,t){return Jr(e||[],t||[],kr)},mi.zipWith=Go,mi.entries=hu,mi.entriesIn=pu,mi.extend=Vs,mi.extendWith=Xs,_u(mi,mi),mi.add=Wu,mi.attempt=Eu,mi.camelCase=du,mi.capitalize=fu,mi.ceil=Ku,mi.clamp=function(e,t,n){return n===a&&(n=t,t=a),n!==a&&(n=(n=Js(n))==n?n:0),t!==a&&(t=(t=Js(t))==t?t:0),_i(Js(e),t,n)},mi.clone=function(e){return Li(e,d)},mi.cloneDeep=function(e){return Li(e,p|d)},mi.cloneDeepWith=function(e,t){return Li(e,p|d,t="function"==typeof t?t:a)},mi.cloneWith=function(e,t){return Li(e,d,t="function"==typeof t?t:a)},mi.conformsTo=function(e,t){return null==t||Ri(e,t,ru(t))},mi.deburr=gu,mi.defaultTo=function(e,t){return null==e||e!=e?t:e},mi.divide=ju,mi.endsWith=function(e,t,n){e=Ks(e),t=Rr(t);var i=e.length,r=n=n===a?i:_i(Us(n),0,i);return(n-=t.length)>=0&&e.slice(n,r)==t},mi.eq=ms,mi.escape=function(e){return(e=Ks(e))&&Ee.test(e)?e.replace(Se,Sn):e},mi.escapeRegExp=function(e){return(e=Ks(e))&&Pe.test(e)?e.replace(Ie,"\\$&"):e},mi.every=function(e,t,n){var i=bs(e)?Yt:Ui;return n&&ja(e,t,n)&&(t=a),i(e,La(t,3))},mi.find=Jo,mi.findIndex=go,mi.findKey=function(e,t){return on(e,La(t,3),Vi)},mi.findLast=Wo,mi.findLastIndex=bo,mi.findLastKey=function(e,t){return on(e,La(t,3),Xi)},mi.floor=Vu,mi.forEach=Ko,mi.forEachRight=jo,mi.forIn=function(e,t){return null==e?e:Ki(e,La(t,3),au)},mi.forInRight=function(e,t){return null==e?e:ji(e,La(t,3),au)},mi.forOwn=function(e,t){return e&&Vi(e,La(t,3))},mi.forOwnRight=function(e,t){return e&&Xi(e,La(t,3))},mi.get=Qs,mi.gt=ds,mi.gte=fs,mi.has=function(e,t){return null!=e&&Ha(e,t,er)},mi.hasIn=eu,mi.head=yo,mi.identity=Tu,mi.includes=function(e,t,n,i){e=ys(e)?e:mu(e),n=n&&!i?Us(n):0;var r=e.length;return n<0&&(n=Kn(r+n,0)),_s(e)?n<=r&&e.indexOf(t,n)>-1:!!r&&un(e,t,n)>-1},mi.indexOf=function(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=null==n?0:Us(n);return r<0&&(r=Kn(i+r,0)),un(e,t,r)},mi.inRange=function(e,t,n){return t=zs(t),n===a?(n=t,t=0):n=zs(n),function(e,t,n){return e>=jn(t,n)&&e<Kn(t,n)}(e=Js(e),t,n)},mi.invoke=iu,mi.isArguments=gs,mi.isArray=bs,mi.isArrayBuffer=vs,mi.isArrayLike=ys,mi.isArrayLikeObject=Cs,mi.isBoolean=function(e){return!0===e||!1===e||Ms(e)&&$i(e)==W},mi.isBuffer=xs,mi.isDate=As,mi.isElement=function(e){return Ms(e)&&1===e.nodeType&&!Fs(e)},mi.isEmpty=function(e){if(null==e)return!0;if(ys(e)&&(bs(e)||"string"==typeof e||"function"==typeof e.splice||xs(e)||Rs(e)||gs(e)))return!e.length;var t=Ua(e);if(t==q||t==ne)return!e.size;if(qa(e))return!cr(e).length;for(var n in e)if(lt.call(e,n))return!1;return!0},mi.isEqual=function(e,t){return ar(e,t)},mi.isEqualWith=function(e,t,n){var i=(n="function"==typeof n?n:a)?n(e,t):a;return i===a?ar(e,t,a,n):!!i},mi.isError=Ss,mi.isFinite=function(e){return"number"==typeof e&&Hn(e)},mi.isFunction=Ds,mi.isInteger=Es,mi.isLength=ks,mi.isMap=Bs,mi.isMatch=function(e,t){return e===t||or(e,t,Na(t))},mi.isMatchWith=function(e,t,n){return n="function"==typeof n?n:a,or(e,t,Na(t),n)},mi.isNaN=function(e){return Ts(e)&&e!=+e},mi.isNative=function(e){if(Ya(e))throw new $e(s);return sr(e)},mi.isNil=function(e){return null==e},mi.isNull=function(e){return null===e},mi.isNumber=Ts,mi.isObject=ws,mi.isObjectLike=Ms,mi.isPlainObject=Fs,mi.isRegExp=Is,mi.isSafeInteger=function(e){return Es(e)&&e>=-_&&e<=_},mi.isSet=Ps,mi.isString=_s,mi.isSymbol=Ls,mi.isTypedArray=Rs,mi.isUndefined=function(e){return e===a},mi.isWeakMap=function(e){return Ms(e)&&Ua(e)==oe},mi.isWeakSet=function(e){return Ms(e)&&$i(e)==se},mi.join=function(e,t){return null==e?"":Jn.call(e,t)},mi.kebabCase=bu,mi.last=So,mi.lastIndexOf=function(e,t,n){var i=null==e?0:e.length;if(!i)return-1;var r=i;return n!==a&&(r=(r=Us(n))<0?Kn(i+r,0):jn(r,i-1)),t==t?function(e,t,n){for(var i=n+1;i--;)if(e[i]===t)return i;return i}(e,t,r):sn(e,ln,r,!0)},mi.lowerCase=vu,mi.lowerFirst=yu,mi.lt=Ns,mi.lte=Gs,mi.max=function(e){return e&&e.length?Hi(e,Tu,Qi):a},mi.maxBy=function(e,t){return e&&e.length?Hi(e,La(t,2),Qi):a},mi.mean=function(e){return hn(e,Tu)},mi.meanBy=function(e,t){return hn(e,La(t,2))},mi.min=function(e){return e&&e.length?Hi(e,Tu,hr):a},mi.minBy=function(e,t){return e&&e.length?Hi(e,La(t,2),hr):a},mi.stubArray=Hu,mi.stubFalse=Ju,mi.stubObject=function(){return{}},mi.stubString=function(){return""},mi.stubTrue=function(){return!0},mi.multiply=Yu,mi.nth=function(e,t){return e&&e.length?gr(e,Us(t)):a},mi.noConflict=function(){return Pt._===this&&(Pt._=ft),this},mi.noop=Lu,mi.now=Qo,mi.pad=function(e,t,n){e=Ks(e);var i=(t=Us(t))?Fn(e):0;if(!t||i>=t)return e;var r=(t-i)/2;return ba(On(r),n)+e+ba(Gn(r),n)},mi.padEnd=function(e,t,n){e=Ks(e);var i=(t=Us(t))?Fn(e):0;return t&&i<t?e+ba(t-i,n):e},mi.padStart=function(e,t,n){e=Ks(e);var i=(t=Us(t))?Fn(e):0;return t&&i<t?ba(t-i,n)+e:e},mi.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),Xn(Ks(e).replace(Le,""),t||0)},mi.random=function(e,t,n){if(n&&"boolean"!=typeof n&&ja(e,t,n)&&(t=n=a),n===a&&("boolean"==typeof t?(n=t,t=a):"boolean"==typeof e&&(n=e,e=a)),e===a&&t===a?(e=0,t=1):(e=zs(e),t===a?(t=e,e=0):t=zs(t)),e>t){var i=e;e=t,t=i}if(n||e%1||t%1){var r=Yn();return jn(e+r*(t-e+Bt("1e-"+((r+"").length-1))),t)}return xr(e,t)},mi.reduce=function(e,t,n){var i=bs(e)?tn:dn,r=arguments.length<3;return i(e,La(t,4),n,r,Oi)},mi.reduceRight=function(e,t,n){var i=bs(e)?nn:dn,r=arguments.length<3;return i(e,La(t,4),n,r,zi)},mi.repeat=function(e,t,n){return t=(n?ja(e,t,n):t===a)?1:Us(t),Ar(Ks(e),t)},mi.replace=function(){var e=arguments,t=Ks(e[0]);return e.length<3?t:t.replace(e[1],e[2])},mi.result=function(e,t,n){var i=-1,r=(t=jr(t,e)).length;for(r||(r=1,e=a);++i<r;){var o=null==e?a:e[co(t[i])];o===a&&(i=r,o=n),e=Ds(o)?o.call(e):o}return e},mi.round=qu,mi.runInContext=e,mi.sample=function(e){return(bs(e)?Di:Dr)(e)},mi.size=function(e){if(null==e)return 0;if(ys(e))return _s(e)?Fn(e):e.length;var t=Ua(e);return t==q||t==ne?e.size:cr(e).length},mi.snakeCase=Cu,mi.some=function(e,t,n){var i=bs(e)?rn:Fr;return n&&ja(e,t,n)&&(t=a),i(e,La(t,3))},mi.sortedIndex=function(e,t){return Ir(e,t)},mi.sortedIndexBy=function(e,t,n){return Pr(e,t,La(n,2))},mi.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var i=Ir(e,t);if(i<n&&ms(e[i],t))return i}return-1},mi.sortedLastIndex=function(e,t){return Ir(e,t,!0)},mi.sortedLastIndexBy=function(e,t,n){return Pr(e,t,La(n,2),!0)},mi.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var n=Ir(e,t,!0)-1;if(ms(e[n],t))return n}return-1},mi.startCase=xu,mi.startsWith=function(e,t,n){return e=Ks(e),n=null==n?0:_i(Us(n),0,e.length),t=Rr(t),e.slice(n,n+t.length)==t},mi.subtract=Zu,mi.sum=function(e){return e&&e.length?fn(e,Tu):0},mi.sumBy=function(e,t){return e&&e.length?fn(e,La(t,2)):0},mi.template=function(e,t,n){var i=mi.templateSettings;n&&ja(e,t,n)&&(t=a),e=Ks(e),t=Xs({},t,i,Ea);var r,o,s=Xs({},t.imports,i.imports,Ea),u=ru(s),c=vn(s,u),l=0,h=t.interpolate||qe,p="__p += '",m=nt((t.escape||qe).source+"|"+h.source+"|"+(h===Me?He:qe).source+"|"+(t.evaluate||qe).source+"|$","g"),d="//# sourceURL="+(lt.call(t,"sourceURL")?(t.sourceURL+"").replace(/[\r\n]/g," "):"lodash.templateSources["+ ++Et+"]")+"\n";e.replace(m,(function(t,n,i,a,s,u){return i||(i=a),p+=e.slice(l,u).replace(Ze,Dn),n&&(r=!0,p+="' +\n__e("+n+") +\n'"),s&&(o=!0,p+="';\n"+s+";\n__p += '"),i&&(p+="' +\n((__t = ("+i+")) == null ? '' : __t) +\n'"),l=u+t.length,t})),p+="';\n";var f=lt.call(t,"variable")&&t.variable;f||(p="with (obj) {\n"+p+"\n}\n"),p=(o?p.replace(ye,""):p).replace(Ce,"$1").replace(xe,"$1;"),p="function("+(f||"obj")+") {\n"+(f?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(r?", __e = _.escape":"")+(o?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+p+"return __p\n}";var g=Eu((function(){return Qe(u,d+"return "+p).apply(a,c)}));if(g.source=p,Ss(g))throw g;return g},mi.times=function(e,t){if((e=Us(e))<1||e>_)return[];var n=N,i=jn(e,N);t=La(t),e-=N;for(var r=gn(i,t);++n<e;)t(n);return r},mi.toFinite=zs,mi.toInteger=Us,mi.toLength=Hs,mi.toLower=function(e){return Ks(e).toLowerCase()},mi.toNumber=Js,mi.toSafeInteger=function(e){return e?_i(Us(e),-_,_):0===e?e:0},mi.toString=Ks,mi.toUpper=function(e){return Ks(e).toUpperCase()},mi.trim=function(e,t,n){if((e=Ks(e))&&(n||t===a))return e.replace(_e,"");if(!e||!(t=Rr(t)))return e;var i=In(e),r=In(t);return Xr(i,Cn(i,r),xn(i,r)+1).join("")},mi.trimEnd=function(e,t,n){if((e=Ks(e))&&(n||t===a))return e.replace(Re,"");if(!e||!(t=Rr(t)))return e;var i=In(e);return Xr(i,0,xn(i,In(t))+1).join("")},mi.trimStart=function(e,t,n){if((e=Ks(e))&&(n||t===a))return e.replace(Le,"");if(!e||!(t=Rr(t)))return e;var i=In(e);return Xr(i,Cn(i,In(t))).join("")},mi.truncate=function(e,t){var n=w,i=M;if(ws(t)){var r="separator"in t?t.separator:r;n="length"in t?Us(t.length):n,i="omission"in t?Rr(t.omission):i}var o=(e=Ks(e)).length;if(En(e)){var s=In(e);o=s.length}if(n>=o)return e;var u=n-Fn(i);if(u<1)return i;var c=s?Xr(s,0,u).join(""):e.slice(0,u);if(r===a)return c+i;if(s&&(u+=c.length-u),Is(r)){if(e.slice(u).search(r)){var l,h=c;for(r.global||(r=nt(r.source,Ks(Je.exec(r))+"g")),r.lastIndex=0;l=r.exec(h);)var p=l.index;c=c.slice(0,p===a?u:p)}}else if(e.indexOf(Rr(r),u)!=u){var m=c.lastIndexOf(r);m>-1&&(c=c.slice(0,m))}return c+i},mi.unescape=function(e){return(e=Ks(e))&&De.test(e)?e.replace(Ae,Pn):e},mi.uniqueId=function(e){var t=++ht;return Ks(e)+t},mi.upperCase=Au,mi.upperFirst=Su,mi.each=Ko,mi.eachRight=jo,mi.first=yo,_u(mi,(Xu={},Vi(mi,(function(e,t){lt.call(mi.prototype,t)||(Xu[t]=e)})),Xu),{chain:!1}),mi.VERSION="4.17.15",Vt(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){mi[e].placeholder=mi})),Vt(["drop","take"],(function(e,t){bi.prototype[e]=function(n){n=n===a?1:Kn(Us(n),0);var i=this.__filtered__&&!t?new bi(this):this.clone();return i.__filtered__?i.__takeCount__=jn(n,i.__takeCount__):i.__views__.push({size:jn(n,N),type:e+(i.__dir__<0?"Right":"")}),i},bi.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),Vt(["filter","map","takeWhile"],(function(e,t){var n=t+1,i=n==F||3==n;bi.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:La(e,3),type:n}),t.__filtered__=t.__filtered__||i,t}})),Vt(["head","last"],(function(e,t){var n="take"+(t?"Right":"");bi.prototype[e]=function(){return this[n](1).value()[0]}})),Vt(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");bi.prototype[e]=function(){return this.__filtered__?new bi(this):this[n](1)}})),bi.prototype.compact=function(){return this.filter(Tu)},bi.prototype.find=function(e){return this.filter(e).head()},bi.prototype.findLast=function(e){return this.reverse().find(e)},bi.prototype.invokeMap=Sr((function(e,t){return"function"==typeof e?new bi(this):this.map((function(n){return ir(n,e,t)}))})),bi.prototype.reject=function(e){return this.filter(us(La(e)))},bi.prototype.slice=function(e,t){e=Us(e);var n=this;return n.__filtered__&&(e>0||t<0)?new bi(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),t!==a&&(n=(t=Us(t))<0?n.dropRight(-t):n.take(t-e)),n)},bi.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},bi.prototype.toArray=function(){return this.take(N)},Vi(bi.prototype,(function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),i=/^(?:head|last)$/.test(t),r=mi[i?"take"+("last"==t?"Right":""):t],o=i||/^find/.test(t);r&&(mi.prototype[t]=function(){var t=this.__wrapped__,s=i?[1]:arguments,u=t instanceof bi,c=s[0],l=u||bs(t),h=function(e){var t=r.apply(mi,en([e],s));return i&&p?t[0]:t};l&&n&&"function"==typeof c&&1!=c.length&&(u=l=!1);var p=this.__chain__,m=!!this.__actions__.length,d=o&&!p,f=u&&!m;if(!o&&l){t=f?t:new bi(this);var g=e.apply(t,s);return g.__actions__.push({func:zo,args:[h],thisArg:a}),new gi(g,p)}return d&&f?e.apply(this,s):(g=this.thru(h),d?i?g.value()[0]:g.value():g)})})),Vt(["pop","push","shift","sort","splice","unshift"],(function(e){var t=at[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",i=/^(?:pop|shift)$/.test(e);mi.prototype[e]=function(){var e=arguments;if(i&&!this.__chain__){var r=this.value();return t.apply(bs(r)?r:[],e)}return this[n]((function(n){return t.apply(bs(n)?n:[],e)}))}})),Vi(bi.prototype,(function(e,t){var n=mi[t];if(n){var i=n.name+"";lt.call(ri,i)||(ri[i]=[]),ri[i].push({name:t,func:n})}})),ri[ma(a,v).name]=[{name:"wrapper",func:a}],bi.prototype.clone=function(){var e=new bi(this.__wrapped__);return e.__actions__=na(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=na(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=na(this.__views__),e},bi.prototype.reverse=function(){if(this.__filtered__){var e=new bi(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},bi.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=bs(e),i=t<0,r=n?e.length:0,a=function(e,t,n){var i=-1,r=n.length;for(;++i<r;){var a=n[i],o=a.size;switch(a.type){case"drop":e+=o;break;case"dropRight":t-=o;break;case"take":t=jn(t,e+o);break;case"takeRight":e=Kn(e,t-o)}}return{start:e,end:t}}(0,r,this.__views__),o=a.start,s=a.end,u=s-o,c=i?s:o-1,l=this.__iteratees__,h=l.length,p=0,m=jn(u,this.__takeCount__);if(!n||!i&&r==u&&m==u)return Ur(e,this.__actions__);var d=[];e:for(;u--&&p<m;){for(var f=-1,g=e[c+=t];++f<h;){var b=l[f],v=b.iteratee,y=b.type,C=v(g);if(y==I)g=C;else if(!C){if(y==F)continue e;break e}}d[p++]=g}return d},mi.prototype.at=Uo,mi.prototype.chain=function(){return Oo(this)},mi.prototype.commit=function(){return new gi(this.value(),this.__chain__)},mi.prototype.next=function(){this.__values__===a&&(this.__values__=Os(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?a:this.__values__[this.__index__++]}},mi.prototype.plant=function(e){for(var t,n=this;n instanceof fi;){var i=ho(n);i.__index__=0,i.__values__=a,t?r.__wrapped__=i:t=i;var r=i;n=n.__wrapped__}return r.__wrapped__=e,t},mi.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof bi){var t=e;return this.__actions__.length&&(t=new bi(this)),(t=t.reverse()).__actions__.push({func:zo,args:[wo],thisArg:a}),new gi(t,this.__chain__)}return this.thru(wo)},mi.prototype.toJSON=mi.prototype.valueOf=mi.prototype.value=function(){return Ur(this.__wrapped__,this.__actions__)},mi.prototype.first=mi.prototype.head,Gt&&(mi.prototype[Gt]=function(){return this}),mi}();Pt._=_n,(r=function(){return _n}.call(t,n,t,i))===a||(i.exports=r)}).call(this)}).call(this,n(10),n(39)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){(function(n){var i;!function(){var r=9007199254740992,a="abcdefghijklmnopqrstuvwxyz",o=a.toUpperCase(),s="0123456789abcdef";function u(e){this.name="UnsupportedError",this.message=e||"This feature is not supported on this platform"}u.prototype=new Error,u.prototype.constructor=u;var c=Array.prototype.slice;function l(e){if(!(this instanceof l))return e||(e=null),null===e?new l:new l(e);if("function"==typeof e)return this.random=e,this;arguments.length&&(this.seed=0);for(var t=0;t<arguments.length;t++){var n=0;if("[object String]"===Object.prototype.toString.call(arguments[t]))for(var i=0;i<arguments[t].length;i++){for(var r=0,a=0;a<arguments[t].length;a++)r=arguments[t].charCodeAt(a)+(r<<6)+(r<<16)-r;n+=r}else n=arguments[t];this.seed+=(arguments.length-t)*n}return this.mt=this.mersenne_twister(this.seed),this.bimd5=this.blueimp_md5(),this.random=function(){return this.mt.random(this.seed)},this}function h(e,t){if(e=e||{},t)for(var n in t)void 0===e[n]&&(e[n]=t[n]);return e}function p(e,t){if(e)throw new RangeError(t)}l.prototype.VERSION="1.0.18";var m=function(){throw new Error("No Base64 encoder available.")};function d(e){this.c=e}function f(e){this.c=e}function g(e){this.c=e}function b(e){return function(){return this.natural(e)}}"function"==typeof btoa?m=btoa:"function"==typeof n&&(m=function(e){return new n(e).toString("base64")}),l.prototype.bool=function(e){return p((e=h(e,{likelihood:50})).likelihood<0||e.likelihood>100,"Chance: Likelihood accepts values from 0 to 100."),100*this.random()<e.likelihood},l.prototype.falsy=function(e){var t=(e=h(e,{pool:[!1,null,0,NaN,""]})).pool;return t[this.integer({min:0,max:t.length})]},l.prototype.animal=function(e){if(void 0!==(e=h(e)).type)return p(!this.get("animals")[e.type.toLowerCase()],"Please pick from desert, ocean, grassland, forest, zoo, pets, farm."),this.pick(this.get("animals")[e.type.toLowerCase()]);return this.pick(this.get("animals")[this.pick(["desert","forest","ocean","zoo","farm","pet","grassland"])])},l.prototype.character=function(e){var t,n;return t="lower"===(e=h(e)).casing?a:"upper"===e.casing?o:a+o,e.pool?n=e.pool:(n="",e.alpha&&(n+=t),e.numeric&&(n+="0123456789"),e.symbols&&(n+="!@#$%^&*()[]"),n||(n=t+"0123456789!@#$%^&*()[]")),n.charAt(this.natural({max:n.length-1}))},l.prototype.floating=function(e){p((e=h(e,{fixed:4})).fixed&&e.precision,"Chance: Cannot specify both fixed and precision.");var t=Math.pow(10,e.fixed),n=r/t,i=-n;p(e.min&&e.fixed&&e.min<i,"Chance: Min specified is out of range with fixed. Min should be, at least, "+i),p(e.max&&e.fixed&&e.max>n,"Chance: Max specified is out of range with fixed. Max should be, at most, "+n),e=h(e,{min:i,max:n});var a=(this.integer({min:e.min*t,max:e.max*t})/t).toFixed(e.fixed);return parseFloat(a)},l.prototype.integer=function(e){return p((e=h(e,{min:-9007199254740992,max:r})).min>e.max,"Chance: Min cannot be greater than Max."),Math.floor(this.random()*(e.max-e.min+1)+e.min)},l.prototype.natural=function(e){if("number"==typeof(e=h(e,{min:0,max:r})).numerals&&(p(e.numerals<1,"Chance: Numerals cannot be less than one."),e.min=Math.pow(10,e.numerals-1),e.max=Math.pow(10,e.numerals)-1),p(e.min<0,"Chance: Min cannot be less than zero."),e.exclude){p(!Array.isArray(e.exclude),"Chance: exclude must be an array.");for(const t of e.exclude)p(!Number.isInteger(t),"Chance: exclude must be numbers.");let t=e.min+this.natural({max:e.max-e.min-e.exclude.length});for(const n of e.exclude.sort()){if(t<n)break;t++}return t}return this.integer(e)},l.prototype.prime=function(e){p((e=h(e,{min:0,max:1e4})).min<0,"Chance: Min cannot be less than zero."),p(e.min>e.max,"Chance: Min cannot be greater than Max.");var t=v.primes[v.primes.length-1];if(e.max>t)for(var n=t+2;n<=e.max;++n)this.is_prime(n)&&v.primes.push(n);var i=v.primes.filter((function(t){return t>=e.min&&t<=e.max}));return this.pick(i)},l.prototype.is_prime=function(e){if(e%1||e<2)return!1;if(e%2==0)return 2===e;if(e%3==0)return 3===e;for(var t=Math.sqrt(e),n=5;n<=t;n+=6)if(e%n==0||e%(n+2)==0)return!1;return!0},l.prototype.hex=function(e){p((e=h(e,{min:0,max:r,casing:"lower"})).min<0,"Chance: Min cannot be less than zero.");var t=this.natural({min:e.min,max:e.max});return"upper"===e.casing?t.toString(16).toUpperCase():t.toString(16)},l.prototype.letter=function(e){e=h(e,{casing:"lower"});var t=this.character({pool:"abcdefghijklmnopqrstuvwxyz"});return"upper"===e.casing&&(t=t.toUpperCase()),t},l.prototype.string=function(e){p((e=h(e,{length:this.natural({min:5,max:20})})).length<0,"Chance: Length cannot be less than zero.");var t=e.length;return this.n(this.character,t,e).join("")},d.prototype={substitute:function(){return this.c}},f.prototype={substitute:function(){if(!/[{}\\]/.test(this.c))throw new Error('Invalid escape sequence: "\\'+this.c+'".');return this.c}},g.prototype={replacers:{"#":function(e){return e.character({pool:"0123456789"})},A:function(e){return e.character({pool:o})},a:function(e){return e.character({pool:a})}},substitute:function(e){var t=this.replacers[this.c];if(!t)throw new Error('Invalid replacement character: "'+this.c+'".');return t(e)}},l.prototype.template=function(e){if(!e)throw new Error("Template string is required");var t=this;return function(e){for(var t=[],n="identity",i=0;i<e.length;i++){var r=e[i];switch(n){case"escape":t.push(new f(r)),n="identity";break;case"identity":"{"===r?n="replace":"\\"===r?n="escape":t.push(new d(r));break;case"replace":"}"===r?n="identity":t.push(new g(r))}}return t}(e).map((function(e){return e.substitute(t)})).join("")},l.prototype.buffer=function(e){if(void 0===n)throw new u("Sorry, the buffer() function is not supported on your platform");p((e=h(e,{length:this.natural({min:5,max:20})})).length<0,"Chance: Length cannot be less than zero.");var t=e.length,i=this.n(this.character,t,e);return n.from(i)},l.prototype.capitalize=function(e){return e.charAt(0).toUpperCase()+e.substr(1)},l.prototype.mixin=function(e){for(var t in e)l.prototype[t]=e[t];return this},l.prototype.unique=function(e,t,n){p("function"!=typeof e,"Chance: The first argument must be a function.");var i=function(e,t){return-1!==e.indexOf(t)};n&&(i=n.comparator||i);for(var r,a=[],o=0,s=50*t,u=c.call(arguments,2);a.length<t;){var l=JSON.parse(JSON.stringify(u));if(i(a,r=e.apply(this,l))||(a.push(r),o=0),++o>s)throw new RangeError("Chance: num is likely too large for sample set")}return a},l.prototype.n=function(e,t){p("function"!=typeof e,"Chance: The first argument must be a function."),void 0===t&&(t=1);var n=t,i=[],r=c.call(arguments,2);for(n=Math.max(0,n);n--;null)i.push(e.apply(this,r));return i},l.prototype.pad=function(e,t,n){return n=n||"0",(e+="").length>=t?e:new Array(t-e.length+1).join(n)+e},l.prototype.pick=function(e,t){if(0===e.length)throw new RangeError("Chance: Cannot pick() from an empty array");return t&&1!==t?this.shuffle(e).slice(0,t):e[this.natural({max:e.length-1})]},l.prototype.pickone=function(e){if(0===e.length)throw new RangeError("Chance: Cannot pickone() from an empty array");return e[this.natural({max:e.length-1})]},l.prototype.pickset=function(e,t){if(0===t)return[];if(0===e.length)throw new RangeError("Chance: Cannot pickset() from an empty array");if(t<0)throw new RangeError("Chance: Count must be a positive number");if(t&&1!==t){var n=e.slice(0),i=n.length;return this.n((function(){var e=this.natural({max:--i}),t=n[e];return n[e]=n[i],t}),Math.min(i,t))}return[this.pickone(e)]},l.prototype.shuffle=function(e){for(var t,n,i=[],r=0,a=Number(e.length),o=(n=a,Array.apply(null,Array(n)).map((function(e,t){return t}))),s=a-1,u=0;u<a;u++)r=o[t=this.natural({max:s})],i[u]=e[r],o[t]=o[s],s-=1;return i},l.prototype.weighted=function(e,t,n){if(e.length!==t.length)throw new RangeError("Chance: Length of array and weights must match");for(var i,r=0,a=0;a<t.length;++a){if(i=t[a],isNaN(i))throw new RangeError("Chance: All weights must be numbers");i>0&&(r+=i)}if(0===r)throw new RangeError("Chance: No valid entries in array weights");var o,s=this.random()*r,u=0,c=-1;for(a=0;a<t.length;++a){if(u+=i=t[a],i>0){if(s<=u){o=a;break}c=a}a===t.length-1&&(o=c)}var l=e[o];return(n=void 0!==n&&n)&&(e.splice(o,1),t.splice(o,1)),l},l.prototype.paragraph=function(e){var t=(e=h(e)).sentences||this.natural({min:3,max:7});return this.n(this.sentence,t).join(" ")},l.prototype.sentence=function(e){var t,n=(e=h(e)).words||this.natural({min:12,max:18}),i=e.punctuation;return t=this.n(this.word,n).join(" "),t=this.capitalize(t),!1===i||/^[.?;!:]$/.test(i)||(i="."),i&&(t+=i),t},l.prototype.syllable=function(e){for(var t,n=(e=h(e)).length||this.natural({min:2,max:3}),i="",r=0;r<n;r++)i+=t=0===r?this.character({pool:"bcdfghjklmnprstvwzaeiou"}):-1==="bcdfghjklmnprstvwz".indexOf(t)?this.character({pool:"bcdfghjklmnprstvwz"}):this.character({pool:"aeiou"});return e.capitalize&&(i=this.capitalize(i)),i},l.prototype.word=function(e){p((e=h(e)).syllables&&e.length,"Chance: Cannot specify both syllables AND length.");var t=e.syllables||this.natural({min:1,max:3}),n="";if(e.length){do{n+=this.syllable()}while(n.length<e.length);n=n.substring(0,e.length)}else for(var i=0;i<t;i++)n+=this.syllable();return e.capitalize&&(n=this.capitalize(n)),n},l.prototype.age=function(e){var t;switch((e=h(e)).type){case"child":t={min:0,max:12};break;case"teen":t={min:13,max:19};break;case"adult":t={min:18,max:65};break;case"senior":t={min:65,max:100};break;case"all":t={min:0,max:100};break;default:t={min:18,max:65}}return this.natural(t)},l.prototype.birthday=function(e){var t=this.age(e),n=(new Date).getFullYear();if(e&&e.type){var i=new Date,r=new Date;i.setFullYear(n-t-1),r.setFullYear(n-t),e=h(e,{min:i,max:r})}else e=h(e,{year:n-t});return this.date(e)},l.prototype.cpf=function(e){e=h(e,{formatted:!0});var t=this.n(this.natural,9,{max:9}),n=2*t[8]+3*t[7]+4*t[6]+5*t[5]+6*t[4]+7*t[3]+8*t[2]+9*t[1]+10*t[0];(n=11-n%11)>=10&&(n=0);var i=2*n+3*t[8]+4*t[7]+5*t[6]+6*t[5]+7*t[4]+8*t[3]+9*t[2]+10*t[1]+11*t[0];(i=11-i%11)>=10&&(i=0);var r=""+t[0]+t[1]+t[2]+"."+t[3]+t[4]+t[5]+"."+t[6]+t[7]+t[8]+"-"+n+i;return e.formatted?r:r.replace(/\D/g,"")},l.prototype.cnpj=function(e){e=h(e,{formatted:!0});var t=this.n(this.natural,12,{max:12}),n=2*t[11]+3*t[10]+4*t[9]+5*t[8]+6*t[7]+7*t[6]+8*t[5]+9*t[4]+2*t[3]+3*t[2]+4*t[1]+5*t[0];(n=11-n%11)<2&&(n=0);var i=2*n+3*t[11]+4*t[10]+5*t[9]+6*t[8]+7*t[7]+8*t[6]+9*t[5]+2*t[4]+3*t[3]+4*t[2]+5*t[1]+6*t[0];(i=11-i%11)<2&&(i=0);var r=""+t[0]+t[1]+"."+t[2]+t[3]+t[4]+"."+t[5]+t[6]+t[7]+"/"+t[8]+t[9]+t[10]+t[11]+"-"+n+i;return e.formatted?r:r.replace(/\D/g,"")},l.prototype.first=function(e){return e=h(e,{gender:this.gender(),nationality:"en"}),this.pick(this.get("firstNames")[e.gender.toLowerCase()][e.nationality.toLowerCase()])},l.prototype.profession=function(e){return(e=h(e)).rank?this.pick(["Apprentice ","Junior ","Senior ","Lead "])+this.pick(this.get("profession")):this.pick(this.get("profession"))},l.prototype.company=function(){return this.pick(this.get("company"))},l.prototype.gender=function(e){return e=h(e,{extraGenders:[]}),this.pick(["Male","Female"].concat(e.extraGenders))},l.prototype.last=function(e){if("*"===(e=h(e,{nationality:"*"})).nationality){var t=[],n=this.get("lastNames");return Object.keys(n).forEach((function(e){t=t.concat(n[e])})),this.pick(t)}return this.pick(this.get("lastNames")[e.nationality.toLowerCase()])},l.prototype.israelId=function(){for(var e=this.string({pool:"0123456789",length:8}),t=0,n=0;n<e.length;n++){var i=e[n]*(n/2===parseInt(n/2)?1:2);i=this.pad(i,2).toString(),t+=i=parseInt(i[0])+parseInt(i[1])}return e+=(10-parseInt(t.toString().slice(-1))).toString().slice(-1)},l.prototype.mrz=function(e){var t,n,i,r,a=function(e){var t="<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),n=[7,3,1],i=0;return"string"!=typeof e&&(e=e.toString()),e.split("").forEach((function(e,r){var a=t.indexOf(e);e=-1!==a?0===a?0:a+9:parseInt(e,10),i+=e*=n[r%n.length]})),i%10},o=this;return e=h(e,{first:this.first(),last:this.last(),passportNumber:this.integer({min:1e8,max:999999999}),dob:(t=o.birthday({type:"adult"}),[t.getFullYear().toString().substr(2),o.pad(t.getMonth()+1,2),o.pad(t.getDate(),2)].join("")),expiry:function(){var e=new Date;return[(e.getFullYear()+5).toString().substr(2),o.pad(e.getMonth()+1,2),o.pad(e.getDate(),2)].join("")}(),gender:"Female"===this.gender()?"F":"M",issuer:"GBR",nationality:"GBR"}),i=function(e){return new Array(e+1).join("<")},(r=["P<",(n=e).issuer,n.last.toUpperCase(),"<<",n.first.toUpperCase(),i(39-(n.last.length+n.first.length+2)),n.passportNumber,a(n.passportNumber),n.nationality,n.dob,a(n.dob),n.gender,n.expiry,a(n.expiry),i(14),a(i(14))].join(""))+a(r.substr(44,10)+r.substr(57,7)+r.substr(65,7))},l.prototype.name=function(e){e=h(e);var t,n=this.first(e),i=this.last(e);return t=e.middle?n+" "+this.first(e)+" "+i:e.middle_initial?n+" "+this.character({alpha:!0,casing:"upper"})+". "+i:n+" "+i,e.prefix&&(t=this.prefix(e)+" "+t),e.suffix&&(t=t+" "+this.suffix(e)),t},l.prototype.name_prefixes=function(e){var t=[{name:"Doctor",abbreviation:"Dr."}];return"male"!==(e=(e=e||"all").toLowerCase())&&"all"!==e||t.push({name:"Mister",abbreviation:"Mr."}),"female"!==e&&"all"!==e||(t.push({name:"Miss",abbreviation:"Miss"}),t.push({name:"Misses",abbreviation:"Mrs."})),t},l.prototype.prefix=function(e){return this.name_prefix(e)},l.prototype.name_prefix=function(e){return(e=h(e,{gender:"all"})).full?this.pick(this.name_prefixes(e.gender)).name:this.pick(this.name_prefixes(e.gender)).abbreviation},l.prototype.HIDN=function(){var e="";return e+=this.string({pool:"0123456789",length:6}),e+=this.string({pool:"ABCDEFGHIJKLMNOPQRSTUVWXYXZ",length:2})},l.prototype.ssn=function(e){var t=(e=h(e,{ssnFour:!1,dashes:!0})).dashes?"-":"";return e.ssnFour?this.string({pool:"1234567890",length:4}):this.string({pool:"1234567890",length:3})+t+this.string({pool:"1234567890",length:2})+t+this.string({pool:"1234567890",length:4})},l.prototype.aadhar=function(e){var t=(e=h(e,{onlyLastFour:!1,separatedByWhiteSpace:!0})).separatedByWhiteSpace?" ":"";return e.onlyLastFour?this.string({pool:"1234567890",length:4}):this.string({pool:"1234567890",length:4})+t+this.string({pool:"1234567890",length:4})+t+this.string({pool:"1234567890",length:4})},l.prototype.name_suffixes=function(){return[{name:"Doctor of Osteopathic Medicine",abbreviation:"D.O."},{name:"Doctor of Philosophy",abbreviation:"Ph.D."},{name:"Esquire",abbreviation:"Esq."},{name:"Junior",abbreviation:"Jr."},{name:"Juris Doctor",abbreviation:"J.D."},{name:"Master of Arts",abbreviation:"M.A."},{name:"Master of Business Administration",abbreviation:"M.B.A."},{name:"Master of Science",abbreviation:"M.S."},{name:"Medical Doctor",abbreviation:"M.D."},{name:"Senior",abbreviation:"Sr."},{name:"The Third",abbreviation:"III"},{name:"The Fourth",abbreviation:"IV"},{name:"Bachelor of Engineering",abbreviation:"B.E"},{name:"Bachelor of Technology",abbreviation:"B.TECH"}]},l.prototype.suffix=function(e){return this.name_suffix(e)},l.prototype.name_suffix=function(e){return(e=h(e)).full?this.pick(this.name_suffixes()).name:this.pick(this.name_suffixes()).abbreviation},l.prototype.nationalities=function(){return this.get("nationalities")},l.prototype.nationality=function(){return this.pick(this.nationalities()).name},l.prototype.android_id=function(){return"APA91"+this.string({pool:"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",length:178})},l.prototype.apple_token=function(){return this.string({pool:"abcdef1234567890",length:64})},l.prototype.wp8_anid2=function(){return m(this.hash({length:32}))},l.prototype.wp7_anid=function(){return"A="+this.guid().replace(/-/g,"").toUpperCase()+"&E="+this.hash({length:3})+"&W="+this.integer({min:0,max:9})},l.prototype.bb_pin=function(){return this.hash({length:8})},l.prototype.avatar=function(e){var t={protocol:null,email:null,fileExtension:null,size:null,fallback:null,rating:null};if(e)if("string"==typeof e)t.email=e,e={};else{if("object"!=typeof e)return null;if("Array"===e.constructor)return null}else t.email=this.email(),e={};return(t=h(e,t)).email||(t.email=this.email()),t.protocol={http:"http",https:"https"}[t.protocol]?t.protocol+":":"",t.size=parseInt(t.size,0)?t.size:"",t.rating={g:"g",pg:"pg",r:"r",x:"x"}[t.rating]?t.rating:"",t.fallback={404:"404",mm:"mm",identicon:"identicon",monsterid:"monsterid",wavatar:"wavatar",retro:"retro",blank:"blank"}[t.fallback]?t.fallback:"",t.fileExtension={bmp:"bmp",gif:"gif",jpg:"jpg",png:"png"}[t.fileExtension]?t.fileExtension:"",t.protocol+"//www.gravatar.com/avatar/"+this.bimd5.md5(t.email)+(t.fileExtension?"."+t.fileExtension:"")+(t.size||t.rating||t.fallback?"?":"")+(t.size?"&s="+t.size.toString():"")+(t.rating?"&r="+t.rating:"")+(t.fallback?"&d="+t.fallback:"")},l.prototype.color=function(e){function t(e,t){return[e,e,e].join(t||"")}function n(e){var n=e?"rgba":"rgb",i=e?","+this.floating({min:f,max:g}):"";return n+"("+(a?t(this.natural({min:o,max:s}),","):this.natural({min:l,max:p})+","+this.natural({min:m,max:d})+","+this.natural({max:255}))+i+")"}function i(n,i,r){var h=r?"#":"",f="";return a?(f=t(this.pad(this.hex({min:o,max:s}),2)),"shorthex"===e.format&&(f=t(this.hex({min:0,max:15})))):f="shorthex"===e.format?this.pad(this.hex({min:Math.floor(u/16),max:Math.floor(c/16)}),1)+this.pad(this.hex({min:Math.floor(l/16),max:Math.floor(p/16)}),1)+this.pad(this.hex({min:Math.floor(m/16),max:Math.floor(d/16)}),1):void 0!==u||void 0!==c||void 0!==l||void 0!==p||void 0!==m||void 0!==d?this.pad(this.hex({min:u,max:c}),2)+this.pad(this.hex({min:l,max:p}),2)+this.pad(this.hex({min:m,max:d}),2):this.pad(this.hex({min:o,max:s}),2)+this.pad(this.hex({min:o,max:s}),2)+this.pad(this.hex({min:o,max:s}),2),h+f}var r,a=(e=h(e,{format:this.pick(["hex","shorthex","rgb","rgba","0x","name"]),grayscale:!1,casing:"lower",min:0,max:255,min_red:void 0,max_red:void 0,min_green:void 0,max_green:void 0,min_blue:void 0,max_blue:void 0,min_alpha:0,max_alpha:1})).grayscale,o=e.min,s=e.max,u=e.min_red,c=e.max_red,l=e.min_green,p=e.max_green,m=e.min_blue,d=e.max_blue,f=e.min_alpha,g=e.max_alpha;if(void 0===e.min_red&&(u=o),void 0===e.max_red&&(c=s),void 0===e.min_green&&(l=o),void 0===e.max_green&&(p=s),void 0===e.min_blue&&(m=o),void 0===e.max_blue&&(d=s),void 0===e.min_alpha&&(f=0),void 0===e.max_alpha&&(g=1),a&&0===o&&255===s&&void 0!==u&&void 0!==c&&(o=(u+l+m)/3,s=(c+p+d)/3),"hex"===e.format)r=i.call(this,2,6,!0);else if("shorthex"===e.format)r=i.call(this,1,3,!0);else if("rgb"===e.format)r=n.call(this,!1);else if("rgba"===e.format)r=n.call(this,!0);else{if("0x"!==e.format){if("name"===e.format)return this.pick(this.get("colorNames"));throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".')}r="0x"+i.call(this,2,6)}return"upper"===e.casing&&(r=r.toUpperCase()),r},l.prototype.domain=function(e){return e=h(e),this.word()+"."+(e.tld||this.tld())},l.prototype.email=function(e){return e=h(e),this.word({length:e.length})+"@"+(e.domain||this.domain())},l.prototype.fbid=function(){return"10000"+this.string({pool:"1234567890",length:11})},l.prototype.google_analytics=function(){return"UA-"+this.pad(this.natural({max:999999}),6)+"-"+this.pad(this.natural({max:99}),2)},l.prototype.hashtag=function(){return"#"+this.word()},l.prototype.ip=function(){return this.natural({min:1,max:254})+"."+this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({min:1,max:254})},l.prototype.ipv6=function(){return this.n(this.hash,8,{length:4}).join(":")},l.prototype.klout=function(){return this.natural({min:1,max:99})},l.prototype.semver=function(e){e=h(e,{include_prerelease:!0});var t=this.pickone(["^","~","<",">","<=",">=","="]);e.range&&(t=e.range);var n="";return e.include_prerelease&&(n=this.weighted(["","-dev","-beta","-alpha"],[50,10,5,1])),t+this.rpg("3d10").join(".")+n},l.prototype.tlds=function(){return["com","org","edu","gov","co.uk","net","io","ac","ad","ae","af","ag","ai","al","am","an","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bm","bn","bo","bq","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"]},l.prototype.tld=function(){return this.pick(this.tlds())},l.prototype.twitter=function(){return"@"+this.word()},l.prototype.url=function(e){var t=(e=h(e,{protocol:"http",domain:this.domain(e),domain_prefix:"",path:this.word(),extensions:[]})).extensions.length>0?"."+this.pick(e.extensions):"",n=e.domain_prefix?e.domain_prefix+"."+e.domain:e.domain;return e.protocol+"://"+n+"/"+e.path+t},l.prototype.port=function(){return this.integer({min:0,max:65535})},l.prototype.locale=function(e){return(e=h(e)).region?this.pick(this.get("locale_regions")):this.pick(this.get("locale_languages"))},l.prototype.locales=function(e){return(e=h(e)).region?this.get("locale_regions"):this.get("locale_languages")},l.prototype.loremPicsum=function(e){var t=(e=h(e,{width:500,height:500,greyscale:!1,blurred:!1})).greyscale?"g/":"",n=e.blurred?"/?blur":"/?random";return"https://picsum.photos/"+t+e.width+"/"+e.height+n},l.prototype.address=function(e){return e=h(e),this.natural({min:5,max:2e3})+" "+this.street(e)},l.prototype.altitude=function(e){return e=h(e,{fixed:5,min:0,max:8848}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},l.prototype.areacode=function(e){e=h(e,{parens:!0});var t=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return e.parens?"("+t+")":t},l.prototype.city=function(){return this.capitalize(this.word({syllables:3}))},l.prototype.coordinates=function(e){return this.latitude(e)+", "+this.longitude(e)},l.prototype.countries=function(){return this.get("countries")},l.prototype.country=function(e){e=h(e);var t=this.pick(this.countries());return e.raw?t:e.full?t.name:t.abbreviation},l.prototype.depth=function(e){return e=h(e,{fixed:5,min:-10994,max:0}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},l.prototype.geohash=function(e){return e=h(e,{length:7}),this.string({length:e.length,pool:"0123456789bcdefghjkmnpqrstuvwxyz"})},l.prototype.geojson=function(e){return this.latitude(e)+", "+this.longitude(e)+", "+this.altitude(e)},l.prototype.latitude=function(e){return e=h(e,{fixed:5,min:-90,max:90}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},l.prototype.longitude=function(e){return e=h(e,{fixed:5,min:-180,max:180}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},l.prototype.phone=function(e){var t,n,i=this,r=function(e){var t=[];return e.sections.forEach((function(e){t.push(i.string({pool:"0123456789",length:e}))})),e.area+t.join(" ")};switch((e=h(e,{formatted:!0,country:"us",mobile:!1})).formatted||(e.parens=!1),e.country){case"fr":e.mobile?(t=this.pick(["06","07"])+i.string({pool:"0123456789",length:8}),n=e.formatted?t.match(/../g).join(" "):t):(t=this.pick(["01"+this.pick(["30","34","39","40","41","42","43","44","45","46","47","48","49","53","55","56","58","60","64","69","70","72","73","74","75","76","77","78","79","80","81","82","83"])+i.string({pool:"0123456789",length:6}),"02"+this.pick(["14","18","22","23","28","29","30","31","32","33","34","35","36","37","38","40","41","43","44","45","46","47","48","49","50","51","52","53","54","56","57","61","62","69","72","76","77","78","85","90","96","97","98","99"])+i.string({pool:"0123456789",length:6}),"03"+this.pick(["10","20","21","22","23","24","25","26","27","28","29","39","44","45","51","52","54","55","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","80","81","82","83","84","85","86","87","88","89","90"])+i.string({pool:"0123456789",length:6}),"04"+this.pick(["11","13","15","20","22","26","27","30","32","34","37","42","43","44","50","56","57","63","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","88","89","90","91","92","93","94","95","97","98"])+i.string({pool:"0123456789",length:6}),"05"+this.pick(["08","16","17","19","24","31","32","33","34","35","40","45","46","47","49","53","55","56","57","58","59","61","62","63","64","65","67","79","81","82","86","87","90","94"])+i.string({pool:"0123456789",length:6}),"09"+i.string({pool:"0123456789",length:8})]),n=e.formatted?t.match(/../g).join(" "):t);break;case"uk":e.mobile?(t=this.pick([{area:"07"+this.pick(["4","5","7","8","9"]),sections:[2,6]},{area:"07624 ",sections:[6]}]),n=e.formatted?r(t):r(t).replace(" ","")):(t=this.pick([{area:"01"+this.character({pool:"234569"})+"1 ",sections:[3,4]},{area:"020 "+this.character({pool:"378"}),sections:[3,4]},{area:"023 "+this.character({pool:"89"}),sections:[3,4]},{area:"024 7",sections:[3,4]},{area:"028 "+this.pick(["25","28","37","71","82","90","92","95"]),sections:[2,4]},{area:"012"+this.pick(["04","08","54","76","97","98"])+" ",sections:[6]},{area:"013"+this.pick(["63","64","84","86"])+" ",sections:[6]},{area:"014"+this.pick(["04","20","60","61","80","88"])+" ",sections:[6]},{area:"015"+this.pick(["24","27","62","66"])+" ",sections:[6]},{area:"016"+this.pick(["06","29","35","47","59","95"])+" ",sections:[6]},{area:"017"+this.pick(["26","44","50","68"])+" ",sections:[6]},{area:"018"+this.pick(["27","37","84","97"])+" ",sections:[6]},{area:"019"+this.pick(["00","05","35","46","49","63","95"])+" ",sections:[6]}]),n=e.formatted?r(t):r(t).replace(" ","","g"));break;case"za":e.mobile?(t=this.pick(["060"+this.pick(["3","4","5","6","7","8","9"])+i.string({pool:"0123456789",length:6}),"061"+this.pick(["0","1","2","3","4","5","8"])+i.string({pool:"0123456789",length:6}),"06"+i.string({pool:"0123456789",length:7}),"071"+this.pick(["0","1","2","3","4","5","6","7","8","9"])+i.string({pool:"0123456789",length:6}),"07"+this.pick(["2","3","4","6","7","8","9"])+i.string({pool:"0123456789",length:7}),"08"+this.pick(["0","1","2","3","4","5"])+i.string({pool:"0123456789",length:7})]),n=e.formatted||t):(t=this.pick(["01"+this.pick(["0","1","2","3","4","5","6","7","8"])+i.string({pool:"0123456789",length:7}),"02"+this.pick(["1","2","3","4","7","8"])+i.string({pool:"0123456789",length:7}),"03"+this.pick(["1","2","3","5","6","9"])+i.string({pool:"0123456789",length:7}),"04"+this.pick(["1","2","3","4","5","6","7","8","9"])+i.string({pool:"0123456789",length:7}),"05"+this.pick(["1","3","4","6","7","8"])+i.string({pool:"0123456789",length:7})]),n=e.formatted||t);break;case"us":var a=this.areacode(e).toString(),o=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString(),s=this.natural({min:1e3,max:9999}).toString();n=e.formatted?a+" "+o+"-"+s:a+o+s;break;case"br":var u,c=this.pick(["11","12","13","14","15","16","17","18","19","21","22","24","27","28","31","32","33","34","35","37","38","41","42","43","44","45","46","47","48","49","51","53","54","55","61","62","63","64","65","66","67","68","69","71","73","74","75","77","79","81","82","83","84","85","86","87","88","89","91","92","93","94","95","96","97","98","99"]);u=e.mobile?"9"+i.string({pool:"0123456789",length:4}):this.natural({min:2e3,max:5999}).toString();var l=i.string({pool:"0123456789",length:4});n=e.formatted?"("+c+") "+u+"-"+l:c+u+l}return n},l.prototype.postal=function(){return this.character({pool:"XVTSRPNKLMHJGECBA"})+this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+" "+(this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+this.natural({max:9}))},l.prototype.postcode=function(){return this.pick(this.get("postcodeAreas")).code+this.natural({max:9})+(this.bool()?this.character({alpha:!0,casing:"upper"}):"")+" "+(this.natural({max:9})+(this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})))},l.prototype.counties=function(e){return e=h(e,{country:"uk"}),this.get("counties")[e.country.toLowerCase()]},l.prototype.county=function(e){return this.pick(this.counties(e)).name},l.prototype.provinces=function(e){return e=h(e,{country:"ca"}),this.get("provinces")[e.country.toLowerCase()]},l.prototype.province=function(e){return e&&e.full?this.pick(this.provinces(e)).name:this.pick(this.provinces(e)).abbreviation},l.prototype.state=function(e){return e&&e.full?this.pick(this.states(e)).name:this.pick(this.states(e)).abbreviation},l.prototype.states=function(e){var t;switch((e=h(e,{country:"us",us_states_and_dc:!0})).country.toLowerCase()){case"us":var n=this.get("us_states_and_dc"),i=this.get("territories"),r=this.get("armed_forces");t=[],e.us_states_and_dc&&(t=t.concat(n)),e.territories&&(t=t.concat(i)),e.armed_forces&&(t=t.concat(r));break;case"it":case"mx":t=this.get("country_regions")[e.country.toLowerCase()];break;case"uk":t=this.get("counties")[e.country.toLowerCase()]}return t},l.prototype.street=function(e){var t;switch((e=h(e,{country:"us",syllables:2})).country.toLowerCase()){case"us":t=this.word({syllables:e.syllables}),t=this.capitalize(t),t+=" ",t+=e.short_suffix?this.street_suffix(e).abbreviation:this.street_suffix(e).name;break;case"it":t=this.word({syllables:e.syllables}),t=this.capitalize(t),t=(e.short_suffix?this.street_suffix(e).abbreviation:this.street_suffix(e).name)+" "+t}return t},l.prototype.street_suffix=function(e){return e=h(e,{country:"us"}),this.pick(this.street_suffixes(e))},l.prototype.street_suffixes=function(e){return e=h(e,{country:"us"}),this.get("street_suffixes")[e.country.toLowerCase()]},l.prototype.zip=function(e){var t=this.n(this.natural,5,{max:9});return e&&!0===e.plusfour&&(t.push("-"),t=t.concat(this.n(this.natural,4,{max:9}))),t.join("")},l.prototype.ampm=function(){return this.bool()?"am":"pm"},l.prototype.date=function(e){var t,n;if(e&&(e.min||e.max)){var i=void 0!==(e=h(e,{american:!0,string:!1})).min?e.min.getTime():1,r=void 0!==e.max?e.max.getTime():864e13;n=new Date(this.integer({min:i,max:r}))}else{var a=this.month({raw:!0}),o=a.days;e&&e.month&&(o=this.get("months")[(e.month%12+12)%12].days),e=h(e,{year:parseInt(this.year(),10),month:a.numeric-1,day:this.natural({min:1,max:o}),hour:this.hour({twentyfour:!0}),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:!0,string:!1}),n=new Date(e.year,e.month,e.day,e.hour,e.minute,e.second,e.millisecond)}return t=e.american?n.getMonth()+1+"/"+n.getDate()+"/"+n.getFullYear():n.getDate()+"/"+(n.getMonth()+1)+"/"+n.getFullYear(),e.string?t:n},l.prototype.hammertime=function(e){return this.date(e).getTime()},l.prototype.hour=function(e){return p((e=h(e,{min:e&&e.twentyfour?0:1,max:e&&e.twentyfour?23:12})).min<0,"Chance: Min cannot be less than 0."),p(e.twentyfour&&e.max>23,"Chance: Max cannot be greater than 23 for twentyfour option."),p(!e.twentyfour&&e.max>12,"Chance: Max cannot be greater than 12."),p(e.min>e.max,"Chance: Min cannot be greater than Max."),this.natural({min:e.min,max:e.max})},l.prototype.millisecond=function(){return this.natural({max:999})},l.prototype.minute=l.prototype.second=function(e){return p((e=h(e,{min:0,max:59})).min<0,"Chance: Min cannot be less than 0."),p(e.max>59,"Chance: Max cannot be greater than 59."),p(e.min>e.max,"Chance: Min cannot be greater than Max."),this.natural({min:e.min,max:e.max})},l.prototype.month=function(e){p((e=h(e,{min:1,max:12})).min<1,"Chance: Min cannot be less than 1."),p(e.max>12,"Chance: Max cannot be greater than 12."),p(e.min>e.max,"Chance: Min cannot be greater than Max.");var t=this.pick(this.months().slice(e.min-1,e.max));return e.raw?t:t.name},l.prototype.months=function(){return this.get("months")},l.prototype.second=function(){return this.natural({max:59})},l.prototype.timestamp=function(){return this.natural({min:1,max:parseInt((new Date).getTime()/1e3,10)})},l.prototype.weekday=function(e){var t=["Monday","Tuesday","Wednesday","Thursday","Friday"];return(e=h(e,{weekday_only:!1})).weekday_only||(t.push("Saturday"),t.push("Sunday")),this.pickone(t)},l.prototype.year=function(e){return(e=h(e,{min:(new Date).getFullYear()})).max=void 0!==e.max?e.max:e.min+100,this.natural(e).toString()},l.prototype.cc=function(e){var t,n,i;return n=(t=(e=h(e)).type?this.cc_type({name:e.type,raw:!0}):this.cc_type({raw:!0})).prefix.split(""),i=t.length-t.prefix.length-1,(n=n.concat(this.n(this.integer,i,{min:0,max:9}))).push(this.luhn_calculate(n.join(""))),n.join("")},l.prototype.cc_types=function(){return this.get("cc_types")},l.prototype.cc_type=function(e){e=h(e);var t=this.cc_types(),n=null;if(e.name){for(var i=0;i<t.length;i++)if(t[i].name===e.name||t[i].short_name===e.name){n=t[i];break}if(null===n)throw new RangeError("Chance: Credit card type '"+e.name+"' is not supported")}else n=this.pick(t);return e.raw?n:n.name},l.prototype.currency_types=function(){return this.get("currency_types")},l.prototype.currency=function(){return this.pick(this.currency_types())},l.prototype.timezones=function(){return this.get("timezones")},l.prototype.timezone=function(){return this.pick(this.timezones())},l.prototype.currency_pair=function(e){var t=this.unique(this.currency,2,{comparator:function(e,t){return e.reduce((function(e,n){return e||n.code===t.code}),!1)}});return e?t[0].code+"/"+t[1].code:t},l.prototype.dollar=function(e){e=h(e,{max:1e4,min:0});var t=this.floating({min:e.min,max:e.max,fixed:2}).toString(),n=t.split(".")[1];return void 0===n?t+=".00":n.length<2&&(t+="0"),t<0?"-$"+t.replace("-",""):"$"+t},l.prototype.euro=function(e){return Number(this.dollar(e).replace("$","")).toLocaleString()+"â¬"},l.prototype.exp=function(e){e=h(e);var t={};return t.year=this.exp_year(),t.year===(new Date).getFullYear().toString()?t.month=this.exp_month({future:!0}):t.month=this.exp_month(),e.raw?t:t.month+"/"+t.year},l.prototype.exp_month=function(e){e=h(e);var t,n,i=(new Date).getMonth()+1;if(e.future&&12!==i)do{t=this.month({raw:!0}).numeric,n=parseInt(t,10)}while(n<=i);else t=this.month({raw:!0}).numeric;return t},l.prototype.exp_year=function(){var e=(new Date).getMonth()+1,t=(new Date).getFullYear();return this.year({min:12===e?t+1:t,max:t+10})},l.prototype.vat=function(e){switch((e=h(e,{country:"it"})).country.toLowerCase()){case"it":return this.it_vat()}},l.prototype.iban=function(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZ";return this.string({length:2,pool:e})+this.pad(this.integer({min:0,max:99}),2)+this.string({length:4,pool:"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"})+this.pad(this.natural(),this.natural({min:6,max:26}))},l.prototype.it_vat=function(){var e=this.natural({min:1,max:18e5});return(e=this.pad(e,7)+this.pad(this.pick(this.provinces({country:"it"})).code,3))+this.luhn_calculate(e)},l.prototype.cf=function(e){var t=(e=e||{}).gender?e.gender:this.gender(),n=e.first?e.first:this.first({gender:t,nationality:"it"}),i=e.last?e.last:this.last({nationality:"it"}),r=e.birthday?e.birthday:this.birthday(),a=e.city?e.city:this.pickone(["A","B","C","D","E","F","G","H","I","L","M","Z"])+this.pad(this.natural({max:999}),3),o=[],s=function(e,t){var n,i=[];return e.length<3?i=e.split("").concat("XXX".split("")).splice(0,3):((n=e.toUpperCase().split("").map((function(e){return-1!=="BCDFGHJKLMNPRSTVWZ".indexOf(e)?e:void 0})).join("")).length>3&&(n=t?n.substr(0,3):n[0]+n.substr(2,2)),n.length<3&&(i=n,n=e.toUpperCase().split("").map((function(e){return-1!=="AEIOU".indexOf(e)?e:void 0})).join("").substr(0,3-i.length)),i+=n),i};return o=o.concat(s(i,!0),s(n),function(e,t,n){return e.getFullYear().toString().substr(2)+["A","B","C","D","E","H","L","M","P","R","S","T"][e.getMonth()]+n.pad(e.getDate()+("female"===t.toLowerCase()?40:0),2)}(r,t,this),a.toUpperCase().split("")).join(""),(o+=function(e){for(var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",n="ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",i="ABCDEFGHIJKLMNOPQRSTUVWXYZ",r=0,a=0;a<15;a++)r+=a%2!=0?i.indexOf(n[t.indexOf(e[a])]):"BAKPLCQDREVOSFTGUHMINJWZYX".indexOf(n[t.indexOf(e[a])]);return i[r%26]}(o.toUpperCase())).toUpperCase()},l.prototype.pl_pesel=function(){for(var e=this.natural({min:1,max:9999999999}),t=this.pad(e,10).split(""),n=0;n<t.length;n++)t[n]=parseInt(t[n]);var i=(1*t[0]+3*t[1]+7*t[2]+9*t[3]+1*t[4]+3*t[5]+7*t[6]+9*t[7]+1*t[8]+3*t[9])%10;return 0!==i&&(i=10-i),t.join("")+i},l.prototype.pl_nip=function(){for(var e=this.natural({min:1,max:999999999}),t=this.pad(e,9).split(""),n=0;n<t.length;n++)t[n]=parseInt(t[n]);var i=(6*t[0]+5*t[1]+7*t[2]+2*t[3]+3*t[4]+4*t[5]+5*t[6]+6*t[7]+7*t[8])%11;return 10===i?this.pl_nip():t.join("")+i},l.prototype.pl_regon=function(){for(var e=this.natural({min:1,max:99999999}),t=this.pad(e,8).split(""),n=0;n<t.length;n++)t[n]=parseInt(t[n]);var i=(8*t[0]+9*t[1]+2*t[2]+3*t[3]+4*t[4]+5*t[5]+6*t[6]+7*t[7])%11;return 10===i&&(i=0),t.join("")+i},l.prototype.note=function(e){e=h(e,{notes:"flatKey"});var t={naturals:["C","D","E","F","G","A","B"],flats:["Dâ­","Eâ­","Gâ­","Aâ­","Bâ­"],sharps:["Câ¯","Dâ¯","Fâ¯","Gâ¯","Aâ¯"]};return t.all=t.naturals.concat(t.flats.concat(t.sharps)),t.flatKey=t.naturals.concat(t.flats),t.sharpKey=t.naturals.concat(t.sharps),this.pickone(t[e.notes])},l.prototype.midi_note=function(e){return e=h(e,{min:0,max:127}),this.integer({min:e.min,max:e.max})},l.prototype.chord_quality=function(e){var t=["maj","min","aug","dim"];return(e=h(e,{jazz:!0})).jazz&&(t=["maj7","min7","7","sus","dim","Ã¸"]),this.pickone(t)},l.prototype.chord=function(e){return e=h(e),this.note(e)+this.chord_quality(e)},l.prototype.tempo=function(e){return e=h(e,{min:40,max:320}),this.integer({min:e.min,max:e.max})},l.prototype.coin=function(){return this.bool()?"heads":"tails"},l.prototype.d4=b({min:1,max:4}),l.prototype.d6=b({min:1,max:6}),l.prototype.d8=b({min:1,max:8}),l.prototype.d10=b({min:1,max:10}),l.prototype.d12=b({min:1,max:12}),l.prototype.d20=b({min:1,max:20}),l.prototype.d30=b({min:1,max:30}),l.prototype.d100=b({min:1,max:100}),l.prototype.rpg=function(e,t){if(t=h(t),e){var n=e.toLowerCase().split("d"),i=[];if(2!==n.length||!parseInt(n[0],10)||!parseInt(n[1],10))throw new Error("Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");for(var r=n[0];r>0;r--)i[r-1]=this.natural({min:1,max:n[1]});return void 0!==t.sum&&t.sum?i.reduce((function(e,t){return e+t})):i}throw new RangeError("Chance: A type of die roll must be included")},l.prototype.guid=function(e){e=h(e,{version:5});var t="abcdef1234567890";return this.string({pool:t,length:8})+"-"+this.string({pool:t,length:4})+"-"+e.version+this.string({pool:t,length:3})+"-"+this.string({pool:"ab89",length:1})+this.string({pool:t,length:3})+"-"+this.string({pool:t,length:12})},l.prototype.hash=function(e){var t="upper"===(e=h(e,{length:40,casing:"lower"})).casing?s.toUpperCase():s;return this.string({pool:t,length:e.length})},l.prototype.luhn_check=function(e){var t=e.toString();return+t.substring(t.length-1)===this.luhn_calculate(+t.substring(0,t.length-1))},l.prototype.luhn_calculate=function(e){for(var t,n=e.toString().split("").reverse(),i=0,r=0,a=n.length;a>r;++r)t=+n[r],r%2==0&&(t*=2)>9&&(t-=9),i+=t;return 9*i%10},l.prototype.md5=function(e){var t={str:"",key:null,raw:!1};if(e)if("string"==typeof e)t.str=e,e={};else{if("object"!=typeof e)return null;if("Array"===e.constructor)return null}else t.str=this.string(),e={};if(!(t=h(e,t)).str)throw new Error("A parameter is required to return an md5 hash.");return this.bimd5.md5(t.str,t.key,t.raw)},l.prototype.file=function(e){var t,n=e||{},i=Object.keys(this.get("fileExtension"));if(t=this.word({length:n.length}),n.extension)return t+"."+n.extension;if(n.extensions){if(Array.isArray(n.extensions))return t+"."+this.pickone(n.extensions);if(n.extensions.constructor===Object){var r=n.extensions,a=Object.keys(r);return t+"."+this.pickone(r[this.pickone(a)])}throw new Error("Chance: Extensions must be an Array or Object")}if(n.fileType){var o=n.fileType;if(-1!==i.indexOf(o))return t+"."+this.pickone(this.get("fileExtension")[o]);throw new RangeError("Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'")}return t+"."+this.pickone(this.get("fileExtension")[this.pickone(i)])};var v={firstNames:{male:{en:["James","John","Robert","Michael","William","David","Richard","Joseph","Charles","Thomas","Christopher","Daniel","Matthew","George","Donald","Anthony","Paul","Mark","Edward","Steven","Kenneth","Andrew","Brian","Joshua","Kevin","Ronald","Timothy","Jason","Jeffrey","Frank","Gary","Ryan","Nicholas","Eric","Stephen","Jacob","Larry","Jonathan","Scott","Raymond","Justin","Brandon","Gregory","Samuel","Benjamin","Patrick","Jack","Henry","Walter","Dennis","Jerry","Alexander","Peter","Tyler","Douglas","Harold","Aaron","Jose","Adam","Arthur","Zachary","Carl","Nathan","Albert","Kyle","Lawrence","Joe","Willie","Gerald","Roger","Keith","Jeremy","Terry","Harry","Ralph","Sean","Jesse","Roy","Louis","Billy","Austin","Bruce","Eugene","Christian","Bryan","Wayne","Russell","Howard","Fred","Ethan","Jordan","Philip","Alan","Juan","Randy","Vincent","Bobby","Dylan","Johnny","Phillip","Victor","Clarence","Ernest","Martin","Craig","Stanley","Shawn","Travis","Bradley","Leonard","Earl","Gabriel","Jimmy","Francis","Todd","Noah","Danny","Dale","Cody","Carlos","Allen","Frederick","Logan","Curtis","Alex","Joel","Luis","Norman","Marvin","Glenn","Tony","Nathaniel","Rodney","Melvin","Alfred","Steve","Cameron","Chad","Edwin","Caleb","Evan","Antonio","Lee","Herbert","Jeffery","Isaac","Derek","Ricky","Marcus","Theodore","Elijah","Luke","Jesus","Eddie","Troy","Mike","Dustin","Ray","Adrian","Bernard","Leroy","Angel","Randall","Wesley","Ian","Jared","Mason","Hunter","Calvin","Oscar","Clifford","Jay","Shane","Ronnie","Barry","Lucas","Corey","Manuel","Leo","Tommy","Warren","Jackson","Isaiah","Connor","Don","Dean","Jon","Julian","Miguel","Bill","Lloyd","Charlie","Mitchell","Leon","Jerome","Darrell","Jeremiah","Alvin","Brett","Seth","Floyd","Jim","Blake","Micheal","Gordon","Trevor","Lewis","Erik","Edgar","Vernon","Devin","Gavin","Jayden","Chris","Clyde","Tom","Derrick","Mario","Brent","Marc","Herman","Chase","Dominic","Ricardo","Franklin","Maurice","Max","Aiden","Owen","Lester","Gilbert","Elmer","Gene","Francisco","Glen","Cory","Garrett","Clayton","Sam","Jorge","Chester","Alejandro","Jeff","Harvey","Milton","Cole","Ivan","Andre","Duane","Landon"],it:["Adolfo","Alberto","Aldo","Alessandro","Alessio","Alfredo","Alvaro","Andrea","Angelo","Angiolo","Antonino","Antonio","Attilio","Benito","Bernardo","Bruno","Carlo","Cesare","Christian","Claudio","Corrado","Cosimo","Cristian","Cristiano","Daniele","Dario","David","Davide","Diego","Dino","Domenico","Duccio","Edoardo","Elia","Elio","Emanuele","Emiliano","Emilio","Enrico","Enzo","Ettore","Fabio","Fabrizio","Federico","Ferdinando","Fernando","Filippo","Francesco","Franco","Gabriele","Giacomo","Giampaolo","Giampiero","Giancarlo","Gianfranco","Gianluca","Gianmarco","Gianni","Gino","Giorgio","Giovanni","Giuliano","Giulio","Giuseppe","Graziano","Gregorio","Guido","Iacopo","Jacopo","Lapo","Leonardo","Lorenzo","Luca","Luciano","Luigi","Manuel","Marcello","Marco","Marino","Mario","Massimiliano","Massimo","Matteo","Mattia","Maurizio","Mauro","Michele","Mirko","Mohamed","Nello","Neri","NiccolÃ²","Nicola","Osvaldo","Otello","Paolo","Pier Luigi","Piero","Pietro","Raffaele","Remo","Renato","Renzo","Riccardo","Roberto","Rolando","Romano","Salvatore","Samuele","Sandro","Sergio","Silvano","Simone","Stefano","Thomas","Tommaso","Ubaldo","Ugo","Umberto","Valerio","Valter","Vasco","Vincenzo","Vittorio"],nl:["Aaron","Abel","Adam","Adriaan","Albert","Alexander","Ali","Arjen","Arno","Bart","Bas","Bastiaan","Benjamin","Bob","Boris","Bram","Brent","Cas","Casper","Chris","Christiaan","Cornelis","Daan","Daley","Damian","Dani","Daniel","DaniÃ«l","David","Dean","Dirk","Dylan","Egbert","Elijah","Erik","Erwin","Evert","Ezra","Fabian","Fedde","Finn","Florian","Floris","Frank","Frans","Frederik","Freek","Geert","Gerard","Gerben","Gerrit","Gijs","Guus","Hans","Hendrik","Henk","Herman","Hidde","Hugo","Jaap","Jan Jaap","Jan-Willem","Jack","Jacob","Jan","Jason","Jasper","Jayden","Jelle","Jelte","Jens","Jeroen","Jesse","Jim","Job","Joep","Johannes","John","Jonathan","Joris","Joshua","JoÃ«l","Julian","Kees","Kevin","Koen","Lars","Laurens","Leendert","Lennard","Lodewijk","Luc","Luca","Lucas","Lukas","Luuk","Maarten","Marcus","Martijn","Martin","Matthijs","Maurits","Max","Mees","Melle","Mick","Mika","Milan","Mohamed","Mohammed","Morris","Muhammed","Nathan","Nick","Nico","Niek","Niels","Noah","Noud","Olivier","Oscar","Owen","Paul","Pepijn","Peter","Pieter","Pim","Quinten","Reinier","Rens","Robin","Ruben","Sam","Samuel","Sander","Sebastiaan","Sem","Sep","Sepp","Siem","Simon","Stan","Stef","Steven","Stijn","Sven","Teun","Thijmen","Thijs","Thomas","Tijn","Tim","Timo","Tobias","Tom","Victor","Vince","Willem","Wim","Wouter","Yusuf"],fr:["Aaron","Abdon","Abel","AbÃ©lard","Abelin","Abondance","Abraham","Absalon","Acace","Achaire","Achille","Adalard","Adalbald","AdalbÃ©ron","Adalbert","Adalric","Adam","Adegrin","Adel","Adelin","Andelin","Adelphe","Adam","AdÃ©odat","AdhÃ©mar","Adjutor","Adolphe","Adonis","Adon","Adrien","Agapet","Agathange","Agathon","Agilbert","AgÃ©nor","Agnan","Aignan","Agrippin","Aimable","AimÃ©","Alain","Alban","Albin","Aubin","AlbÃ©ric","Albert","Albertet","Alcibiade","Alcide","AlcÃ©e","Alcime","Aldonce","Aldric","AldÃ©ric","Aleaume","Alexandre","Alexis","Alix","Alliaume","Aleaume","Almine","Almire","AloÃ¯s","AlphÃ©e","Alphonse","Alpinien","AlverÃ¨de","Amalric","Amaury","Amandin","Amant","Ambroise","AmÃ©dÃ©e","AmÃ©lien","Amiel","Amour","AnaÃ«l","Anastase","Anatole","Ancelin","AndÃ©ol","Andoche","AndrÃ©","Andoche","Ange","Angelin","Angilbe","Anglebert","Angoustan","Anicet","Anne","Annibal","Ansbert","Anselme","Anthelme","Antheaume","Anthime","Antide","Antoine","Antonius","Antonin","Apollinaire","Apollon","Aquilin","Arcade","Archambaud","Archambeau","Archange","Archibald","Arian","Ariel","Ariste","Aristide","Armand","Armel","Armin","Arnould","Arnaud","Arolde","ArsÃ¨ne","ArsinoÃ©","Arthaud","ArthÃ¨me","Arthur","Ascelin","Athanase","Aubry","Audebert","Audouin","Audran","Audric","Auguste","Augustin","AurÃ¨le","AurÃ©lien","Aurian","Auxence","Axel","Aymard","Aymeric","Aymon","Aymond","Balthazar","Baptiste","BarnabÃ©","BarthÃ©lemy","BartimÃ©e","Basile","Bastien","Baudouin","BÃ©nigne","Benjamin","BenoÃ®t","BÃ©renger","BÃ©rard","Bernard","Bertrand","Blaise","Bon","Boniface","Bouchard","Brice","Brieuc","Bruno","Brunon","Calixte","Calliste","CamÃ©lien","Camille","Camillien","Candide","Caribert","Carloman","Cassandre","Cassien","CÃ©dric","CÃ©leste","CÃ©lestin","CÃ©lien","CÃ©saire","CÃ©sar","Charles","Charlemagne","Childebert","ChilpÃ©ric","ChrÃ©tien","Christian","Christodule","Christophe","Chrysostome","Clarence","Claude","Claudien","ClÃ©andre","ClÃ©ment","Clotaire","CÃ´me","Constance","Constant","Constantin","Corentin","Cyprien","Cyriaque","Cyrille","Cyril","Damien","Daniel","David","Delphin","Denis","DÃ©sirÃ©","Didier","DieudonnÃ©","Dimitri","Dominique","Dorian","DorothÃ©e","Edgard","Edmond","Ãdouard","ÃleuthÃ¨re","Ãlie","ÃlisÃ©e","Ãmeric","Ãmile","Ãmilien","Emmanuel","Enguerrand","Ãpiphane","Ãric","Esprit","Ernest","Ãtienne","Eubert","Eudes","Eudoxe","EugÃ¨ne","EusÃ¨be","Eustache","Ãvariste","Ãvrard","Fabien","Fabrice","Falba","FÃ©licitÃ©","FÃ©lix","Ferdinand","Fiacre","FidÃ¨le","Firmin","Flavien","Flodoard","Florent","Florentin","Florestan","Florian","FortunÃ©","Foulques","Francisque","FranÃ§ois","FranÃ§ais","Franciscus","Francs","FrÃ©dÃ©ric","Fulbert","Fulcran","Fulgence","Gabin","Gabriel","GaÃ«l","Garnier","Gaston","Gaspard","Gatien","Gaud","Gautier","GÃ©dÃ©on","Geoffroy","Georges","GÃ©raud","GÃ©rard","Gerbert","Germain","Gervais","Ghislain","Gilbert","Gilles","Girart","Gislebert","Gondebaud","Gonthier","Gontran","Gonzague","GrÃ©goire","GuÃ©rin","Gui","Guillaume","Gustave","Guy","Guyot","Hardouin","Hector","HÃ©delin","HÃ©lier","Henri","Herbert","Herluin","HervÃ©","Hilaire","Hildebert","Hincmar","Hippolyte","HonorÃ©","Hubert","Hugues","Innocent","Isabeau","Isidore","Jacques","Japhet","Jason","Jean","Jeannel","Jeannot","JÃ©rÃ©mie","JÃ©rÃ´me","Joachim","Joanny","Job","Jocelyn","JoÃ«l","Johan","Jonas","Jonathan","Joseph","Josse","Josselin","Jourdain","Jude","JudicaÃ«l","Jules","Julien","Juste","Justin","Lambert","Landry","Laurent","Lazare","LÃ©andre","LÃ©on","LÃ©onard","LÃ©opold","Leu","Loup","Leufroy","LibÃ¨re","LiÃ©tald","Lionel","LoÃ¯c","Longin","Lorrain","Lorraine","Lothaire","Louis","Loup","Luc","Lucas","Lucien","Ludolphe","Ludovic","Macaire","Malo","Mamert","ManassÃ©","Marc","Marceau","Marcel","Marcelin","Marius","Marseille","Martial","Martin","Mathurin","Matthias","Mathias","Matthieu","Maugis","Maurice","Mauricet","Maxence","Maxime","Maximilien","Mayeul","MÃ©dÃ©ric","Melchior","Mence","Merlin","MÃ©rovÃ©e","MichaÃ«l","Michel","MoÃ¯se","Morgan","Nathan","NathanaÃ«l","Narcisse","NÃ©hÃ©mie","Nestor","Nestor","NicÃ©phore","Nicolas","NoÃ©","NoÃ«l","Norbert","Normand","Normands","Octave","Odilon","Odon","Oger","Olivier","Oury","PacÃ´me","PalÃ©mon","Parfait","Pascal","Paterne","Patrice","Paul","PÃ©pin","Perceval","PhilÃ©mon","Philibert","Philippe","PhilothÃ©e","Pie","Pierre","Pierrick","Prosper","Quentin","Raoul","RaphaÃ«l","Raymond","RÃ©gis","RÃ©jean","RÃ©mi","Renaud","RenÃ©","Reybaud","Richard","Robert","Roch","Rodolphe","Rodrigue","Roger","Roland","Romain","Romuald","RomÃ©o","Rome","Ronan","Roselin","Salomon","Samuel","Savin","Savinien","Scholastique","SÃ©bastien","SÃ©raphin","Serge","SÃ©verin","Sidoine","Sigebert","Sigismond","SilvÃ¨re","Simon","SimÃ©on","Sixte","Stanislas","StÃ©phane","Stephan","Sylvain","Sylvestre","TancrÃ¨de","Tanguy","Taurin","ThÃ©odore","ThÃ©odose","ThÃ©ophile","ThÃ©ophraste","Thibault","Thibert","Thierry","Thomas","TimolÃ©on","TimothÃ©e","Titien","Tonnin","Toussaint","Trajan","Tristan","Turold","Tim","Ulysse","Urbain","Valentin","ValÃ¨re","ValÃ©ry","Venance","Venant","Venceslas","Vianney","Victor","Victorien","Victorin","Vigile","Vincent","Vital","Vitalien","Vivien","Waleran","Wandrille","Xavier","XÃ©nophon","Yves","Zacharie","ZachÃ©","ZÃ©phirin"]},female:{en:["Mary","Emma","Elizabeth","Minnie","Margaret","Ida","Alice","Bertha","Sarah","Annie","Clara","Ella","Florence","Cora","Martha","Laura","Nellie","Grace","Carrie","Maude","Mabel","Bessie","Jennie","Gertrude","Julia","Hattie","Edith","Mattie","Rose","Catherine","Lillian","Ada","Lillie","Helen","Jessie","Louise","Ethel","Lula","Myrtle","Eva","Frances","Lena","Lucy","Edna","Maggie","Pearl","Daisy","Fannie","Josephine","Dora","Rosa","Katherine","Agnes","Marie","Nora","May","Mamie","Blanche","Stella","Ellen","Nancy","Effie","Sallie","Nettie","Della","Lizzie","Flora","Susie","Maud","Mae","Etta","Harriet","Sadie","Caroline","Katie","Lydia","Elsie","Kate","Susan","Mollie","Alma","Addie","Georgia","Eliza","Lulu","Nannie","Lottie","Amanda","Belle","Charlotte","Rebecca","Ruth","Viola","Olive","Amelia","Hannah","Jane","Virginia","Emily","Matilda","Irene","Kathryn","Esther","Willie","Henrietta","Ollie","Amy","Rachel","Sara","Estella","Theresa","Augusta","Ora","Pauline","Josie","Lola","Sophia","Leona","Anne","Mildred","Ann","Beulah","Callie","Lou","Delia","Eleanor","Barbara","Iva","Louisa","Maria","Mayme","Evelyn","Estelle","Nina","Betty","Marion","Bettie","Dorothy","Luella","Inez","Lela","Rosie","Allie","Millie","Janie","Cornelia","Victoria","Ruby","Winifred","Alta","Celia","Christine","Beatrice","Birdie","Harriett","Mable","Myra","Sophie","Tillie","Isabel","Sylvia","Carolyn","Isabelle","Leila","Sally","Ina","Essie","Bertie","Nell","Alberta","Katharine","Lora","Rena","Mina","Rhoda","Mathilda","Abbie","Eula","Dollie","Hettie","Eunice","Fanny","Ola","Lenora","Adelaide","Christina","Lelia","Nelle","Sue","Johanna","Lilly","Lucinda","Minerva","Lettie","Roxie","Cynthia","Helena","Hilda","Hulda","Bernice","Genevieve","Jean","Cordelia","Marian","Francis","Jeanette","Adeline","Gussie","Leah","Lois","Lura","Mittie","Hallie","Isabella","Olga","Phoebe","Teresa","Hester","Lida","Lina","Winnie","Claudia","Marguerite","Vera","Cecelia","Bess","Emilie","Rosetta","Verna","Myrtie","Cecilia","Elva","Olivia","Ophelia","Georgie","Elnora","Violet","Adele","Lily","Linnie","Loretta","Madge","Polly","Virgie","Eugenia","Lucile","Lucille","Mabelle","Rosalie"],it:["Ada","Adriana","Alessandra","Alessia","Alice","Angela","Anna","Anna Maria","Annalisa","Annita","Annunziata","Antonella","Arianna","Asia","Assunta","Aurora","Barbara","Beatrice","Benedetta","Bianca","Bruna","Camilla","Carla","Carlotta","Carmela","Carolina","Caterina","Catia","Cecilia","Chiara","Cinzia","Clara","Claudia","Costanza","Cristina","Daniela","Debora","Diletta","Dina","Donatella","Elena","Eleonora","Elisa","Elisabetta","Emanuela","Emma","Eva","Federica","Fernanda","Fiorella","Fiorenza","Flora","Franca","Francesca","Gabriella","Gaia","Gemma","Giada","Gianna","Gina","Ginevra","Giorgia","Giovanna","Giulia","Giuliana","Giuseppa","Giuseppina","Grazia","Graziella","Greta","Ida","Ilaria","Ines","Iolanda","Irene","Irma","Isabella","Jessica","Laura","Lea","Letizia","Licia","Lidia","Liliana","Lina","Linda","Lisa","Livia","Loretta","Luana","Lucia","Luciana","Lucrezia","Luisa","Manuela","Mara","Marcella","Margherita","Maria","Maria Cristina","Maria Grazia","Maria Luisa","Maria Pia","Maria Teresa","Marina","Marisa","Marta","Martina","Marzia","Matilde","Melissa","Michela","Milena","Mirella","Monica","Natalina","Nella","Nicoletta","Noemi","Olga","Paola","Patrizia","Piera","Pierina","Raffaella","Rebecca","Renata","Rina","Rita","Roberta","Rosa","Rosanna","Rossana","Rossella","Sabrina","Sandra","Sara","Serena","Silvana","Silvia","Simona","Simonetta","Sofia","Sonia","Stefania","Susanna","Teresa","Tina","Tiziana","Tosca","Valentina","Valeria","Vanda","Vanessa","Vanna","Vera","Veronica","Vilma","Viola","Virginia","Vittoria"],nl:["Ada","Arianne","Afke","Amanda","Amber","Amy","Aniek","Anita","Anja","Anna","Anne","Annelies","Annemarie","Annette","Anouk","Astrid","Aukje","Barbara","Bianca","Carla","Carlijn","Carolien","Chantal","Charlotte","Claudia","DaniÃ«lle","Debora","Diane","Dora","Eline","Elise","Ella","Ellen","Emma","Esmee","Evelien","Esther","Erica","Eva","Femke","Fleur","Floor","Froukje","Gea","Gerda","Hanna","Hanneke","Heleen","Hilde","Ilona","Ina","Inge","Ingrid","Iris","Isabel","Isabelle","Janneke","Jasmijn","Jeanine","Jennifer","Jessica","Johanna","Joke","Julia","Julie","Karen","Karin","Katja","Kim","Lara","Laura","Lena","Lianne","Lieke","Lilian","Linda","Lisa","Lisanne","Lotte","Louise","Maaike","Manon","Marga","Maria","Marissa","Marit","Marjolein","Martine","Marleen","Melissa","Merel","Miranda","Michelle","Mirjam","Mirthe","Naomi","Natalie","Nienke","Nina","Noortje","Olivia","Patricia","Paula","Paulien","Ramona","Ria","Rianne","Roos","Rosanne","Ruth","Sabrina","Sandra","Sanne","Sara","Saskia","Silvia","Sofia","Sophie","Sonja","Suzanne","Tamara","Tess","Tessa","Tineke","Valerie","Vanessa","Veerle","Vera","Victoria","Wendy","Willeke","Yvonne","ZoÃ«"],fr:["Abdon","Abel","AbigaÃ«lle","AbigaÃ¯l","Acacius","Acanthe","Adalbert","Adalsinde","Adegrine","AdÃ©laÃ¯de","AdÃ¨le","AdÃ©lie","Adeline","Adeltrude","Adolphe","Adonis","AdrastÃ©e","Adrehilde","Adrienne","Agathe","Agilbert","AglaÃ©","Aignan","AgneflÃ¨te","AgnÃ¨s","Agrippine","AimÃ©","Alaine","AlaÃ¯s","Albane","AlbÃ©rade","Alberte","Alcide","Alcine","Alcyone","Aldegonde","Aleth","Alexandrine","Alexine","Alice","AliÃ©nor","Aliette","Aline","Alix","AlizÃ©","AloÃ¯se","Aloyse","Alphonsine","AlthÃ©e","Amaliane","AmalthÃ©e","Amande","Amandine","Amant","Amarande","Amaranthe","Amaryllis","Ambre","Ambroisie","AmÃ©lie","AmÃ©thyste","Aminte","AnaÃ«l","AnaÃ¯s","Anastasie","Anatole","Ancelin","AndrÃ©e","AnÃ©mone","AngadrÃªme","AngÃ¨le","Angeline","AngÃ©lique","Angilbert","Anicet","Annabelle","Anne","Annette","Annick","Annie","Annonciade","Ansbert","Anstrudie","Anthelme","Antigone","Antoinette","Antonine","AphÃ©lie","Apolline","Apollonie","Aquiline","Arabelle","Arcadie","Archange","Argine","Ariane","Aricie","Ariel","Arielle","Arlette","Armance","Armande","Armandine","Armelle","Armide","Armelle","Armin","Arnaud","ArsÃ¨ne","ArsinoÃ©","ArtÃ©mis","Arthur","Ascelin","Ascension","Assomption","AstartÃ©","AstÃ©rie","AstrÃ©e","Astrid","Athalie","Athanasie","Athina","Aube","Albert","Aude","Audrey","Augustine","Aure","AurÃ©lie","AurÃ©lien","AurÃ¨le","Aurore","Auxence","Aveline","AbigaÃ«lle","Avoye","Axelle","Aymard","AzalÃ©e","AdÃ¨le","Adeline","Barbe","Basilisse","Bathilde","BÃ©atrice","BÃ©atrix","BÃ©nÃ©dicte","BÃ©rengÃ¨re","Bernadette","Berthe","Bertille","Beuve","Blanche","Blanc","Blandine","Brigitte","Brune","Brunehilde","Callista","Camille","Capucine","Carine","Caroline","Cassandre","Catherine","CÃ©cile","CÃ©leste","CÃ©lestine","CÃ©line","Chantal","CharlÃ¨ne","Charline","Charlotte","ChloÃ©","Christelle","Christiane","Christine","Claire","Clara","Claude","Claudine","Clarisse","ClÃ©mence","ClÃ©mentine","ClÃ©o","Clio","Clotilde","Coline","Conception","Constance","Coralie","Coraline","Corentine","Corinne","Cyrielle","Daniel","Daniel","DaphnÃ©","DÃ©bora","Delphine","Denise","Diane","DieudonnÃ©","Dominique","Doriane","DorothÃ©e","Douce","Ãdith","EdmÃ©e","ÃlÃ©onore","Ãliane","Ãlia","Ãliette","Ãlisabeth","Ãlise","Ella","Ãlodie","ÃloÃ¯se","Elsa","Ãmeline","ÃmÃ©rance","ÃmÃ©rentienne","ÃmÃ©rencie","Ãmilie","Emma","Emmanuelle","Emmelie","Ernestine","Esther","Estelle","Eudoxie","EugÃ©nie","Eulalie","Euphrasie","EusÃ©bie","ÃvangÃ©line","Eva","Ãve","Ãvelyne","Fanny","Fantine","Faustine","FÃ©licie","Fernande","Flavie","Fleur","Flore","Florence","Florie","FortunÃ©","France","Francia","FranÃ§oise","Francine","Gabrielle","GaÃ«lle","Garance","GeneviÃ¨ve","Georgette","Gerberge","Germaine","Gertrude","GisÃ¨le","GueniÃ¨vre","Guilhemine","Guillemette","Gustave","Gwenael","HÃ©lÃ¨ne","HÃ©loÃ¯se","Henriette","Hermine","Hermione","Hippolyte","Honorine","Hortense","Huguette","Ines","IrÃ¨ne","Irina","Iris","Isabeau","Isabelle","Iseult","Isolde","IsmÃ©rie","Jacinthe","Jacqueline","Jade","Janine","Jeanne","Jocelyne","JoÃ«lle","JosÃ©phine","Judith","Julia","Julie","Jules","Juliette","Justine","Katy","Kathy","Katie","Laura","Laure","Laureline","Laurence","Laurene","Lauriane","Laurianne","Laurine","LÃ©a","LÃ©na","LÃ©onie","LÃ©on","LÃ©ontine","Lorraine","Lucie","Lucienne","Lucille","Ludivine","Lydie","Lydie","Megane","Madeleine","Magali","Maguelone","Mallaury","Manon","Marceline","Margot","Marguerite","Marianne","Marie","Myriam","Marie","Marine","Marion","MarlÃ¨ne","Marthe","Martine","Mathilde","Maud","Maureen","Mauricette","Maxime","MÃ©lanie","Melissa","MÃ©lissandre","MÃ©lisande","MÃ©lodie","Michel","Micheline","Mireille","Miriam","MoÃ¯se","Monique","Morgane","Muriel","MylÃ¨ne","NadÃ¨ge","Nadine","Nathalie","Nicole","Nicolette","Nine","NoÃ«l","NoÃ©mie","OcÃ©ane","Odette","Odile","Olive","Olivia","Olympe","Ombline","Ombeline","OphÃ©lie","Oriande","Oriane","Ozanne","Pascale","Pascaline","Paule","Paulette","Pauline","Priscille","Prisca","Prisque","PÃ©cine","PÃ©lagie","PÃ©nÃ©lope","Perrine","PÃ©tronille","Philippine","PhilomÃ¨ne","PhilothÃ©e","Primerose","Prudence","PulchÃ©rie","Quentine","QuiÃ©ta","Quintia","Quintilla","Rachel","RaphaÃ«lle","Raymonde","Rebecca","RÃ©gine","RÃ©jeanne","RenÃ©","Rita","Rita","Rolande","Romane","Rosalie","Rose","Roseline","Sabine","SalomÃ©","Sandra","Sandrine","Sarah","SÃ©golÃ¨ne","SÃ©verine","Sibylle","Simone","Sixt","Solange","Soline","SolÃ¨ne","Sophie","StÃ©phanie","Suzanne","Sylvain","Sylvie","Tatiana","ThaÃ¯s","ThÃ©odora","ThÃ©rÃ¨se","Tiphaine","Ursule","Valentine","ValÃ©rie","VÃ©ronique","Victoire","Victorine","Vinciane","Violette","Virginie","Viviane","XaviÃ¨re","Yolande","Ysaline","Yvette","Yvonne","ZÃ©lie","Zita","ZoÃ©"]}},lastNames:{en:["Smith","Johnson","Williams","Jones","Brown","Davis","Miller","Wilson","Moore","Taylor","Anderson","Thomas","Jackson","White","Harris","Martin","Thompson","Garcia","Martinez","Robinson","Clark","Rodriguez","Lewis","Lee","Walker","Hall","Allen","Young","Hernandez","King","Wright","Lopez","Hill","Scott","Green","Adams","Baker","Gonzalez","Nelson","Carter","Mitchell","Perez","Roberts","Turner","Phillips","Campbell","Parker","Evans","Edwards","Collins","Stewart","Sanchez","Morris","Rogers","Reed","Cook","Morgan","Bell","Murphy","Bailey","Rivera","Cooper","Richardson","Cox","Howard","Ward","Torres","Peterson","Gray","Ramirez","James","Watson","Brooks","Kelly","Sanders","Price","Bennett","Wood","Barnes","Ross","Henderson","Coleman","Jenkins","Perry","Powell","Long","Patterson","Hughes","Flores","Washington","Butler","Simmons","Foster","Gonzales","Bryant","Alexander","Russell","Griffin","Diaz","Hayes","Myers","Ford","Hamilton","Graham","Sullivan","Wallace","Woods","Cole","West","Jordan","Owens","Reynolds","Fisher","Ellis","Harrison","Gibson","McDonald","Cruz","Marshall","Ortiz","Gomez","Murray","Freeman","Wells","Webb","Simpson","Stevens","Tucker","Porter","Hunter","Hicks","Crawford","Henry","Boyd","Mason","Morales","Kennedy","Warren","Dixon","Ramos","Reyes","Burns","Gordon","Shaw","Holmes","Rice","Robertson","Hunt","Black","Daniels","Palmer","Mills","Nichols","Grant","Knight","Ferguson","Rose","Stone","Hawkins","Dunn","Perkins","Hudson","Spencer","Gardner","Stephens","Payne","Pierce","Berry","Matthews","Arnold","Wagner","Willis","Ray","Watkins","Olson","Carroll","Duncan","Snyder","Hart","Cunningham","Bradley","Lane","Andrews","Ruiz","Harper","Fox","Riley","Armstrong","Carpenter","Weaver","Greene","Lawrence","Elliott","Chavez","Sims","Austin","Peters","Kelley","Franklin","Lawson","Fields","Gutierrez","Ryan","Schmidt","Carr","Vasquez","Castillo","Wheeler","Chapman","Oliver","Montgomery","Richards","Williamson","Johnston","Banks","Meyer","Bishop","McCoy","Howell","Alvarez","Morrison","Hansen","Fernandez","Garza","Harvey","Little","Burton","Stanley","Nguyen","George","Jacobs","Reid","Kim","Fuller","Lynch","Dean","Gilbert","Garrett","Romero","Welch","Larson","Frazier","Burke","Hanson","Day","Mendoza","Moreno","Bowman","Medina","Fowler","Brewer","Hoffman","Carlson","Silva","Pearson","Holland","Douglas","Fleming","Jensen","Vargas","Byrd","Davidson","Hopkins","May","Terry","Herrera","Wade","Soto","Walters","Curtis","Neal","Caldwell","Lowe","Jennings","Barnett","Graves","Jimenez","Horton","Shelton","Barrett","Obrien","Castro","Sutton","Gregory","McKinney","Lucas","Miles","Craig","Rodriquez","Chambers","Holt","Lambert","Fletcher","Watts","Bates","Hale","Rhodes","Pena","Beck","Newman","Haynes","McDaniel","Mendez","Bush","Vaughn","Parks","Dawson","Santiago","Norris","Hardy","Love","Steele","Curry","Powers","Schultz","Barker","Guzman","Page","Munoz","Ball","Keller","Chandler","Weber","Leonard","Walsh","Lyons","Ramsey","Wolfe","Schneider","Mullins","Benson","Sharp","Bowen","Daniel","Barber","Cummings","Hines","Baldwin","Griffith","Valdez","Hubbard","Salazar","Reeves","Warner","Stevenson","Burgess","Santos","Tate","Cross","Garner","Mann","Mack","Moss","Thornton","Dennis","McGee","Farmer","Delgado","Aguilar","Vega","Glover","Manning","Cohen","Harmon","Rodgers","Robbins","Newton","Todd","Blair","Higgins","Ingram","Reese","Cannon","Strickland","Townsend","Potter","Goodwin","Walton","Rowe","Hampton","Ortega","Patton","Swanson","Joseph","Francis","Goodman","Maldonado","Yates","Becker","Erickson","Hodges","Rios","Conner","Adkins","Webster","Norman","Malone","Hammond","Flowers","Cobb","Moody","Quinn","Blake","Maxwell","Pope","Floyd","Osborne","Paul","McCarthy","Guerrero","Lindsey","Estrada","Sandoval","Gibbs","Tyler","Gross","Fitzgerald","Stokes","Doyle","Sherman","Saunders","Wise","Colon","Gill","Alvarado","Greer","Padilla","Simon","Waters","Nunez","Ballard","Schwartz","McBride","Houston","Christensen","Klein","Pratt","Briggs","Parsons","McLaughlin","Zimmerman","French","Buchanan","Moran","Copeland","Roy","Pittman","Brady","McCormick","Holloway","Brock","Poole","Frank","Logan","Owen","Bass","Marsh","Drake","Wong","Jefferson","Park","Morton","Abbott","Sparks","Patrick","Norton","Huff","Clayton","Massey","Lloyd","Figueroa","Carson","Bowers","Roberson","Barton","Tran","Lamb","Harrington","Casey","Boone","Cortez","Clarke","Mathis","Singleton","Wilkins","Cain","Bryan","Underwood","Hogan","McKenzie","Collier","Luna","Phelps","McGuire","Allison","Bridges","Wilkerson","Nash","Summers","Atkins"],it:["Acciai","Aglietti","Agostini","Agresti","Ahmed","Aiazzi","Albanese","Alberti","Alessi","Alfani","Alinari","Alterini","Amato","Ammannati","Ancillotti","Andrei","Andreini","Andreoni","Angeli","Anichini","Antonelli","Antonini","Arena","Ariani","Arnetoli","Arrighi","Baccani","Baccetti","Bacci","Bacherini","Badii","Baggiani","Baglioni","Bagni","Bagnoli","Baldassini","Baldi","Baldini","Ballerini","Balli","Ballini","Balloni","Bambi","Banchi","Bandinelli","Bandini","Bani","Barbetti","Barbieri","Barchielli","Bardazzi","Bardelli","Bardi","Barducci","Bargellini","Bargiacchi","Barni","Baroncelli","Baroncini","Barone","Baroni","Baronti","Bartalesi","Bartoletti","Bartoli","Bartolini","Bartoloni","Bartolozzi","Basagni","Basile","Bassi","Batacchi","Battaglia","Battaglini","Bausi","Becagli","Becattini","Becchi","Becucci","Bellandi","Bellesi","Belli","Bellini","Bellucci","Bencini","Benedetti","Benelli","Beni","Benini","Bensi","Benucci","Benvenuti","Berlincioni","Bernacchioni","Bernardi","Bernardini","Berni","Bernini","Bertelli","Berti","Bertini","Bessi","Betti","Bettini","Biagi","Biagini","Biagioni","Biagiotti","Biancalani","Bianchi","Bianchini","Bianco","Biffoli","Bigazzi","Bigi","Biliotti","Billi","Binazzi","Bindi","Bini","Biondi","Bizzarri","Bocci","Bogani","Bolognesi","Bonaiuti","Bonanni","Bonciani","Boncinelli","Bondi","Bonechi","Bongini","Boni","Bonini","Borchi","Boretti","Borghi","Borghini","Borgioli","Borri","Borselli","Boschi","Bottai","Bracci","Braccini","Brandi","Braschi","Bravi","Brazzini","Breschi","Brilli","Brizzi","Brogelli","Brogi","Brogioni","Brunelli","Brunetti","Bruni","Bruno","Brunori","Bruschi","Bucci","Bucciarelli","Buccioni","Bucelli","Bulli","Burberi","Burchi","Burgassi","Burroni","Bussotti","Buti","Caciolli","Caiani","Calabrese","Calamai","Calamandrei","Caldini","Calo'","Calonaci","Calosi","Calvelli","Cambi","Camiciottoli","Cammelli","Cammilli","Campolmi","Cantini","Capanni","Capecchi","Caponi","Cappelletti","Cappelli","Cappellini","Cappugi","Capretti","Caputo","Carbone","Carboni","Cardini","Carlesi","Carletti","Carli","Caroti","Carotti","Carrai","Carraresi","Carta","Caruso","Casalini","Casati","Caselli","Casini","Castagnoli","Castellani","Castelli","Castellucci","Catalano","Catarzi","Catelani","Cavaciocchi","Cavallaro","Cavallini","Cavicchi","Cavini","Ceccarelli","Ceccatelli","Ceccherelli","Ceccherini","Cecchi","Cecchini","Cecconi","Cei","Cellai","Celli","Cellini","Cencetti","Ceni","Cenni","Cerbai","Cesari","Ceseri","Checcacci","Checchi","Checcucci","Cheli","Chellini","Chen","Cheng","Cherici","Cherubini","Chiaramonti","Chiarantini","Chiarelli","Chiari","Chiarini","Chiarugi","Chiavacci","Chiesi","Chimenti","Chini","Chirici","Chiti","Ciabatti","Ciampi","Cianchi","Cianfanelli","Cianferoni","Ciani","Ciapetti","Ciappi","Ciardi","Ciatti","Cicali","Ciccone","Cinelli","Cini","Ciobanu","Ciolli","Cioni","Cipriani","Cirillo","Cirri","Ciucchi","Ciuffi","Ciulli","Ciullini","Clemente","Cocchi","Cognome","Coli","Collini","Colombo","Colzi","Comparini","Conforti","Consigli","Conte","Conti","Contini","Coppini","Coppola","Corsi","Corsini","Corti","Cortini","Cosi","Costa","Costantini","Costantino","Cozzi","Cresci","Crescioli","Cresti","Crini","Curradi","D'Agostino","D'Alessandro","D'Amico","D'Angelo","Daddi","Dainelli","Dallai","Danti","Davitti","De Angelis","De Luca","De Marco","De Rosa","De Santis","De Simone","De Vita","Degl'Innocenti","Degli Innocenti","Dei","Del Lungo","Del Re","Di Marco","Di Stefano","Dini","Diop","Dobre","Dolfi","Donati","Dondoli","Dong","Donnini","Ducci","Dumitru","Ermini","Esposito","Evangelisti","Fabbri","Fabbrini","Fabbrizzi","Fabbroni","Fabbrucci","Fabiani","Facchini","Faggi","Fagioli","Failli","Faini","Falciani","Falcini","Falcone","Fallani","Falorni","Falsini","Falugiani","Fancelli","Fanelli","Fanetti","Fanfani","Fani","Fantappie'","Fantechi","Fanti","Fantini","Fantoni","Farina","Fattori","Favilli","Fedi","Fei","Ferrante","Ferrara","Ferrari","Ferraro","Ferretti","Ferri","Ferrini","Ferroni","Fiaschi","Fibbi","Fiesoli","Filippi","Filippini","Fini","Fioravanti","Fiore","Fiorentini","Fiorini","Fissi","Focardi","Foggi","Fontana","Fontanelli","Fontani","Forconi","Formigli","Forte","Forti","Fortini","Fossati","Fossi","Francalanci","Franceschi","Franceschini","Franchi","Franchini","Franci","Francini","Francioni","Franco","Frassineti","Frati","Fratini","Frilli","Frizzi","Frosali","Frosini","Frullini","Fusco","Fusi","Gabbrielli","Gabellini","Gagliardi","Galanti","Galardi","Galeotti","Galletti","Galli","Gallo","Gallori","Gambacciani","Gargani","Garofalo","Garuglieri","Gashi","Gasperini","Gatti","Gelli","Gensini","Gentile","Gentili","Geri","Gerini","Gheri","Ghini","Giachetti","Giachi","Giacomelli","Gianassi","Giani","Giannelli","Giannetti","Gianni","Giannini","Giannoni","Giannotti","Giannozzi","Gigli","Giordano","Giorgetti","Giorgi","Giovacchini","Giovannelli","Giovannetti","Giovannini","Giovannoni","Giuliani","Giunti","Giuntini","Giusti","Gonnelli","Goretti","Gori","Gradi","Gramigni","Grassi","Grasso","Graziani","Grazzini","Greco","Grifoni","Grillo","Grimaldi","Grossi","Gualtieri","Guarducci","Guarino","Guarnieri","Guasti","Guerra","Guerri","Guerrini","Guidi","Guidotti","He","Hoxha","Hu","Huang","Iandelli","Ignesti","Innocenti","Jin","La Rosa","Lai","Landi","Landini","Lanini","Lapi","Lapini","Lari","Lascialfari","Lastrucci","Latini","Lazzeri","Lazzerini","Lelli","Lenzi","Leonardi","Leoncini","Leone","Leoni","Lepri","Li","Liao","Lin","Linari","Lippi","Lisi","Livi","Lombardi","Lombardini","Lombardo","Longo","Lopez","Lorenzi","Lorenzini","Lorini","Lotti","Lu","Lucchesi","Lucherini","Lunghi","Lupi","Madiai","Maestrini","Maffei","Maggi","Maggini","Magherini","Magini","Magnani","Magnelli","Magni","Magnolfi","Magrini","Malavolti","Malevolti","Manca","Mancini","Manetti","Manfredi","Mangani","Mannelli","Manni","Mannini","Mannucci","Manuelli","Manzini","Marcelli","Marchese","Marchetti","Marchi","Marchiani","Marchionni","Marconi","Marcucci","Margheri","Mari","Mariani","Marilli","Marinai","Marinari","Marinelli","Marini","Marino","Mariotti","Marsili","Martelli","Martinelli","Martini","Martino","Marzi","Masi","Masini","Masoni","Massai","Materassi","Mattei","Matteini","Matteucci","Matteuzzi","Mattioli","Mattolini","Matucci","Mauro","Mazzanti","Mazzei","Mazzetti","Mazzi","Mazzini","Mazzocchi","Mazzoli","Mazzoni","Mazzuoli","Meacci","Mecocci","Meini","Melani","Mele","Meli","Mengoni","Menichetti","Meoni","Merlini","Messeri","Messina","Meucci","Miccinesi","Miceli","Micheli","Michelini","Michelozzi","Migliori","Migliorini","Milani","Miniati","Misuri","Monaco","Montagnani","Montagni","Montanari","Montelatici","Monti","Montigiani","Montini","Morandi","Morandini","Morelli","Moretti","Morganti","Mori","Morini","Moroni","Morozzi","Mugnai","Mugnaini","Mustafa","Naldi","Naldini","Nannelli","Nanni","Nannini","Nannucci","Nardi","Nardini","Nardoni","Natali","Ndiaye","Nencetti","Nencini","Nencioni","Neri","Nesi","Nesti","Niccolai","Niccoli","Niccolini","Nigi","Nistri","Nocentini","Noferini","Novelli","Nucci","Nuti","Nutini","Oliva","Olivieri","Olmi","Orlandi","Orlandini","Orlando","Orsini","Ortolani","Ottanelli","Pacciani","Pace","Paci","Pacini","Pagani","Pagano","Paggetti","Pagliai","Pagni","Pagnini","Paladini","Palagi","Palchetti","Palloni","Palmieri","Palumbo","Pampaloni","Pancani","Pandolfi","Pandolfini","Panerai","Panichi","Paoletti","Paoli","Paolini","Papi","Papini","Papucci","Parenti","Parigi","Parisi","Parri","Parrini","Pasquini","Passeri","Pecchioli","Pecorini","Pellegrini","Pepi","Perini","Perrone","Peruzzi","Pesci","Pestelli","Petri","Petrini","Petrucci","Pettini","Pezzati","Pezzatini","Piani","Piazza","Piazzesi","Piazzini","Piccardi","Picchi","Piccini","Piccioli","Pieraccini","Pieraccioni","Pieralli","Pierattini","Pieri","Pierini","Pieroni","Pietrini","Pini","Pinna","Pinto","Pinzani","Pinzauti","Piras","Pisani","Pistolesi","Poggesi","Poggi","Poggiali","Poggiolini","Poli","Pollastri","Porciani","Pozzi","Pratellesi","Pratesi","Prosperi","Pruneti","Pucci","Puccini","Puccioni","Pugi","Pugliese","Puliti","Querci","Quercioli","Raddi","Radu","Raffaelli","Ragazzini","Ranfagni","Ranieri","Rastrelli","Raugei","Raveggi","Renai","Renzi","Rettori","Ricci","Ricciardi","Ridi","Ridolfi","Rigacci","Righi","Righini","Rinaldi","Risaliti","Ristori","Rizzo","Rocchi","Rocchini","Rogai","Romagnoli","Romanelli","Romani","Romano","Romei","Romeo","Romiti","Romoli","Romolini","Rontini","Rosati","Roselli","Rosi","Rossetti","Rossi","Rossini","Rovai","Ruggeri","Ruggiero","Russo","Sabatini","Saccardi","Sacchetti","Sacchi","Sacco","Salerno","Salimbeni","Salucci","Salvadori","Salvestrini","Salvi","Salvini","Sanesi","Sani","Sanna","Santi","Santini","Santoni","Santoro","Santucci","Sardi","Sarri","Sarti","Sassi","Sbolci","Scali","Scarpelli","Scarselli","Scopetani","Secci","Selvi","Senatori","Senesi","Serafini","Sereni","Serra","Sestini","Sguanci","Sieni","Signorini","Silvestri","Simoncini","Simonetti","Simoni","Singh","Sodi","Soldi","Somigli","Sorbi","Sorelli","Sorrentino","Sottili","Spina","Spinelli","Staccioli","Staderini","Stefanelli","Stefani","Stefanini","Stella","Susini","Tacchi","Tacconi","Taddei","Tagliaferri","Tamburini","Tanganelli","Tani","Tanini","Tapinassi","Tarchi","Tarchiani","Targioni","Tassi","Tassini","Tempesti","Terzani","Tesi","Testa","Testi","Tilli","Tinti","Tirinnanzi","Toccafondi","Tofanari","Tofani","Tognaccini","Tonelli","Tonini","Torelli","Torrini","Tosi","Toti","Tozzi","Trambusti","Trapani","Tucci","Turchi","Ugolini","Ulivi","Valente","Valenti","Valentini","Vangelisti","Vanni","Vannini","Vannoni","Vannozzi","Vannucchi","Vannucci","Ventura","Venturi","Venturini","Vestri","Vettori","Vichi","Viciani","Vieri","Vigiani","Vignoli","Vignolini","Vignozzi","Villani","Vinci","Visani","Vitale","Vitali","Viti","Viviani","Vivoli","Volpe","Volpi","Wang","Wu","Xu","Yang","Ye","Zagli","Zani","Zanieri","Zanobini","Zecchi","Zetti","Zhang","Zheng","Zhou","Zhu","Zingoni","Zini","Zoppi"],nl:["Albers","Alblas","Appelman","Baars","Baas","Bakker","Blank","Bleeker","Blok","Blom","Boer","Boers","Boldewijn","Boon","Boot","Bos","Bosch","Bosma","Bosman","Bouma","Bouman","Bouwman","Brands","Brouwer","Burger","Buijs","Buitenhuis","Ceder","Cohen","Dekker","Dekkers","Dijkman","Dijkstra","Driessen","Drost","Engel","Evers","Faber","Franke","Gerritsen","Goedhart","Goossens","Groen","Groenenberg","Groot","Haan","Hart","Heemskerk","Hendriks","Hermans","Hoekstra","Hofman","Hopman","Huisman","Jacobs","Jansen","Janssen","Jonker","Jaspers","Keijzer","Klaassen","Klein","Koek","Koenders","Kok","Kool","Koopman","Koopmans","Koning","Koster","Kramer","Kroon","Kuijpers","Kuiper","Kuipers","Kurt","Koster","Kwakman","Los","Lubbers","Maas","Markus","Martens","Meijer","Mol","Molenaar","Mulder","Nieuwenhuis","Peeters","Peters","Pengel","Pieters","Pool","Post","Postma","Prins","Pronk","Reijnders","Rietveld","Roest","Roos","Sanders","Schaap","Scheffer","Schenk","Schilder","Schipper","Schmidt","Scholten","Schouten","Schut","Schutte","Schuurman","Simons","Smeets","Smit","Smits","Snel","Swinkels","Tas","Terpstra","Timmermans","Tol","Tromp","Troost","Valk","Veenstra","Veldkamp","Verbeek","Verheul","Verhoeven","Vermeer","Vermeulen","Verweij","Vink","Visser","Voorn","Vos","Wagenaar","Wiersema","Willems","Willemsen","Witteveen","Wolff","Wolters","Zijlstra","Zwart","de Beer","de Boer","de Bruijn","de Bruin","de Graaf","de Groot","de Haan","de Haas","de Jager","de Jong","de Jonge","de Koning","de Lange","de Leeuw","de Ridder","de Rooij","de Ruiter","de Vos","de Vries","de Waal","de Wit","de Zwart","van Beek","van Boven","van Dam","van Dijk","van Dongen","van Doorn","van Egmond","van Eijk","van Es","van Gelder","van Gelderen","van Houten","van Hulst","van Kempen","van Kesteren","van Leeuwen","van Loon","van Mill","van Noord","van Ommen","van Ommeren","van Oosten","van Oostveen","van Rijn","van Schaik","van Veen","van Vliet","van Wijk","van Wijngaarden","van den Poel","van de Pol","van den Ploeg","van de Ven","van den Berg","van den Bosch","van den Brink","van den Broek","van den Heuvel","van der Heijden","van der Horst","van der Hulst","van der Kroon","van der Laan","van der Linden","van der Meer","van der Meij","van der Meulen","van der Molen","van der Sluis","van der Spek","van der Veen","van der Velde","van der Velden","van der Vliet","van der Wal"],uk:["Smith","Jones","Williams","Taylor","Brown","Davies","Evans","Wilson","Thomas","Johnson","Roberts","Robinson","Thompson","Wright","Walker","White","Edwards","Hughes","Green","Hall","Lewis","Harris","Clarke","Patel","Jackson","Wood","Turner","Martin","Cooper","Hill","Ward","Morris","Moore","Clark","Lee","King","Baker","Harrison","Morgan","Allen","James","Scott","Phillips","Watson","Davis","Parker","Price","Bennett","Young","Griffiths","Mitchell","Kelly","Cook","Carter","Richardson","Bailey","Collins","Bell","Shaw","Murphy","Miller","Cox","Richards","Khan","Marshall","Anderson","Simpson","Ellis","Adams","Singh","Begum","Wilkinson","Foster","Chapman","Powell","Webb","Rogers","Gray","Mason","Ali","Hunt","Hussain","Campbell","Matthews","Owen","Palmer","Holmes","Mills","Barnes","Knight","Lloyd","Butler","Russell","Barker","Fisher","Stevens","Jenkins","Murray","Dixon","Harvey","Graham","Pearson","Ahmed","Fletcher","Walsh","Kaur","Gibson","Howard","Andrews","Stewart","Elliott","Reynolds","Saunders","Payne","Fox","Ford","Pearce","Day","Brooks","West","Lawrence","Cole","Atkinson","Bradley","Spencer","Gill","Dawson","Ball","Burton","O'brien","Watts","Rose","Booth","Perry","Ryan","Grant","Wells","Armstrong","Francis","Rees","Hayes","Hart","Hudson","Newman","Barrett","Webster","Hunter","Gregory","Carr","Lowe","Page","Marsh","Riley","Dunn","Woods","Parsons","Berry","Stone","Reid","Holland","Hawkins","Harding","Porter","Robertson","Newton","Oliver","Reed","Kennedy","Williamson","Bird","Gardner","Shah","Dean","Lane","Cooke","Bates","Henderson","Parry","Burgess","Bishop","Walton","Burns","Nicholson","Shepherd","Ross","Cross","Long","Freeman","Warren","Nicholls","Hamilton","Byrne","Sutton","Mcdonald","Yates","Hodgson","Robson","Curtis","Hopkins","O'connor","Harper","Coleman","Watkins","Moss","Mccarthy","Chambers","O'neill","Griffin","Sharp","Hardy","Wheeler","Potter","Osborne","Johnston","Gordon","Doyle","Wallace","George","Jordan","Hutchinson","Rowe","Burke","May","Pritchard","Gilbert","Willis","Higgins","Read","Miles","Stevenson","Stephenson","Hammond","Arnold","Buckley","Walters","Hewitt","Barber","Nelson","Slater","Austin","Sullivan","Whitehead","Mann","Frost","Lambert","Stephens","Blake","Akhtar","Lynch","Goodwin","Barton","Woodward","Thomson","Cunningham","Quinn","Barnett","Baxter","Bibi","Clayton","Nash","Greenwood","Jennings","Holt","Kemp","Poole","Gallagher","Bond","Stokes","Tucker","Davidson","Fowler","Heath","Norman","Middleton","Lawson","Banks","French","Stanley","Jarvis","Gibbs","Ferguson","Hayward","Carroll","Douglas","Dickinson","Todd","Barlow","Peters","Lucas","Knowles","Hartley","Miah","Simmons","Morton","Alexander","Field","Morrison","Norris","Townsend","Preston","Hancock","Thornton","Baldwin","Burrows","Briggs","Parkinson","Reeves","Macdonald","Lamb","Black","Abbott","Sanders","Thorpe","Holden","Tomlinson","Perkins","Ashton","Rhodes","Fuller","Howe","Bryant","Vaughan","Dale","Davey","Weston","Bartlett","Whittaker","Davison","Kent","Skinner","Birch","Morley","Daniels","Glover","Howell","Cartwright","Pugh","Humphreys","Goddard","Brennan","Wall","Kirby","Bowen","Savage","Bull","Wong","Dobson","Smart","Wilkins","Kirk","Fraser","Duffy","Hicks","Patterson","Bradshaw","Little","Archer","Warner","Waters","O'sullivan","Farrell","Brookes","Atkins","Kay","Dodd","Bentley","Flynn","John","Schofield","Short","Haynes","Wade","Butcher","Henry","Sanderson","Crawford","Sheppard","Bolton","Coates","Giles","Gould","Houghton","Gibbons","Pratt","Manning","Law","Hooper","Noble","Dyer","Rahman","Clements","Moran","Sykes","Chan","Doherty","Connolly","Joyce","Franklin","Hobbs","Coles","Herbert","Steele","Kerr","Leach","Winter","Owens","Duncan","Naylor","Fleming","Horton","Finch","Fitzgerald","Randall","Carpenter","Marsden","Browne","Garner","Pickering","Hale","Dennis","Vincent","Chadwick","Chandler","Sharpe","Nolan","Lyons","Hurst","Collier","Peacock","Howarth","Faulkner","Rice","Pollard","Welch","Norton","Gough","Sinclair","Blackburn","Bryan","Conway","Power","Cameron","Daly","Allan","Hanson","Gardiner","Boyle","Myers","Turnbull","Wallis","Mahmood","Sims","Swift","Iqbal","Pope","Brady","Chamberlain","Rowley","Tyler","Farmer","Metcalfe","Hilton","Godfrey","Holloway","Parkin","Bray","Talbot","Donnelly","Nixon","Charlton","Benson","Whitehouse","Barry","Hope","Lord","North","Storey","Connor","Potts","Bevan","Hargreaves","Mclean","Mistry","Bruce","Howells","Hyde","Parkes","Wyatt","Fry","Lees","O'donnell","Craig","Forster","Mckenzie","Humphries","Mellor","Carey","Ingram","Summers","Leonard"],de:["MÃ¼ller","Schmidt","Schneider","Fischer","Weber","Meyer","Wagner","Becker","Schulz","Hoffmann","SchÃ¤fer","Koch","Bauer","Richter","Klein","Wolf","SchrÃ¶der","Neumann","Schwarz","Zimmermann","Braun","KrÃ¼ger","Hofmann","Hartmann","Lange","Schmitt","Werner","Schmitz","Krause","Meier","Lehmann","Schmid","Schulze","Maier","KÃ¶hler","Herrmann","KÃ¶nig","Walter","Mayer","Huber","Kaiser","Fuchs","Peters","Lang","Scholz","MÃ¶ller","WeiÃ","Jung","Hahn","Schubert","Vogel","Friedrich","Keller","GÃ¼nther","Frank","Berger","Winkler","Roth","Beck","Lorenz","Baumann","Franke","Albrecht","Schuster","Simon","Ludwig","BÃ¶hm","Winter","Kraus","Martin","Schumacher","KrÃ¤mer","Vogt","Stein","JÃ¤ger","Otto","Sommer","GroÃ","Seidel","Heinrich","Brandt","Haas","Schreiber","Graf","Schulte","Dietrich","Ziegler","Kuhn","KÃ¼hn","Pohl","Engel","Horn","Busch","Bergmann","Thomas","Voigt","Sauer","Arnold","Wolff","Pfeiffer"],jp:["Sato","Suzuki","Takahashi","Tanaka","Watanabe","Ito","Yamamoto","Nakamura","Kobayashi","Kato","Yoshida","Yamada","Sasaki","Yamaguchi","Saito","Matsumoto","Inoue","Kimura","Hayashi","Shimizu","Yamazaki","Mori","Abe","Ikeda","Hashimoto","Yamashita","Ishikawa","Nakajima","Maeda","Fujita","Ogawa","Goto","Okada","Hasegawa","Murakami","Kondo","Ishii","Saito","Sakamoto","Endo","Aoki","Fujii","Nishimura","Fukuda","Ota","Miura","Fujiwara","Okamoto","Matsuda","Nakagawa","Nakano","Harada","Ono","Tamura","Takeuchi","Kaneko","Wada","Nakayama","Ishida","Ueda","Morita","Hara","Shibata","Sakai","Kudo","Yokoyama","Miyazaki","Miyamoto","Uchida","Takagi","Ando","Taniguchi","Ohno","Maruyama","Imai","Takada","Fujimoto","Takeda","Murata","Ueno","Sugiyama","Masuda","Sugawara","Hirano","Kojima","Otsuka","Chiba","Kubo","Matsui","Iwasaki","Sakurai","Kinoshita","Noguchi","Matsuo","Nomura","Kikuchi","Sano","Onishi","Sugimoto","Arai"],es:["Garcia","Fernandez","Lopez","Martinez","Gonzalez","Rodriguez","Sanchez","Perez","Martin","Gomez","Ruiz","Diaz","Hernandez","Alvarez","Jimenez","Moreno","Munoz","Alonso","Romero","Navarro","Gutierrez","Torres","Dominguez","Gil","Vazquez","Blanco","Serrano","Ramos","Castro","Suarez","Sanz","Rubio","Ortega","Molina","Delgado","Ortiz","Morales","Ramirez","Marin","Iglesias","Santos","Castillo","Garrido","Calvo","Pena","Cruz","Cano","Nunez","Prieto","Diez","Lozano","Vidal","Pascual","Ferrer","Medina","Vega","Leon","Herrero","Vicente","Mendez","Guerrero","Fuentes","Campos","Nieto","Cortes","Caballero","Ibanez","Lorenzo","Pastor","Gimenez","Saez","Soler","Marquez","Carrasco","Herrera","Montero","Arias","Crespo","Flores","Andres","Aguilar","Hidalgo","Cabrera","Mora","Duran","Velasco","Rey","Pardo","Roman","Vila","Bravo","Merino","Moya","Soto","Izquierdo","Reyes","Redondo","Marcos","Carmona","Menendez"],fr:["Martin","Bernard","Thomas","Petit","Robert","Richard","Durand","Dubois","Moreau","Laurent","Simon","Michel","LefÃ¨vre","Leroy","Roux","David","Bertrand","Morel","Fournier","Girard","Bonnet","Dupont","Lambert","Fontaine","Rousseau","Vincent","MÃ¼ller","LefÃ¨vre","Faure","AndrÃ©","Mercier","Blanc","GuÃ©rin","Boyer","Garnier","Chevalier","FranÃ§ois","Legrand","Gauthier","Garcia","Perrin","Robin","ClÃ©ment","Morin","Nicolas","Henry","Roussel","Matthieu","Gautier","Masson","Marchand","Duval","Denis","Dumont","Marie","Lemaire","NoÃ«l","Meyer","Dufour","Meunier","Brun","Blanchard","Giraud","Joly","RiviÃ¨re","Lucas","Brunet","Gaillard","Barbier","Arnaud","MartÃ­nez","GÃ©rard","Roche","Renard","Schmitt","Roy","Leroux","Colin","Vidal","Caron","Picard","Roger","Fabre","Aubert","Lemoine","Renaud","Dumas","Lacroix","Olivier","Philippe","Bourgeois","Pierre","BenoÃ®t","Rey","Leclerc","Payet","Rolland","Leclercq","Guillaume","Lecomte","LÃ³pez","Jean","Dupuy","Guillot","Hubert","Berger","Carpentier","SÃ¡nchez","Dupuis","Moulin","Louis","Deschamps","Huet","Vasseur","Perez","Boucher","Fleury","Royer","Klein","Jacquet","Adam","Paris","Poirier","Marty","Aubry","Guyot","CarrÃ©","Charles","Renault","Charpentier","MÃ©nard","Maillard","Baron","Bertin","Bailly","HervÃ©","Schneider","FernÃ¡ndez","Le GallGall","Collet","LÃ©ger","Bouvier","Julien","PrÃ©vost","Millet","Perrot","Daniel","Le RouxRoux","Cousin","Germain","Breton","Besson","Langlois","RÃ©mi","Le GoffGoff","Pelletier","LÃ©vÃªque","Perrier","Leblanc","BarrÃ©","Lebrun","Marchal","Weber","Mallet","Hamon","Boulanger","Jacob","Monnier","Michaud","RodrÃ­guez","Guichard","Gillet","Ãtienne","Grondin","Poulain","Tessier","Chevallier","Collin","Chauvin","Da SilvaSilva","Bouchet","Gay","LemaÃ®tre","BÃ©nard","MarÃ©chal","Humbert","Reynaud","Antoine","Hoarau","Perret","BarthÃ©lemy","Cordier","Pichon","Lejeune","Gilbert","Lamy","Delaunay","Pasquier","Carlier","LaporteLaporte"]},postcodeAreas:[{code:"AB"},{code:"AL"},{code:"B"},{code:"BA"},{code:"BB"},{code:"BD"},{code:"BH"},{code:"BL"},{code:"BN"},{code:"BR"},{code:"BS"},{code:"BT"},{code:"CA"},{code:"CB"},{code:"CF"},{code:"CH"},{code:"CM"},{code:"CO"},{code:"CR"},{code:"CT"},{code:"CV"},{code:"CW"},{code:"DA"},{code:"DD"},{code:"DE"},{code:"DG"},{code:"DH"},{code:"DL"},{code:"DN"},{code:"DT"},{code:"DY"},{code:"E"},{code:"EC"},{code:"EH"},{code:"EN"},{code:"EX"},{code:"FK"},{code:"FY"},{code:"G"},{code:"GL"},{code:"GU"},{code:"GY"},{code:"HA"},{code:"HD"},{code:"HG"},{code:"HP"},{code:"HR"},{code:"HS"},{code:"HU"},{code:"HX"},{code:"IG"},{code:"IM"},{code:"IP"},{code:"IV"},{code:"JE"},{code:"KA"},{code:"KT"},{code:"KW"},{code:"KY"},{code:"L"},{code:"LA"},{code:"LD"},{code:"LE"},{code:"LL"},{code:"LN"},{code:"LS"},{code:"LU"},{code:"M"},{code:"ME"},{code:"MK"},{code:"ML"},{code:"N"},{code:"NE"},{code:"NG"},{code:"NN"},{code:"NP"},{code:"NR"},{code:"NW"},{code:"OL"},{code:"OX"},{code:"PA"},{code:"PE"},{code:"PH"},{code:"PL"},{code:"PO"},{code:"PR"},{code:"RG"},{code:"RH"},{code:"RM"},{code:"S"},{code:"SA"},{code:"SE"},{code:"SG"},{code:"SK"},{code:"SL"},{code:"SM"},{code:"SN"},{code:"SO"},{code:"SP"},{code:"SR"},{code:"SS"},{code:"ST"},{code:"SW"},{code:"SY"},{code:"TA"},{code:"TD"},{code:"TF"},{code:"TN"},{code:"TQ"},{code:"TR"},{code:"TS"},{code:"TW"},{code:"UB"},{code:"W"},{code:"WA"},{code:"WC"},{code:"WD"},{code:"WF"},{code:"WN"},{code:"WR"},{code:"WS"},{code:"WV"},{code:"YO"},{code:"ZE"}],countries:[{name:"Afghanistan",abbreviation:"AF"},{name:"Ãland Islands",abbreviation:"AX"},{name:"Albania",abbreviation:"AL"},{name:"Algeria",abbreviation:"DZ"},{name:"American Samoa",abbreviation:"AS"},{name:"Andorra",abbreviation:"AD"},{name:"Angola",abbreviation:"AO"},{name:"Anguilla",abbreviation:"AI"},{name:"Antarctica",abbreviation:"AQ"},{name:"Antigua & Barbuda",abbreviation:"AG"},{name:"Argentina",abbreviation:"AR"},{name:"Armenia",abbreviation:"AM"},{name:"Aruba",abbreviation:"AW"},{name:"Ascension Island",abbreviation:"AC"},{name:"Australia",abbreviation:"AU"},{name:"Austria",abbreviation:"AT"},{name:"Azerbaijan",abbreviation:"AZ"},{name:"Bahamas",abbreviation:"BS"},{name:"Bahrain",abbreviation:"BH"},{name:"Bangladesh",abbreviation:"BD"},{name:"Barbados",abbreviation:"BB"},{name:"Belarus",abbreviation:"BY"},{name:"Belgium",abbreviation:"BE"},{name:"Belize",abbreviation:"BZ"},{name:"Benin",abbreviation:"BJ"},{name:"Bermuda",abbreviation:"BM"},{name:"Bhutan",abbreviation:"BT"},{name:"Bolivia",abbreviation:"BO"},{name:"Bosnia & Herzegovina",abbreviation:"BA"},{name:"Botswana",abbreviation:"BW"},{name:"Brazil",abbreviation:"BR"},{name:"British Indian Ocean Territory",abbreviation:"IO"},{name:"British Virgin Islands",abbreviation:"VG"},{name:"Brunei",abbreviation:"BN"},{name:"Bulgaria",abbreviation:"BG"},{name:"Burkina Faso",abbreviation:"BF"},{name:"Burundi",abbreviation:"BI"},{name:"Cambodia",abbreviation:"KH"},{name:"Cameroon",abbreviation:"CM"},{name:"Canada",abbreviation:"CA"},{name:"Canary Islands",abbreviation:"IC"},{name:"Cape Verde",abbreviation:"CV"},{name:"Caribbean Netherlands",abbreviation:"BQ"},{name:"Cayman Islands",abbreviation:"KY"},{name:"Central African Republic",abbreviation:"CF"},{name:"Ceuta & Melilla",abbreviation:"EA"},{name:"Chad",abbreviation:"TD"},{name:"Chile",abbreviation:"CL"},{name:"China",abbreviation:"CN"},{name:"Christmas Island",abbreviation:"CX"},{name:"Cocos (Keeling) Islands",abbreviation:"CC"},{name:"Colombia",abbreviation:"CO"},{name:"Comoros",abbreviation:"KM"},{name:"Congo - Brazzaville",abbreviation:"CG"},{name:"Congo - Kinshasa",abbreviation:"CD"},{name:"Cook Islands",abbreviation:"CK"},{name:"Costa Rica",abbreviation:"CR"},{name:"CÃ´te d'Ivoire",abbreviation:"CI"},{name:"Croatia",abbreviation:"HR"},{name:"Cuba",abbreviation:"CU"},{name:"CuraÃ§ao",abbreviation:"CW"},{name:"Cyprus",abbreviation:"CY"},{name:"Czech Republic",abbreviation:"CZ"},{name:"Denmark",abbreviation:"DK"},{name:"Diego Garcia",abbreviation:"DG"},{name:"Djibouti",abbreviation:"DJ"},{name:"Dominica",abbreviation:"DM"},{name:"Dominican Republic",abbreviation:"DO"},{name:"Ecuador",abbreviation:"EC"},{name:"Egypt",abbreviation:"EG"},{name:"El Salvador",abbreviation:"SV"},{name:"Equatorial Guinea",abbreviation:"GQ"},{name:"Eritrea",abbreviation:"ER"},{name:"Estonia",abbreviation:"EE"},{name:"Ethiopia",abbreviation:"ET"},{name:"Falkland Islands",abbreviation:"FK"},{name:"Faroe Islands",abbreviation:"FO"},{name:"Fiji",abbreviation:"FJ"},{name:"Finland",abbreviation:"FI"},{name:"France",abbreviation:"FR"},{name:"French Guiana",abbreviation:"GF"},{name:"French Polynesia",abbreviation:"PF"},{name:"French Southern Territories",abbreviation:"TF"},{name:"Gabon",abbreviation:"GA"},{name:"Gambia",abbreviation:"GM"},{name:"Georgia",abbreviation:"GE"},{name:"Germany",abbreviation:"DE"},{name:"Ghana",abbreviation:"GH"},{name:"Gibraltar",abbreviation:"GI"},{name:"Greece",abbreviation:"GR"},{name:"Greenland",abbreviation:"GL"},{name:"Grenada",abbreviation:"GD"},{name:"Guadeloupe",abbreviation:"GP"},{name:"Guam",abbreviation:"GU"},{name:"Guatemala",abbreviation:"GT"},{name:"Guernsey",abbreviation:"GG"},{name:"Guinea",abbreviation:"GN"},{name:"Guinea-Bissau",abbreviation:"GW"},{name:"Guyana",abbreviation:"GY"},{name:"Haiti",abbreviation:"HT"},{name:"Honduras",abbreviation:"HN"},{name:"Hong Kong SAR China",abbreviation:"HK"},{name:"Hungary",abbreviation:"HU"},{name:"Iceland",abbreviation:"IS"},{name:"India",abbreviation:"IN"},{name:"Indonesia",abbreviation:"ID"},{name:"Iran",abbreviation:"IR"},{name:"Iraq",abbreviation:"IQ"},{name:"Ireland",abbreviation:"IE"},{name:"Isle of Man",abbreviation:"IM"},{name:"Israel",abbreviation:"IL"},{name:"Italy",abbreviation:"IT"},{name:"Jamaica",abbreviation:"JM"},{name:"Japan",abbreviation:"JP"},{name:"Jersey",abbreviation:"JE"},{name:"Jordan",abbreviation:"JO"},{name:"Kazakhstan",abbreviation:"KZ"},{name:"Kenya",abbreviation:"KE"},{name:"Kiribati",abbreviation:"KI"},{name:"Kosovo",abbreviation:"XK"},{name:"Kuwait",abbreviation:"KW"},{name:"Kyrgyzstan",abbreviation:"KG"},{name:"Laos",abbreviation:"LA"},{name:"Latvia",abbreviation:"LV"},{name:"Lebanon",abbreviation:"LB"},{name:"Lesotho",abbreviation:"LS"},{name:"Liberia",abbreviation:"LR"},{name:"Libya",abbreviation:"LY"},{name:"Liechtenstein",abbreviation:"LI"},{name:"Lithuania",abbreviation:"LT"},{name:"Luxembourg",abbreviation:"LU"},{name:"Macau SAR China",abbreviation:"MO"},{name:"Macedonia",abbreviation:"MK"},{name:"Madagascar",abbreviation:"MG"},{name:"Malawi",abbreviation:"MW"},{name:"Malaysia",abbreviation:"MY"},{name:"Maldives",abbreviation:"MV"},{name:"Mali",abbreviation:"ML"},{name:"Malta",abbreviation:"MT"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Martinique",abbreviation:"MQ"},{name:"Mauritania",abbreviation:"MR"},{name:"Mauritius",abbreviation:"MU"},{name:"Mayotte",abbreviation:"YT"},{name:"Mexico",abbreviation:"MX"},{name:"Micronesia",abbreviation:"FM"},{name:"Moldova",abbreviation:"MD"},{name:"Monaco",abbreviation:"MC"},{name:"Mongolia",abbreviation:"MN"},{name:"Montenegro",abbreviation:"ME"},{name:"Montserrat",abbreviation:"MS"},{name:"Morocco",abbreviation:"MA"},{name:"Mozambique",abbreviation:"MZ"},{name:"Myanmar (Burma)",abbreviation:"MM"},{name:"Namibia",abbreviation:"NA"},{name:"Nauru",abbreviation:"NR"},{name:"Nepal",abbreviation:"NP"},{name:"Netherlands",abbreviation:"NL"},{name:"New Caledonia",abbreviation:"NC"},{name:"New Zealand",abbreviation:"NZ"},{name:"Nicaragua",abbreviation:"NI"},{name:"Niger",abbreviation:"NE"},{name:"Nigeria",abbreviation:"NG"},{name:"Niue",abbreviation:"NU"},{name:"Norfolk Island",abbreviation:"NF"},{name:"North Korea",abbreviation:"KP"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Norway",abbreviation:"NO"},{name:"Oman",abbreviation:"OM"},{name:"Pakistan",abbreviation:"PK"},{name:"Palau",abbreviation:"PW"},{name:"Palestinian Territories",abbreviation:"PS"},{name:"Panama",abbreviation:"PA"},{name:"Papua New Guinea",abbreviation:"PG"},{name:"Paraguay",abbreviation:"PY"},{name:"Peru",abbreviation:"PE"},{name:"Philippines",abbreviation:"PH"},{name:"Pitcairn Islands",abbreviation:"PN"},{name:"Poland",abbreviation:"PL"},{name:"Portugal",abbreviation:"PT"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Qatar",abbreviation:"QA"},{name:"RÃ©union",abbreviation:"RE"},{name:"Romania",abbreviation:"RO"},{name:"Russia",abbreviation:"RU"},{name:"Rwanda",abbreviation:"RW"},{name:"Samoa",abbreviation:"WS"},{name:"San Marino",abbreviation:"SM"},{name:"SÃ£o TomÃ© and PrÃ­ncipe",abbreviation:"ST"},{name:"Saudi Arabia",abbreviation:"SA"},{name:"Senegal",abbreviation:"SN"},{name:"Serbia",abbreviation:"RS"},{name:"Seychelles",abbreviation:"SC"},{name:"Sierra Leone",abbreviation:"SL"},{name:"Singapore",abbreviation:"SG"},{name:"Sint Maarten",abbreviation:"SX"},{name:"Slovakia",abbreviation:"SK"},{name:"Slovenia",abbreviation:"SI"},{name:"Solomon Islands",abbreviation:"SB"},{name:"Somalia",abbreviation:"SO"},{name:"South Africa",abbreviation:"ZA"},{name:"South Georgia & South Sandwich Islands",abbreviation:"GS"},{name:"South Korea",abbreviation:"KR"},{name:"South Sudan",abbreviation:"SS"},{name:"Spain",abbreviation:"ES"},{name:"Sri Lanka",abbreviation:"LK"},{name:"St. BarthÃ©lemy",abbreviation:"BL"},{name:"St. Helena",abbreviation:"SH"},{name:"St. Kitts & Nevis",abbreviation:"KN"},{name:"St. Lucia",abbreviation:"LC"},{name:"St. Martin",abbreviation:"MF"},{name:"St. Pierre & Miquelon",abbreviation:"PM"},{name:"St. Vincent & Grenadines",abbreviation:"VC"},{name:"Sudan",abbreviation:"SD"},{name:"Suriname",abbreviation:"SR"},{name:"Svalbard & Jan Mayen",abbreviation:"SJ"},{name:"Swaziland",abbreviation:"SZ"},{name:"Sweden",abbreviation:"SE"},{name:"Switzerland",abbreviation:"CH"},{name:"Syria",abbreviation:"SY"},{name:"Taiwan",abbreviation:"TW"},{name:"Tajikistan",abbreviation:"TJ"},{name:"Tanzania",abbreviation:"TZ"},{name:"Thailand",abbreviation:"TH"},{name:"Timor-Leste",abbreviation:"TL"},{name:"Togo",abbreviation:"TG"},{name:"Tokelau",abbreviation:"TK"},{name:"Tonga",abbreviation:"TO"},{name:"Trinidad & Tobago",abbreviation:"TT"},{name:"Tristan da Cunha",abbreviation:"TA"},{name:"Tunisia",abbreviation:"TN"},{name:"Turkey",abbreviation:"TR"},{name:"Turkmenistan",abbreviation:"TM"},{name:"Turks & Caicos Islands",abbreviation:"TC"},{name:"Tuvalu",abbreviation:"TV"},{name:"U.S. Outlying Islands",abbreviation:"UM"},{name:"U.S. Virgin Islands",abbreviation:"VI"},{name:"Uganda",abbreviation:"UG"},{name:"Ukraine",abbreviation:"UA"},{name:"United Arab Emirates",abbreviation:"AE"},{name:"United Kingdom",abbreviation:"GB"},{name:"United States",abbreviation:"US"},{name:"Uruguay",abbreviation:"UY"},{name:"Uzbekistan",abbreviation:"UZ"},{name:"Vanuatu",abbreviation:"VU"},{name:"Vatican City",abbreviation:"VA"},{name:"Venezuela",abbreviation:"VE"},{name:"Vietnam",abbreviation:"VN"},{name:"Wallis & Futuna",abbreviation:"WF"},{name:"Western Sahara",abbreviation:"EH"},{name:"Yemen",abbreviation:"YE"},{name:"Zambia",abbreviation:"ZM"},{name:"Zimbabwe",abbreviation:"ZW"}],counties:{uk:[{name:"Bath and North East Somerset"},{name:"Aberdeenshire"},{name:"Anglesey"},{name:"Angus"},{name:"Bedford"},{name:"Blackburn with Darwen"},{name:"Blackpool"},{name:"Bournemouth"},{name:"Bracknell Forest"},{name:"Brighton & Hove"},{name:"Bristol"},{name:"Buckinghamshire"},{name:"Cambridgeshire"},{name:"Carmarthenshire"},{name:"Central Bedfordshire"},{name:"Ceredigion"},{name:"Cheshire East"},{name:"Cheshire West and Chester"},{name:"Clackmannanshire"},{name:"Conwy"},{name:"Cornwall"},{name:"County Antrim"},{name:"County Armagh"},{name:"County Down"},{name:"County Durham"},{name:"County Fermanagh"},{name:"County Londonderry"},{name:"County Tyrone"},{name:"Cumbria"},{name:"Darlington"},{name:"Denbighshire"},{name:"Derby"},{name:"Derbyshire"},{name:"Devon"},{name:"Dorset"},{name:"Dumfries and Galloway"},{name:"Dundee"},{name:"East Lothian"},{name:"East Riding of Yorkshire"},{name:"East Sussex"},{name:"Edinburgh?"},{name:"Essex"},{name:"Falkirk"},{name:"Fife"},{name:"Flintshire"},{name:"Gloucestershire"},{name:"Greater London"},{name:"Greater Manchester"},{name:"Gwent"},{name:"Gwynedd"},{name:"Halton"},{name:"Hampshire"},{name:"Hartlepool"},{name:"Herefordshire"},{name:"Hertfordshire"},{name:"Highlands"},{name:"Hull"},{name:"Isle of Wight"},{name:"Isles of Scilly"},{name:"Kent"},{name:"Lancashire"},{name:"Leicester"},{name:"Leicestershire"},{name:"Lincolnshire"},{name:"Lothian"},{name:"Luton"},{name:"Medway"},{name:"Merseyside"},{name:"Mid Glamorgan"},{name:"Middlesbrough"},{name:"Milton Keynes"},{name:"Monmouthshire"},{name:"Moray"},{name:"Norfolk"},{name:"North East Lincolnshire"},{name:"North Lincolnshire"},{name:"North Somerset"},{name:"North Yorkshire"},{name:"Northamptonshire"},{name:"Northumberland"},{name:"Nottingham"},{name:"Nottinghamshire"},{name:"Oxfordshire"},{name:"Pembrokeshire"},{name:"Perth and Kinross"},{name:"Peterborough"},{name:"Plymouth"},{name:"Poole"},{name:"Portsmouth"},{name:"Powys"},{name:"Reading"},{name:"Redcar and Cleveland"},{name:"Rutland"},{name:"Scottish Borders"},{name:"Shropshire"},{name:"Slough"},{name:"Somerset"},{name:"South Glamorgan"},{name:"South Gloucestershire"},{name:"South Yorkshire"},{name:"Southampton"},{name:"Southend-on-Sea"},{name:"Staffordshire"},{name:"Stirlingshire"},{name:"Stockton-on-Tees"},{name:"Stoke-on-Trent"},{name:"Strathclyde"},{name:"Suffolk"},{name:"Surrey"},{name:"Swindon"},{name:"Telford and Wrekin"},{name:"Thurrock"},{name:"Torbay"},{name:"Tyne and Wear"},{name:"Warrington"},{name:"Warwickshire"},{name:"West Berkshire"},{name:"West Glamorgan"},{name:"West Lothian"},{name:"West Midlands"},{name:"West Sussex"},{name:"West Yorkshire"},{name:"Western Isles"},{name:"Wiltshire"},{name:"Windsor and Maidenhead"},{name:"Wokingham"},{name:"Worcestershire"},{name:"Wrexham"},{name:"York"}]},provinces:{ca:[{name:"Alberta",abbreviation:"AB"},{name:"British Columbia",abbreviation:"BC"},{name:"Manitoba",abbreviation:"MB"},{name:"New Brunswick",abbreviation:"NB"},{name:"Newfoundland and Labrador",abbreviation:"NL"},{name:"Nova Scotia",abbreviation:"NS"},{name:"Ontario",abbreviation:"ON"},{name:"Prince Edward Island",abbreviation:"PE"},{name:"Quebec",abbreviation:"QC"},{name:"Saskatchewan",abbreviation:"SK"},{name:"Northwest Territories",abbreviation:"NT"},{name:"Nunavut",abbreviation:"NU"},{name:"Yukon",abbreviation:"YT"}],it:[{name:"Agrigento",abbreviation:"AG",code:84},{name:"Alessandria",abbreviation:"AL",code:6},{name:"Ancona",abbreviation:"AN",code:42},{name:"Aosta",abbreviation:"AO",code:7},{name:"L'Aquila",abbreviation:"AQ",code:66},{name:"Arezzo",abbreviation:"AR",code:51},{name:"Ascoli-Piceno",abbreviation:"AP",code:44},{name:"Asti",abbreviation:"AT",code:5},{name:"Avellino",abbreviation:"AV",code:64},{name:"Bari",abbreviation:"BA",code:72},{name:"Barletta-Andria-Trani",abbreviation:"BT",code:72},{name:"Belluno",abbreviation:"BL",code:25},{name:"Benevento",abbreviation:"BN",code:62},{name:"Bergamo",abbreviation:"BG",code:16},{name:"Biella",abbreviation:"BI",code:96},{name:"Bologna",abbreviation:"BO",code:37},{name:"Bolzano",abbreviation:"BZ",code:21},{name:"Brescia",abbreviation:"BS",code:17},{name:"Brindisi",abbreviation:"BR",code:74},{name:"Cagliari",abbreviation:"CA",code:92},{name:"Caltanissetta",abbreviation:"CL",code:85},{name:"Campobasso",abbreviation:"CB",code:70},{name:"Carbonia Iglesias",abbreviation:"CI",code:70},{name:"Caserta",abbreviation:"CE",code:61},{name:"Catania",abbreviation:"CT",code:87},{name:"Catanzaro",abbreviation:"CZ",code:79},{name:"Chieti",abbreviation:"CH",code:69},{name:"Como",abbreviation:"CO",code:13},{name:"Cosenza",abbreviation:"CS",code:78},{name:"Cremona",abbreviation:"CR",code:19},{name:"Crotone",abbreviation:"KR",code:101},{name:"Cuneo",abbreviation:"CN",code:4},{name:"Enna",abbreviation:"EN",code:86},{name:"Fermo",abbreviation:"FM",code:86},{name:"Ferrara",abbreviation:"FE",code:38},{name:"Firenze",abbreviation:"FI",code:48},{name:"Foggia",abbreviation:"FG",code:71},{name:"Forli-Cesena",abbreviation:"FC",code:71},{name:"Frosinone",abbreviation:"FR",code:60},{name:"Genova",abbreviation:"GE",code:10},{name:"Gorizia",abbreviation:"GO",code:31},{name:"Grosseto",abbreviation:"GR",code:53},{name:"Imperia",abbreviation:"IM",code:8},{name:"Isernia",abbreviation:"IS",code:94},{name:"La-Spezia",abbreviation:"SP",code:66},{name:"Latina",abbreviation:"LT",code:59},{name:"Lecce",abbreviation:"LE",code:75},{name:"Lecco",abbreviation:"LC",code:97},{name:"Livorno",abbreviation:"LI",code:49},{name:"Lodi",abbreviation:"LO",code:98},{name:"Lucca",abbreviation:"LU",code:46},{name:"Macerata",abbreviation:"MC",code:43},{name:"Mantova",abbreviation:"MN",code:20},{name:"Massa-Carrara",abbreviation:"MS",code:45},{name:"Matera",abbreviation:"MT",code:77},{name:"Medio Campidano",abbreviation:"VS",code:77},{name:"Messina",abbreviation:"ME",code:83},{name:"Milano",abbreviation:"MI",code:15},{name:"Modena",abbreviation:"MO",code:36},{name:"Monza-Brianza",abbreviation:"MB",code:36},{name:"Napoli",abbreviation:"NA",code:63},{name:"Novara",abbreviation:"NO",code:3},{name:"Nuoro",abbreviation:"NU",code:91},{name:"Ogliastra",abbreviation:"OG",code:91},{name:"Olbia Tempio",abbreviation:"OT",code:91},{name:"Oristano",abbreviation:"OR",code:95},{name:"Padova",abbreviation:"PD",code:28},{name:"Palermo",abbreviation:"PA",code:82},{name:"Parma",abbreviation:"PR",code:34},{name:"Pavia",abbreviation:"PV",code:18},{name:"Perugia",abbreviation:"PG",code:54},{name:"Pesaro-Urbino",abbreviation:"PU",code:41},{name:"Pescara",abbreviation:"PE",code:68},{name:"Piacenza",abbreviation:"PC",code:33},{name:"Pisa",abbreviation:"PI",code:50},{name:"Pistoia",abbreviation:"PT",code:47},{name:"Pordenone",abbreviation:"PN",code:93},{name:"Potenza",abbreviation:"PZ",code:76},{name:"Prato",abbreviation:"PO",code:100},{name:"Ragusa",abbreviation:"RG",code:88},{name:"Ravenna",abbreviation:"RA",code:39},{name:"Reggio-Calabria",abbreviation:"RC",code:35},{name:"Reggio-Emilia",abbreviation:"RE",code:35},{name:"Rieti",abbreviation:"RI",code:57},{name:"Rimini",abbreviation:"RN",code:99},{name:"Roma",abbreviation:"Roma",code:58},{name:"Rovigo",abbreviation:"RO",code:29},{name:"Salerno",abbreviation:"SA",code:65},{name:"Sassari",abbreviation:"SS",code:90},{name:"Savona",abbreviation:"SV",code:9},{name:"Siena",abbreviation:"SI",code:52},{name:"Siracusa",abbreviation:"SR",code:89},{name:"Sondrio",abbreviation:"SO",code:14},{name:"Taranto",abbreviation:"TA",code:73},{name:"Teramo",abbreviation:"TE",code:67},{name:"Terni",abbreviation:"TR",code:55},{name:"Torino",abbreviation:"TO",code:1},{name:"Trapani",abbreviation:"TP",code:81},{name:"Trento",abbreviation:"TN",code:22},{name:"Treviso",abbreviation:"TV",code:26},{name:"Trieste",abbreviation:"TS",code:32},{name:"Udine",abbreviation:"UD",code:30},{name:"Varese",abbreviation:"VA",code:12},{name:"Venezia",abbreviation:"VE",code:27},{name:"Verbania",abbreviation:"VB",code:27},{name:"Vercelli",abbreviation:"VC",code:2},{name:"Verona",abbreviation:"VR",code:23},{name:"Vibo-Valentia",abbreviation:"VV",code:102},{name:"Vicenza",abbreviation:"VI",code:24},{name:"Viterbo",abbreviation:"VT",code:56}]},nationalities:[{name:"Afghan"},{name:"Albanian"},{name:"Algerian"},{name:"American"},{name:"Andorran"},{name:"Angolan"},{name:"Antiguans"},{name:"Argentinean"},{name:"Armenian"},{name:"Australian"},{name:"Austrian"},{name:"Azerbaijani"},{name:"Bahami"},{name:"Bahraini"},{name:"Bangladeshi"},{name:"Barbadian"},{name:"Barbudans"},{name:"Batswana"},{name:"Belarusian"},{name:"Belgian"},{name:"Belizean"},{name:"Beninese"},{name:"Bhutanese"},{name:"Bolivian"},{name:"Bosnian"},{name:"Brazilian"},{name:"British"},{name:"Bruneian"},{name:"Bulgarian"},{name:"Burkinabe"},{name:"Burmese"},{name:"Burundian"},{name:"Cambodian"},{name:"Cameroonian"},{name:"Canadian"},{name:"Cape Verdean"},{name:"Central African"},{name:"Chadian"},{name:"Chilean"},{name:"Chinese"},{name:"Colombian"},{name:"Comoran"},{name:"Congolese"},{name:"Costa Rican"},{name:"Croatian"},{name:"Cuban"},{name:"Cypriot"},{name:"Czech"},{name:"Danish"},{name:"Djibouti"},{name:"Dominican"},{name:"Dutch"},{name:"East Timorese"},{name:"Ecuadorean"},{name:"Egyptian"},{name:"Emirian"},{name:"Equatorial Guinean"},{name:"Eritrean"},{name:"Estonian"},{name:"Ethiopian"},{name:"Fijian"},{name:"Filipino"},{name:"Finnish"},{name:"French"},{name:"Gabonese"},{name:"Gambian"},{name:"Georgian"},{name:"German"},{name:"Ghanaian"},{name:"Greek"},{name:"Grenadian"},{name:"Guatemalan"},{name:"Guinea-Bissauan"},{name:"Guinean"},{name:"Guyanese"},{name:"Haitian"},{name:"Herzegovinian"},{name:"Honduran"},{name:"Hungarian"},{name:"I-Kiribati"},{name:"Icelander"},{name:"Indian"},{name:"Indonesian"},{name:"Iranian"},{name:"Iraqi"},{name:"Irish"},{name:"Israeli"},{name:"Italian"},{name:"Ivorian"},{name:"Jamaican"},{name:"Japanese"},{name:"Jordanian"},{name:"Kazakhstani"},{name:"Kenyan"},{name:"Kittian and Nevisian"},{name:"Kuwaiti"},{name:"Kyrgyz"},{name:"Laotian"},{name:"Latvian"},{name:"Lebanese"},{name:"Liberian"},{name:"Libyan"},{name:"Liechtensteiner"},{name:"Lithuanian"},{name:"Luxembourger"},{name:"Macedonian"},{name:"Malagasy"},{name:"Malawian"},{name:"Malaysian"},{name:"Maldivan"},{name:"Malian"},{name:"Maltese"},{name:"Marshallese"},{name:"Mauritanian"},{name:"Mauritian"},{name:"Mexican"},{name:"Micronesian"},{name:"Moldovan"},{name:"Monacan"},{name:"Mongolian"},{name:"Moroccan"},{name:"Mosotho"},{name:"Motswana"},{name:"Mozambican"},{name:"Namibian"},{name:"Nauruan"},{name:"Nepalese"},{name:"New Zealander"},{name:"Nicaraguan"},{name:"Nigerian"},{name:"Nigerien"},{name:"North Korean"},{name:"Northern Irish"},{name:"Norwegian"},{name:"Omani"},{name:"Pakistani"},{name:"Palauan"},{name:"Panamanian"},{name:"Papua New Guinean"},{name:"Paraguayan"},{name:"Peruvian"},{name:"Polish"},{name:"Portuguese"},{name:"Qatari"},{name:"Romani"},{name:"Russian"},{name:"Rwandan"},{name:"Saint Lucian"},{name:"Salvadoran"},{name:"Samoan"},{name:"San Marinese"},{name:"Sao Tomean"},{name:"Saudi"},{name:"Scottish"},{name:"Senegalese"},{name:"Serbian"},{name:"Seychellois"},{name:"Sierra Leonean"},{name:"Singaporean"},{name:"Slovakian"},{name:"Slovenian"},{name:"Solomon Islander"},{name:"Somali"},{name:"South African"},{name:"South Korean"},{name:"Spanish"},{name:"Sri Lankan"},{name:"Sudanese"},{name:"Surinamer"},{name:"Swazi"},{name:"Swedish"},{name:"Swiss"},{name:"Syrian"},{name:"Taiwanese"},{name:"Tajik"},{name:"Tanzanian"},{name:"Thai"},{name:"Togolese"},{name:"Tongan"},{name:"Trinidadian or Tobagonian"},{name:"Tunisian"},{name:"Turkish"},{name:"Tuvaluan"},{name:"Ugandan"},{name:"Ukrainian"},{name:"Uruguaya"},{name:"Uzbekistani"},{name:"Venezuela"},{name:"Vietnamese"},{name:"Wels"},{name:"Yemenit"},{name:"Zambia"},{name:"Zimbabwe"}],locale_languages:["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],locale_regions:["agq-CM","asa-TZ","ast-ES","bas-CM","bem-ZM","bez-TZ","brx-IN","cgg-UG","chr-US","dav-KE","dje-NE","dsb-DE","dua-CM","dyo-SN","ebu-KE","ewo-CM","fil-PH","fur-IT","gsw-CH","gsw-FR","gsw-LI","guz-KE","haw-US","hsb-DE","jgo-CM","jmc-TZ","kab-DZ","kam-KE","kde-TZ","kea-CV","khq-ML","kkj-CM","kln-KE","kok-IN","ksb-TZ","ksf-CM","ksh-DE","lag-TZ","lkt-US","luo-KE","luy-KE","mas-KE","mas-TZ","mer-KE","mfe-MU","mgh-MZ","mgo-CM","mua-CM","naq-NA","nmg-CM","nnh-CM","nus-SD","nyn-UG","rof-TZ","rwk-TZ","sah-RU","saq-KE","sbp-TZ","seh-MZ","ses-ML","shi-Latn","shi-Latn-MA","shi-Tfng","shi-Tfng-MA","smn-FI","teo-KE","teo-UG","twq-NE","tzm-Latn","tzm-Latn-MA","vai-Latn","vai-Latn-LR","vai-Vaii","vai-Vaii-LR","vun-TZ","wae-CH","xog-UG","yav-CM","zgh-MA","af-NA","af-ZA","ak-GH","am-ET","ar-001","ar-AE","ar-BH","ar-DJ","ar-DZ","ar-EG","ar-EH","ar-ER","ar-IL","ar-IQ","ar-JO","ar-KM","ar-KW","ar-LB","ar-LY","ar-MA","ar-MR","ar-OM","ar-PS","ar-QA","ar-SA","ar-SD","ar-SO","ar-SS","ar-SY","ar-TD","ar-TN","ar-YE","as-IN","az-Cyrl","az-Cyrl-AZ","az-Latn","az-Latn-AZ","be-BY","bg-BG","bm-Latn","bm-Latn-ML","bn-BD","bn-IN","bo-CN","bo-IN","br-FR","bs-Cyrl","bs-Cyrl-BA","bs-Latn","bs-Latn-BA","ca-AD","ca-ES","ca-ES-VALENCIA","ca-FR","ca-IT","cs-CZ","cy-GB","da-DK","da-GL","de-AT","de-BE","de-CH","de-DE","de-LI","de-LU","dz-BT","ee-GH","ee-TG","el-CY","el-GR","en-001","en-150","en-AG","en-AI","en-AS","en-AU","en-BB","en-BE","en-BM","en-BS","en-BW","en-BZ","en-CA","en-CC","en-CK","en-CM","en-CX","en-DG","en-DM","en-ER","en-FJ","en-FK","en-FM","en-GB","en-GD","en-GG","en-GH","en-GI","en-GM","en-GU","en-GY","en-HK","en-IE","en-IM","en-IN","en-IO","en-JE","en-JM","en-KE","en-KI","en-KN","en-KY","en-LC","en-LR","en-LS","en-MG","en-MH","en-MO","en-MP","en-MS","en-MT","en-MU","en-MW","en-MY","en-NA","en-NF","en-NG","en-NR","en-NU","en-NZ","en-PG","en-PH","en-PK","en-PN","en-PR","en-PW","en-RW","en-SB","en-SC","en-SD","en-SG","en-SH","en-SL","en-SS","en-SX","en-SZ","en-TC","en-TK","en-TO","en-TT","en-TV","en-TZ","en-UG","en-UM","en-US","en-US-POSIX","en-VC","en-VG","en-VI","en-VU","en-WS","en-ZA","en-ZM","en-ZW","eo-001","es-419","es-AR","es-BO","es-CL","es-CO","es-CR","es-CU","es-DO","es-EA","es-EC","es-ES","es-GQ","es-GT","es-HN","es-IC","es-MX","es-NI","es-PA","es-PE","es-PH","es-PR","es-PY","es-SV","es-US","es-UY","es-VE","et-EE","eu-ES","fa-AF","fa-IR","ff-CM","ff-GN","ff-MR","ff-SN","fi-FI","fo-FO","fr-BE","fr-BF","fr-BI","fr-BJ","fr-BL","fr-CA","fr-CD","fr-CF","fr-CG","fr-CH","fr-CI","fr-CM","fr-DJ","fr-DZ","fr-FR","fr-GA","fr-GF","fr-GN","fr-GP","fr-GQ","fr-HT","fr-KM","fr-LU","fr-MA","fr-MC","fr-MF","fr-MG","fr-ML","fr-MQ","fr-MR","fr-MU","fr-NC","fr-NE","fr-PF","fr-PM","fr-RE","fr-RW","fr-SC","fr-SN","fr-SY","fr-TD","fr-TG","fr-TN","fr-VU","fr-WF","fr-YT","fy-NL","ga-IE","gd-GB","gl-ES","gu-IN","gv-IM","ha-Latn","ha-Latn-GH","ha-Latn-NE","ha-Latn-NG","he-IL","hi-IN","hr-BA","hr-HR","hu-HU","hy-AM","id-ID","ig-NG","ii-CN","is-IS","it-CH","it-IT","it-SM","ja-JP","ka-GE","ki-KE","kk-Cyrl","kk-Cyrl-KZ","kl-GL","km-KH","kn-IN","ko-KP","ko-KR","ks-Arab","ks-Arab-IN","kw-GB","ky-Cyrl","ky-Cyrl-KG","lb-LU","lg-UG","ln-AO","ln-CD","ln-CF","ln-CG","lo-LA","lt-LT","lu-CD","lv-LV","mg-MG","mk-MK","ml-IN","mn-Cyrl","mn-Cyrl-MN","mr-IN","ms-Latn","ms-Latn-BN","ms-Latn-MY","ms-Latn-SG","mt-MT","my-MM","nb-NO","nb-SJ","nd-ZW","ne-IN","ne-NP","nl-AW","nl-BE","nl-BQ","nl-CW","nl-NL","nl-SR","nl-SX","nn-NO","om-ET","om-KE","or-IN","os-GE","os-RU","pa-Arab","pa-Arab-PK","pa-Guru","pa-Guru-IN","pl-PL","ps-AF","pt-AO","pt-BR","pt-CV","pt-GW","pt-MO","pt-MZ","pt-PT","pt-ST","pt-TL","qu-BO","qu-EC","qu-PE","rm-CH","rn-BI","ro-MD","ro-RO","ru-BY","ru-KG","ru-KZ","ru-MD","ru-RU","ru-UA","rw-RW","se-FI","se-NO","se-SE","sg-CF","si-LK","sk-SK","sl-SI","sn-ZW","so-DJ","so-ET","so-KE","so-SO","sq-AL","sq-MK","sq-XK","sr-Cyrl","sr-Cyrl-BA","sr-Cyrl-ME","sr-Cyrl-RS","sr-Cyrl-XK","sr-Latn","sr-Latn-BA","sr-Latn-ME","sr-Latn-RS","sr-Latn-XK","sv-AX","sv-FI","sv-SE","sw-CD","sw-KE","sw-TZ","sw-UG","ta-IN","ta-LK","ta-MY","ta-SG","te-IN","th-TH","ti-ER","ti-ET","to-TO","tr-CY","tr-TR","ug-Arab","ug-Arab-CN","uk-UA","ur-IN","ur-PK","uz-Arab","uz-Arab-AF","uz-Cyrl","uz-Cyrl-UZ","uz-Latn","uz-Latn-UZ","vi-VN","yi-001","yo-BJ","yo-NG","zh-Hans","zh-Hans-CN","zh-Hans-HK","zh-Hans-MO","zh-Hans-SG","zh-Hant","zh-Hant-HK","zh-Hant-MO","zh-Hant-TW","zu-ZA"],us_states_and_dc:[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],territories:[{name:"American Samoa",abbreviation:"AS"},{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Guam",abbreviation:"GU"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Virgin Islands, U.S.",abbreviation:"VI"}],armed_forces:[{name:"Armed Forces Europe",abbreviation:"AE"},{name:"Armed Forces Pacific",abbreviation:"AP"},{name:"Armed Forces the Americas",abbreviation:"AA"}],country_regions:{it:[{name:"Valle d'Aosta",abbreviation:"VDA"},{name:"Piemonte",abbreviation:"PIE"},{name:"Lombardia",abbreviation:"LOM"},{name:"Veneto",abbreviation:"VEN"},{name:"Trentino Alto Adige",abbreviation:"TAA"},{name:"Friuli Venezia Giulia",abbreviation:"FVG"},{name:"Liguria",abbreviation:"LIG"},{name:"Emilia Romagna",abbreviation:"EMR"},{name:"Toscana",abbreviation:"TOS"},{name:"Umbria",abbreviation:"UMB"},{name:"Marche",abbreviation:"MAR"},{name:"Abruzzo",abbreviation:"ABR"},{name:"Lazio",abbreviation:"LAZ"},{name:"Campania",abbreviation:"CAM"},{name:"Puglia",abbreviation:"PUG"},{name:"Basilicata",abbreviation:"BAS"},{name:"Molise",abbreviation:"MOL"},{name:"Calabria",abbreviation:"CAL"},{name:"Sicilia",abbreviation:"SIC"},{name:"Sardegna",abbreviation:"SAR"}],mx:[{name:"Aguascalientes",abbreviation:"AGU"},{name:"Baja California",abbreviation:"BCN"},{name:"Baja California Sur",abbreviation:"BCS"},{name:"Campeche",abbreviation:"CAM"},{name:"Chiapas",abbreviation:"CHP"},{name:"Chihuahua",abbreviation:"CHH"},{name:"Ciudad de MÃ©xico",abbreviation:"DIF"},{name:"Coahuila",abbreviation:"COA"},{name:"Colima",abbreviation:"COL"},{name:"Durango",abbreviation:"DUR"},{name:"Guanajuato",abbreviation:"GUA"},{name:"Guerrero",abbreviation:"GRO"},{name:"Hidalgo",abbreviation:"HID"},{name:"Jalisco",abbreviation:"JAL"},{name:"MÃ©xico",abbreviation:"MEX"},{name:"MichoacÃ¡n",abbreviation:"MIC"},{name:"Morelos",abbreviation:"MOR"},{name:"Nayarit",abbreviation:"NAY"},{name:"Nuevo LeÃ³n",abbreviation:"NLE"},{name:"Oaxaca",abbreviation:"OAX"},{name:"Puebla",abbreviation:"PUE"},{name:"QuerÃ©taro",abbreviation:"QUE"},{name:"Quintana Roo",abbreviation:"ROO"},{name:"San Luis PotosÃ­",abbreviation:"SLP"},{name:"Sinaloa",abbreviation:"SIN"},{name:"Sonora",abbreviation:"SON"},{name:"Tabasco",abbreviation:"TAB"},{name:"Tamaulipas",abbreviation:"TAM"},{name:"Tlaxcala",abbreviation:"TLA"},{name:"Veracruz",abbreviation:"VER"},{name:"YucatÃ¡n",abbreviation:"YUC"},{name:"Zacatecas",abbreviation:"ZAC"}]},street_suffixes:{us:[{name:"Avenue",abbreviation:"Ave"},{name:"Boulevard",abbreviation:"Blvd"},{name:"Center",abbreviation:"Ctr"},{name:"Circle",abbreviation:"Cir"},{name:"Court",abbreviation:"Ct"},{name:"Drive",abbreviation:"Dr"},{name:"Extension",abbreviation:"Ext"},{name:"Glen",abbreviation:"Gln"},{name:"Grove",abbreviation:"Grv"},{name:"Heights",abbreviation:"Hts"},{name:"Highway",abbreviation:"Hwy"},{name:"Junction",abbreviation:"Jct"},{name:"Key",abbreviation:"Key"},{name:"Lane",abbreviation:"Ln"},{name:"Loop",abbreviation:"Loop"},{name:"Manor",abbreviation:"Mnr"},{name:"Mill",abbreviation:"Mill"},{name:"Park",abbreviation:"Park"},{name:"Parkway",abbreviation:"Pkwy"},{name:"Pass",abbreviation:"Pass"},{name:"Path",abbreviation:"Path"},{name:"Pike",abbreviation:"Pike"},{name:"Place",abbreviation:"Pl"},{name:"Plaza",abbreviation:"Plz"},{name:"Point",abbreviation:"Pt"},{name:"Ridge",abbreviation:"Rdg"},{name:"River",abbreviation:"Riv"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Trail",abbreviation:"Trl"},{name:"Turnpike",abbreviation:"Tpke"},{name:"View",abbreviation:"Vw"},{name:"Way",abbreviation:"Way"}],it:[{name:"Accesso",abbreviation:"Acc."},{name:"Alzaia",abbreviation:"Alz."},{name:"Arco",abbreviation:"Arco"},{name:"Archivolto",abbreviation:"Acv."},{name:"Arena",abbreviation:"Arena"},{name:"Argine",abbreviation:"Argine"},{name:"Bacino",abbreviation:"Bacino"},{name:"Banchi",abbreviation:"Banchi"},{name:"Banchina",abbreviation:"Ban."},{name:"Bastioni",abbreviation:"Bas."},{name:"Belvedere",abbreviation:"Belv."},{name:"Borgata",abbreviation:"B.ta"},{name:"Borgo",abbreviation:"B.go"},{name:"Calata",abbreviation:"Cal."},{name:"Calle",abbreviation:"Calle"},{name:"Campiello",abbreviation:"Cam."},{name:"Campo",abbreviation:"Cam."},{name:"Canale",abbreviation:"Can."},{name:"Carraia",abbreviation:"Carr."},{name:"Cascina",abbreviation:"Cascina"},{name:"Case sparse",abbreviation:"c.s."},{name:"Cavalcavia",abbreviation:"Cv."},{name:"Circonvallazione",abbreviation:"Cv."},{name:"Complanare",abbreviation:"C.re"},{name:"Contrada",abbreviation:"C.da"},{name:"Corso",abbreviation:"C.so"},{name:"Corte",abbreviation:"C.te"},{name:"Cortile",abbreviation:"C.le"},{name:"Diramazione",abbreviation:"Dir."},{name:"Fondaco",abbreviation:"F.co"},{name:"Fondamenta",abbreviation:"F.ta"},{name:"Fondo",abbreviation:"F.do"},{name:"Frazione",abbreviation:"Fr."},{name:"Isola",abbreviation:"Is."},{name:"Largo",abbreviation:"L.go"},{name:"Litoranea",abbreviation:"Lit."},{name:"Lungolago",abbreviation:"L.go lago"},{name:"Lungo Po",abbreviation:"l.go Po"},{name:"Molo",abbreviation:"Molo"},{name:"Mura",abbreviation:"Mura"},{name:"Passaggio privato",abbreviation:"pass. priv."},{name:"Passeggiata",abbreviation:"Pass."},{name:"Piazza",abbreviation:"P.zza"},{name:"Piazzale",abbreviation:"P.le"},{name:"Ponte",abbreviation:"P.te"},{name:"Portico",abbreviation:"P.co"},{name:"Rampa",abbreviation:"Rampa"},{name:"Regione",abbreviation:"Reg."},{name:"Rione",abbreviation:"R.ne"},{name:"Rio",abbreviation:"Rio"},{name:"Ripa",abbreviation:"Ripa"},{name:"Riva",abbreviation:"Riva"},{name:"RondÃ²",abbreviation:"RondÃ²"},{name:"Rotonda",abbreviation:"Rot."},{name:"Sagrato",abbreviation:"Sagr."},{name:"Salita",abbreviation:"Sal."},{name:"Scalinata",abbreviation:"Scal."},{name:"Scalone",abbreviation:"Scal."},{name:"Slargo",abbreviation:"Sl."},{name:"Sottoportico",abbreviation:"Sott."},{name:"Strada",abbreviation:"Str."},{name:"Stradale",abbreviation:"Str.le"},{name:"Strettoia",abbreviation:"Strett."},{name:"Traversa",abbreviation:"Trav."},{name:"Via",abbreviation:"V."},{name:"Viale",abbreviation:"V.le"},{name:"Vicinale",abbreviation:"Vic.le"},{name:"Vicolo",abbreviation:"Vic."}],uk:[{name:"Avenue",abbreviation:"Ave"},{name:"Close",abbreviation:"Cl"},{name:"Court",abbreviation:"Ct"},{name:"Crescent",abbreviation:"Cr"},{name:"Drive",abbreviation:"Dr"},{name:"Garden",abbreviation:"Gdn"},{name:"Gardens",abbreviation:"Gdns"},{name:"Green",abbreviation:"Gn"},{name:"Grove",abbreviation:"Gr"},{name:"Lane",abbreviation:"Ln"},{name:"Mount",abbreviation:"Mt"},{name:"Place",abbreviation:"Pl"},{name:"Park",abbreviation:"Pk"},{name:"Ridge",abbreviation:"Rdg"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Valley",abbreviation:"Val"}]},months:[{name:"January",short_name:"Jan",numeric:"01",days:31},{name:"February",short_name:"Feb",numeric:"02",days:28},{name:"March",short_name:"Mar",numeric:"03",days:31},{name:"April",short_name:"Apr",numeric:"04",days:30},{name:"May",short_name:"May",numeric:"05",days:31},{name:"June",short_name:"Jun",numeric:"06",days:30},{name:"July",short_name:"Jul",numeric:"07",days:31},{name:"August",short_name:"Aug",numeric:"08",days:31},{name:"September",short_name:"Sep",numeric:"09",days:30},{name:"October",short_name:"Oct",numeric:"10",days:31},{name:"November",short_name:"Nov",numeric:"11",days:30},{name:"December",short_name:"Dec",numeric:"12",days:31}],cc_types:[{name:"American Express",short_name:"amex",prefix:"34",length:15},{name:"Bankcard",short_name:"bankcard",prefix:"5610",length:16},{name:"China UnionPay",short_name:"chinaunion",prefix:"62",length:16},{name:"Diners Club Carte Blanche",short_name:"dccarte",prefix:"300",length:14},{name:"Diners Club enRoute",short_name:"dcenroute",prefix:"2014",length:15},{name:"Diners Club International",short_name:"dcintl",prefix:"36",length:14},{name:"Diners Club United States & Canada",short_name:"dcusc",prefix:"54",length:16},{name:"Discover Card",short_name:"discover",prefix:"6011",length:16},{name:"InstaPayment",short_name:"instapay",prefix:"637",length:16},{name:"JCB",short_name:"jcb",prefix:"3528",length:16},{name:"Laser",short_name:"laser",prefix:"6304",length:16},{name:"Maestro",short_name:"maestro",prefix:"5018",length:16},{name:"Mastercard",short_name:"mc",prefix:"51",length:16},{name:"Solo",short_name:"solo",prefix:"6334",length:16},{name:"Switch",short_name:"switch",prefix:"4903",length:16},{name:"Visa",short_name:"visa",prefix:"4",length:16},{name:"Visa Electron",short_name:"electron",prefix:"4026",length:16}],currency_types:[{code:"AED",name:"United Arab Emirates Dirham"},{code:"AFN",name:"Afghanistan Afghani"},{code:"ALL",name:"Albania Lek"},{code:"AMD",name:"Armenia Dram"},{code:"ANG",name:"Netherlands Antilles Guilder"},{code:"AOA",name:"Angola Kwanza"},{code:"ARS",name:"Argentina Peso"},{code:"AUD",name:"Australia Dollar"},{code:"AWG",name:"Aruba Guilder"},{code:"AZN",name:"Azerbaijan New Manat"},{code:"BAM",name:"Bosnia and Herzegovina Convertible Marka"},{code:"BBD",name:"Barbados Dollar"},{code:"BDT",name:"Bangladesh Taka"},{code:"BGN",name:"Bulgaria Lev"},{code:"BHD",name:"Bahrain Dinar"},{code:"BIF",name:"Burundi Franc"},{code:"BMD",name:"Bermuda Dollar"},{code:"BND",name:"Brunei Darussalam Dollar"},{code:"BOB",name:"Bolivia Boliviano"},{code:"BRL",name:"Brazil Real"},{code:"BSD",name:"Bahamas Dollar"},{code:"BTN",name:"Bhutan Ngultrum"},{code:"BWP",name:"Botswana Pula"},{code:"BYR",name:"Belarus Ruble"},{code:"BZD",name:"Belize Dollar"},{code:"CAD",name:"Canada Dollar"},{code:"CDF",name:"Congo/Kinshasa Franc"},{code:"CHF",name:"Switzerland Franc"},{code:"CLP",name:"Chile Peso"},{code:"CNY",name:"China Yuan Renminbi"},{code:"COP",name:"Colombia Peso"},{code:"CRC",name:"Costa Rica Colon"},{code:"CUC",name:"Cuba Convertible Peso"},{code:"CUP",name:"Cuba Peso"},{code:"CVE",name:"Cape Verde Escudo"},{code:"CZK",name:"Czech Republic Koruna"},{code:"DJF",name:"Djibouti Franc"},{code:"DKK",name:"Denmark Krone"},{code:"DOP",name:"Dominican Republic Peso"},{code:"DZD",name:"Algeria Dinar"},{code:"EGP",name:"Egypt Pound"},{code:"ERN",name:"Eritrea Nakfa"},{code:"ETB",name:"Ethiopia Birr"},{code:"EUR",name:"Euro Member Countries"},{code:"FJD",name:"Fiji Dollar"},{code:"FKP",name:"Falkland Islands (Malvinas) Pound"},{code:"GBP",name:"United Kingdom Pound"},{code:"GEL",name:"Georgia Lari"},{code:"GGP",name:"Guernsey Pound"},{code:"GHS",name:"Ghana Cedi"},{code:"GIP",name:"Gibraltar Pound"},{code:"GMD",name:"Gambia Dalasi"},{code:"GNF",name:"Guinea Franc"},{code:"GTQ",name:"Guatemala Quetzal"},{code:"GYD",name:"Guyana Dollar"},{code:"HKD",name:"Hong Kong Dollar"},{code:"HNL",name:"Honduras Lempira"},{code:"HRK",name:"Croatia Kuna"},{code:"HTG",name:"Haiti Gourde"},{code:"HUF",name:"Hungary Forint"},{code:"IDR",name:"Indonesia Rupiah"},{code:"ILS",name:"Israel Shekel"},{code:"IMP",name:"Isle of Man Pound"},{code:"INR",name:"India Rupee"},{code:"IQD",name:"Iraq Dinar"},{code:"IRR",name:"Iran Rial"},{code:"ISK",name:"Iceland Krona"},{code:"JEP",name:"Jersey Pound"},{code:"JMD",name:"Jamaica Dollar"},{code:"JOD",name:"Jordan Dinar"},{code:"JPY",name:"Japan Yen"},{code:"KES",name:"Kenya Shilling"},{code:"KGS",name:"Kyrgyzstan Som"},{code:"KHR",name:"Cambodia Riel"},{code:"KMF",name:"Comoros Franc"},{code:"KPW",name:"Korea (North) Won"},{code:"KRW",name:"Korea (South) Won"},{code:"KWD",name:"Kuwait Dinar"},{code:"KYD",name:"Cayman Islands Dollar"},{code:"KZT",name:"Kazakhstan Tenge"},{code:"LAK",name:"Laos Kip"},{code:"LBP",name:"Lebanon Pound"},{code:"LKR",name:"Sri Lanka Rupee"},{code:"LRD",name:"Liberia Dollar"},{code:"LSL",name:"Lesotho Loti"},{code:"LTL",name:"Lithuania Litas"},{code:"LYD",name:"Libya Dinar"},{code:"MAD",name:"Morocco Dirham"},{code:"MDL",name:"Moldova Leu"},{code:"MGA",name:"Madagascar Ariary"},{code:"MKD",name:"Macedonia Denar"},{code:"MMK",name:"Myanmar (Burma) Kyat"},{code:"MNT",name:"Mongolia Tughrik"},{code:"MOP",name:"Macau Pataca"},{code:"MRO",name:"Mauritania Ouguiya"},{code:"MUR",name:"Mauritius Rupee"},{code:"MVR",name:"Maldives (Maldive Islands) Rufiyaa"},{code:"MWK",name:"Malawi Kwacha"},{code:"MXN",name:"Mexico Peso"},{code:"MYR",name:"Malaysia Ringgit"},{code:"MZN",name:"Mozambique Metical"},{code:"NAD",name:"Namibia Dollar"},{code:"NGN",name:"Nigeria Naira"},{code:"NIO",name:"Nicaragua Cordoba"},{code:"NOK",name:"Norway Krone"},{code:"NPR",name:"Nepal Rupee"},{code:"NZD",name:"New Zealand Dollar"},{code:"OMR",name:"Oman Rial"},{code:"PAB",name:"Panama Balboa"},{code:"PEN",name:"Peru Nuevo Sol"},{code:"PGK",name:"Papua New Guinea Kina"},{code:"PHP",name:"Philippines Peso"},{code:"PKR",name:"Pakistan Rupee"},{code:"PLN",name:"Poland Zloty"},{code:"PYG",name:"Paraguay Guarani"},{code:"QAR",name:"Qatar Riyal"},{code:"RON",name:"Romania New Leu"},{code:"RSD",name:"Serbia Dinar"},{code:"RUB",name:"Russia Ruble"},{code:"RWF",name:"Rwanda Franc"},{code:"SAR",name:"Saudi Arabia Riyal"},{code:"SBD",name:"Solomon Islands Dollar"},{code:"SCR",name:"Seychelles Rupee"},{code:"SDG",name:"Sudan Pound"},{code:"SEK",name:"Sweden Krona"},{code:"SGD",name:"Singapore Dollar"},{code:"SHP",name:"Saint Helena Pound"},{code:"SLL",name:"Sierra Leone Leone"},{code:"SOS",name:"Somalia Shilling"},{code:"SPL",name:"Seborga Luigino"},{code:"SRD",name:"Suriname Dollar"},{code:"STD",name:"SÃ£o TomÃ© and PrÃ­ncipe Dobra"},{code:"SVC",name:"El Salvador Colon"},{code:"SYP",name:"Syria Pound"},{code:"SZL",name:"Swaziland Lilangeni"},{code:"THB",name:"Thailand Baht"},{code:"TJS",name:"Tajikistan Somoni"},{code:"TMT",name:"Turkmenistan Manat"},{code:"TND",name:"Tunisia Dinar"},{code:"TOP",name:"Tonga Pa'anga"},{code:"TRY",name:"Turkey Lira"},{code:"TTD",name:"Trinidad and Tobago Dollar"},{code:"TVD",name:"Tuvalu Dollar"},{code:"TWD",name:"Taiwan New Dollar"},{code:"TZS",name:"Tanzania Shilling"},{code:"UAH",name:"Ukraine Hryvnia"},{code:"UGX",name:"Uganda Shilling"},{code:"USD",name:"United States Dollar"},{code:"UYU",name:"Uruguay Peso"},{code:"UZS",name:"Uzbekistan Som"},{code:"VEF",name:"Venezuela Bolivar"},{code:"VND",name:"Viet Nam Dong"},{code:"VUV",name:"Vanuatu Vatu"},{code:"WST",name:"Samoa Tala"},{code:"XAF",name:"CommunautÃ© FinanciÃ¨re Africaine (BEAC) CFA Franc BEAC"},{code:"XCD",name:"East Caribbean Dollar"},{code:"XDR",name:"International Monetary Fund (IMF) Special Drawing Rights"},{code:"XOF",name:"CommunautÃ© FinanciÃ¨re Africaine (BCEAO) Franc"},{code:"XPF",name:"Comptoirs FranÃ§ais du Pacifique (CFP) Franc"},{code:"YER",name:"Yemen Rial"},{code:"ZAR",name:"South Africa Rand"},{code:"ZMW",name:"Zambia Kwacha"},{code:"ZWD",name:"Zimbabwe Dollar"}],colorNames:["AliceBlue","Black","Navy","DarkBlue","MediumBlue","Blue","DarkGreen","Green","Teal","DarkCyan","DeepSkyBlue","DarkTurquoise","MediumSpringGreen","Lime","SpringGreen","Aqua","Cyan","MidnightBlue","DodgerBlue","LightSeaGreen","ForestGreen","SeaGreen","DarkSlateGray","LimeGreen","MediumSeaGreen","Turquoise","RoyalBlue","SteelBlue","DarkSlateBlue","MediumTurquoise","Indigo","DarkOliveGreen","CadetBlue","CornflowerBlue","RebeccaPurple","MediumAquaMarine","DimGray","SlateBlue","OliveDrab","SlateGray","LightSlateGray","MediumSlateBlue","LawnGreen","Chartreuse","Aquamarine","Maroon","Purple","Olive","Gray","SkyBlue","LightSkyBlue","BlueViolet","DarkRed","DarkMagenta","SaddleBrown","Ivory","White","DarkSeaGreen","LightGreen","MediumPurple","DarkViolet","PaleGreen","DarkOrchid","YellowGreen","Sienna","Brown","DarkGray","LightBlue","GreenYellow","PaleTurquoise","LightSteelBlue","PowderBlue","FireBrick","DarkGoldenRod","MediumOrchid","RosyBrown","DarkKhaki","Silver","MediumVioletRed","IndianRed","Peru","Chocolate","Tan","LightGray","Thistle","Orchid","GoldenRod","PaleVioletRed","Crimson","Gainsboro","Plum","BurlyWood","LightCyan","Lavender","DarkSalmon","Violet","PaleGoldenRod","LightCoral","Khaki","AliceBlue","HoneyDew","Azure","SandyBrown","Wheat","Beige","WhiteSmoke","MintCream","GhostWhite","Salmon","AntiqueWhite","Linen","LightGoldenRodYellow","OldLace","Red","Fuchsia","Magenta","DeepPink","OrangeRed","Tomato","HotPink","Coral","DarkOrange","LightSalmon","Orange","LightPink","Pink","Gold","PeachPuff","NavajoWhite","Moccasin","Bisque","MistyRose","BlanchedAlmond","PapayaWhip","LavenderBlush","SeaShell","Cornsilk","LemonChiffon","FloralWhite","Snow","Yellow","LightYellow"],company:["3Com Corp","3M Company","A.G. Edwards Inc.","Abbott Laboratories","Abercrombie & Fitch Co.","ABM Industries Incorporated","Ace Hardware Corporation","ACT Manufacturing Inc.","Acterna Corp.","Adams Resources & Energy, Inc.","ADC Telecommunications, Inc.","Adelphia Communications Corporation","Administaff, Inc.","Adobe Systems Incorporated","Adolph Coors Company","Advance Auto Parts, Inc.","Advanced Micro Devices, Inc.","AdvancePCS, Inc.","Advantica Restaurant Group, Inc.","The AES Corporation","Aetna Inc.","Affiliated Computer Services, Inc.","AFLAC Incorporated","AGCO Corporation","Agilent Technologies, Inc.","Agway Inc.","Apartment Investment and Management Company","Air Products and Chemicals, Inc.","Airborne, Inc.","Airgas, Inc.","AK Steel Holding Corporation","Alaska Air Group, Inc.","Alberto-Culver Company","Albertson's, Inc.","Alcoa Inc.","Alleghany Corporation","Allegheny Energy, Inc.","Allegheny Technologies Incorporated","Allergan, Inc.","ALLETE, Inc.","Alliant Energy Corporation","Allied Waste Industries, Inc.","Allmerica Financial Corporation","The Allstate Corporation","ALLTEL Corporation","The Alpine Group, Inc.","Amazon.com, Inc.","AMC Entertainment Inc.","American Power Conversion Corporation","Amerada Hess Corporation","AMERCO","Ameren Corporation","America West Holdings Corporation","American Axle & Manufacturing Holdings, Inc.","American Eagle Outfitters, Inc.","American Electric Power Company, Inc.","American Express Company","American Financial Group, Inc.","American Greetings Corporation","American International Group, Inc.","American Standard Companies Inc.","American Water Works Company, Inc.","AmerisourceBergen Corporation","Ames Department Stores, Inc.","Amgen Inc.","Amkor Technology, Inc.","AMR Corporation","AmSouth Bancorp.","Amtran, Inc.","Anadarko Petroleum Corporation","Analog Devices, Inc.","Anheuser-Busch Companies, Inc.","Anixter International Inc.","AnnTaylor Inc.","Anthem, Inc.","AOL Time Warner Inc.","Aon Corporation","Apache Corporation","Apple Computer, Inc.","Applera Corporation","Applied Industrial Technologies, Inc.","Applied Materials, Inc.","Aquila, Inc.","ARAMARK Corporation","Arch Coal, Inc.","Archer Daniels Midland Company","Arkansas Best Corporation","Armstrong Holdings, Inc.","Arrow Electronics, Inc.","ArvinMeritor, Inc.","Ashland Inc.","Astoria Financial Corporation","AT&T Corp.","Atmel Corporation","Atmos Energy Corporation","Audiovox Corporation","Autoliv, Inc.","Automatic Data Processing, Inc.","AutoNation, Inc.","AutoZone, Inc.","Avaya Inc.","Avery Dennison Corporation","Avista Corporation","Avnet, Inc.","Avon Products, Inc.","Baker Hughes Incorporated","Ball Corporation","Bank of America Corporation","The Bank of New York Company, Inc.","Bank One Corporation","Banknorth Group, Inc.","Banta Corporation","Barnes & Noble, Inc.","Bausch & Lomb Incorporated","Baxter International Inc.","BB&T Corporation","The Bear Stearns Companies Inc.","Beazer Homes USA, Inc.","Beckman Coulter, Inc.","Becton, Dickinson and Company","Bed Bath & Beyond Inc.","Belk, Inc.","Bell Microproducts Inc.","BellSouth Corporation","Belo Corp.","Bemis Company, Inc.","Benchmark Electronics, Inc.","Berkshire Hathaway Inc.","Best Buy Co., Inc.","Bethlehem Steel Corporation","Beverly Enterprises, Inc.","Big Lots, Inc.","BJ Services Company","BJ's Wholesale Club, Inc.","The Black & Decker Corporation","Black Hills Corporation","BMC Software, Inc.","The Boeing Company","Boise Cascade Corporation","Borders Group, Inc.","BorgWarner Inc.","Boston Scientific Corporation","Bowater Incorporated","Briggs & Stratton Corporation","Brightpoint, Inc.","Brinker International, Inc.","Bristol-Myers Squibb Company","Broadwing, Inc.","Brown Shoe Company, Inc.","Brown-Forman Corporation","Brunswick Corporation","Budget Group, Inc.","Burlington Coat Factory Warehouse Corporation","Burlington Industries, Inc.","Burlington Northern Santa Fe Corporation","Burlington Resources Inc.","C. H. Robinson Worldwide Inc.","Cablevision Systems Corp","Cabot Corp","Cadence Design Systems, Inc.","Calpine Corp.","Campbell Soup Co.","Capital One Financial Corp.","Cardinal Health Inc.","Caremark Rx Inc.","Carlisle Cos. Inc.","Carpenter Technology Corp.","Casey's General Stores Inc.","Caterpillar Inc.","CBRL Group Inc.","CDI Corp.","CDW Computer Centers Inc.","CellStar Corp.","Cendant Corp","Cenex Harvest States Cooperatives","Centex Corp.","CenturyTel Inc.","Ceridian Corp.","CH2M Hill Cos. Ltd.","Champion Enterprises Inc.","Charles Schwab Corp.","Charming Shoppes Inc.","Charter Communications Inc.","Charter One Financial Inc.","ChevronTexaco Corp.","Chiquita Brands International Inc.","Chubb Corp","Ciena Corp.","Cigna Corp","Cincinnati Financial Corp.","Cinergy Corp.","Cintas Corp.","Circuit City Stores Inc.","Cisco Systems Inc.","Citigroup, Inc","Citizens Communications Co.","CKE Restaurants Inc.","Clear Channel Communications Inc.","The Clorox Co.","CMGI Inc.","CMS Energy Corp.","CNF Inc.","Coca-Cola Co.","Coca-Cola Enterprises Inc.","Colgate-Palmolive Co.","Collins & Aikman Corp.","Comcast Corp.","Comdisco Inc.","Comerica Inc.","Comfort Systems USA Inc.","Commercial Metals Co.","Community Health Systems Inc.","Compass Bancshares Inc","Computer Associates International Inc.","Computer Sciences Corp.","Compuware Corp.","Comverse Technology Inc.","ConAgra Foods Inc.","Concord EFS Inc.","Conectiv, Inc","Conoco Inc","Conseco Inc.","Consolidated Freightways Corp.","Consolidated Edison Inc.","Constellation Brands Inc.","Constellation Emergy Group Inc.","Continental Airlines Inc.","Convergys Corp.","Cooper Cameron Corp.","Cooper Industries Ltd.","Cooper Tire & Rubber Co.","Corn Products International Inc.","Corning Inc.","Costco Wholesale Corp.","Countrywide Credit Industries Inc.","Coventry Health Care Inc.","Cox Communications Inc.","Crane Co.","Crompton Corp.","Crown Cork & Seal Co. Inc.","CSK Auto Corp.","CSX Corp.","Cummins Inc.","CVS Corp.","Cytec Industries Inc.","D&K Healthcare Resources, Inc.","D.R. Horton Inc.","Dana Corporation","Danaher Corporation","Darden Restaurants Inc.","DaVita Inc.","Dean Foods Company","Deere & Company","Del Monte Foods Co","Dell Computer Corporation","Delphi Corp.","Delta Air Lines Inc.","Deluxe Corporation","Devon Energy Corporation","Di Giorgio Corporation","Dial Corporation","Diebold Incorporated","Dillard's Inc.","DIMON Incorporated","Dole Food Company, Inc.","Dollar General Corporation","Dollar Tree Stores, Inc.","Dominion Resources, Inc.","Domino's Pizza LLC","Dover Corporation, Inc.","Dow Chemical Company","Dow Jones & Company, Inc.","DPL Inc.","DQE Inc.","Dreyer's Grand Ice Cream, Inc.","DST Systems, Inc.","DTE Energy Co.","E.I. Du Pont de Nemours and Company","Duke Energy Corp","Dun & Bradstreet Inc.","DURA Automotive Systems Inc.","DynCorp","Dynegy Inc.","E*Trade Group, Inc.","E.W. Scripps Company","Earthlink, Inc.","Eastman Chemical Company","Eastman Kodak Company","Eaton Corporation","Echostar Communications Corporation","Ecolab Inc.","Edison International","EGL Inc.","El Paso Corporation","Electronic Arts Inc.","Electronic Data Systems Corp.","Eli Lilly and Company","EMC Corporation","Emcor Group Inc.","Emerson Electric Co.","Encompass Services Corporation","Energizer Holdings Inc.","Energy East Corporation","Engelhard Corporation","Enron Corp.","Entergy Corporation","Enterprise Products Partners L.P.","EOG Resources, Inc.","Equifax Inc.","Equitable Resources Inc.","Equity Office Properties Trust","Equity Residential Properties Trust","Estee Lauder Companies Inc.","Exelon Corporation","Exide Technologies","Expeditors International of Washington Inc.","Express Scripts Inc.","ExxonMobil Corporation","Fairchild Semiconductor International Inc.","Family Dollar Stores Inc.","Farmland Industries Inc.","Federal Mogul Corp.","Federated Department Stores Inc.","Federal Express Corp.","Felcor Lodging Trust Inc.","Ferro Corp.","Fidelity National Financial Inc.","Fifth Third Bancorp","First American Financial Corp.","First Data Corp.","First National of Nebraska Inc.","First Tennessee National Corp.","FirstEnergy Corp.","Fiserv Inc.","Fisher Scientific International Inc.","FleetBoston Financial Co.","Fleetwood Enterprises Inc.","Fleming Companies Inc.","Flowers Foods Inc.","Flowserv Corp","Fluor Corp","FMC Corp","Foamex International Inc","Foot Locker Inc","Footstar Inc.","Ford Motor Co","Forest Laboratories Inc.","Fortune Brands Inc.","Foster Wheeler Ltd.","FPL Group Inc.","Franklin Resources Inc.","Freeport McMoran Copper & Gold Inc.","Frontier Oil Corp","Furniture Brands International Inc.","Gannett Co., Inc.","Gap Inc.","Gateway Inc.","GATX Corporation","Gemstar-TV Guide International Inc.","GenCorp Inc.","General Cable Corporation","General Dynamics Corporation","General Electric Company","General Mills Inc","General Motors Corporation","Genesis Health Ventures Inc.","Gentek Inc.","Gentiva Health Services Inc.","Genuine Parts Company","Genuity Inc.","Genzyme Corporation","Georgia Gulf Corporation","Georgia-Pacific Corporation","Gillette Company","Gold Kist Inc.","Golden State Bancorp Inc.","Golden West Financial Corporation","Goldman Sachs Group Inc.","Goodrich Corporation","The Goodyear Tire & Rubber Company","Granite Construction Incorporated","Graybar Electric Company Inc.","Great Lakes Chemical Corporation","Great Plains Energy Inc.","GreenPoint Financial Corp.","Greif Bros. Corporation","Grey Global Group Inc.","Group 1 Automotive Inc.","Guidant Corporation","H&R Block Inc.","H.B. Fuller Company","H.J. Heinz Company","Halliburton Co.","Harley-Davidson Inc.","Harman International Industries Inc.","Harrah's Entertainment Inc.","Harris Corp.","Harsco Corp.","Hartford Financial Services Group Inc.","Hasbro Inc.","Hawaiian Electric Industries Inc.","HCA Inc.","Health Management Associates Inc.","Health Net Inc.","Healthsouth Corp","Henry Schein Inc.","Hercules Inc.","Herman Miller Inc.","Hershey Foods Corp.","Hewlett-Packard Company","Hibernia Corp.","Hillenbrand Industries Inc.","Hilton Hotels Corp.","Hollywood Entertainment Corp.","Home Depot Inc.","Hon Industries Inc.","Honeywell International Inc.","Hormel Foods Corp.","Host Marriott Corp.","Household International Corp.","Hovnanian Enterprises Inc.","Hub Group Inc.","Hubbell Inc.","Hughes Supply Inc.","Humana Inc.","Huntington Bancshares Inc.","Idacorp Inc.","IDT Corporation","IKON Office Solutions Inc.","Illinois Tool Works Inc.","IMC Global Inc.","Imperial Sugar Company","IMS Health Inc.","Ingles Market Inc","Ingram Micro Inc.","Insight Enterprises Inc.","Integrated Electrical Services Inc.","Intel Corporation","International Paper Co.","Interpublic Group of Companies Inc.","Interstate Bakeries Corporation","International Business Machines Corp.","International Flavors & Fragrances Inc.","International Multifoods Corporation","Intuit Inc.","IT Group Inc.","ITT Industries Inc.","Ivax Corp.","J.B. Hunt Transport Services Inc.","J.C. Penny Co.","J.P. Morgan Chase & Co.","Jabil Circuit Inc.","Jack In The Box Inc.","Jacobs Engineering Group Inc.","JDS Uniphase Corp.","Jefferson-Pilot Co.","John Hancock Financial Services Inc.","Johnson & Johnson","Johnson Controls Inc.","Jones Apparel Group Inc.","KB Home","Kellogg Company","Kellwood Company","Kelly Services Inc.","Kemet Corp.","Kennametal Inc.","Kerr-McGee Corporation","KeyCorp","KeySpan Corp.","Kimball International Inc.","Kimberly-Clark Corporation","Kindred Healthcare Inc.","KLA-Tencor Corporation","K-Mart Corp.","Knight-Ridder Inc.","Kohl's Corp.","KPMG Consulting Inc.","Kroger Co.","L-3 Communications Holdings Inc.","Laboratory Corporation of America Holdings","Lam Research Corporation","LandAmerica Financial Group Inc.","Lands' End Inc.","Landstar System Inc.","La-Z-Boy Inc.","Lear Corporation","Legg Mason Inc.","Leggett & Platt Inc.","Lehman Brothers Holdings Inc.","Lennar Corporation","Lennox International Inc.","Level 3 Communications Inc.","Levi Strauss & Co.","Lexmark International Inc.","Limited Inc.","Lincoln National Corporation","Linens 'n Things Inc.","Lithia Motors Inc.","Liz Claiborne Inc.","Lockheed Martin Corporation","Loews Corporation","Longs Drug Stores Corporation","Louisiana-Pacific Corporation","Lowe's Companies Inc.","LSI Logic Corporation","The LTV Corporation","The Lubrizol Corporation","Lucent Technologies Inc.","Lyondell Chemical Company","M & T Bank Corporation","Magellan Health Services Inc.","Mail-Well Inc.","Mandalay Resort Group","Manor Care Inc.","Manpower Inc.","Marathon Oil Corporation","Mariner Health Care Inc.","Markel Corporation","Marriott International Inc.","Marsh & McLennan Companies Inc.","Marsh Supermarkets Inc.","Marshall & Ilsley Corporation","Martin Marietta Materials Inc.","Masco Corporation","Massey Energy Company","MasTec Inc.","Mattel Inc.","Maxim Integrated Products Inc.","Maxtor Corporation","Maxxam Inc.","The May Department Stores Company","Maytag Corporation","MBNA Corporation","McCormick & Company Incorporated","McDonald's Corporation","The McGraw-Hill Companies Inc.","McKesson Corporation","McLeodUSA Incorporated","M.D.C. Holdings Inc.","MDU Resources Group Inc.","MeadWestvaco Corporation","Medtronic Inc.","Mellon Financial Corporation","The Men's Wearhouse Inc.","Merck & Co., Inc.","Mercury General Corporation","Merrill Lynch & Co. Inc.","Metaldyne Corporation","Metals USA Inc.","MetLife Inc.","Metris Companies Inc","MGIC Investment Corporation","MGM Mirage","Michaels Stores Inc.","Micron Technology Inc.","Microsoft Corporation","Milacron Inc.","Millennium Chemicals Inc.","Mirant Corporation","Mohawk Industries Inc.","Molex Incorporated","The MONY Group Inc.","Morgan Stanley Dean Witter & Co.","Motorola Inc.","MPS Group Inc.","Murphy Oil Corporation","Nabors Industries Inc","Nacco Industries Inc","Nash Finch Company","National City Corp.","National Commerce Financial Corporation","National Fuel Gas Company","National Oilwell Inc","National Rural Utilities Cooperative Finance Corporation","National Semiconductor Corporation","National Service Industries Inc","Navistar International Corporation","NCR Corporation","The Neiman Marcus Group Inc.","New Jersey Resources Corporation","New York Times Company","Newell Rubbermaid Inc","Newmont Mining Corporation","Nextel Communications Inc","Nicor Inc","Nike Inc","NiSource Inc","Noble Energy Inc","Nordstrom Inc","Norfolk Southern Corporation","Nortek Inc","North Fork Bancorporation Inc","Northeast Utilities System","Northern Trust Corporation","Northrop Grumman Corporation","NorthWestern Corporation","Novellus Systems Inc","NSTAR","NTL Incorporated","Nucor Corp","Nvidia Corp","NVR Inc","Northwest Airlines Corp","Occidental Petroleum Corp","Ocean Energy Inc","Office Depot Inc.","OfficeMax Inc","OGE Energy Corp","Oglethorpe Power Corp.","Ohio Casualty Corp.","Old Republic International Corp.","Olin Corp.","OM Group Inc","Omnicare Inc","Omnicom Group","On Semiconductor Corp","ONEOK Inc","Oracle Corp","Oshkosh Truck Corp","Outback Steakhouse Inc.","Owens & Minor Inc.","Owens Corning","Owens-Illinois Inc","Oxford Health Plans Inc","Paccar Inc","PacifiCare Health Systems Inc","Packaging Corp. of America","Pactiv Corp","Pall Corp","Pantry Inc","Park Place Entertainment Corp","Parker Hannifin Corp.","Pathmark Stores Inc.","Paychex Inc","Payless Shoesource Inc","Penn Traffic Co.","Pennzoil-Quaker State Company","Pentair Inc","Peoples Energy Corp.","PeopleSoft Inc","Pep Boys Manny, Moe & Jack","Potomac Electric Power Co.","Pepsi Bottling Group Inc.","PepsiAmericas Inc.","PepsiCo Inc.","Performance Food Group Co.","Perini Corp","PerkinElmer Inc","Perot Systems Corp","Petco Animal Supplies Inc.","Peter Kiewit Sons', Inc.","PETsMART Inc","Pfizer Inc","Pacific Gas & Electric Corp.","Pharmacia Corp","Phar Mor Inc.","Phelps Dodge Corp.","Philip Morris Companies Inc.","Phillips Petroleum Co","Phillips Van Heusen Corp.","Phoenix Companies Inc","Pier 1 Imports Inc.","Pilgrim's Pride Corporation","Pinnacle West Capital Corp","Pioneer-Standard Electronics Inc.","Pitney Bowes Inc.","Pittston Brinks Group","Plains All American Pipeline LP","PNC Financial Services Group Inc.","PNM Resources Inc","Polaris Industries Inc.","Polo Ralph Lauren Corp","PolyOne Corp","Popular Inc","Potlatch Corp","PPG Industries Inc","PPL Corp","Praxair Inc","Precision Castparts Corp","Premcor Inc.","Pride International Inc","Primedia Inc","Principal Financial Group Inc.","Procter & Gamble Co.","Pro-Fac Cooperative Inc.","Progress Energy Inc","Progressive Corporation","Protective Life Corp","Provident Financial Group","Providian Financial Corp.","Prudential Financial Inc.","PSS World Medical Inc","Public Service Enterprise Group Inc.","Publix Super Markets Inc.","Puget Energy Inc.","Pulte Homes Inc","Qualcomm Inc","Quanta Services Inc.","Quantum Corp","Quest Diagnostics Inc.","Questar Corp","Quintiles Transnational","Qwest Communications Intl Inc","R.J. Reynolds Tobacco Company","R.R. Donnelley & Sons Company","Radio Shack Corporation","Raymond James Financial Inc.","Raytheon Company","Reader's Digest Association Inc.","Reebok International Ltd.","Regions Financial Corp.","Regis Corporation","Reliance Steel & Aluminum Co.","Reliant Energy Inc.","Rent A Center Inc","Republic Services Inc","Revlon Inc","RGS Energy Group Inc","Rite Aid Corp","Riverwood Holding Inc.","RoadwayCorp","Robert Half International Inc.","Rock-Tenn Co","Rockwell Automation Inc","Rockwell Collins Inc","Rohm & Haas Co.","Ross Stores Inc","RPM Inc.","Ruddick Corp","Ryder System Inc","Ryerson Tull Inc","Ryland Group Inc.","Sabre Holdings Corp","Safeco Corp","Safeguard Scientifics Inc.","Safeway Inc","Saks Inc","Sanmina-SCI Inc","Sara Lee Corp","SBC Communications Inc","Scana Corp.","Schering-Plough Corp","Scholastic Corp","SCI Systems Onc.","Science Applications Intl. Inc.","Scientific-Atlanta Inc","Scotts Company","Seaboard Corp","Sealed Air Corp","Sears Roebuck & Co","Sempra Energy","Sequa Corp","Service Corp. International","ServiceMaster Co","Shaw Group Inc","Sherwin-Williams Company","Shopko Stores Inc","Siebel Systems Inc","Sierra Health Services Inc","Sierra Pacific Resources","Silgan Holdings Inc.","Silicon Graphics Inc","Simon Property Group Inc","SLM Corporation","Smith International Inc","Smithfield Foods Inc","Smurfit-Stone Container Corp","Snap-On Inc","Solectron Corp","Solutia Inc","Sonic Automotive Inc.","Sonoco Products Co.","Southern Company","Southern Union Company","SouthTrust Corp.","Southwest Airlines Co","Southwest Gas Corp","Sovereign Bancorp Inc.","Spartan Stores Inc","Spherion Corp","Sports Authority Inc","Sprint Corp.","SPX Corp","St. Jude Medical Inc","St. Paul Cos.","Staff Leasing Inc.","StanCorp Financial Group Inc","Standard Pacific Corp.","Stanley Works","Staples Inc","Starbucks Corp","Starwood Hotels & Resorts Worldwide Inc","State Street Corp.","Stater Bros. Holdings Inc.","Steelcase Inc","Stein Mart Inc","Stewart & Stevenson Services Inc","Stewart Information Services Corp","Stilwell Financial Inc","Storage Technology Corporation","Stryker Corp","Sun Healthcare Group Inc.","Sun Microsystems Inc.","SunGard Data Systems Inc.","Sunoco Inc.","SunTrust Banks Inc","Supervalu Inc","Swift Transportation, Co., Inc","Symbol Technologies Inc","Synovus Financial Corp.","Sysco Corp","Systemax Inc.","Target Corp.","Tech Data Corporation","TECO Energy Inc","Tecumseh Products Company","Tektronix Inc","Teleflex Incorporated","Telephone & Data Systems Inc","Tellabs Inc.","Temple-Inland Inc","Tenet Healthcare Corporation","Tenneco Automotive Inc.","Teradyne Inc","Terex Corp","Tesoro Petroleum Corp.","Texas Industries Inc.","Texas Instruments Incorporated","Textron Inc","Thermo Electron Corporation","Thomas & Betts Corporation","Tiffany & Co","Timken Company","TJX Companies Inc","TMP Worldwide Inc","Toll Brothers Inc","Torchmark Corporation","Toro Company","Tower Automotive Inc.","Toys 'R' Us Inc","Trans World Entertainment Corp.","TransMontaigne Inc","Transocean Inc","TravelCenters of America Inc.","Triad Hospitals Inc","Tribune Company","Trigon Healthcare Inc.","Trinity Industries Inc","Trump Hotels & Casino Resorts Inc.","TruServ Corporation","TRW Inc","TXU Corp","Tyson Foods Inc","U.S. Bancorp","U.S. Industries Inc.","UAL Corporation","UGI Corporation","Unified Western Grocers Inc","Union Pacific Corporation","Union Planters Corp","Unisource Energy Corp","Unisys Corporation","United Auto Group Inc","United Defense Industries Inc.","United Parcel Service Inc","United Rentals Inc","United Stationers Inc","United Technologies Corporation","UnitedHealth Group Incorporated","Unitrin Inc","Universal Corporation","Universal Forest Products Inc","Universal Health Services Inc","Unocal Corporation","Unova Inc","UnumProvident Corporation","URS Corporation","US Airways Group Inc","US Oncology Inc","USA Interactive","USFreighways Corporation","USG Corporation","UST Inc","Valero Energy Corporation","Valspar Corporation","Value City Department Stores Inc","Varco International Inc","Vectren Corporation","Veritas Software Corporation","Verizon Communications Inc","VF Corporation","Viacom Inc","Viad Corp","Viasystems Group Inc","Vishay Intertechnology Inc","Visteon Corporation","Volt Information Sciences Inc","Vulcan Materials Company","W.R. Berkley Corporation","W.R. Grace & Co","W.W. Grainger Inc","Wachovia Corporation","Wakenhut Corporation","Walgreen Co","Wallace Computer Services Inc","Wal-Mart Stores Inc","Walt Disney Co","Walter Industries Inc","Washington Mutual Inc","Washington Post Co.","Waste Management Inc","Watsco Inc","Weatherford International Inc","Weis Markets Inc.","Wellpoint Health Networks Inc","Wells Fargo & Company","Wendy's International Inc","Werner Enterprises Inc","WESCO International Inc","Western Digital Inc","Western Gas Resources Inc","WestPoint Stevens Inc","Weyerhauser Company","WGL Holdings Inc","Whirlpool Corporation","Whole Foods Market Inc","Willamette Industries Inc.","Williams Companies Inc","Williams Sonoma Inc","Winn Dixie Stores Inc","Wisconsin Energy Corporation","Wm Wrigley Jr Company","World Fuel Services Corporation","WorldCom Inc","Worthington Industries Inc","WPS Resources Corporation","Wyeth","Wyndham International Inc","Xcel Energy Inc","Xerox Corp","Xilinx Inc","XO Communications Inc","Yellow Corporation","York International Corp","Yum Brands Inc.","Zale Corporation","Zions Bancorporation"],fileExtension:{raster:["bmp","gif","gpl","ico","jpeg","psd","png","psp","raw","tiff"],vector:["3dv","amf","awg","ai","cgm","cdr","cmx","dxf","e2d","egt","eps","fs","odg","svg","xar"],"3d":["3dmf","3dm","3mf","3ds","an8","aoi","blend","cal3d","cob","ctm","iob","jas","max","mb","mdx","obj","x","x3d"],document:["doc","docx","dot","html","xml","odt","odm","ott","csv","rtf","tex","xhtml","xps"]},timezones:[{name:"Dateline Standard Time",abbr:"DST",offset:-12,isdst:!1,text:"(UTC-12:00) International Date Line West",utc:["Etc/GMT+12"]},{name:"UTC-11",abbr:"U",offset:-11,isdst:!1,text:"(UTC-11:00) Coordinated Universal Time-11",utc:["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{name:"Hawaiian Standard Time",abbr:"HST",offset:-10,isdst:!1,text:"(UTC-10:00) Hawaii",utc:["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{name:"Alaskan Standard Time",abbr:"AKDT",offset:-8,isdst:!0,text:"(UTC-09:00) Alaska",utc:["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{name:"Pacific Standard Time (Mexico)",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Baja California",utc:["America/Santa_Isabel"]},{name:"Pacific Standard Time",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Pacific Time (US & Canada)",utc:["America/Dawson","America/Los_Angeles","America/Tijuana","America/Vancouver","America/Whitehorse","PST8PDT"]},{name:"US Mountain Standard Time",abbr:"UMST",offset:-7,isdst:!1,text:"(UTC-07:00) Arizona",utc:["America/Creston","America/Dawson_Creek","America/Hermosillo","America/Phoenix","Etc/GMT+7"]},{name:"Mountain Standard Time (Mexico)",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",utc:["America/Chihuahua","America/Mazatlan"]},{name:"Mountain Standard Time",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Mountain Time (US & Canada)",utc:["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{name:"Central America Standard Time",abbr:"CAST",offset:-6,isdst:!1,text:"(UTC-06:00) Central America",utc:["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{name:"Central Standard Time",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Central Time (US & Canada)",utc:["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{name:"Central Standard Time (Mexico)",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",utc:["America/Bahia_Banderas","America/Cancun","America/Merida","America/Mexico_City","America/Monterrey"]},{name:"Canada Central Standard Time",abbr:"CCST",offset:-6,isdst:!1,text:"(UTC-06:00) Saskatchewan",utc:["America/Regina","America/Swift_Current"]},{name:"SA Pacific Standard Time",abbr:"SPST",offset:-5,isdst:!1,text:"(UTC-05:00) Bogota, Lima, Quito",utc:["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},{name:"Eastern Standard Time",abbr:"EDT",offset:-4,isdst:!0,text:"(UTC-05:00) Eastern Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto","EST5EDT"]},{name:"US Eastern Standard Time",abbr:"UEDT",offset:-4,isdst:!0,text:"(UTC-05:00) Indiana (East)",utc:["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{name:"Venezuela Standard Time",abbr:"VST",offset:-4.5,isdst:!1,text:"(UTC-04:30) Caracas",utc:["America/Caracas"]},{name:"Paraguay Standard Time",abbr:"PST",offset:-4,isdst:!1,text:"(UTC-04:00) Asuncion",utc:["America/Asuncion"]},{name:"Atlantic Standard Time",abbr:"ADT",offset:-3,isdst:!0,text:"(UTC-04:00) Atlantic Time (Canada)",utc:["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{name:"Central Brazilian Standard Time",abbr:"CBST",offset:-4,isdst:!1,text:"(UTC-04:00) Cuiaba",utc:["America/Campo_Grande","America/Cuiaba"]},{name:"SA Western Standard Time",abbr:"SWST",offset:-4,isdst:!1,text:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",utc:["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon","America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{name:"Pacific SA Standard Time",abbr:"PSST",offset:-4,isdst:!1,text:"(UTC-04:00) Santiago",utc:["America/Santiago","Antarctica/Palmer"]},{name:"Newfoundland Standard Time",abbr:"NDT",offset:-2.5,isdst:!0,text:"(UTC-03:30) Newfoundland",utc:["America/St_Johns"]},{name:"E. South America Standard Time",abbr:"ESAST",offset:-3,isdst:!1,text:"(UTC-03:00) Brasilia",utc:["America/Sao_Paulo"]},{name:"Argentina Standard Time",abbr:"AST",offset:-3,isdst:!1,text:"(UTC-03:00) Buenos Aires",utc:["America/Argentina/La_Rioja","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{name:"SA Eastern Standard Time",abbr:"SEST",offset:-3,isdst:!1,text:"(UTC-03:00) Cayenne, Fortaleza",utc:["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza","America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{name:"Greenland Standard Time",abbr:"GDT",offset:-2,isdst:!0,text:"(UTC-03:00) Greenland",utc:["America/Godthab"]},{name:"Montevideo Standard Time",abbr:"MST",offset:-3,isdst:!1,text:"(UTC-03:00) Montevideo",utc:["America/Montevideo"]},{name:"Bahia Standard Time",abbr:"BST",offset:-3,isdst:!1,text:"(UTC-03:00) Salvador",utc:["America/Bahia"]},{name:"UTC-02",abbr:"U",offset:-2,isdst:!1,text:"(UTC-02:00) Coordinated Universal Time-02",utc:["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{name:"Mid-Atlantic Standard Time",abbr:"MDT",offset:-1,isdst:!0,text:"(UTC-02:00) Mid-Atlantic - Old"},{name:"Azores Standard Time",abbr:"ADT",offset:0,isdst:!0,text:"(UTC-01:00) Azores",utc:["America/Scoresbysund","Atlantic/Azores"]},{name:"Cape Verde Standard Time",abbr:"CVST",offset:-1,isdst:!1,text:"(UTC-01:00) Cape Verde Is.",utc:["Atlantic/Cape_Verde","Etc/GMT+1"]},{name:"Morocco Standard Time",abbr:"MDT",offset:1,isdst:!0,text:"(UTC) Casablanca",utc:["Africa/Casablanca","Africa/El_Aaiun"]},{name:"UTC",abbr:"CUT",offset:0,isdst:!1,text:"(UTC) Coordinated Universal Time",utc:["America/Danmarkshavn","Etc/GMT"]},{name:"GMT Standard Time",abbr:"GDT",offset:1,isdst:!0,text:"(UTC) Dublin, Edinburgh, Lisbon, London",utc:["Atlantic/Canary","Atlantic/Faeroe","Atlantic/Madeira","Europe/Dublin","Europe/Guernsey","Europe/Isle_of_Man","Europe/Jersey","Europe/Lisbon","Europe/London"]},{name:"Greenwich Standard Time",abbr:"GST",offset:0,isdst:!1,text:"(UTC) Monrovia, Reykjavik",utc:["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},{name:"W. Europe Standard Time",abbr:"WEDT",offset:2,isdst:!0,text:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",utc:["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{name:"Central Europe Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",utc:["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{name:"Romance Standard Time",abbr:"RDT",offset:2,isdst:!0,text:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",utc:["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{name:"Central European Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",utc:["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{name:"W. Central Africa Standard Time",abbr:"WCAST",offset:1,isdst:!1,text:"(UTC+01:00) West Central Africa",utc:["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},{name:"Namibia Standard Time",abbr:"NST",offset:1,isdst:!1,text:"(UTC+01:00) Windhoek",utc:["Africa/Windhoek"]},{name:"GTB Standard Time",abbr:"GDT",offset:3,isdst:!0,text:"(UTC+02:00) Athens, Bucharest",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{name:"Middle East Standard Time",abbr:"MEDT",offset:3,isdst:!0,text:"(UTC+02:00) Beirut",utc:["Asia/Beirut"]},{name:"Egypt Standard Time",abbr:"EST",offset:2,isdst:!1,text:"(UTC+02:00) Cairo",utc:["Africa/Cairo"]},{name:"Syria Standard Time",abbr:"SDT",offset:3,isdst:!0,text:"(UTC+02:00) Damascus",utc:["Asia/Damascus"]},{name:"E. Europe Standard Time",abbr:"EEDT",offset:3,isdst:!0,text:"(UTC+02:00) E. Europe"},{name:"South Africa Standard Time",abbr:"SAST",offset:2,isdst:!1,text:"(UTC+02:00) Harare, Pretoria",utc:["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali","Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{name:"FLE Standard Time",abbr:"FDT",offset:3,isdst:!0,text:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",utc:["Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{name:"Turkey Standard Time",abbr:"TDT",offset:3,isdst:!0,text:"(UTC+02:00) Istanbul",utc:["Europe/Istanbul"]},{name:"Israel Standard Time",abbr:"JDT",offset:3,isdst:!0,text:"(UTC+02:00) Jerusalem",utc:["Asia/Jerusalem"]},{name:"Libya Standard Time",abbr:"LST",offset:2,isdst:!1,text:"(UTC+02:00) Tripoli",utc:["Africa/Tripoli"]},{name:"Jordan Standard Time",abbr:"JST",offset:3,isdst:!1,text:"(UTC+03:00) Amman",utc:["Asia/Amman"]},{name:"Arabic Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Baghdad",utc:["Asia/Baghdad"]},{name:"Kaliningrad Standard Time",abbr:"KST",offset:3,isdst:!1,text:"(UTC+03:00) Kaliningrad, Minsk",utc:["Europe/Kaliningrad","Europe/Minsk"]},{name:"Arab Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Kuwait, Riyadh",utc:["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{name:"E. Africa Standard Time",abbr:"EAST",offset:3,isdst:!1,text:"(UTC+03:00) Nairobi",utc:["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{name:"Iran Standard Time",abbr:"IDT",offset:4.5,isdst:!0,text:"(UTC+03:30) Tehran",utc:["Asia/Tehran"]},{name:"Arabian Standard Time",abbr:"AST",offset:4,isdst:!1,text:"(UTC+04:00) Abu Dhabi, Muscat",utc:["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{name:"Azerbaijan Standard Time",abbr:"ADT",offset:5,isdst:!0,text:"(UTC+04:00) Baku",utc:["Asia/Baku"]},{name:"Russian Standard Time",abbr:"RST",offset:4,isdst:!1,text:"(UTC+04:00) Moscow, St. Petersburg, Volgograd",utc:["Europe/Moscow","Europe/Samara","Europe/Simferopol","Europe/Volgograd"]},{name:"Mauritius Standard Time",abbr:"MST",offset:4,isdst:!1,text:"(UTC+04:00) Port Louis",utc:["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{name:"Georgian Standard Time",abbr:"GST",offset:4,isdst:!1,text:"(UTC+04:00) Tbilisi",utc:["Asia/Tbilisi"]},{name:"Caucasus Standard Time",abbr:"CST",offset:4,isdst:!1,text:"(UTC+04:00) Yerevan",utc:["Asia/Yerevan"]},{name:"Afghanistan Standard Time",abbr:"AST",offset:4.5,isdst:!1,text:"(UTC+04:30) Kabul",utc:["Asia/Kabul"]},{name:"West Asia Standard Time",abbr:"WAST",offset:5,isdst:!1,text:"(UTC+05:00) Ashgabat, Tashkent",utc:["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand","Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{name:"Pakistan Standard Time",abbr:"PST",offset:5,isdst:!1,text:"(UTC+05:00) Islamabad, Karachi",utc:["Asia/Karachi"]},{name:"India Standard Time",abbr:"IST",offset:5.5,isdst:!1,text:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",utc:["Asia/Calcutta"]},{name:"Sri Lanka Standard Time",abbr:"SLST",offset:5.5,isdst:!1,text:"(UTC+05:30) Sri Jayawardenepura",utc:["Asia/Colombo"]},{name:"Nepal Standard Time",abbr:"NST",offset:5.75,isdst:!1,text:"(UTC+05:45) Kathmandu",utc:["Asia/Katmandu"]},{name:"Central Asia Standard Time",abbr:"CAST",offset:6,isdst:!1,text:"(UTC+06:00) Astana",utc:["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{name:"Bangladesh Standard Time",abbr:"BST",offset:6,isdst:!1,text:"(UTC+06:00) Dhaka",utc:["Asia/Dhaka","Asia/Thimphu"]},{name:"Ekaterinburg Standard Time",abbr:"EST",offset:6,isdst:!1,text:"(UTC+06:00) Ekaterinburg",utc:["Asia/Yekaterinburg"]},{name:"Myanmar Standard Time",abbr:"MST",offset:6.5,isdst:!1,text:"(UTC+06:30) Yangon (Rangoon)",utc:["Asia/Rangoon","Indian/Cocos"]},{name:"SE Asia Standard Time",abbr:"SAST",offset:7,isdst:!1,text:"(UTC+07:00) Bangkok, Hanoi, Jakarta",utc:["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},{name:"N. Central Asia Standard Time",abbr:"NCAST",offset:7,isdst:!1,text:"(UTC+07:00) Novosibirsk",utc:["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk"]},{name:"China Standard Time",abbr:"CST",offset:8,isdst:!1,text:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",utc:["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{name:"North Asia Standard Time",abbr:"NAST",offset:8,isdst:!1,text:"(UTC+08:00) Krasnoyarsk",utc:["Asia/Krasnoyarsk"]},{name:"Singapore Standard Time",abbr:"MPST",offset:8,isdst:!1,text:"(UTC+08:00) Kuala Lumpur, Singapore",utc:["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{name:"W. Australia Standard Time",abbr:"WAST",offset:8,isdst:!1,text:"(UTC+08:00) Perth",utc:["Antarctica/Casey","Australia/Perth"]},{name:"Taipei Standard Time",abbr:"TST",offset:8,isdst:!1,text:"(UTC+08:00) Taipei",utc:["Asia/Taipei"]},{name:"Ulaanbaatar Standard Time",abbr:"UST",offset:8,isdst:!1,text:"(UTC+08:00) Ulaanbaatar",utc:["Asia/Choibalsan","Asia/Ulaanbaatar"]},{name:"North Asia East Standard Time",abbr:"NAEST",offset:9,isdst:!1,text:"(UTC+09:00) Irkutsk",utc:["Asia/Irkutsk"]},{name:"Tokyo Standard Time",abbr:"TST",offset:9,isdst:!1,text:"(UTC+09:00) Osaka, Sapporo, Tokyo",utc:["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{name:"Korea Standard Time",abbr:"KST",offset:9,isdst:!1,text:"(UTC+09:00) Seoul",utc:["Asia/Pyongyang","Asia/Seoul"]},{name:"Cen. Australia Standard Time",abbr:"CAST",offset:9.5,isdst:!1,text:"(UTC+09:30) Adelaide",utc:["Australia/Adelaide","Australia/Broken_Hill"]},{name:"AUS Central Standard Time",abbr:"ACST",offset:9.5,isdst:!1,text:"(UTC+09:30) Darwin",utc:["Australia/Darwin"]},{name:"E. Australia Standard Time",abbr:"EAST",offset:10,isdst:!1,text:"(UTC+10:00) Brisbane",utc:["Australia/Brisbane","Australia/Lindeman"]},{name:"AUS Eastern Standard Time",abbr:"AEST",offset:10,isdst:!1,text:"(UTC+10:00) Canberra, Melbourne, Sydney",utc:["Australia/Melbourne","Australia/Sydney"]},{name:"West Pacific Standard Time",abbr:"WPST",offset:10,isdst:!1,text:"(UTC+10:00) Guam, Port Moresby",utc:["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{name:"Tasmania Standard Time",abbr:"TST",offset:10,isdst:!1,text:"(UTC+10:00) Hobart",utc:["Australia/Currie","Australia/Hobart"]},{name:"Yakutsk Standard Time",abbr:"YST",offset:10,isdst:!1,text:"(UTC+10:00) Yakutsk",utc:["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{name:"Central Pacific Standard Time",abbr:"CPST",offset:11,isdst:!1,text:"(UTC+11:00) Solomon Is., New Caledonia",utc:["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{name:"Vladivostok Standard Time",abbr:"VST",offset:11,isdst:!1,text:"(UTC+11:00) Vladivostok",utc:["Asia/Sakhalin","Asia/Ust-Nera","Asia/Vladivostok"]},{name:"New Zealand Standard Time",abbr:"NZST",offset:12,isdst:!1,text:"(UTC+12:00) Auckland, Wellington",utc:["Antarctica/McMurdo","Pacific/Auckland"]},{name:"UTC+12",abbr:"U",offset:12,isdst:!1,text:"(UTC+12:00) Coordinated Universal Time+12",utc:["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake","Pacific/Wallis"]},{name:"Fiji Standard Time",abbr:"FST",offset:12,isdst:!1,text:"(UTC+12:00) Fiji",utc:["Pacific/Fiji"]},{name:"Magadan Standard Time",abbr:"MST",offset:12,isdst:!1,text:"(UTC+12:00) Magadan",utc:["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{name:"Kamchatka Standard Time",abbr:"KDT",offset:13,isdst:!0,text:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old"},{name:"Tonga Standard Time",abbr:"TST",offset:13,isdst:!1,text:"(UTC+13:00) Nuku'alofa",utc:["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{name:"Samoa Standard Time",abbr:"SST",offset:13,isdst:!1,text:"(UTC+13:00) Samoa",utc:["Pacific/Apia"]}],profession:["Airline Pilot","Academic Team","Accountant","Account Executive","Actor","Actuary","Acquisition Analyst","Administrative Asst.","Administrative Analyst","Administrator","Advertising Director","Aerospace Engineer","Agent","Agricultural Inspector","Agricultural Scientist","Air Traffic Controller","Animal Trainer","Anthropologist","Appraiser","Architect","Art Director","Artist","Astronomer","Athletic Coach","Auditor","Author","Baker","Banker","Bankruptcy Attorney","Benefits Manager","Biologist","Bio-feedback Specialist","Biomedical Engineer","Biotechnical Researcher","Broadcaster","Broker","Building Manager","Building Contractor","Building Inspector","Business Analyst","Business Planner","Business Manager","Buyer","Call Center Manager","Career Counselor","Cash Manager","Ceramic Engineer","Chief Executive Officer","Chief Operation Officer","Chef","Chemical Engineer","Chemist","Child Care Manager","Chief Medical Officer","Chiropractor","Cinematographer","City Housing Manager","City Manager","Civil Engineer","Claims Manager","Clinical Research Assistant","Collections Manager","Compliance Manager","Comptroller","Computer Manager","Commercial Artist","Communications Affairs Director","Communications Director","Communications Engineer","Compensation Analyst","Computer Programmer","Computer Ops. Manager","Computer Engineer","Computer Operator","Computer Graphics Specialist","Construction Engineer","Construction Manager","Consultant","Consumer Relations Manager","Contract Administrator","Copyright Attorney","Copywriter","Corporate Planner","Corrections Officer","Cosmetologist","Credit Analyst","Cruise Director","Chief Information Officer","Chief Technology Officer","Customer Service Manager","Cryptologist","Dancer","Data Security Manager","Database Manager","Day Care Instructor","Dentist","Designer","Design Engineer","Desktop Publisher","Developer","Development Officer","Diamond Merchant","Dietitian","Direct Marketer","Director","Distribution Manager","Diversity Manager","Economist","EEO Compliance Manager","Editor","Education Adminator","Electrical Engineer","Electro Optical Engineer","Electronics Engineer","Embassy Management","Employment Agent","Engineer Technician","Entrepreneur","Environmental Analyst","Environmental Attorney","Environmental Engineer","Environmental Specialist","Escrow Officer","Estimator","Executive Assistant","Executive Director","Executive Recruiter","Facilities Manager","Family Counselor","Fashion Events Manager","Fashion Merchandiser","Fast Food Manager","Film Producer","Film Production Assistant","Financial Analyst","Financial Planner","Financier","Fine Artist","Wildlife Specialist","Fitness Consultant","Flight Attendant","Flight Engineer","Floral Designer","Food & Beverage Director","Food Service Manager","Forestry Technician","Franchise Management","Franchise Sales","Fraud Investigator","Freelance Writer","Fund Raiser","General Manager","Geologist","General Counsel","Geriatric Specialist","Gerontologist","Glamour Photographer","Golf Club Manager","Gourmet Chef","Graphic Designer","Grounds Keeper","Hazardous Waste Manager","Health Care Manager","Health Therapist","Health Service Administrator","Hearing Officer","Home Economist","Horticulturist","Hospital Administrator","Hotel Manager","Human Resources Manager","Importer","Industrial Designer","Industrial Engineer","Information Director","Inside Sales","Insurance Adjuster","Interior Decorator","Internal Controls Director","International Acct.","International Courier","International Lawyer","Interpreter","Investigator","Investment Banker","Investment Manager","IT Architect","IT Project Manager","IT Systems Analyst","Jeweler","Joint Venture Manager","Journalist","Labor Negotiator","Labor Organizer","Labor Relations Manager","Lab Services Director","Lab Technician","Land Developer","Landscape Architect","Law Enforcement Officer","Lawyer","Lead Software Engineer","Lead Software Test Engineer","Leasing Manager","Legal Secretary","Library Manager","Litigation Attorney","Loan Officer","Lobbyist","Logistics Manager","Maintenance Manager","Management Consultant","Managed Care Director","Managing Partner","Manufacturing Director","Manpower Planner","Marine Biologist","Market Res. Analyst","Marketing Director","Materials Manager","Mathematician","Membership Chairman","Mechanic","Mechanical Engineer","Media Buyer","Medical Investor","Medical Secretary","Medical Technician","Mental Health Counselor","Merchandiser","Metallurgical Engineering","Meteorologist","Microbiologist","MIS Manager","Motion Picture Director","Multimedia Director","Musician","Network Administrator","Network Specialist","Network Operator","New Product Manager","Novelist","Nuclear Engineer","Nuclear Specialist","Nutritionist","Nursing Administrator","Occupational Therapist","Oceanographer","Office Manager","Operations Manager","Operations Research Director","Optical Technician","Optometrist","Organizational Development Manager","Outplacement Specialist","Paralegal","Park Ranger","Patent Attorney","Payroll Specialist","Personnel Specialist","Petroleum Engineer","Pharmacist","Photographer","Physical Therapist","Physician","Physician Assistant","Physicist","Planning Director","Podiatrist","Political Analyst","Political Scientist","Politician","Portfolio Manager","Preschool Management","Preschool Teacher","Principal","Private Banker","Private Investigator","Probation Officer","Process Engineer","Producer","Product Manager","Product Engineer","Production Engineer","Production Planner","Professional Athlete","Professional Coach","Professor","Project Engineer","Project Manager","Program Manager","Property Manager","Public Administrator","Public Safety Director","PR Specialist","Publisher","Purchasing Agent","Publishing Director","Quality Assurance Specialist","Quality Control Engineer","Quality Control Inspector","Radiology Manager","Railroad Engineer","Real Estate Broker","Recreational Director","Recruiter","Redevelopment Specialist","Regulatory Affairs Manager","Registered Nurse","Rehabilitation Counselor","Relocation Manager","Reporter","Research Specialist","Restaurant Manager","Retail Store Manager","Risk Analyst","Safety Engineer","Sales Engineer","Sales Trainer","Sales Promotion Manager","Sales Representative","Sales Manager","Service Manager","Sanitation Engineer","Scientific Programmer","Scientific Writer","Securities Analyst","Security Consultant","Security Director","Seminar Presenter","Ship's Officer","Singer","Social Director","Social Program Planner","Social Research","Social Scientist","Social Worker","Sociologist","Software Developer","Software Engineer","Software Test Engineer","Soil Scientist","Special Events Manager","Special Education Teacher","Special Projects Director","Speech Pathologist","Speech Writer","Sports Event Manager","Statistician","Store Manager","Strategic Alliance Director","Strategic Planning Director","Stress Reduction Specialist","Stockbroker","Surveyor","Structural Engineer","Superintendent","Supply Chain Director","System Engineer","Systems Analyst","Systems Programmer","System Administrator","Tax Specialist","Teacher","Technical Support Specialist","Technical Illustrator","Technical Writer","Technology Director","Telecom Analyst","Telemarketer","Theatrical Director","Title Examiner","Tour Escort","Tour Guide Director","Traffic Manager","Trainer Translator","Transportation Manager","Travel Agent","Treasurer","TV Programmer","Underwriter","Union Representative","University Administrator","University Dean","Urban Planner","Veterinarian","Vendor Relations Director","Viticulturist","Warehouse Manager"],animals:{ocean:["Acantharea","Anemone","Angelfish King","Ahi Tuna","Albacore","American Oyster","Anchovy","Armored Snail","Arctic Char","Atlantic Bluefin Tuna","Atlantic Cod","Atlantic Goliath Grouper","Atlantic Trumpetfish","Atlantic Wolffish","Baleen Whale","Banded Butterflyfish","Banded Coral Shrimp","Banded Sea Krait","Barnacle","Barndoor Skate","Barracuda","Basking Shark","Bass","Beluga Whale","Bluebanded Goby","Bluehead Wrasse","Bluefish","Bluestreak Cleaner-Wrasse","Blue Marlin","Blue Shark","Blue Spiny Lobster","Blue Tang","Blue Whale","Broadclub Cuttlefish","Bull Shark","Chambered Nautilus","Chilean Basket Star","Chilean Jack Mackerel","Chinook Salmon","Christmas Tree Worm","Clam","Clown Anemonefish","Clown Triggerfish","Cod","Coelacanth","Cockscomb Cup Coral","Common Fangtooth","Conch","Cookiecutter Shark","Copepod","Coral","Corydoras","Cownose Ray","Crab","Crown-of-Thorns Starfish","Cushion Star","Cuttlefish","California Sea Otters","Dolphin","Dolphinfish","Dory","Devil Fish","Dugong","Dumbo Octopus","Dungeness Crab","Eccentric Sand Dollar","Edible Sea Cucumber","Eel","Elephant Seal","Elkhorn Coral","Emperor Shrimp","Estuarine Crocodile","Fathead Sculpin","Fiddler Crab","Fin Whale","Flameback","Flamingo Tongue Snail","Flashlight Fish","Flatback Turtle","Flatfish","Flying Fish","Flounder","Fluke","French Angelfish","Frilled Shark","Fugu (also called Pufferfish)","Gar","Geoduck","Giant Barrel Sponge","Giant Caribbean Sea Anemone","Giant Clam","Giant Isopod","Giant Kingfish","Giant Oarfish","Giant Pacific Octopus","Giant Pyrosome","Giant Sea Star","Giant Squid","Glowing Sucker Octopus","Giant Tube Worm","Goblin Shark","Goosefish","Great White Shark","Greenland Shark","Grey Atlantic Seal","Grouper","Grunion","Guineafowl Puffer","Haddock","Hake","Halibut","Hammerhead Shark","Hapuka","Harbor Porpoise","Harbor Seal","Hatchetfish","Hawaiian Monk Seal","Hawksbill Turtle","Hector's Dolphin","Hermit Crab","Herring","Hoki","Horn Shark","Horseshoe Crab","Humpback Anglerfish","Humpback Whale","Icefish","Imperator Angelfish","Irukandji Jellyfish","Isopod","Ivory Bush Coral","Japanese Spider Crab","Jellyfish","John Dory","Juan Fernandez Fur Seal","Killer Whale","Kiwa Hirsuta","Krill","Lagoon Triggerfish","Lamprey","Leafy Seadragon","Leopard Seal","Limpet","Ling","Lionfish","Lions Mane Jellyfish","Lobe Coral","Lobster","Loggerhead Turtle","Longnose Sawshark","Longsnout Seahorse","Lophelia Coral","Marrus Orthocanna","Manatee","Manta Ray","Marlin","Megamouth Shark","Mexican Lookdown","Mimic Octopus","Moon Jelly","Mollusk","Monkfish","Moray Eel","Mullet","Mussel","Megaladon","Napoleon Wrasse","Nassau Grouper","Narwhal","Nautilus","Needlefish","Northern Seahorse","North Atlantic Right Whale","Northern Red Snapper","Norway Lobster","Nudibranch","Nurse Shark","Oarfish","Ocean Sunfish","Oceanic Whitetip Shark","Octopus","Olive Sea Snake","Orange Roughy","Ostracod","Otter","Oyster","Pacific Angelshark","Pacific Blackdragon","Pacific Halibut","Pacific Sardine","Pacific Sea Nettle Jellyfish","Pacific White Sided Dolphin","Pantropical Spotted Dolphin","Patagonian Toothfish","Peacock Mantis Shrimp","Pelagic Thresher Shark","Penguin","Peruvian Anchoveta","Pilchard","Pink Salmon","Pinniped","Plankton","Porpoise","Polar Bear","Portuguese Man o' War","Pycnogonid Sea Spider","Quahog","Queen Angelfish","Queen Conch","Queen Parrotfish","Queensland Grouper","Ragfish","Ratfish","Rattail Fish","Ray","Red Drum","Red King Crab","Ringed Seal","Risso's Dolphin","Ross Seals","Sablefish","Salmon","Sand Dollar","Sandbar Shark","Sawfish","Sarcastic Fringehead","Scalloped Hammerhead Shark","Seahorse","Sea Cucumber","Sea Lion","Sea Urchin","Seal","Shark","Shortfin Mako Shark","Shovelnose Guitarfish","Shrimp","Silverside Fish","Skipjack Tuna","Slender Snipe Eel","Smalltooth Sawfish","Smelts","Sockeye Salmon","Southern Stingray","Sponge","Spotted Porcupinefish","Spotted Dolphin","Spotted Eagle Ray","Spotted Moray","Squid","Squidworm","Starfish","Stickleback","Stonefish","Stoplight Loosejaw","Sturgeon","Swordfish","Tan Bristlemouth","Tasseled Wobbegong","Terrible Claw Lobster","Threespot Damselfish","Tiger Prawn","Tiger Shark","Tilefish","Toadfish","Tropical Two-Wing Flyfish","Tuna","Umbrella Squid","Velvet Crab","Venus Flytrap Sea Anemone","Vigtorniella Worm","Viperfish","Vampire Squid","Vaquita","Wahoo","Walrus","West Indian Manatee","Whale","Whale Shark","Whiptail Gulper","White-Beaked Dolphin","White-Ring Garden Eel","White Shrimp","Wobbegong","Wrasse","Wreckfish","Xiphosura","Yellowtail Damselfish","Yelloweye Rockfish","Yellow Cup Black Coral","Yellow Tube Sponge","Yellowfin Tuna","Zebrashark","Zooplankton"],desert:["Aardwolf","Addax","African Wild Ass","Ant","Antelope","Armadillo","Baboon","Badger","Bat","Bearded Dragon","Beetle","Bird","Black-footed Cat","Boa","Brown Bear","Bustard","Butterfly","Camel","Caracal","Caracara","Caterpillar","Centipede","Cheetah","Chipmunk","Chuckwalla","Climbing Mouse","Coati","Cobra","Cotton Rat","Cougar","Courser","Crane Fly","Crow","Dassie Rat","Dove","Dunnart","Eagle","Echidna","Elephant","Emu","Falcon","Fly","Fox","Frogmouth","Gecko","Geoffroy's Cat","Gerbil","Grasshopper","Guanaco","Gundi","Hamster","Hawk","Hedgehog","Hyena","Hyrax","Jackal","Kangaroo","Kangaroo Rat","Kestrel","Kowari","Kultarr","Leopard","Lion","Macaw","Meerkat","Mouse","Oryx","Ostrich","Owl","Pronghorn","Python","Rabbit","Raccoon","Rattlesnake","Rhinoceros","Sand Cat","Spectacled Bear","Spiny Mouse","Starling","Stick Bug","Tarantula","Tit","Toad","Tortoise","Tyrant Flycatcher","Viper","Vulture","Waxwing","Xerus","Zebra"],grassland:["Aardvark","Aardwolf","Accentor","African Buffalo","African Wild Dog","Alpaca","Anaconda","Ant","Anteater","Antelope","Armadillo","Baboon","Badger","Bandicoot","Barbet","Bat","Bee","Bee-eater","Beetle","Bird","Bison","Black-footed Cat","Black-footed Ferret","Bluebird","Boa","Bowerbird","Brown Bear","Bush Dog","Bushshrike","Bustard","Butterfly","Buzzard","Caracal","Caracara","Cardinal","Caterpillar","Cheetah","Chipmunk","Civet","Climbing Mouse","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Common Genet","Cotton Rat","Cougar","Courser","Coyote","Crane","Crane Fly","Cricket","Crow","Culpeo","Death Adder","Deer","Deer Mouse","Dingo","Dinosaur","Dove","Drongo","Duck","Duiker","Dunnart","Eagle","Echidna","Elephant","Elk","Emu","Falcon","Finch","Flea","Fly","Flying Frog","Fox","Frog","Frogmouth","Garter Snake","Gazelle","Gecko","Geoffroy's Cat","Gerbil","Giant Tortoise","Giraffe","Grasshopper","Grison","Groundhog","Grouse","Guanaco","Guinea Pig","Hamster","Harrier","Hartebeest","Hawk","Hedgehog","Helmetshrike","Hippopotamus","Hornbill","Hyena","Hyrax","Impala","Jackal","Jaguar","Jaguarundi","Kangaroo","Kangaroo Rat","Kestrel","Kultarr","Ladybug","Leopard","Lion","Macaw","Meerkat","Mouse","Newt","Oryx","Ostrich","Owl","Pangolin","Pheasant","Prairie Dog","Pronghorn","Przewalski's Horse","Python","Quoll","Rabbit","Raven","Rhinoceros","Shelduck","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Tamandua","Tasmanian Devil","Thornbill","Thrush","Toad","Tortoise"],forest:["Agouti","Anaconda","Anoa","Ant","Anteater","Antelope","Armadillo","Asian Black Bear","Aye-aye","Babirusa","Baboon","Badger","Bandicoot","Banteng","Barbet","Basilisk","Bat","Bearded Dragon","Bee","Bee-eater","Beetle","Bettong","Binturong","Bird-of-paradise","Bongo","Bowerbird","Bulbul","Bush Dog","Bushbaby","Bushshrike","Butterfly","Buzzard","Caecilian","Cardinal","Cassowary","Caterpillar","Centipede","Chameleon","Chimpanzee","Cicada","Civet","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Colugo","Cotinga","Cotton Rat","Cougar","Crane Fly","Cricket","Crocodile","Crow","Cuckoo","Cuscus","Death Adder","Deer","Dhole","Dingo","Dinosaur","Drongo","Duck","Duiker","Eagle","Echidna","Elephant","Finch","Flat-headed Cat","Flea","Flowerpecker","Fly","Flying Frog","Fossa","Frog","Frogmouth","Gaur","Gecko","Gorilla","Grison","Hawaiian Honeycreeper","Hawk","Hedgehog","Helmetshrike","Hornbill","Hyrax","Iguana","Jackal","Jaguar","Jaguarundi","Kestrel","Ladybug","Lemur","Leopard","Lion","Macaw","Mandrill","Margay","Monkey","Mouse","Mouse Deer","Newt","Okapi","Old World Flycatcher","Orangutan","Owl","Pangolin","Peafowl","Pheasant","Possum","Python","Quokka","Rabbit","Raccoon","Red Panda","Red River Hog","Rhinoceros","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Sun Bear","Tamandua","Tamarin","Tapir","Tarantula","Thrush","Tiger","Tit","Toad","Tortoise","Toucan","Trogon","Trumpeter","Turaco","Turtle","Tyrant Flycatcher","Viper","Vulture","Wallaby","Warbler","Wasp","Waxwing","Weaver","Weaver-finch","Whistler","White-eye","Whydah","Woodswallow","Worm","Wren","Xenops","Yellowjacket","Accentor","African Buffalo","American Black Bear","Anole","Bird","Bison","Boa","Brown Bear","Chipmunk","Common Genet","Copperhead","Coyote","Deer Mouse","Dormouse","Elk","Emu","Fisher","Fox","Garter Snake","Giant Panda","Giant Tortoise","Groundhog","Grouse","Guanaco","Himalayan Tahr","Kangaroo","Koala","Numbat","Quoll","Raccoon dog","Tasmanian Devil","Thornbill","Turkey","Vole","Weasel","Wildcat","Wolf","Wombat","Woodchuck","Woodpecker"],farm:["Alpaca","Buffalo","Banteng","Cow","Cat","Chicken","Carp","Camel","Donkey","Dog","Duck","Emu","Goat","Gayal","Guinea","Goose","Horse","Honey","Llama","Pig","Pigeon","Rhea","Rabbit","Sheep","Silkworm","Turkey","Yak","Zebu"],pet:["Bearded Dragon","Birds","Burro","Cats","Chameleons","Chickens","Chinchillas","Chinese Water Dragon","Cows","Dogs","Donkey","Ducks","Ferrets","Fish","Geckos","Geese","Gerbils","Goats","Guinea Fowl","Guinea Pigs","Hamsters","Hedgehogs","Horses","Iguanas","Llamas","Lizards","Mice","Mule","Peafowl","Pigs and Hogs","Pigeons","Ponies","Pot Bellied Pig","Rabbits","Rats","Sheep","Skinks","Snakes","Stick Insects","Sugar Gliders","Tarantula","Turkeys","Turtles"],zoo:["Aardvark","African Wild Dog","Aldabra Tortoise","American Alligator","American Bison","Amur Tiger","Anaconda","Andean Condor","Asian Elephant","Baby Doll Sheep","Bald Eagle","Barred Owl","Blue Iguana","Boer Goat","California Sea Lion","Caribbean Flamingo","Chinchilla","Collared Lemur","Coquerel's Sifaka","Cuban Amazon Parrot","Ebony Langur","Fennec Fox","Fossa","Gelada","Giant Anteater","Giraffe","Gorilla","Grizzly Bear","Henkel's Leaf-tailed Gecko","Indian Gharial","Indian Rhinoceros","King Cobra","King Vulture","Komodo Dragon","Linne's Two-toed Sloth","Lion","Little Penguin","Madagascar Tree Boa","Magellanic Penguin","Malayan Tapir","Malayan Tiger","Matschies Tree Kangaroo","Mini Donkey","Monarch Butterfly","Nile crocodile","North American Porcupine","Nubian Ibex","Okapi","Poison Dart Frog","Polar Bear","Pygmy Marmoset","Radiated Tortoise","Red Panda","Red Ruffed Lemur","Ring-tailed Lemur","Ring-tailed Mongoose","Rock Hyrax","Small Clawed Asian Otter","Snow Leopard","Snowy Owl","Southern White-faced Owl","Southern White Rhinocerous","Squirrel Monkey","Tufted Puffin","White Cheeked Gibbon","White-throated Bee Eater","Zebra"]},primes:[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007],emotions:["love","joy","surprise","anger","sadness","fear"]},y=Object.prototype.hasOwnProperty,C=Object.keys||function(e){var t=[];for(var n in e)y.call(e,n)&&t.push(n);return t};function x(e,t){var n=Array.isArray(e),i=t||(n?new Array(e.length):{});return n?function(e,t){for(var n=0,i=e.length;n<i;n++)t[n]=e[n]}(e,i):function(e,t){for(var n,i=C(e),r=0,a=i.length;r<a;r++)t[n=i[r]]=e[n]||t[n]}(e,i),i}l.prototype.get=function(e){return x(v[e])},l.prototype.mac_address=function(e){(e=h(e)).separator||(e.separator=e.networkVersion?".":":");return e.networkVersion?this.n(this.string,3,{pool:"ABCDEF1234567890",length:4}).join(e.separator):this.n(this.string,6,{pool:"ABCDEF1234567890",length:2}).join(e.separator)},l.prototype.normal=function(e){if(p((e=h(e,{mean:0,dev:1,pool:[]})).pool.constructor!==Array,"Chance: The pool option must be a valid array."),p("number"!=typeof e.mean,"Chance: Mean (mean) must be a number"),p("number"!=typeof e.dev,"Chance: Standard deviation (dev) must be a number"),e.pool.length>0)return this.normal_pool(e);var t,n,i,r=e.mean,a=e.dev;do{t=(n=2*this.random()-1)*n+(i=2*this.random()-1)*i}while(t>=1);return a*(n*Math.sqrt(-2*Math.log(t)/t))+r},l.prototype.normal_pool=function(e){var t=0;do{var n=Math.round(this.normal({mean:e.mean,dev:e.dev}));if(n<e.pool.length&&n>=0)return e.pool[n];t++}while(t<100);throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.")},l.prototype.radio=function(e){var t="";switch((e=h(e,{side:"?"})).side.toLowerCase()){case"east":case"e":t="W";break;case"west":case"w":t="K";break;default:t=this.character({pool:"KW"})}return t+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})},l.prototype.set=function(e,t){"string"==typeof e?v[e]=t:v=x(e,v)},l.prototype.tv=function(e){return this.radio(e)},l.prototype.cnpj=function(){var e=this.n(this.natural,8,{max:9}),t=2+6*e[7]+7*e[6]+8*e[5]+9*e[4]+2*e[3]+3*e[2]+4*e[1]+5*e[0];(t=11-t%11)>=10&&(t=0);var n=2*t+3+7*e[7]+8*e[6]+9*e[5]+2*e[4]+3*e[3]+4*e[2]+5*e[1]+6*e[0];return(n=11-n%11)>=10&&(n=0),""+e[0]+e[1]+"."+e[2]+e[3]+e[4]+"."+e[5]+e[6]+e[7]+"/0001-"+t+n},l.prototype.emotion=function(){return this.pick(this.get("emotions"))},l.prototype.mersenne_twister=function(e){return new A(e)},l.prototype.blueimp_md5=function(){return new S};var A=function(e){void 0===e&&(e=Math.floor(Math.random()*Math.pow(10,13))),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};A.prototype.init_genrand=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++)e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0},A.prototype.init_by_array=function(e,t){var n,i,r=1,a=0;for(this.init_genrand(19650218),n=this.N>t?this.N:t;n;n--)i=this.mt[r-1]^this.mt[r-1]>>>30,this.mt[r]=(this.mt[r]^(1664525*((4294901760&i)>>>16)<<16)+1664525*(65535&i))+e[a]+a,this.mt[r]>>>=0,a++,++r>=this.N&&(this.mt[0]=this.mt[this.N-1],r=1),a>=t&&(a=0);for(n=this.N-1;n;n--)i=this.mt[r-1]^this.mt[r-1]>>>30,this.mt[r]=(this.mt[r]^(1566083941*((4294901760&i)>>>16)<<16)+1566083941*(65535&i))-r,this.mt[r]>>>=0,++r>=this.N&&(this.mt[0]=this.mt[this.N-1],r=1);this.mt[0]=2147483648},A.prototype.genrand_int32=function(){var e,t=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var n;for(this.mti===this.N+1&&this.init_genrand(5489),n=0;n<this.N-this.M;n++)e=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+this.M]^e>>>1^t[1&e];for(;n<this.N-1;n++)e=this.mt[n]&this.UPPER_MASK|this.mt[n+1]&this.LOWER_MASK,this.mt[n]=this.mt[n+(this.M-this.N)]^e>>>1^t[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^t[1&e],this.mti=0}return e=this.mt[this.mti++],e^=e>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,(e^=e>>>18)>>>0},A.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},A.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},A.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},A.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},A.prototype.genrand_res53=function(){return(67108864*(this.genrand_int32()>>>5)+(this.genrand_int32()>>>6))*(1/9007199254740992)};var S=function(){};S.prototype.VERSION="1.0.1",S.prototype.safe_add=function(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n},S.prototype.bit_roll=function(e,t){return e<<t|e>>>32-t},S.prototype.md5_cmn=function(e,t,n,i,r,a){return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(t,e),this.safe_add(i,a)),r),n)},S.prototype.md5_ff=function(e,t,n,i,r,a,o){return this.md5_cmn(t&n|~t&i,e,t,r,a,o)},S.prototype.md5_gg=function(e,t,n,i,r,a,o){return this.md5_cmn(t&i|n&~i,e,t,r,a,o)},S.prototype.md5_hh=function(e,t,n,i,r,a,o){return this.md5_cmn(t^n^i,e,t,r,a,o)},S.prototype.md5_ii=function(e,t,n,i,r,a,o){return this.md5_cmn(n^(t|~i),e,t,r,a,o)},S.prototype.binl_md5=function(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;var n,i,r,a,o,s=1732584193,u=-271733879,c=-1732584194,l=271733878;for(n=0;n<e.length;n+=16)i=s,r=u,a=c,o=l,s=this.md5_ff(s,u,c,l,e[n],7,-680876936),l=this.md5_ff(l,s,u,c,e[n+1],12,-389564586),c=this.md5_ff(c,l,s,u,e[n+2],17,606105819),u=this.md5_ff(u,c,l,s,e[n+3],22,-1044525330),s=this.md5_ff(s,u,c,l,e[n+4],7,-176418897),l=this.md5_ff(l,s,u,c,e[n+5],12,1200080426),c=this.md5_ff(c,l,s,u,e[n+6],17,-1473231341),u=this.md5_ff(u,c,l,s,e[n+7],22,-45705983),s=this.md5_ff(s,u,c,l,e[n+8],7,1770035416),l=this.md5_ff(l,s,u,c,e[n+9],12,-1958414417),c=this.md5_ff(c,l,s,u,e[n+10],17,-42063),u=this.md5_ff(u,c,l,s,e[n+11],22,-1990404162),s=this.md5_ff(s,u,c,l,e[n+12],7,1804603682),l=this.md5_ff(l,s,u,c,e[n+13],12,-40341101),c=this.md5_ff(c,l,s,u,e[n+14],17,-1502002290),u=this.md5_ff(u,c,l,s,e[n+15],22,1236535329),s=this.md5_gg(s,u,c,l,e[n+1],5,-165796510),l=this.md5_gg(l,s,u,c,e[n+6],9,-1069501632),c=this.md5_gg(c,l,s,u,e[n+11],14,643717713),u=this.md5_gg(u,c,l,s,e[n],20,-373897302),s=this.md5_gg(s,u,c,l,e[n+5],5,-701558691),l=this.md5_gg(l,s,u,c,e[n+10],9,38016083),c=this.md5_gg(c,l,s,u,e[n+15],14,-660478335),u=this.md5_gg(u,c,l,s,e[n+4],20,-405537848),s=this.md5_gg(s,u,c,l,e[n+9],5,568446438),l=this.md5_gg(l,s,u,c,e[n+14],9,-1019803690),c=this.md5_gg(c,l,s,u,e[n+3],14,-187363961),u=this.md5_gg(u,c,l,s,e[n+8],20,1163531501),s=this.md5_gg(s,u,c,l,e[n+13],5,-1444681467),l=this.md5_gg(l,s,u,c,e[n+2],9,-51403784),c=this.md5_gg(c,l,s,u,e[n+7],14,1735328473),u=this.md5_gg(u,c,l,s,e[n+12],20,-1926607734),s=this.md5_hh(s,u,c,l,e[n+5],4,-378558),l=this.md5_hh(l,s,u,c,e[n+8],11,-2022574463),c=this.md5_hh(c,l,s,u,e[n+11],16,1839030562),u=this.md5_hh(u,c,l,s,e[n+14],23,-35309556),s=this.md5_hh(s,u,c,l,e[n+1],4,-1530992060),l=this.md5_hh(l,s,u,c,e[n+4],11,1272893353),c=this.md5_hh(c,l,s,u,e[n+7],16,-155497632),u=this.md5_hh(u,c,l,s,e[n+10],23,-1094730640),s=this.md5_hh(s,u,c,l,e[n+13],4,681279174),l=this.md5_hh(l,s,u,c,e[n],11,-358537222),c=this.md5_hh(c,l,s,u,e[n+3],16,-722521979),u=this.md5_hh(u,c,l,s,e[n+6],23,76029189),s=this.md5_hh(s,u,c,l,e[n+9],4,-640364487),l=this.md5_hh(l,s,u,c,e[n+12],11,-421815835),c=this.md5_hh(c,l,s,u,e[n+15],16,530742520),u=this.md5_hh(u,c,l,s,e[n+2],23,-995338651),s=this.md5_ii(s,u,c,l,e[n],6,-198630844),l=this.md5_ii(l,s,u,c,e[n+7],10,1126891415),c=this.md5_ii(c,l,s,u,e[n+14],15,-1416354905),u=this.md5_ii(u,c,l,s,e[n+5],21,-57434055),s=this.md5_ii(s,u,c,l,e[n+12],6,1700485571),l=this.md5_ii(l,s,u,c,e[n+3],10,-1894986606),c=this.md5_ii(c,l,s,u,e[n+10],15,-1051523),u=this.md5_ii(u,c,l,s,e[n+1],21,-2054922799),s=this.md5_ii(s,u,c,l,e[n+8],6,1873313359),l=this.md5_ii(l,s,u,c,e[n+15],10,-30611744),c=this.md5_ii(c,l,s,u,e[n+6],15,-1560198380),u=this.md5_ii(u,c,l,s,e[n+13],21,1309151649),s=this.md5_ii(s,u,c,l,e[n+4],6,-145523070),l=this.md5_ii(l,s,u,c,e[n+11],10,-1120210379),c=this.md5_ii(c,l,s,u,e[n+2],15,718787259),u=this.md5_ii(u,c,l,s,e[n+9],21,-343485551),s=this.safe_add(s,i),u=this.safe_add(u,r),c=this.safe_add(c,a),l=this.safe_add(l,o);return[s,u,c,l]},S.prototype.binl2rstr=function(e){var t,n="";for(t=0;t<32*e.length;t+=8)n+=String.fromCharCode(e[t>>5]>>>t%32&255);return n},S.prototype.rstr2binl=function(e){var t,n=[];for(n[(e.length>>2)-1]=void 0,t=0;t<n.length;t+=1)n[t]=0;for(t=0;t<8*e.length;t+=8)n[t>>5]|=(255&e.charCodeAt(t/8))<<t%32;return n},S.prototype.rstr_md5=function(e){return this.binl2rstr(this.binl_md5(this.rstr2binl(e),8*e.length))},S.prototype.rstr_hmac_md5=function(e,t){var n,i,r=this.rstr2binl(e),a=[],o=[];for(a[15]=o[15]=void 0,r.length>16&&(r=this.binl_md5(r,8*e.length)),n=0;n<16;n+=1)a[n]=909522486^r[n],o[n]=1549556828^r[n];return i=this.binl_md5(a.concat(this.rstr2binl(t)),512+8*t.length),this.binl2rstr(this.binl_md5(o.concat(i),640))},S.prototype.rstr2hex=function(e){var t,n,i="";for(n=0;n<e.length;n+=1)t=e.charCodeAt(n),i+="0123456789abcdef".charAt(t>>>4&15)+"0123456789abcdef".charAt(15&t);return i},S.prototype.str2rstr_utf8=function(e){return unescape(encodeURIComponent(e))},S.prototype.raw_md5=function(e){return this.rstr_md5(this.str2rstr_utf8(e))},S.prototype.hex_md5=function(e){return this.rstr2hex(this.raw_md5(e))},S.prototype.raw_hmac_md5=function(e,t){return this.rstr_hmac_md5(this.str2rstr_utf8(e),this.str2rstr_utf8(t))},S.prototype.hex_hmac_md5=function(e,t){return this.rstr2hex(this.raw_hmac_md5(e,t))},S.prototype.md5=function(e,t,n){return t?n?this.raw_hmac_md5(t,e):this.hex_hmac_md5(t,e):n?this.raw_md5(e):this.hex_md5(e)},e.exports&&(t=e.exports=l),t.Chance=l,void 0===(i=function(){return l}.apply(t,[]))||(e.exports=i),"undefined"!=typeof importScripts&&(chance=new l,self.Chance=l),"object"==typeof window&&"object"==typeof window.document&&(window.Chance=l,window.chance=new l)}()}).call(this,n(9).Buffer)}]);;
!function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var o in t)e.d(r,o,function(n){return t[n]}.bind(null,o));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=83)}([function(t,n){var e=Array.isArray;t.exports=e},function(t,n,e){var r;try{r={clone:e(88),constant:e(63),each:e(146),filter:e(152),has:e(175),isArray:e(0),isEmpty:e(177),isFunction:e(17),isUndefined:e(178),keys:e(6),map:e(179),reduce:e(181),size:e(184),transform:e(190),union:e(191),values:e(210)}}catch(t){}r||(r=window._),t.exports=r},function(t,n,e){var r=e(46),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();t.exports=i},function(t,n){t.exports=function(t){return null!=t&&"object"==typeof t}},function(t,n,e){var r=e(100),o=e(105);t.exports=function(t,n){var e=o(t,n);return r(e)?e:void 0}},function(t,n){t.exports=function(t){var n=typeof t;return null!=t&&("object"==n||"function"==n)}},function(t,n,e){var r=e(51),o=e(37),i=e(7);t.exports=function(t){return i(t)?r(t):o(t)}},function(t,n,e){var r=e(17),o=e(34);t.exports=function(t){return null!=t&&o(t.length)&&!r(t)}},function(t,n,e){var r=e(9),o=e(101),i=e(102),u=r?r.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":u&&u in Object(t)?o(t):i(t)}},function(t,n,e){var r=e(2).Symbol;t.exports=r},function(t,n,e){var r=e(132),o=e(31),i=e(133),u=e(60),a=e(134),c=e(8),s=e(47),f=s(r),l=s(o),p=s(i),h=s(u),d=s(a),v=c;(r&&"[object DataView]"!=v(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=v(new o)||i&&"[object Promise]"!=v(i.resolve())||u&&"[object Set]"!=v(new u)||a&&"[object WeakMap]"!=v(new a))&&(v=function(t){var n=c(t),e="[object Object]"==n?t.constructor:void 0,r=e?s(e):"";if(r)switch(r){case f:return"[object DataView]";case l:return"[object Map]";case p:return"[object Promise]";case h:return"[object Set]";case d:return"[object WeakMap]"}return n}),t.exports=v},function(t,n){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(t){"object"==typeof window&&(e=window)}t.exports=e},function(t,n,e){(function(t){var r=e(2),o=e(121),i=n&&!n.nodeType&&n,u=i&&"object"==typeof t&&t&&!t.nodeType&&t,a=u&&u.exports===i?r.Buffer:void 0,c=(a?a.isBuffer:void 0)||o;t.exports=c}).call(this,e(14)(t))},function(t,n){var e,r,o=t.exports={};function i(){throw new Error("setTimeout has not been defined")}function u(){throw new Error("clearTimeout has not been defined")}function a(t){if(e===setTimeout)return setTimeout(t,0);if((e===i||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(n){try{return e.call(null,t,0)}catch(n){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:i}catch(t){e=i}try{r="function"==typeof clearTimeout?clearTimeout:u}catch(t){r=u}}();var c,s=[],f=!1,l=-1;function p(){f&&c&&(f=!1,c.length?s=c.concat(s):l=-1,s.length&&h())}function h(){if(!f){var t=a(p);f=!0;for(var n=s.length;n;){for(c=s,s=[];++l<n;)c&&c[l].run();l=-1,n=s.length}c=null,f=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===u||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(n){try{return r.call(null,t)}catch(n){return r.call(this,t)}}}(t)}}function d(t,n){this.fun=t,this.array=n}function v(){}o.nextTick=function(t){var n=new Array(arguments.length-1);if(arguments.length>1)for(var e=1;e<arguments.length;e++)n[e-1]=arguments[e];s.push(new d(t,n)),1!==s.length||f||a(h)},d.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(t){return[]},o.binding=function(t){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(t){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(t,n){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,n,e){var r=e(90),o=e(91),i=e(92),u=e(93),a=e(94);function c(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=u,c.prototype.set=a,t.exports=c},function(t,n,e){var r=e(30);t.exports=function(t,n){for(var e=t.length;e--;)if(r(t[e][0],n))return e;return-1}},function(t,n,e){var r=e(8),o=e(5);t.exports=function(t){if(!o(t))return!1;var n=r(t);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(t,n,e){var r=e(4)(Object,"create");t.exports=r},function(t,n,e){var r=e(114);t.exports=function(t,n){var e=t.__data__;return r(n)?e["string"==typeof n?"string":"hash"]:e.map}},function(t,n,e){var r=e(48),o=e(49);t.exports=function(t,n,e,i){var u=!e;e||(e={});for(var a=-1,c=n.length;++a<c;){var s=n[a],f=i?i(e[s],t[s],s,e,t):void 0;void 0===f&&(f=t[s]),u?o(e,s,f):r(e,s,f)}return e}},function(t,n,e){var r=e(120),o=e(3),i=Object.prototype,u=i.hasOwnProperty,a=i.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(t){return o(t)&&u.call(t,"callee")&&!a.call(t,"callee")};t.exports=c},function(t,n,e){var r=e(122),o=e(35),i=e(36),u=i&&i.isTypedArray,a=u?o(u):r;t.exports=a},function(t,n){var e=Object.prototype;t.exports=function(t){var n=t&&t.constructor;return t===("function"==typeof n&&n.prototype||e)}},function(t,n,e){var r=e(64),o=e(150)(r);t.exports=o},function(t,n){t.exports=function(t){return t}},function(t,n,e){var r=e(154),o=e(164),i=e(25),u=e(0),a=e(173);t.exports=function(t){return"function"==typeof t?t:null==t?i:"object"==typeof t?u(t)?o(t[0],t[1]):r(t):a(t)}},function(t,n,e){var r=e(44);t.exports=function(t){if("string"==typeof t||r(t))return t;var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(t,n,e){"use strict";var r=e(1);t.exports=a;var o="\0",i="\0",u="";function a(t){this._isDirected=!r.has(t,"directed")||t.directed,this._isMultigraph=!!r.has(t,"multigraph")&&t.multigraph,this._isCompound=!!r.has(t,"compound")&&t.compound,this._label=void 0,this._defaultNodeLabelFn=r.constant(void 0),this._defaultEdgeLabelFn=r.constant(void 0),this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children[i]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}function c(t,n){t[n]?t[n]++:t[n]=1}function s(t,n){--t[n]||delete t[n]}function f(t,n,e,i){var a=""+n,c=""+e;if(!t&&a>c){var s=a;a=c,c=s}return a+u+c+u+(r.isUndefined(i)?o:i)}function l(t,n,e,r){var o=""+n,i=""+e;if(!t&&o>i){var u=o;o=i,i=u}var a={v:o,w:i};return r&&(a.name=r),a}function p(t,n){return f(t,n.v,n.w,n.name)}a.prototype._nodeCount=0,a.prototype._edgeCount=0,a.prototype.isDirected=function(){return this._isDirected},a.prototype.isMultigraph=function(){return this._isMultigraph},a.prototype.isCompound=function(){return this._isCompound},a.prototype.setGraph=function(t){return this._label=t,this},a.prototype.graph=function(){return this._label},a.prototype.setDefaultNodeLabel=function(t){return r.isFunction(t)||(t=r.constant(t)),this._defaultNodeLabelFn=t,this},a.prototype.nodeCount=function(){return this._nodeCount},a.prototype.nodes=function(){return r.keys(this._nodes)},a.prototype.sources=function(){var t=this;return r.filter(this.nodes(),(function(n){return r.isEmpty(t._in[n])}))},a.prototype.sinks=function(){var t=this;return r.filter(this.nodes(),(function(n){return r.isEmpty(t._out[n])}))},a.prototype.setNodes=function(t,n){var e=arguments,o=this;return r.each(t,(function(t){e.length>1?o.setNode(t,n):o.setNode(t)})),this},a.prototype.setNode=function(t,n){return r.has(this._nodes,t)?(arguments.length>1&&(this._nodes[t]=n),this):(this._nodes[t]=arguments.length>1?n:this._defaultNodeLabelFn(t),this._isCompound&&(this._parent[t]=i,this._children[t]={},this._children[i][t]=!0),this._in[t]={},this._preds[t]={},this._out[t]={},this._sucs[t]={},++this._nodeCount,this)},a.prototype.node=function(t){return this._nodes[t]},a.prototype.hasNode=function(t){return r.has(this._nodes,t)},a.prototype.removeNode=function(t){var n=this;if(r.has(this._nodes,t)){var e=function(t){n.removeEdge(n._edgeObjs[t])};delete this._nodes[t],this._isCompound&&(this._removeFromParentsChildList(t),delete this._parent[t],r.each(this.children(t),(function(t){n.setParent(t)})),delete this._children[t]),r.each(r.keys(this._in[t]),e),delete this._in[t],delete this._preds[t],r.each(r.keys(this._out[t]),e),delete this._out[t],delete this._sucs[t],--this._nodeCount}return this},a.prototype.setParent=function(t,n){if(!this._isCompound)throw new Error("Cannot set parent in a non-compound graph");if(r.isUndefined(n))n=i;else{for(var e=n+="";!r.isUndefined(e);e=this.parent(e))if(e===t)throw new Error("Setting "+n+" as parent of "+t+" would create a cycle");this.setNode(n)}return this.setNode(t),this._removeFromParentsChildList(t),this._parent[t]=n,this._children[n][t]=!0,this},a.prototype._removeFromParentsChildList=function(t){delete this._children[this._parent[t]][t]},a.prototype.parent=function(t){if(this._isCompound){var n=this._parent[t];if(n!==i)return n}},a.prototype.children=function(t){if(r.isUndefined(t)&&(t=i),this._isCompound){var n=this._children[t];if(n)return r.keys(n)}else{if(t===i)return this.nodes();if(this.hasNode(t))return[]}},a.prototype.predecessors=function(t){var n=this._preds[t];if(n)return r.keys(n)},a.prototype.successors=function(t){var n=this._sucs[t];if(n)return r.keys(n)},a.prototype.neighbors=function(t){var n=this.predecessors(t);if(n)return r.union(n,this.successors(t))},a.prototype.isLeaf=function(t){return 0===(this.isDirected()?this.successors(t):this.neighbors(t)).length},a.prototype.filterNodes=function(t){var n=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});n.setGraph(this.graph());var e=this;r.each(this._nodes,(function(e,r){t(r)&&n.setNode(r,e)})),r.each(this._edgeObjs,(function(t){n.hasNode(t.v)&&n.hasNode(t.w)&&n.setEdge(t,e.edge(t))}));var o={};return this._isCompound&&r.each(n.nodes(),(function(t){n.setParent(t,function t(r){var i=e.parent(r);return void 0===i||n.hasNode(i)?(o[r]=i,i):i in o?o[i]:t(i)}(t))})),n},a.prototype.setDefaultEdgeLabel=function(t){return r.isFunction(t)||(t=r.constant(t)),this._defaultEdgeLabelFn=t,this},a.prototype.edgeCount=function(){return this._edgeCount},a.prototype.edges=function(){return r.values(this._edgeObjs)},a.prototype.setPath=function(t,n){var e=this,o=arguments;return r.reduce(t,(function(t,r){return o.length>1?e.setEdge(t,r,n):e.setEdge(t,r),r})),this},a.prototype.setEdge=function(){var t,n,e,o,i=!1,u=arguments[0];"object"==typeof u&&null!==u&&"v"in u?(t=u.v,n=u.w,e=u.name,2===arguments.length&&(o=arguments[1],i=!0)):(t=u,n=arguments[1],e=arguments[3],arguments.length>2&&(o=arguments[2],i=!0)),t=""+t,n=""+n,r.isUndefined(e)||(e=""+e);var a=f(this._isDirected,t,n,e);if(r.has(this._edgeLabels,a))return i&&(this._edgeLabels[a]=o),this;if(!r.isUndefined(e)&&!this._isMultigraph)throw new Error("Cannot set a named edge when isMultigraph = false");this.setNode(t),this.setNode(n),this._edgeLabels[a]=i?o:this._defaultEdgeLabelFn(t,n,e);var s=l(this._isDirected,t,n,e);return t=s.v,n=s.w,Object.freeze(s),this._edgeObjs[a]=s,c(this._preds[n],t),c(this._sucs[t],n),this._in[n][a]=s,this._out[t][a]=s,this._edgeCount++,this},a.prototype.edge=function(t,n,e){var r=1===arguments.length?p(this._isDirected,arguments[0]):f(this._isDirected,t,n,e);return this._edgeLabels[r]},a.prototype.hasEdge=function(t,n,e){var o=1===arguments.length?p(this._isDirected,arguments[0]):f(this._isDirected,t,n,e);return r.has(this._edgeLabels,o)},a.prototype.removeEdge=function(t,n,e){var r=1===arguments.length?p(this._isDirected,arguments[0]):f(this._isDirected,t,n,e),o=this._edgeObjs[r];return o&&(t=o.v,n=o.w,delete this._edgeLabels[r],delete this._edgeObjs[r],s(this._preds[n],t),s(this._sucs[t],n),delete this._in[n][r],delete this._out[t][r],this._edgeCount--),this},a.prototype.inEdges=function(t,n){var e=this._in[t];if(e){var o=r.values(e);return n?r.filter(o,(function(t){return t.v===n})):o}},a.prototype.outEdges=function(t,n){var e=this._out[t];if(e){var o=r.values(e);return n?r.filter(o,(function(t){return t.w===n})):o}},a.prototype.nodeEdges=function(t,n){var e=this.inEdges(t,n);if(e)return e.concat(this.outEdges(t,n))}},function(t,n,e){var r=e(15),o=e(95),i=e(96),u=e(97),a=e(98),c=e(99);function s(t){var n=this.__data__=new r(t);this.size=n.size}s.prototype.clear=o,s.prototype.delete=i,s.prototype.get=u,s.prototype.has=a,s.prototype.set=c,t.exports=s},function(t,n){t.exports=function(t,n){return t===n||t!=t&&n!=n}},function(t,n,e){var r=e(4)(e(2),"Map");t.exports=r},function(t,n,e){var r=e(106),o=e(113),i=e(115),u=e(116),a=e(117);function c(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=u,c.prototype.set=a,t.exports=c},function(t,n){t.exports=function(t,n){for(var e=-1,r=null==t?0:t.length;++e<r&&!1!==n(t[e],e,t););return t}},function(t,n){t.exports=function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,n){t.exports=function(t){return function(n){return t(n)}}},function(t,n,e){(function(t){var r=e(46),o=n&&!n.nodeType&&n,i=o&&"object"==typeof t&&t&&!t.nodeType&&t,u=i&&i.exports===o&&r.process,a=function(){try{return i&&i.require&&i.require("util").types||u&&u.binding&&u.binding("util")}catch(t){}}();t.exports=a}).call(this,e(14)(t))},function(t,n,e){var r=e(23),o=e(123),i=Object.prototype.hasOwnProperty;t.exports=function(t){if(!r(t))return o(t);var n=[];for(var e in Object(t))i.call(t,e)&&"constructor"!=e&&n.push(e);return n}},function(t,n,e){var r=e(55),o=e(56),i=Object.prototype.propertyIsEnumerable,u=Object.getOwnPropertySymbols,a=u?function(t){return null==t?[]:(t=Object(t),r(u(t),(function(n){return i.call(t,n)})))}:o;t.exports=a},function(t,n){t.exports=function(t,n){for(var e=-1,r=n.length,o=t.length;++e<r;)t[o+e]=n[e];return t}},function(t,n,e){var r=e(53)(Object.getPrototypeOf,Object);t.exports=r},function(t,n,e){var r=e(61);t.exports=function(t){var n=new t.constructor(t.byteLength);return new r(n).set(new r(t)),n}},function(t,n){t.exports=function(t){var n=-1,e=Array(t.size);return t.forEach((function(t){e[++n]=t})),e}},function(t,n,e){var r=e(0),o=e(44),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,u=/^\w*$/;t.exports=function(t,n){if(r(t))return!1;var e=typeof t;return!("number"!=e&&"symbol"!=e&&"boolean"!=e&&null!=t&&!o(t))||u.test(t)||!i.test(t)||null!=n&&t in Object(n)}},function(t,n,e){var r=e(8),o=e(3);t.exports=function(t){return"symbol"==typeof t||o(t)&&"[object Symbol]"==r(t)}},function(t,n){t.exports=function(t,n){for(var e=-1,r=null==t?0:t.length,o=Array(r);++e<r;)o[e]=n(t[e],e,t);return o}},function(t,n,e){(function(n){var e="object"==typeof n&&n&&n.Object===Object&&n;t.exports=e}).call(this,e(11))},function(t,n){var e=Function.prototype.toString;t.exports=function(t){if(null!=t){try{return e.call(t)}catch(t){}try{return t+""}catch(t){}}return""}},function(t,n,e){var r=e(49),o=e(30),i=Object.prototype.hasOwnProperty;t.exports=function(t,n,e){var u=t[n];i.call(t,n)&&o(u,e)&&(void 0!==e||n in t)||r(t,n,e)}},function(t,n,e){var r=e(50);t.exports=function(t,n,e){"__proto__"==n&&r?r(t,n,{configurable:!0,enumerable:!0,value:e,writable:!0}):t[n]=e}},function(t,n,e){var r=e(4),o=function(){try{var t=r(Object,"defineProperty");return t({},"",{}),t}catch(t){}}();t.exports=o},function(t,n,e){var r=e(119),o=e(21),i=e(0),u=e(12),a=e(52),c=e(22),s=Object.prototype.hasOwnProperty;t.exports=function(t,n){var e=i(t),f=!e&&o(t),l=!e&&!f&&u(t),p=!e&&!f&&!l&&c(t),h=e||f||l||p,d=h?r(t.length,String):[],v=d.length;for(var y in t)!n&&!s.call(t,y)||h&&("length"==y||l&&("offset"==y||"parent"==y)||p&&("buffer"==y||"byteLength"==y||"byteOffset"==y)||a(y,v))||d.push(y);return d}},function(t,n){var e=/^(?:0|[1-9]\d*)$/;t.exports=function(t,n){var r=typeof t;return!!(n=null==n?9007199254740991:n)&&("number"==r||"symbol"!=r&&e.test(t))&&t>-1&&t%1==0&&t<n}},function(t,n){t.exports=function(t,n){return function(e){return t(n(e))}}},function(t,n,e){var r=e(51),o=e(125),i=e(7);t.exports=function(t){return i(t)?r(t,!0):o(t)}},function(t,n){t.exports=function(t,n){for(var e=-1,r=null==t?0:t.length,o=0,i=[];++e<r;){var u=t[e];n(u,e,t)&&(i[o++]=u)}return i}},function(t,n){t.exports=function(){return[]}},function(t,n,e){var r=e(39),o=e(40),i=e(38),u=e(56),a=Object.getOwnPropertySymbols?function(t){for(var n=[];t;)r(n,i(t)),t=o(t);return n}:u;t.exports=a},function(t,n,e){var r=e(59),o=e(38),i=e(6);t.exports=function(t){return r(t,i,o)}},function(t,n,e){var r=e(39),o=e(0);t.exports=function(t,n,e){var i=n(t);return o(t)?i:r(i,e(t))}},function(t,n,e){var r=e(4)(e(2),"Set");t.exports=r},function(t,n,e){var r=e(2).Uint8Array;t.exports=r},function(t,n,e){var r=e(5),o=Object.create,i=function(){function t(){}return function(n){if(!r(n))return{};if(o)return o(n);t.prototype=n;var e=new t;return t.prototype=void 0,e}}();t.exports=i},function(t,n){t.exports=function(t){return function(){return t}}},function(t,n,e){var r=e(148),o=e(6);t.exports=function(t,n){return t&&r(t,n,o)}},function(t,n,e){var r=e(156),o=e(3);t.exports=function t(n,e,i,u,a){return n===e||(null==n||null==e||!o(n)&&!o(e)?n!=n&&e!=e:r(n,e,i,u,t,a))}},function(t,n,e){var r=e(67),o=e(159),i=e(68);t.exports=function(t,n,e,u,a,c){var s=1&e,f=t.length,l=n.length;if(f!=l&&!(s&&l>f))return!1;var p=c.get(t);if(p&&c.get(n))return p==n;var h=-1,d=!0,v=2&e?new r:void 0;for(c.set(t,n),c.set(n,t);++h<f;){var y=t[h],_=n[h];if(u)var g=s?u(_,y,h,n,t,c):u(y,_,h,t,n,c);if(void 0!==g){if(g)continue;d=!1;break}if(v){if(!o(n,(function(t,n){if(!i(v,n)&&(y===t||a(y,t,e,u,c)))return v.push(n)}))){d=!1;break}}else if(y!==_&&!a(y,_,e,u,c)){d=!1;break}}return c.delete(t),c.delete(n),d}},function(t,n,e){var r=e(32),o=e(157),i=e(158);function u(t){var n=-1,e=null==t?0:t.length;for(this.__data__=new r;++n<e;)this.add(t[n])}u.prototype.add=u.prototype.push=o,u.prototype.has=i,t.exports=u},function(t,n){t.exports=function(t,n){return t.has(n)}},function(t,n,e){var r=e(5);t.exports=function(t){return t==t&&!r(t)}},function(t,n){t.exports=function(t,n){return function(e){return null!=e&&e[t]===n&&(void 0!==n||t in Object(e))}}},function(t,n,e){var r=e(72),o=e(27);t.exports=function(t,n){for(var e=0,i=(n=r(n,t)).length;null!=t&&e<i;)t=t[o(n[e++])];return e&&e==i?t:void 0}},function(t,n,e){var r=e(0),o=e(43),i=e(166),u=e(169);t.exports=function(t,n){return r(t)?t:o(t,n)?[t]:i(u(t))}},function(t,n,e){var r=e(72),o=e(21),i=e(0),u=e(52),a=e(34),c=e(27);t.exports=function(t,n,e){for(var s=-1,f=(n=r(n,t)).length,l=!1;++s<f;){var p=c(n[s]);if(!(l=null!=t&&e(t,p)))break;t=t[p]}return l||++s!=f?l:!!(f=null==t?0:t.length)&&a(f)&&u(p,f)&&(i(t)||o(t))}},function(t,n){t.exports=function(t){return function(n){return null==n?void 0:n[t]}}},function(t,n,e){var r=e(1),o=e(76);t.exports=function(t,n,e,r){return function(t,n,e,r){var i,u,a={},c=new o,s=function(t){var n=t.v!==i?t.v:t.w,r=a[n],o=e(t),s=u.distance+o;if(o<0)throw new Error("dijkstra does not allow negative edge weights. Bad edge: "+t+" Weight: "+o);s<r.distance&&(r.distance=s,r.predecessor=i,c.decrease(n,s))};for(t.nodes().forEach((function(t){var e=t===n?0:Number.POSITIVE_INFINITY;a[t]={distance:e},c.add(t,e)}));c.size()>0&&(i=c.removeMin(),(u=a[i]).distance!==Number.POSITIVE_INFINITY);)r(i).forEach(s);return a}(t,String(n),e||i,r||function(n){return t.outEdges(n)})};var i=r.constant(1)},function(t,n,e){var r=e(1);function o(){this._arr=[],this._keyIndices={}}t.exports=o,o.prototype.size=function(){return this._arr.length},o.prototype.keys=function(){return this._arr.map((function(t){return t.key}))},o.prototype.has=function(t){return r.has(this._keyIndices,t)},o.prototype.priority=function(t){var n=this._keyIndices[t];if(void 0!==n)return this._arr[n].priority},o.prototype.min=function(){if(0===this.size())throw new Error("Queue underflow");return this._arr[0].key},o.prototype.add=function(t,n){var e=this._keyIndices;if(t=String(t),!r.has(e,t)){var o=this._arr,i=o.length;return e[t]=i,o.push({key:t,priority:n}),this._decrease(i),!0}return!1},o.prototype.removeMin=function(){this._swap(0,this._arr.length-1);var t=this._arr.pop();return delete this._keyIndices[t.key],this._heapify(0),t.key},o.prototype.decrease=function(t,n){var e=this._keyIndices[t];if(n>this._arr[e].priority)throw new Error("New priority is greater than current priority. Key: "+t+" Old: "+this._arr[e].priority+" New: "+n);this._arr[e].priority=n,this._decrease(e)},o.prototype._heapify=function(t){var n=this._arr,e=2*t,r=e+1,o=t;e<n.length&&(o=n[e].priority<n[o].priority?e:o,r<n.length&&(o=n[r].priority<n[o].priority?r:o),o!==t&&(this._swap(t,o),this._heapify(o)))},o.prototype._decrease=function(t){for(var n,e=this._arr,r=e[t].priority;0!==t&&!(e[n=t>>1].priority<r);)this._swap(t,n),t=n},o.prototype._swap=function(t,n){var e=this._arr,r=this._keyIndices,o=e[t],i=e[n];e[t]=i,e[n]=o,r[i.key]=t,r[o.key]=n}},function(t,n,e){var r=e(1);t.exports=function(t){var n=0,e=[],o={},i=[];return t.nodes().forEach((function(u){r.has(o,u)||function u(a){var c=o[a]={onStack:!0,lowlink:n,index:n++};if(e.push(a),t.successors(a).forEach((function(t){r.has(o,t)?o[t].onStack&&(c.lowlink=Math.min(c.lowlink,o[t].index)):(u(t),c.lowlink=Math.min(c.lowlink,o[t].lowlink))})),c.lowlink===c.index){var s,f=[];do{s=e.pop(),o[s].onStack=!1,f.push(s)}while(a!==s);i.push(f)}}(u)})),i}},function(t,n,e){var r=e(1);function o(t){var n={},e={},o=[];if(r.each(t.sinks(),(function u(a){if(r.has(e,a))throw new i;r.has(n,a)||(e[a]=!0,n[a]=!0,r.each(t.predecessors(a),u),delete e[a],o.push(a))})),r.size(n)!==t.nodeCount())throw new i;return o}function i(){}t.exports=o,o.CycleException=i,i.prototype=new Error},function(t,n,e){var r=e(1);t.exports=function(t,n,e){r.isArray(n)||(n=[n]);var o=(t.isDirected()?t.successors:t.neighbors).bind(t),i=[],u={};return r.each(n,(function(n){if(!t.hasNode(n))throw new Error("Graph does not have node: "+n);!function t(n,e,o,i,u,a){r.has(i,e)||(i[e]=!0,o||a.push(e),r.each(u(e),(function(e){t(n,e,o,i,u,a)})),o&&a.push(e))}(t,n,"post"===e,u,o,i)})),i}},function(t,n,e){"use strict";(function(n){var r=e(226),o=["delete","get","head","patch","post","put"];t.exports.load=function(t,e,i){var u,a,c=e.method?e.method.toLowerCase():"get";function s(t,e){t?i(t):("[object process]"===Object.prototype.toString.call(void 0!==n?n:0)&&"function"==typeof e.buffer&&e.buffer(!0),e.end((function(t,n){t?i(t):i(void 0,n)})))}if(void 0!==e.method?"string"!=typeof e.method?u=new TypeError("options.method must be a string"):-1===o.indexOf(e.method)&&(u=new TypeError("options.method must be one of the following: "+o.slice(0,o.length-1).join(", ")+" or "+o[o.length-1])):void 0!==e.prepareRequest&&"function"!=typeof e.prepareRequest&&(u=new TypeError("options.prepareRequest must be a function")),u)i(u);else if(a=r["delete"===c?"del":c](t),e.prepareRequest)try{e.prepareRequest(a,s)}catch(t){i(t)}else s(void 0,a)}}).call(this,e(13))},function(t,n,e){"use strict";t.exports=function(t){return null!==t&&"object"==typeof t}},function(t,n,e){(function(r,o){var i,u,a,c;
/*! Native Promise Only
    v0.8.1 (c) Kyle Simpson
    MIT License: http://getify.mit-license.org
*/c=function(){"use strict";var t,n,e,r=Object.prototype.toString,i=void 0!==o?function(t){return o(t)}:setTimeout;try{Object.defineProperty({},"x",{}),t=function(t,n,e,r){return Object.defineProperty(t,n,{value:e,writable:!0,configurable:!1!==r})}}catch(n){t=function(t,n,e){return t[n]=e,t}}function u(t,r){e.add(t,r),n||(n=i(e.drain))}function a(t){var n,e=typeof t;return null==t||"object"!=e&&"function"!=e||(n=t.then),"function"==typeof n&&n}function c(){for(var t=0;t<this.chain.length;t++)s(this,1===this.state?this.chain[t].success:this.chain[t].failure,this.chain[t]);this.chain.length=0}function s(t,n,e){var r,o;try{!1===n?e.reject(t.msg):(r=!0===n?t.msg:n.call(void 0,t.msg))===e.promise?e.reject(TypeError("Promise-chain cycle")):(o=a(r))?o.call(r,e.resolve,e.reject):e.resolve(r)}catch(t){e.reject(t)}}function f(t){var n,e=this;if(!e.triggered){e.triggered=!0,e.def&&(e=e.def);try{(n=a(t))?u((function(){var r=new h(e);try{n.call(t,(function(){f.apply(r,arguments)}),(function(){l.apply(r,arguments)}))}catch(t){l.call(r,t)}})):(e.msg=t,e.state=1,e.chain.length>0&&u(c,e))}catch(t){l.call(new h(e),t)}}}function l(t){var n=this;n.triggered||(n.triggered=!0,n.def&&(n=n.def),n.msg=t,n.state=2,n.chain.length>0&&u(c,n))}function p(t,n,e,r){for(var o=0;o<n.length;o++)!function(o){t.resolve(n[o]).then((function(t){e(o,t)}),r)}(o)}function h(t){this.def=t,this.triggered=!1}function d(t){this.promise=t,this.state=0,this.triggered=!1,this.chain=[],this.msg=void 0}function v(t){if("function"!=typeof t)throw TypeError("Not a function");if(0!==this.__NPO__)throw TypeError("Not a promise");this.__NPO__=1;var n=new d(this);this.then=function(t,e){var r={success:"function"!=typeof t||t,failure:"function"==typeof e&&e};return r.promise=new this.constructor((function(t,n){if("function"!=typeof t||"function"!=typeof n)throw TypeError("Not a function");r.resolve=t,r.reject=n})),n.chain.push(r),0!==n.state&&u(c,n),r.promise},this.catch=function(t){return this.then(void 0,t)};try{t.call(void 0,(function(t){f.call(n,t)}),(function(t){l.call(n,t)}))}catch(t){l.call(n,t)}}e=function(){var t,e,r;function o(t,n){this.fn=t,this.self=n,this.next=void 0}return{add:function(n,i){r=new o(n,i),e?e.next=r:t=r,e=r,r=void 0},drain:function(){var r=t;for(t=e=n=void 0;r;)r.fn.call(r.self),r=r.next}}}();var y=t({},"constructor",v,!1);return v.prototype=y,t(y,"__NPO__",0,!1),t(v,"resolve",(function(t){return t&&"object"==typeof t&&1===t.__NPO__?t:new this((function(n,e){if("function"!=typeof n||"function"!=typeof e)throw TypeError("Not a function");n(t)}))})),t(v,"reject",(function(t){return new this((function(n,e){if("function"!=typeof n||"function"!=typeof e)throw TypeError("Not a function");e(t)}))})),t(v,"all",(function(t){var n=this;return"[object Array]"!=r.call(t)?n.reject(TypeError("Not an array")):0===t.length?n.resolve([]):new n((function(e,r){if("function"!=typeof e||"function"!=typeof r)throw TypeError("Not a function");var o=t.length,i=Array(o),u=0;p(n,t,(function(t,n){i[t]=n,++u===o&&e(i)}),r)}))})),t(v,"race",(function(t){var n=this;return"[object Array]"!=r.call(t)?n.reject(TypeError("Not an array")):new n((function(e,r){if("function"!=typeof e||"function"!=typeof r)throw TypeError("Not a function");p(n,t,(function(t,n){e(n)}),r)}))})),v},(a=void 0!==r?r:this)[u="Promise"]=a[u]||c(),t.exports?t.exports=a[u]:void 0===(i=function(){return a[u]}.call(n,e,n,t))||(t.exports=i)}).call(this,e(11),e(232).setImmediate)},function(t,n,e){var r,o,i,u;o=e(84),i=e(239),u={resolveReferences:function(t){return new Promise((function(n,e){var r={includeInvalid:!0,resolveCirculars:!1},u={},a={},c=o.findRefs(t,r);Object.keys(c).forEach((function(n){var e=c[n];if(0===e.uri.indexOf("#")){var r=e.uri.substring(1);if(void 0===u[r]||!u[r]){var o=i.get(t,r);o&&(o.description?(a[r]=o.description,o.description+=" "+e.uri):o.description=e.uri,u[r]=!0)}}})),o.resolveRefs(t,r).then((function(t){var e=t.resolved;Object.keys(u).forEach((function(t){var n=a[t],r=i.get(e,t);if(r){var o=_.cloneDeep(r);n?o.description=n:delete o.description,i.set(e,t,o)}})),n(e)}),(function(t){console.error("Error during resolving references"),console.error(t),t.stack&&console.error(t.stack),e(t)}))}))}},t.exports&&(n=t.exports=u),n.refResolver=u,void 0===(r=function(){return u}.apply(n,[]))||(t.exports=r),"object"==typeof window&&"object"==typeof window.document&&(window.refResolver=u)},function(t,n,e){"use strict";(function(n){var r=e(85),o=e(86),i=e(223),u=e(224),a=e(234),c=e(237),s=e(238),f=/~(?:[^01]|$)/g,l={},p=["relative","remote"],h=["absolute","uri"],d={};function v(t,n){r.isString(t)&&(t=c(t)),r.isString(n)&&(n=c(n));var e,o,u=O(r.isUndefined(n)?"":n);return h.indexOf(u.reference)>-1?o=u:(e=r.isUndefined(t)?void 0:O(t),r.isUndefined(e)?o=u:((o=e).path=c(i.join(e.path,u.path)),o.query=function(t,n){var e={};function o(t){r.forOwn(t,(function(t,n){e[n]=t}))}return o(a.parse(t||"")),o(a.parse(n||"")),0===Object.keys(e).length?void 0:a.stringify(e)}(e.query,u.query))),o.fragment=void 0,(-1===h.indexOf(o.reference)&&0===o.path.indexOf("../")?"../":"")+s.serialize(o)}function y(t){return p.indexOf(m(t))>-1}function _(t){return r.isUndefined(t.error)&&"invalid"!==t.type}function g(t,n){var e=t;return n.forEach((function(t){if(!(t in e))throw Error("JSON Pointer points to missing location: "+R(n));e=e[t]})),e}function b(t){return Object.keys(t).filter((function(t){return"$ref"!==t}))}function m(t){var n;switch(t.uriDetails.reference){case"absolute":case"uri":n="remote";break;case"same-document":n="local";break;default:n=t.uriDetails.reference}return n}function w(t,n){var e=l[t],o=Promise.resolve(),i=r.cloneDeep(n.loaderOptions||{});return r.isUndefined(e)?(r.isUndefined(i.processContent)&&(i.processContent=function(t,n){n(void 0,JSON.parse(t.text))}),o=(o=u.load(decodeURI(t),i)).then((function(n){return l[t]={value:n},n})).catch((function(n){throw l[t]={error:n},n}))):o=o.then((function(){if(r.isError(e.error))throw e.error;return e.value})),o.then((function(t){return r.cloneDeep(t)}))}function x(t,n){var e=!0;try{if(!r.isPlainObject(t))throw new Error("obj is not an Object");if(!r.isString(t.$ref))throw new Error("obj.$ref is not a String")}catch(t){if(n)throw t;e=!1}return e}function j(t){return-1!==t.indexOf("://")||i.isAbsolute(t)?t:i.resolve(n.cwd(),t)}function E(t,n){t.error=n.message,t.missing=!0}function O(t){return s.parse(t)}function A(t,n){var e,o;if(t=r.isUndefined(t)?{}:r.cloneDeep(t),!r.isObject(t))throw new TypeError("options must be an Object");if(!r.isUndefined(t.resolveCirculars)&&!r.isBoolean(t.resolveCirculars))throw new TypeError("options.resolveCirculars must be a Boolean");if(!(r.isUndefined(t.filter)||r.isArray(t.filter)||r.isFunction(t.filter)||r.isString(t.filter)))throw new TypeError("options.filter must be an Array, a Function of a String");if(!r.isUndefined(t.includeInvalid)&&!r.isBoolean(t.includeInvalid))throw new TypeError("options.includeInvalid must be a Boolean");if(!r.isUndefined(t.location)&&!r.isString(t.location))throw new TypeError("options.location must be a String");if(!r.isUndefined(t.refPreProcessor)&&!r.isFunction(t.refPreProcessor))throw new TypeError("options.refPreProcessor must be a Function");if(!r.isUndefined(t.refPostProcessor)&&!r.isFunction(t.refPostProcessor))throw new TypeError("options.refPostProcessor must be a Function");if(!r.isUndefined(t.subDocPath)&&!r.isArray(t.subDocPath)&&!P(t.subDocPath))throw new TypeError("options.subDocPath must be an Array of path segments or a valid JSON Pointer");if(r.isUndefined(t.resolveCirculars)&&(t.resolveCirculars=!1),t.filter=function(t){var n,e;return r.isArray(t.filter)||r.isString(t.filter)?(e=r.isString(t.filter)?[t.filter]:t.filter,n=function(t){return e.indexOf(t.type)>-1||e.indexOf(m(t))>-1}):r.isFunction(t.filter)?n=t.filter:r.isUndefined(t.filter)&&(n=function(){return!0}),function(e,r){return("invalid"!==e.type||!0===t.includeInvalid)&&n(e,r)}}(t),r.isUndefined(t.location)&&(t.location=j("./root.json")),(e=t.location.split("#")).length>1&&(t.subDocPath="#"+e[1]),o=decodeURI(t.location)===t.location,t.location=v(t.location,void 0),o&&(t.location=decodeURI(t.location)),t.subDocPath=function(t){var n;return r.isArray(t.subDocPath)?n=t.subDocPath:r.isString(t.subDocPath)?n=k(t.subDocPath):r.isUndefined(t.subDocPath)&&(n=[]),n}(t),!r.isUndefined(n))try{g(n,t.subDocPath)}catch(t){throw t.message=t.message.replace("JSON Pointer","options.subDocPath"),t}return t}function T(t){if(!r.isArray(t))throw new TypeError("path must be an array");return t.map((function(t){return r.isString(t)||(t=JSON.stringify(t)),t.replace(/~1/g,"/").replace(/~0/g,"~")}))}function C(t){if(!r.isArray(t))throw new TypeError("path must be an array");return t.map((function(t){return r.isString(t)||(t=JSON.stringify(t)),t.replace(/~/g,"~0").replace(/\//g,"~1")}))}function S(t,n){var e={};if(!r.isArray(t)&&!r.isObject(t))throw new TypeError("obj must be an Array or an Object");return function t(n,e,o,i){var u=!0;function a(e,r){o.push(r),t(n,e,o,i),o.pop()}r.isFunction(i)&&(u=i(n,e,o)),-1===n.indexOf(e)&&(n.push(e),!1!==u&&(r.isArray(e)?e.forEach((function(t,n){a(t,n.toString())})):r.isObject(e)&&r.forOwn(e,(function(t,n){a(t,n)}))),n.pop())}(function(t,n){var e,r=[];return n.length>0&&(e=t,n.slice(0,n.length-1).forEach((function(t){t in e&&(e=e[t],r.push(e))}))),r}(t,(n=A(n,t)).subDocPath),g(t,n.subDocPath),r.cloneDeep(n.subDocPath),(function(t,o,i){var u,a,c=!0;return x(o)&&(r.isUndefined(n.refPreProcessor)||(o=n.refPreProcessor(r.cloneDeep(o),i)),u=I(o),r.isUndefined(n.refPostProcessor)||(u=n.refPostProcessor(u,i)),n.filter(u,i)&&(a=R(i),e[a]=u),b(o).length>0&&(c=!1)),c})),e}function I(t){var n,e,o,i={def:t};try{if(x(t,!0)){if(n=t.$ref,o=d[n],r.isUndefined(o)&&(o=d[n]=O(n)),i.uri=n,i.uriDetails=o,r.isUndefined(o.error)){i.type=m(i);try{["#","/"].indexOf(n[0])>-1?P(n,!0):n.indexOf("#")>-1&&P(o.fragment,!0)}catch(t){i.error=t.message,i.type="invalid"}}else i.error=i.uriDetails.error,i.type="invalid";(e=b(t)).length>0&&(i.warning="Extra JSON Reference properties will be ignored: "+e.join(", "))}else i.type="invalid"}catch(t){i.error=t.message,i.type="invalid"}return i}function P(t,n){var e,o=!0;try{if(!r.isString(t))throw new Error("ptr is not a String");if(""!==t){if(e=t.charAt(0),-1===["#","/"].indexOf(e))throw new Error("ptr must start with a / or #/");if("#"===e&&"#"!==t&&"/"!==t.charAt(1))throw new Error("ptr must start with a / or #/");if(t.match(f))throw new Error("ptr has invalid token(s)")}}catch(t){if(!0===n)throw t;o=!1}return o}function k(t){try{P(t,!0)}catch(t){throw new Error("ptr must be a JSON Pointer: "+t.message)}var n=t.split("/");return n.shift(),T(n)}function R(t,n){if(!r.isArray(t))throw new Error("path must be an Array");return(!1!==n?"#":"")+(t.length>0?"/":"")+C(t).join("/")}function D(t,n){var e=Promise.resolve();return e.then((function(){if(!r.isArray(t)&&!r.isObject(t))throw new TypeError("obj must be an Array or an Object");n=A(n,t),t=r.cloneDeep(t)})).then((function(){var e={deps:{},docs:{},refs:{}};return function t(n,e,o){var u,a,c=Promise.resolve(),s=R(e.subDocPath),f=j(e.location),l=i.dirname(e.location),p=f+s;return r.isUndefined(o.docs[f])&&(o.docs[f]=n),r.isUndefined(o.deps[p])&&(o.deps[p]={},u=S(n,e),r.forOwn(u,(function(i,u){var f,h,d=j(e.location)+u,g=i.refdId=decodeURI(j(y(i)?v(l,i.uri):e.location)+"#"+(i.uri.indexOf("#")>-1?i.uri.split("#")[1]:""));o.refs[d]=i,_(i)&&(i.fqURI=g,o.deps[p][u===s?"#":u.replace(s+"/","#/")]=g,0!==d.indexOf(g+"/")?((a=r.cloneDeep(e)).subDocPath=r.isUndefined(i.uriDetails.fragment)?[]:k(decodeURI(i.uriDetails.fragment)),y(i)?(delete a.filter,a.location=g.split("#")[0],c=c.then((f=o,h=a,function(){var t=j(h.location),n=f.docs[t];return r.isUndefined(n)?w(t,h).catch((function(n){return f.docs[t]=n,n})):Promise.resolve().then((function(){return n}))}))):c=c.then((function(){return n})),c=c.then(function(n,e,o){return function(i){if(r.isError(i))E(o,i);else try{return t(i,e,n).catch((function(t){E(o,t)}))}catch(t){E(o,t)}}}(o,a,i))):i.circular=!0)}))),c}(t,n,e).then((function(){return e}))})).then((function(t){var e={},u=[],a=[],c=new o.Graph,s=j(n.location),f=s+R(n.subDocPath),l=i.dirname(s);return Object.keys(t.deps).forEach((function(t){c.setNode(t)})),r.forOwn(t.deps,(function(t,n){r.forOwn(t,(function(t){c.setEdge(n,t)}))})),(u=o.alg.findCycles(c)).forEach((function(t){t.forEach((function(t){-1===a.indexOf(t)&&a.push(t)}))})),r.forOwn(t.deps,(function(n,e){r.forOwn(n,(function(n,r){var o,i=!1,c=e+r.slice(1),s=t.refs[e+r.slice(1)],f=y(s);a.indexOf(n)>-1&&u.forEach((function(t){i||(o=t.indexOf(n))>-1&&t.forEach((function(e){i||0===c.indexOf(e+"/")&&(f&&o!==t.length-1&&"#"===n[n.length-1]||(i=!0))}))})),i&&(s.circular=!0)}))})),r.forOwn(Object.keys(t.deps).reverse(),(function(e){var o=t.deps[e],i=e.split("#"),u=t.docs[i[0]],a=k(i[1]);r.forOwn(o,(function(e,o){var c=e.split("#"),s=t.docs[c[0]],f=a.concat(k(o)),l=t.refs[i[0]+R(f)];if(r.isUndefined(l.error)&&r.isUndefined(l.missing))if(!n.resolveCirculars&&l.circular)l.value=l.def;else{try{l.value=g(s,k(c[1]))}catch(t){return void E(l,t)}""===i[1]&&"#"===o?t.docs[i[0]]=l.value:function(t,n,e){g(t,n.slice(0,n.length-1))[n[n.length-1]]=e}(u,f,l.value)}}))})),Object.keys(t.refs).forEach((function(o){var i,u,a=t.refs[o];"invalid"!==a.type&&("#"===a.fqURI[a.fqURI.length-1]&&"#"!==a.uri[a.uri.length-1]&&(a.fqURI=a.fqURI.substr(0,a.fqURI.length-1)),i=a.fqURI.split("/"),u=a.uri.split("/"),r.times(u.length-1,(function(t){var n=u[u.length-t-1],e=i.length-t-1,r=i[e];"."!==n&&".."!==n||(n=r),i[e]=n})),a.fqURI=i.join("/"),0===a.fqURI.indexOf(s)?a.fqURI=a.fqURI.replace(s,""):0===a.fqURI.indexOf(l)&&(a.fqURI=a.fqURI.replace(l,"")),"/"===a.fqURI[0]&&(a.fqURI="."+a.fqURI)),0===o.indexOf(f)&&function r(o,i,u){var a,c=i.split("#"),s=t.refs[i];e[c[0]===n.location?"#"+c[1]:R(n.subDocPath.concat(u))]=s,!s.circular&&_(s)?(a=t.deps[s.refdId],0!==s.refdId.indexOf(o)&&Object.keys(a).forEach((function(t){r(s.refdId,s.refdId+t.substr(1),u.concat(k(t)))}))):!s.circular&&s.error&&(s.error=s.error.replace("options.subDocPath","JSON Pointer"),s.error.indexOf("#")>-1&&(s.error=s.error.replace(s.uri.substr(s.uri.indexOf("#")),s.uri)),0!==s.error.indexOf("ENOENT:")&&0!==s.error.indexOf("Not Found")||(s.error="JSON Pointer points to missing location: "+s.uri))}(f,o,k(o.substr(f.length)))})),r.forOwn(t.refs,(function(t){delete t.refdId,t.missing&&(t.error=t.error.split(": ")[0]+": "+t.def.$ref)})),{refs:e,resolved:t.docs[s]}}))}"undefined"==typeof Promise&&e(82),t.exports.clearCache=function(){l={}},t.exports.decodePath=function(t){return T(t)},t.exports.encodePath=function(t){return C(t)},t.exports.findRefs=function(t,n){return S(t,n)},t.exports.findRefsAt=function(t,n){return function(t,n){var e=Promise.resolve();return e.then((function(){if(!r.isString(t))throw new TypeError("location must be a string");return r.isUndefined(n)&&(n={}),r.isObject(n)&&(n.location=t),w((n=A(n)).location,n)})).then((function(t){var e=r.cloneDeep(l[n.location]),o=r.cloneDeep(n),i=O(n.location);return r.isUndefined(e.refs)&&(delete o.filter,delete o.subDocPath,o.includeInvalid=!0,l[n.location].refs=S(t,o)),r.isUndefined(n.filter)||(o.filter=n.filter),r.isUndefined(i.fragment)?r.isUndefined(i.subDocPath)||(o.subDocPath=n.subDocPath):o.subDocPath=k(decodeURI(i.fragment)),{refs:S(t,o),value:t}}))}(t,n)},t.exports.getRefDetails=function(t){return I(t)},t.exports.isPtr=function(t,n){return P(t,n)},t.exports.isRef=function(t,n){return function(t,n){return x(t,n)&&"invalid"!==I(t).type}(t,n)},t.exports.pathFromPtr=function(t){return k(t)},t.exports.pathToPtr=function(t,n){return R(t,n)},t.exports.resolveRefs=function(t,n){return D(t,n)},t.exports.resolveRefsAt=function(t,n){return function(t,n){var e=Promise.resolve();return e.then((function(){if(!r.isString(t))throw new TypeError("location must be a string");return r.isUndefined(n)&&(n={}),r.isObject(n)&&(n.location=t),w((n=A(n)).location,n)})).then((function(t){var e=r.cloneDeep(n),o=O(n.location);return r.isUndefined(o.fragment)||(e.subDocPath=k(decodeURI(o.fragment))),D(t,e).then((function(n){return{refs:n.refs,resolved:n.resolved,value:t}}))}))}(t,n)}}).call(this,e(13))},function(t,n,e){(function(t,r){var o;
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */(function(){var i,u=200,a="Expected a function",c="__lodash_hash_undefined__",s="__lodash_placeholder__",f=1,l=2,p=4,h=1,d=2,v=1,y=2,_=4,g=8,b=16,m=32,w=64,x=128,j=256,E=512,O=800,A=16,T=1/0,C=9007199254740991,S=17976931348623157e292,I=NaN,P=4294967295,k=P-1,R=P>>>1,D=[["ary",x],["bind",v],["bindKey",y],["curry",g],["curryRight",b],["flip",E],["partial",m],["partialRight",w],["rearg",j]],U="[object Arguments]",N="[object Array]",z="[object AsyncFunction]",F="[object Boolean]",L="[object Date]",q="[object DOMException]",M="[object Error]",$="[object Function]",B="[object GeneratorFunction]",H="[object Map]",W="[object Number]",V="[object Null]",G="[object Object]",J="[object Proxy]",Z="[object RegExp]",X="[object Set]",K="[object String]",Y="[object Symbol]",Q="[object Undefined]",tt="[object WeakMap]",nt="[object ArrayBuffer]",et="[object DataView]",rt="[object Float32Array]",ot="[object Float64Array]",it="[object Int8Array]",ut="[object Int16Array]",at="[object Int32Array]",ct="[object Uint8Array]",st="[object Uint8ClampedArray]",ft="[object Uint16Array]",lt="[object Uint32Array]",pt=/\b__p \+= '';/g,ht=/\b(__p \+=) '' \+/g,dt=/(__e\(.*?\)|\b__t\)) \+\n'';/g,vt=/&(?:amp|lt|gt|quot|#39);/g,yt=/[&<>"']/g,_t=RegExp(vt.source),gt=RegExp(yt.source),bt=/<%-([\s\S]+?)%>/g,mt=/<%([\s\S]+?)%>/g,wt=/<%=([\s\S]+?)%>/g,xt=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,jt=/^\w*$/,Et=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Ot=/[\\^$.*+?()[\]{}|]/g,At=RegExp(Ot.source),Tt=/^\s+|\s+$/g,Ct=/^\s+/,St=/\s+$/,It=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Pt=/\{\n\/\* \[wrapped with (.+)\] \*/,kt=/,? & /,Rt=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Dt=/\\(\\)?/g,Ut=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Nt=/\w*$/,zt=/^[-+]0x[0-9a-f]+$/i,Ft=/^0b[01]+$/i,Lt=/^\[object .+?Constructor\]$/,qt=/^0o[0-7]+$/i,Mt=/^(?:0|[1-9]\d*)$/,$t=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Bt=/($^)/,Ht=/['\n\r\u2028\u2029\\]/g,Wt="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Vt="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Gt="["+Vt+"]",Jt="["+Wt+"]",Zt="\\d+",Xt="[a-z\\xdf-\\xf6\\xf8-\\xff]",Kt="[^\\ud800-\\udfff"+Vt+Zt+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",Yt="\\ud83c[\\udffb-\\udfff]",Qt="[^\\ud800-\\udfff]",tn="(?:\\ud83c[\\udde6-\\uddff]){2}",nn="[\\ud800-\\udbff][\\udc00-\\udfff]",en="[A-Z\\xc0-\\xd6\\xd8-\\xde]",rn="(?:"+Xt+"|"+Kt+")",on="(?:"+en+"|"+Kt+")",un="(?:"+Jt+"|"+Yt+")?",an="[\\ufe0e\\ufe0f]?"+un+"(?:\\u200d(?:"+[Qt,tn,nn].join("|")+")[\\ufe0e\\ufe0f]?"+un+")*",cn="(?:"+["[\\u2700-\\u27bf]",tn,nn].join("|")+")"+an,sn="(?:"+[Qt+Jt+"?",Jt,tn,nn,"[\\ud800-\\udfff]"].join("|")+")",fn=RegExp("['â]","g"),ln=RegExp(Jt,"g"),pn=RegExp(Yt+"(?="+Yt+")|"+sn+an,"g"),hn=RegExp([en+"?"+Xt+"+(?:['â](?:d|ll|m|re|s|t|ve))?(?="+[Gt,en,"$"].join("|")+")",on+"+(?:['â](?:D|LL|M|RE|S|T|VE))?(?="+[Gt,en+rn,"$"].join("|")+")",en+"?"+rn+"+(?:['â](?:d|ll|m|re|s|t|ve))?",en+"+(?:['â](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Zt,cn].join("|"),"g"),dn=RegExp("[\\u200d\\ud800-\\udfff"+Wt+"\\ufe0e\\ufe0f]"),vn=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,yn=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],_n=-1,gn={};gn[rt]=gn[ot]=gn[it]=gn[ut]=gn[at]=gn[ct]=gn[st]=gn[ft]=gn[lt]=!0,gn[U]=gn[N]=gn[nt]=gn[F]=gn[et]=gn[L]=gn[M]=gn[$]=gn[H]=gn[W]=gn[G]=gn[Z]=gn[X]=gn[K]=gn[tt]=!1;var bn={};bn[U]=bn[N]=bn[nt]=bn[et]=bn[F]=bn[L]=bn[rt]=bn[ot]=bn[it]=bn[ut]=bn[at]=bn[H]=bn[W]=bn[G]=bn[Z]=bn[X]=bn[K]=bn[Y]=bn[ct]=bn[st]=bn[ft]=bn[lt]=!0,bn[M]=bn[$]=bn[tt]=!1;var mn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},wn=parseFloat,xn=parseInt,jn="object"==typeof t&&t&&t.Object===Object&&t,En="object"==typeof self&&self&&self.Object===Object&&self,On=jn||En||Function("return this")(),An=n&&!n.nodeType&&n,Tn=An&&"object"==typeof r&&r&&!r.nodeType&&r,Cn=Tn&&Tn.exports===An,Sn=Cn&&jn.process,In=function(){try{return Tn&&Tn.require&&Tn.require("util").types||Sn&&Sn.binding&&Sn.binding("util")}catch(t){}}(),Pn=In&&In.isArrayBuffer,kn=In&&In.isDate,Rn=In&&In.isMap,Dn=In&&In.isRegExp,Un=In&&In.isSet,Nn=In&&In.isTypedArray;function zn(t,n,e){switch(e.length){case 0:return t.call(n);case 1:return t.call(n,e[0]);case 2:return t.call(n,e[0],e[1]);case 3:return t.call(n,e[0],e[1],e[2])}return t.apply(n,e)}function Fn(t,n,e,r){for(var o=-1,i=null==t?0:t.length;++o<i;){var u=t[o];n(r,u,e(u),t)}return r}function Ln(t,n){for(var e=-1,r=null==t?0:t.length;++e<r&&!1!==n(t[e],e,t););return t}function qn(t,n){for(var e=null==t?0:t.length;e--&&!1!==n(t[e],e,t););return t}function Mn(t,n){for(var e=-1,r=null==t?0:t.length;++e<r;)if(!n(t[e],e,t))return!1;return!0}function $n(t,n){for(var e=-1,r=null==t?0:t.length,o=0,i=[];++e<r;){var u=t[e];n(u,e,t)&&(i[o++]=u)}return i}function Bn(t,n){return!(null==t||!t.length)&&Qn(t,n,0)>-1}function Hn(t,n,e){for(var r=-1,o=null==t?0:t.length;++r<o;)if(e(n,t[r]))return!0;return!1}function Wn(t,n){for(var e=-1,r=null==t?0:t.length,o=Array(r);++e<r;)o[e]=n(t[e],e,t);return o}function Vn(t,n){for(var e=-1,r=n.length,o=t.length;++e<r;)t[o+e]=n[e];return t}function Gn(t,n,e,r){var o=-1,i=null==t?0:t.length;for(r&&i&&(e=t[++o]);++o<i;)e=n(e,t[o],o,t);return e}function Jn(t,n,e,r){var o=null==t?0:t.length;for(r&&o&&(e=t[--o]);o--;)e=n(e,t[o],o,t);return e}function Zn(t,n){for(var e=-1,r=null==t?0:t.length;++e<r;)if(n(t[e],e,t))return!0;return!1}var Xn=re("length");function Kn(t,n,e){var r;return e(t,(function(t,e,o){if(n(t,e,o))return r=e,!1})),r}function Yn(t,n,e,r){for(var o=t.length,i=e+(r?1:-1);r?i--:++i<o;)if(n(t[i],i,t))return i;return-1}function Qn(t,n,e){return n==n?function(t,n,e){for(var r=e-1,o=t.length;++r<o;)if(t[r]===n)return r;return-1}(t,n,e):Yn(t,ne,e)}function te(t,n,e,r){for(var o=e-1,i=t.length;++o<i;)if(r(t[o],n))return o;return-1}function ne(t){return t!=t}function ee(t,n){var e=null==t?0:t.length;return e?ue(t,n)/e:I}function re(t){return function(n){return null==n?i:n[t]}}function oe(t){return function(n){return null==t?i:t[n]}}function ie(t,n,e,r,o){return o(t,(function(t,o,i){e=r?(r=!1,t):n(e,t,o,i)})),e}function ue(t,n){for(var e,r=-1,o=t.length;++r<o;){var u=n(t[r]);u!==i&&(e=e===i?u:e+u)}return e}function ae(t,n){for(var e=-1,r=Array(t);++e<t;)r[e]=n(e);return r}function ce(t){return function(n){return t(n)}}function se(t,n){return Wn(n,(function(n){return t[n]}))}function fe(t,n){return t.has(n)}function le(t,n){for(var e=-1,r=t.length;++e<r&&Qn(n,t[e],0)>-1;);return e}function pe(t,n){for(var e=t.length;e--&&Qn(n,t[e],0)>-1;);return e}var he=oe({"Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã ":"a","Ã¡":"a","Ã¢":"a","Ã£":"a","Ã¤":"a","Ã¥":"a","Ã":"C","Ã§":"c","Ã":"D","Ã°":"d","Ã":"E","Ã":"E","Ã":"E","Ã":"E","Ã¨":"e","Ã©":"e","Ãª":"e","Ã«":"e","Ã":"I","Ã":"I","Ã":"I","Ã":"I","Ã¬":"i","Ã­":"i","Ã®":"i","Ã¯":"i","Ã":"N","Ã±":"n","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã²":"o","Ã³":"o","Ã´":"o","Ãµ":"o","Ã¶":"o","Ã¸":"o","Ã":"U","Ã":"U","Ã":"U","Ã":"U","Ã¹":"u","Ãº":"u","Ã»":"u","Ã¼":"u","Ã":"Y","Ã½":"y","Ã¿":"y","Ã":"Ae","Ã¦":"ae","Ã":"Th","Ã¾":"th","Ã":"ss","Ä":"A","Ä":"A","Ä":"A","Ä":"a","Ä":"a","Ä":"a","Ä":"C","Ä":"C","Ä":"C","Ä":"C","Ä":"c","Ä":"c","Ä":"c","Ä":"c","Ä":"D","Ä":"D","Ä":"d","Ä":"d","Ä":"E","Ä":"E","Ä":"E","Ä":"E","Ä":"E","Ä":"e","Ä":"e","Ä":"e","Ä":"e","Ä":"e","Ä":"G","Ä":"G","Ä ":"G","Ä¢":"G","Ä":"g","Ä":"g","Ä¡":"g","Ä£":"g","Ä¤":"H","Ä¦":"H","Ä¥":"h","Ä§":"h","Ä¨":"I","Äª":"I","Ä¬":"I","Ä®":"I","Ä°":"I","Ä©":"i","Ä«":"i","Ä­":"i","Ä¯":"i","Ä±":"i","Ä´":"J","Äµ":"j","Ä¶":"K","Ä·":"k","Ä¸":"k","Ä¹":"L","Ä»":"L","Ä½":"L","Ä¿":"L","Å":"L","Äº":"l","Ä¼":"l","Ä¾":"l","Å":"l","Å":"l","Å":"N","Å":"N","Å":"N","Å":"N","Å":"n","Å":"n","Å":"n","Å":"n","Å":"O","Å":"O","Å":"O","Å":"o","Å":"o","Å":"o","Å":"R","Å":"R","Å":"R","Å":"r","Å":"r","Å":"r","Å":"S","Å":"S","Å":"S","Å ":"S","Å":"s","Å":"s","Å":"s","Å¡":"s","Å¢":"T","Å¤":"T","Å¦":"T","Å£":"t","Å¥":"t","Å§":"t","Å¨":"U","Åª":"U","Å¬":"U","Å®":"U","Å°":"U","Å²":"U","Å©":"u","Å«":"u","Å­":"u","Å¯":"u","Å±":"u","Å³":"u","Å´":"W","Åµ":"w","Å¶":"Y","Å·":"y","Å¸":"Y","Å¹":"Z","Å»":"Z","Å½":"Z","Åº":"z","Å¼":"z","Å¾":"z","Ä²":"IJ","Ä³":"ij","Å":"Oe","Å":"oe","Å":"'n","Å¿":"s"}),de=oe({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function ve(t){return"\\"+mn[t]}function ye(t){return dn.test(t)}function _e(t){var n=-1,e=Array(t.size);return t.forEach((function(t,r){e[++n]=[r,t]})),e}function ge(t,n){return function(e){return t(n(e))}}function be(t,n){for(var e=-1,r=t.length,o=0,i=[];++e<r;){var u=t[e];u!==n&&u!==s||(t[e]=s,i[o++]=e)}return i}function me(t){var n=-1,e=Array(t.size);return t.forEach((function(t){e[++n]=t})),e}function we(t){return ye(t)?function(t){for(var n=pn.lastIndex=0;pn.test(t);)++n;return n}(t):Xn(t)}function xe(t){return ye(t)?function(t){return t.match(pn)||[]}(t):function(t){return t.split("")}(t)}var je=oe({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),Ee=function t(n){var e,r=(n=null==n?On:Ee.defaults(On.Object(),n,Ee.pick(On,yn))).Array,o=n.Date,Wt=n.Error,Vt=n.Function,Gt=n.Math,Jt=n.Object,Zt=n.RegExp,Xt=n.String,Kt=n.TypeError,Yt=r.prototype,Qt=Vt.prototype,tn=Jt.prototype,nn=n["__core-js_shared__"],en=Qt.toString,rn=tn.hasOwnProperty,on=0,un=(e=/[^.]+$/.exec(nn&&nn.keys&&nn.keys.IE_PROTO||""))?"Symbol(src)_1."+e:"",an=tn.toString,cn=en.call(Jt),sn=On._,pn=Zt("^"+en.call(rn).replace(Ot,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),dn=Cn?n.Buffer:i,mn=n.Symbol,jn=n.Uint8Array,En=dn?dn.allocUnsafe:i,An=ge(Jt.getPrototypeOf,Jt),Tn=Jt.create,Sn=tn.propertyIsEnumerable,In=Yt.splice,Xn=mn?mn.isConcatSpreadable:i,oe=mn?mn.iterator:i,Oe=mn?mn.toStringTag:i,Ae=function(){try{var t=Ii(Jt,"defineProperty");return t({},"",{}),t}catch(t){}}(),Te=n.clearTimeout!==On.clearTimeout&&n.clearTimeout,Ce=o&&o.now!==On.Date.now&&o.now,Se=n.setTimeout!==On.setTimeout&&n.setTimeout,Ie=Gt.ceil,Pe=Gt.floor,ke=Jt.getOwnPropertySymbols,Re=dn?dn.isBuffer:i,De=n.isFinite,Ue=Yt.join,Ne=ge(Jt.keys,Jt),ze=Gt.max,Fe=Gt.min,Le=o.now,qe=n.parseInt,Me=Gt.random,$e=Yt.reverse,Be=Ii(n,"DataView"),He=Ii(n,"Map"),We=Ii(n,"Promise"),Ve=Ii(n,"Set"),Ge=Ii(n,"WeakMap"),Je=Ii(Jt,"create"),Ze=Ge&&new Ge,Xe={},Ke=eu(Be),Ye=eu(He),Qe=eu(We),tr=eu(Ve),nr=eu(Ge),er=mn?mn.prototype:i,rr=er?er.valueOf:i,or=er?er.toString:i;function ir(t){if(ba(t)&&!ca(t)&&!(t instanceof sr)){if(t instanceof cr)return t;if(rn.call(t,"__wrapped__"))return ru(t)}return new cr(t)}var ur=function(){function t(){}return function(n){if(!ga(n))return{};if(Tn)return Tn(n);t.prototype=n;var e=new t;return t.prototype=i,e}}();function ar(){}function cr(t,n){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!n,this.__index__=0,this.__values__=i}function sr(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=P,this.__views__=[]}function fr(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}function lr(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}function pr(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}function hr(t){var n=-1,e=null==t?0:t.length;for(this.__data__=new pr;++n<e;)this.add(t[n])}function dr(t){var n=this.__data__=new lr(t);this.size=n.size}function vr(t,n){var e=ca(t),r=!e&&aa(t),o=!e&&!r&&pa(t),i=!e&&!r&&!o&&Ta(t),u=e||r||o||i,a=u?ae(t.length,Xt):[],c=a.length;for(var s in t)!n&&!rn.call(t,s)||u&&("length"==s||o&&("offset"==s||"parent"==s)||i&&("buffer"==s||"byteLength"==s||"byteOffset"==s)||zi(s,c))||a.push(s);return a}function yr(t){var n=t.length;return n?t[po(0,n-1)]:i}function _r(t,n){return Qi(Jo(t),Ar(n,0,t.length))}function gr(t){return Qi(Jo(t))}function br(t,n,e){(e===i||oa(t[n],e))&&(e!==i||n in t)||Er(t,n,e)}function mr(t,n,e){var r=t[n];rn.call(t,n)&&oa(r,e)&&(e!==i||n in t)||Er(t,n,e)}function wr(t,n){for(var e=t.length;e--;)if(oa(t[e][0],n))return e;return-1}function xr(t,n,e,r){return Pr(t,(function(t,o,i){n(r,t,e(t),i)})),r}function jr(t,n){return t&&Zo(n,Za(n),t)}function Er(t,n,e){"__proto__"==n&&Ae?Ae(t,n,{configurable:!0,enumerable:!0,value:e,writable:!0}):t[n]=e}function Or(t,n){for(var e=-1,o=n.length,u=r(o),a=null==t;++e<o;)u[e]=a?i:Ha(t,n[e]);return u}function Ar(t,n,e){return t==t&&(e!==i&&(t=t<=e?t:e),n!==i&&(t=t>=n?t:n)),t}function Tr(t,n,e,r,o,u){var a,c=n&f,s=n&l,h=n&p;if(e&&(a=o?e(t,r,o,u):e(t)),a!==i)return a;if(!ga(t))return t;var d=ca(t);if(d){if(a=function(t){var n=t.length,e=new t.constructor(n);return n&&"string"==typeof t[0]&&rn.call(t,"index")&&(e.index=t.index,e.input=t.input),e}(t),!c)return Jo(t,a)}else{var v=Ri(t),y=v==$||v==B;if(pa(t))return $o(t,c);if(v==G||v==U||y&&!o){if(a=s||y?{}:Ui(t),!c)return s?function(t,n){return Zo(t,ki(t),n)}(t,function(t,n){return t&&Zo(n,Xa(n),t)}(a,t)):function(t,n){return Zo(t,Pi(t),n)}(t,jr(a,t))}else{if(!bn[v])return o?t:{};a=function(t,n,e){var r,o=t.constructor;switch(n){case nt:return Bo(t);case F:case L:return new o(+t);case et:return function(t,n){var e=n?Bo(t.buffer):t.buffer;return new t.constructor(e,t.byteOffset,t.byteLength)}(t,e);case rt:case ot:case it:case ut:case at:case ct:case st:case ft:case lt:return Ho(t,e);case H:return new o;case W:case K:return new o(t);case Z:return function(t){var n=new t.constructor(t.source,Nt.exec(t));return n.lastIndex=t.lastIndex,n}(t);case X:return new o;case Y:return r=t,rr?Jt(rr.call(r)):{}}}(t,v,c)}}u||(u=new dr);var _=u.get(t);if(_)return _;u.set(t,a),Ea(t)?t.forEach((function(r){a.add(Tr(r,n,e,r,t,u))})):ma(t)&&t.forEach((function(r,o){a.set(o,Tr(r,n,e,o,t,u))}));var g=d?i:(h?s?ji:xi:s?Xa:Za)(t);return Ln(g||t,(function(r,o){g&&(r=t[o=r]),mr(a,o,Tr(r,n,e,o,t,u))})),a}function Cr(t,n,e){var r=e.length;if(null==t)return!r;for(t=Jt(t);r--;){var o=e[r],u=n[o],a=t[o];if(a===i&&!(o in t)||!u(a))return!1}return!0}function Sr(t,n,e){if("function"!=typeof t)throw new Kt(a);return Zi((function(){t.apply(i,e)}),n)}function Ir(t,n,e,r){var o=-1,i=Bn,a=!0,c=t.length,s=[],f=n.length;if(!c)return s;e&&(n=Wn(n,ce(e))),r?(i=Hn,a=!1):n.length>=u&&(i=fe,a=!1,n=new hr(n));t:for(;++o<c;){var l=t[o],p=null==e?l:e(l);if(l=r||0!==l?l:0,a&&p==p){for(var h=f;h--;)if(n[h]===p)continue t;s.push(l)}else i(n,p,r)||s.push(l)}return s}ir.templateSettings={escape:bt,evaluate:mt,interpolate:wt,variable:"",imports:{_:ir}},ir.prototype=ar.prototype,ir.prototype.constructor=ir,cr.prototype=ur(ar.prototype),cr.prototype.constructor=cr,sr.prototype=ur(ar.prototype),sr.prototype.constructor=sr,fr.prototype.clear=function(){this.__data__=Je?Je(null):{},this.size=0},fr.prototype.delete=function(t){var n=this.has(t)&&delete this.__data__[t];return this.size-=n?1:0,n},fr.prototype.get=function(t){var n=this.__data__;if(Je){var e=n[t];return e===c?i:e}return rn.call(n,t)?n[t]:i},fr.prototype.has=function(t){var n=this.__data__;return Je?n[t]!==i:rn.call(n,t)},fr.prototype.set=function(t,n){var e=this.__data__;return this.size+=this.has(t)?0:1,e[t]=Je&&n===i?c:n,this},lr.prototype.clear=function(){this.__data__=[],this.size=0},lr.prototype.delete=function(t){var n=this.__data__,e=wr(n,t);return!(e<0||(e==n.length-1?n.pop():In.call(n,e,1),--this.size,0))},lr.prototype.get=function(t){var n=this.__data__,e=wr(n,t);return e<0?i:n[e][1]},lr.prototype.has=function(t){return wr(this.__data__,t)>-1},lr.prototype.set=function(t,n){var e=this.__data__,r=wr(e,t);return r<0?(++this.size,e.push([t,n])):e[r][1]=n,this},pr.prototype.clear=function(){this.size=0,this.__data__={hash:new fr,map:new(He||lr),string:new fr}},pr.prototype.delete=function(t){var n=Ci(this,t).delete(t);return this.size-=n?1:0,n},pr.prototype.get=function(t){return Ci(this,t).get(t)},pr.prototype.has=function(t){return Ci(this,t).has(t)},pr.prototype.set=function(t,n){var e=Ci(this,t),r=e.size;return e.set(t,n),this.size+=e.size==r?0:1,this},hr.prototype.add=hr.prototype.push=function(t){return this.__data__.set(t,c),this},hr.prototype.has=function(t){return this.__data__.has(t)},dr.prototype.clear=function(){this.__data__=new lr,this.size=0},dr.prototype.delete=function(t){var n=this.__data__,e=n.delete(t);return this.size=n.size,e},dr.prototype.get=function(t){return this.__data__.get(t)},dr.prototype.has=function(t){return this.__data__.has(t)},dr.prototype.set=function(t,n){var e=this.__data__;if(e instanceof lr){var r=e.__data__;if(!He||r.length<u-1)return r.push([t,n]),this.size=++e.size,this;e=this.__data__=new pr(r)}return e.set(t,n),this.size=e.size,this};var Pr=Yo(Lr),kr=Yo(qr,!0);function Rr(t,n){var e=!0;return Pr(t,(function(t,r,o){return e=!!n(t,r,o)})),e}function Dr(t,n,e){for(var r=-1,o=t.length;++r<o;){var u=t[r],a=n(u);if(null!=a&&(c===i?a==a&&!Aa(a):e(a,c)))var c=a,s=u}return s}function Ur(t,n){var e=[];return Pr(t,(function(t,r,o){n(t,r,o)&&e.push(t)})),e}function Nr(t,n,e,r,o){var i=-1,u=t.length;for(e||(e=Ni),o||(o=[]);++i<u;){var a=t[i];n>0&&e(a)?n>1?Nr(a,n-1,e,r,o):Vn(o,a):r||(o[o.length]=a)}return o}var zr=Qo(),Fr=Qo(!0);function Lr(t,n){return t&&zr(t,n,Za)}function qr(t,n){return t&&Fr(t,n,Za)}function Mr(t,n){return $n(n,(function(n){return va(t[n])}))}function $r(t,n){for(var e=0,r=(n=Fo(n,t)).length;null!=t&&e<r;)t=t[nu(n[e++])];return e&&e==r?t:i}function Br(t,n,e){var r=n(t);return ca(t)?r:Vn(r,e(t))}function Hr(t){return null==t?t===i?Q:V:Oe&&Oe in Jt(t)?function(t){var n=rn.call(t,Oe),e=t[Oe];try{t[Oe]=i;var r=!0}catch(t){}var o=an.call(t);return r&&(n?t[Oe]=e:delete t[Oe]),o}(t):function(t){return an.call(t)}(t)}function Wr(t,n){return t>n}function Vr(t,n){return null!=t&&rn.call(t,n)}function Gr(t,n){return null!=t&&n in Jt(t)}function Jr(t,n,e){for(var o=e?Hn:Bn,u=t[0].length,a=t.length,c=a,s=r(a),f=1/0,l=[];c--;){var p=t[c];c&&n&&(p=Wn(p,ce(n))),f=Fe(p.length,f),s[c]=!e&&(n||u>=120&&p.length>=120)?new hr(c&&p):i}p=t[0];var h=-1,d=s[0];t:for(;++h<u&&l.length<f;){var v=p[h],y=n?n(v):v;if(v=e||0!==v?v:0,!(d?fe(d,y):o(l,y,e))){for(c=a;--c;){var _=s[c];if(!(_?fe(_,y):o(t[c],y,e)))continue t}d&&d.push(y),l.push(v)}}return l}function Zr(t,n,e){var r=null==(t=Vi(t,n=Fo(n,t)))?t:t[nu(du(n))];return null==r?i:zn(r,t,e)}function Xr(t){return ba(t)&&Hr(t)==U}function Kr(t,n,e,r,o){return t===n||(null==t||null==n||!ba(t)&&!ba(n)?t!=t&&n!=n:function(t,n,e,r,o,u){var a=ca(t),c=ca(n),s=a?N:Ri(t),f=c?N:Ri(n),l=(s=s==U?G:s)==G,p=(f=f==U?G:f)==G,v=s==f;if(v&&pa(t)){if(!pa(n))return!1;a=!0,l=!1}if(v&&!l)return u||(u=new dr),a||Ta(t)?mi(t,n,e,r,o,u):function(t,n,e,r,o,i,u){switch(e){case et:if(t.byteLength!=n.byteLength||t.byteOffset!=n.byteOffset)return!1;t=t.buffer,n=n.buffer;case nt:return!(t.byteLength!=n.byteLength||!i(new jn(t),new jn(n)));case F:case L:case W:return oa(+t,+n);case M:return t.name==n.name&&t.message==n.message;case Z:case K:return t==n+"";case H:var a=_e;case X:var c=r&h;if(a||(a=me),t.size!=n.size&&!c)return!1;var s=u.get(t);if(s)return s==n;r|=d,u.set(t,n);var f=mi(a(t),a(n),r,o,i,u);return u.delete(t),f;case Y:if(rr)return rr.call(t)==rr.call(n)}return!1}(t,n,s,e,r,o,u);if(!(e&h)){var y=l&&rn.call(t,"__wrapped__"),_=p&&rn.call(n,"__wrapped__");if(y||_){var g=y?t.value():t,b=_?n.value():n;return u||(u=new dr),o(g,b,e,r,u)}}return!!v&&(u||(u=new dr),function(t,n,e,r,o,u){var a=e&h,c=xi(t),s=c.length;if(s!=xi(n).length&&!a)return!1;for(var f=s;f--;){var l=c[f];if(!(a?l in n:rn.call(n,l)))return!1}var p=u.get(t);if(p&&u.get(n))return p==n;var d=!0;u.set(t,n),u.set(n,t);for(var v=a;++f<s;){var y=t[l=c[f]],_=n[l];if(r)var g=a?r(_,y,l,n,t,u):r(y,_,l,t,n,u);if(!(g===i?y===_||o(y,_,e,r,u):g)){d=!1;break}v||(v="constructor"==l)}if(d&&!v){var b=t.constructor,m=n.constructor;b!=m&&"constructor"in t&&"constructor"in n&&!("function"==typeof b&&b instanceof b&&"function"==typeof m&&m instanceof m)&&(d=!1)}return u.delete(t),u.delete(n),d}(t,n,e,r,o,u))}(t,n,e,r,Kr,o))}function Yr(t,n,e,r){var o=e.length,u=o,a=!r;if(null==t)return!u;for(t=Jt(t);o--;){var c=e[o];if(a&&c[2]?c[1]!==t[c[0]]:!(c[0]in t))return!1}for(;++o<u;){var s=(c=e[o])[0],f=t[s],l=c[1];if(a&&c[2]){if(f===i&&!(s in t))return!1}else{var p=new dr;if(r)var v=r(f,l,s,t,n,p);if(!(v===i?Kr(l,f,h|d,r,p):v))return!1}}return!0}function Qr(t){return!(!ga(t)||(n=t,un&&un in n))&&(va(t)?pn:Lt).test(eu(t));var n}function to(t){return"function"==typeof t?t:null==t?wc:"object"==typeof t?ca(t)?io(t[0],t[1]):oo(t):Ic(t)}function no(t){if(!$i(t))return Ne(t);var n=[];for(var e in Jt(t))rn.call(t,e)&&"constructor"!=e&&n.push(e);return n}function eo(t,n){return t<n}function ro(t,n){var e=-1,o=fa(t)?r(t.length):[];return Pr(t,(function(t,r,i){o[++e]=n(t,r,i)})),o}function oo(t){var n=Si(t);return 1==n.length&&n[0][2]?Hi(n[0][0],n[0][1]):function(e){return e===t||Yr(e,t,n)}}function io(t,n){return Li(t)&&Bi(n)?Hi(nu(t),n):function(e){var r=Ha(e,t);return r===i&&r===n?Wa(e,t):Kr(n,r,h|d)}}function uo(t,n,e,r,o){t!==n&&zr(n,(function(u,a){if(o||(o=new dr),ga(u))!function(t,n,e,r,o,u,a){var c=Gi(t,e),s=Gi(n,e),f=a.get(s);if(f)br(t,e,f);else{var l=u?u(c,s,e+"",t,n,a):i,p=l===i;if(p){var h=ca(s),d=!h&&pa(s),v=!h&&!d&&Ta(s);l=s,h||d||v?ca(c)?l=c:la(c)?l=Jo(c):d?(p=!1,l=$o(s,!0)):v?(p=!1,l=Ho(s,!0)):l=[]:xa(s)||aa(s)?(l=c,aa(c)?l=Ua(c):ga(c)&&!va(c)||(l=Ui(s))):p=!1}p&&(a.set(s,l),o(l,s,r,u,a),a.delete(s)),br(t,e,l)}}(t,n,a,e,uo,r,o);else{var c=r?r(Gi(t,a),u,a+"",t,n,o):i;c===i&&(c=u),br(t,a,c)}}),Xa)}function ao(t,n){var e=t.length;if(e)return zi(n+=n<0?e:0,e)?t[n]:i}function co(t,n,e){var r=-1;return n=Wn(n.length?n:[wc],ce(Ti())),function(t,n){var e=t.length;for(t.sort(n);e--;)t[e]=t[e].value;return t}(ro(t,(function(t,e,o){return{criteria:Wn(n,(function(n){return n(t)})),index:++r,value:t}})),(function(t,n){return function(t,n,e){for(var r=-1,o=t.criteria,i=n.criteria,u=o.length,a=e.length;++r<u;){var c=Wo(o[r],i[r]);if(c)return r>=a?c:c*("desc"==e[r]?-1:1)}return t.index-n.index}(t,n,e)}))}function so(t,n,e){for(var r=-1,o=n.length,i={};++r<o;){var u=n[r],a=$r(t,u);e(a,u)&&go(i,Fo(u,t),a)}return i}function fo(t,n,e,r){var o=r?te:Qn,i=-1,u=n.length,a=t;for(t===n&&(n=Jo(n)),e&&(a=Wn(t,ce(e)));++i<u;)for(var c=0,s=n[i],f=e?e(s):s;(c=o(a,f,c,r))>-1;)a!==t&&In.call(a,c,1),In.call(t,c,1);return t}function lo(t,n){for(var e=t?n.length:0,r=e-1;e--;){var o=n[e];if(e==r||o!==i){var i=o;zi(o)?In.call(t,o,1):Io(t,o)}}return t}function po(t,n){return t+Pe(Me()*(n-t+1))}function ho(t,n){var e="";if(!t||n<1||n>C)return e;do{n%2&&(e+=t),(n=Pe(n/2))&&(t+=t)}while(n);return e}function vo(t,n){return Xi(Wi(t,n,wc),t+"")}function yo(t){return yr(oc(t))}function _o(t,n){var e=oc(t);return Qi(e,Ar(n,0,e.length))}function go(t,n,e,r){if(!ga(t))return t;for(var o=-1,u=(n=Fo(n,t)).length,a=u-1,c=t;null!=c&&++o<u;){var s=nu(n[o]),f=e;if(o!=a){var l=c[s];(f=r?r(l,s,c):i)===i&&(f=ga(l)?l:zi(n[o+1])?[]:{})}mr(c,s,f),c=c[s]}return t}var bo=Ze?function(t,n){return Ze.set(t,n),t}:wc,mo=Ae?function(t,n){return Ae(t,"toString",{configurable:!0,enumerable:!1,value:gc(n),writable:!0})}:wc;function wo(t){return Qi(oc(t))}function xo(t,n,e){var o=-1,i=t.length;n<0&&(n=-n>i?0:i+n),(e=e>i?i:e)<0&&(e+=i),i=n>e?0:e-n>>>0,n>>>=0;for(var u=r(i);++o<i;)u[o]=t[o+n];return u}function jo(t,n){var e;return Pr(t,(function(t,r,o){return!(e=n(t,r,o))})),!!e}function Eo(t,n,e){var r=0,o=null==t?r:t.length;if("number"==typeof n&&n==n&&o<=R){for(;r<o;){var i=r+o>>>1,u=t[i];null!==u&&!Aa(u)&&(e?u<=n:u<n)?r=i+1:o=i}return o}return Oo(t,n,wc,e)}function Oo(t,n,e,r){n=e(n);for(var o=0,u=null==t?0:t.length,a=n!=n,c=null===n,s=Aa(n),f=n===i;o<u;){var l=Pe((o+u)/2),p=e(t[l]),h=p!==i,d=null===p,v=p==p,y=Aa(p);if(a)var _=r||v;else _=f?v&&(r||h):c?v&&h&&(r||!d):s?v&&h&&!d&&(r||!y):!d&&!y&&(r?p<=n:p<n);_?o=l+1:u=l}return Fe(u,k)}function Ao(t,n){for(var e=-1,r=t.length,o=0,i=[];++e<r;){var u=t[e],a=n?n(u):u;if(!e||!oa(a,c)){var c=a;i[o++]=0===u?0:u}}return i}function To(t){return"number"==typeof t?t:Aa(t)?I:+t}function Co(t){if("string"==typeof t)return t;if(ca(t))return Wn(t,Co)+"";if(Aa(t))return or?or.call(t):"";var n=t+"";return"0"==n&&1/t==-T?"-0":n}function So(t,n,e){var r=-1,o=Bn,i=t.length,a=!0,c=[],s=c;if(e)a=!1,o=Hn;else if(i>=u){var f=n?null:di(t);if(f)return me(f);a=!1,o=fe,s=new hr}else s=n?[]:c;t:for(;++r<i;){var l=t[r],p=n?n(l):l;if(l=e||0!==l?l:0,a&&p==p){for(var h=s.length;h--;)if(s[h]===p)continue t;n&&s.push(p),c.push(l)}else o(s,p,e)||(s!==c&&s.push(p),c.push(l))}return c}function Io(t,n){return null==(t=Vi(t,n=Fo(n,t)))||delete t[nu(du(n))]}function Po(t,n,e,r){return go(t,n,e($r(t,n)),r)}function ko(t,n,e,r){for(var o=t.length,i=r?o:-1;(r?i--:++i<o)&&n(t[i],i,t););return e?xo(t,r?0:i,r?i+1:o):xo(t,r?i+1:0,r?o:i)}function Ro(t,n){var e=t;return e instanceof sr&&(e=e.value()),Gn(n,(function(t,n){return n.func.apply(n.thisArg,Vn([t],n.args))}),e)}function Do(t,n,e){var o=t.length;if(o<2)return o?So(t[0]):[];for(var i=-1,u=r(o);++i<o;)for(var a=t[i],c=-1;++c<o;)c!=i&&(u[i]=Ir(u[i]||a,t[c],n,e));return So(Nr(u,1),n,e)}function Uo(t,n,e){for(var r=-1,o=t.length,u=n.length,a={};++r<o;){var c=r<u?n[r]:i;e(a,t[r],c)}return a}function No(t){return la(t)?t:[]}function zo(t){return"function"==typeof t?t:wc}function Fo(t,n){return ca(t)?t:Li(t,n)?[t]:tu(Na(t))}var Lo=vo;function qo(t,n,e){var r=t.length;return e=e===i?r:e,!n&&e>=r?t:xo(t,n,e)}var Mo=Te||function(t){return On.clearTimeout(t)};function $o(t,n){if(n)return t.slice();var e=t.length,r=En?En(e):new t.constructor(e);return t.copy(r),r}function Bo(t){var n=new t.constructor(t.byteLength);return new jn(n).set(new jn(t)),n}function Ho(t,n){var e=n?Bo(t.buffer):t.buffer;return new t.constructor(e,t.byteOffset,t.length)}function Wo(t,n){if(t!==n){var e=t!==i,r=null===t,o=t==t,u=Aa(t),a=n!==i,c=null===n,s=n==n,f=Aa(n);if(!c&&!f&&!u&&t>n||u&&a&&s&&!c&&!f||r&&a&&s||!e&&s||!o)return 1;if(!r&&!u&&!f&&t<n||f&&e&&o&&!r&&!u||c&&e&&o||!a&&o||!s)return-1}return 0}function Vo(t,n,e,o){for(var i=-1,u=t.length,a=e.length,c=-1,s=n.length,f=ze(u-a,0),l=r(s+f),p=!o;++c<s;)l[c]=n[c];for(;++i<a;)(p||i<u)&&(l[e[i]]=t[i]);for(;f--;)l[c++]=t[i++];return l}function Go(t,n,e,o){for(var i=-1,u=t.length,a=-1,c=e.length,s=-1,f=n.length,l=ze(u-c,0),p=r(l+f),h=!o;++i<l;)p[i]=t[i];for(var d=i;++s<f;)p[d+s]=n[s];for(;++a<c;)(h||i<u)&&(p[d+e[a]]=t[i++]);return p}function Jo(t,n){var e=-1,o=t.length;for(n||(n=r(o));++e<o;)n[e]=t[e];return n}function Zo(t,n,e,r){var o=!e;e||(e={});for(var u=-1,a=n.length;++u<a;){var c=n[u],s=r?r(e[c],t[c],c,e,t):i;s===i&&(s=t[c]),o?Er(e,c,s):mr(e,c,s)}return e}function Xo(t,n){return function(e,r){var o=ca(e)?Fn:xr,i=n?n():{};return o(e,t,Ti(r,2),i)}}function Ko(t){return vo((function(n,e){var r=-1,o=e.length,u=o>1?e[o-1]:i,a=o>2?e[2]:i;for(u=t.length>3&&"function"==typeof u?(o--,u):i,a&&Fi(e[0],e[1],a)&&(u=o<3?i:u,o=1),n=Jt(n);++r<o;){var c=e[r];c&&t(n,c,r,u)}return n}))}function Yo(t,n){return function(e,r){if(null==e)return e;if(!fa(e))return t(e,r);for(var o=e.length,i=n?o:-1,u=Jt(e);(n?i--:++i<o)&&!1!==r(u[i],i,u););return e}}function Qo(t){return function(n,e,r){for(var o=-1,i=Jt(n),u=r(n),a=u.length;a--;){var c=u[t?a:++o];if(!1===e(i[c],c,i))break}return n}}function ti(t){return function(n){var e=ye(n=Na(n))?xe(n):i,r=e?e[0]:n.charAt(0),o=e?qo(e,1).join(""):n.slice(1);return r[t]()+o}}function ni(t){return function(n){return Gn(vc(ac(n).replace(fn,"")),t,"")}}function ei(t){return function(){var n=arguments;switch(n.length){case 0:return new t;case 1:return new t(n[0]);case 2:return new t(n[0],n[1]);case 3:return new t(n[0],n[1],n[2]);case 4:return new t(n[0],n[1],n[2],n[3]);case 5:return new t(n[0],n[1],n[2],n[3],n[4]);case 6:return new t(n[0],n[1],n[2],n[3],n[4],n[5]);case 7:return new t(n[0],n[1],n[2],n[3],n[4],n[5],n[6])}var e=ur(t.prototype),r=t.apply(e,n);return ga(r)?r:e}}function ri(t){return function(n,e,r){var o=Jt(n);if(!fa(n)){var u=Ti(e,3);n=Za(n),e=function(t){return u(o[t],t,o)}}var a=t(n,e,r);return a>-1?o[u?n[a]:a]:i}}function oi(t){return wi((function(n){var e=n.length,r=e,o=cr.prototype.thru;for(t&&n.reverse();r--;){var u=n[r];if("function"!=typeof u)throw new Kt(a);if(o&&!c&&"wrapper"==Oi(u))var c=new cr([],!0)}for(r=c?r:e;++r<e;){var s=Oi(u=n[r]),f="wrapper"==s?Ei(u):i;c=f&&qi(f[0])&&f[1]==(x|g|m|j)&&!f[4].length&&1==f[9]?c[Oi(f[0])].apply(c,f[3]):1==u.length&&qi(u)?c[s]():c.thru(u)}return function(){var t=arguments,r=t[0];if(c&&1==t.length&&ca(r))return c.plant(r).value();for(var o=0,i=e?n[o].apply(this,t):r;++o<e;)i=n[o].call(this,i);return i}}))}function ii(t,n,e,o,u,a,c,s,f,l){var p=n&x,h=n&v,d=n&y,_=n&(g|b),m=n&E,w=d?i:ei(t);return function v(){for(var y=arguments.length,g=r(y),b=y;b--;)g[b]=arguments[b];if(_)var x=Ai(v),j=function(t,n){for(var e=t.length,r=0;e--;)t[e]===n&&++r;return r}(g,x);if(o&&(g=Vo(g,o,u,_)),a&&(g=Go(g,a,c,_)),y-=j,_&&y<l){var E=be(g,x);return pi(t,n,ii,v.placeholder,e,g,E,s,f,l-y)}var O=h?e:this,A=d?O[t]:t;return y=g.length,s?g=function(t,n){for(var e=t.length,r=Fe(n.length,e),o=Jo(t);r--;){var u=n[r];t[r]=zi(u,e)?o[u]:i}return t}(g,s):m&&y>1&&g.reverse(),p&&f<y&&(g.length=f),this&&this!==On&&this instanceof v&&(A=w||ei(A)),A.apply(O,g)}}function ui(t,n){return function(e,r){return function(t,n,e,r){return Lr(t,(function(t,o,i){n(r,e(t),o,i)})),r}(e,t,n(r),{})}}function ai(t,n){return function(e,r){var o;if(e===i&&r===i)return n;if(e!==i&&(o=e),r!==i){if(o===i)return r;"string"==typeof e||"string"==typeof r?(e=Co(e),r=Co(r)):(e=To(e),r=To(r)),o=t(e,r)}return o}}function ci(t){return wi((function(n){return n=Wn(n,ce(Ti())),vo((function(e){var r=this;return t(n,(function(t){return zn(t,r,e)}))}))}))}function si(t,n){var e=(n=n===i?" ":Co(n)).length;if(e<2)return e?ho(n,t):n;var r=ho(n,Ie(t/we(n)));return ye(n)?qo(xe(r),0,t).join(""):r.slice(0,t)}function fi(t){return function(n,e,o){return o&&"number"!=typeof o&&Fi(n,e,o)&&(e=o=i),n=Pa(n),e===i?(e=n,n=0):e=Pa(e),function(t,n,e,o){for(var i=-1,u=ze(Ie((n-t)/(e||1)),0),a=r(u);u--;)a[o?u:++i]=t,t+=e;return a}(n,e,o=o===i?n<e?1:-1:Pa(o),t)}}function li(t){return function(n,e){return"string"==typeof n&&"string"==typeof e||(n=Da(n),e=Da(e)),t(n,e)}}function pi(t,n,e,r,o,u,a,c,s,f){var l=n&g;n|=l?m:w,(n&=~(l?w:m))&_||(n&=~(v|y));var p=[t,n,o,l?u:i,l?a:i,l?i:u,l?i:a,c,s,f],h=e.apply(i,p);return qi(t)&&Ji(h,p),h.placeholder=r,Ki(h,t,n)}function hi(t){var n=Gt[t];return function(t,e){if(t=Da(t),(e=null==e?0:Fe(ka(e),292))&&De(t)){var r=(Na(t)+"e").split("e");return+((r=(Na(n(r[0]+"e"+(+r[1]+e)))+"e").split("e"))[0]+"e"+(+r[1]-e))}return n(t)}}var di=Ve&&1/me(new Ve([,-0]))[1]==T?function(t){return new Ve(t)}:Ac;function vi(t){return function(n){var e=Ri(n);return e==H?_e(n):e==X?function(t){var n=-1,e=Array(t.size);return t.forEach((function(t){e[++n]=[t,t]})),e}(n):function(t,n){return Wn(n,(function(n){return[n,t[n]]}))}(n,t(n))}}function yi(t,n,e,o,u,c,f,l){var p=n&y;if(!p&&"function"!=typeof t)throw new Kt(a);var h=o?o.length:0;if(h||(n&=~(m|w),o=u=i),f=f===i?f:ze(ka(f),0),l=l===i?l:ka(l),h-=u?u.length:0,n&w){var d=o,E=u;o=u=i}var O=p?i:Ei(t),A=[t,n,e,o,u,d,E,c,f,l];if(O&&function(t,n){var e=t[1],r=n[1],o=e|r,i=o<(v|y|x),u=r==x&&e==g||r==x&&e==j&&t[7].length<=n[8]||r==(x|j)&&n[7].length<=n[8]&&e==g;if(!i&&!u)return t;r&v&&(t[2]=n[2],o|=e&v?0:_);var a=n[3];if(a){var c=t[3];t[3]=c?Vo(c,a,n[4]):a,t[4]=c?be(t[3],s):n[4]}(a=n[5])&&(c=t[5],t[5]=c?Go(c,a,n[6]):a,t[6]=c?be(t[5],s):n[6]),(a=n[7])&&(t[7]=a),r&x&&(t[8]=null==t[8]?n[8]:Fe(t[8],n[8])),null==t[9]&&(t[9]=n[9]),t[0]=n[0],t[1]=o}(A,O),t=A[0],n=A[1],e=A[2],o=A[3],u=A[4],!(l=A[9]=A[9]===i?p?0:t.length:ze(A[9]-h,0))&&n&(g|b)&&(n&=~(g|b)),n&&n!=v)T=n==g||n==b?function(t,n,e){var o=ei(t);return function u(){for(var a=arguments.length,c=r(a),s=a,f=Ai(u);s--;)c[s]=arguments[s];var l=a<3&&c[0]!==f&&c[a-1]!==f?[]:be(c,f);return(a-=l.length)<e?pi(t,n,ii,u.placeholder,i,c,l,i,i,e-a):zn(this&&this!==On&&this instanceof u?o:t,this,c)}}(t,n,l):n!=m&&n!=(v|m)||u.length?ii.apply(i,A):function(t,n,e,o){var i=n&v,u=ei(t);return function n(){for(var a=-1,c=arguments.length,s=-1,f=o.length,l=r(f+c),p=this&&this!==On&&this instanceof n?u:t;++s<f;)l[s]=o[s];for(;c--;)l[s++]=arguments[++a];return zn(p,i?e:this,l)}}(t,n,e,o);else var T=function(t,n,e){var r=n&v,o=ei(t);return function n(){return(this&&this!==On&&this instanceof n?o:t).apply(r?e:this,arguments)}}(t,n,e);return Ki((O?bo:Ji)(T,A),t,n)}function _i(t,n,e,r){return t===i||oa(t,tn[e])&&!rn.call(r,e)?n:t}function gi(t,n,e,r,o,u){return ga(t)&&ga(n)&&(u.set(n,t),uo(t,n,i,gi,u),u.delete(n)),t}function bi(t){return xa(t)?i:t}function mi(t,n,e,r,o,u){var a=e&h,c=t.length,s=n.length;if(c!=s&&!(a&&s>c))return!1;var f=u.get(t);if(f&&u.get(n))return f==n;var l=-1,p=!0,v=e&d?new hr:i;for(u.set(t,n),u.set(n,t);++l<c;){var y=t[l],_=n[l];if(r)var g=a?r(_,y,l,n,t,u):r(y,_,l,t,n,u);if(g!==i){if(g)continue;p=!1;break}if(v){if(!Zn(n,(function(t,n){if(!fe(v,n)&&(y===t||o(y,t,e,r,u)))return v.push(n)}))){p=!1;break}}else if(y!==_&&!o(y,_,e,r,u)){p=!1;break}}return u.delete(t),u.delete(n),p}function wi(t){return Xi(Wi(t,i,su),t+"")}function xi(t){return Br(t,Za,Pi)}function ji(t){return Br(t,Xa,ki)}var Ei=Ze?function(t){return Ze.get(t)}:Ac;function Oi(t){for(var n=t.name+"",e=Xe[n],r=rn.call(Xe,n)?e.length:0;r--;){var o=e[r],i=o.func;if(null==i||i==t)return o.name}return n}function Ai(t){return(rn.call(ir,"placeholder")?ir:t).placeholder}function Ti(){var t=ir.iteratee||xc;return t=t===xc?to:t,arguments.length?t(arguments[0],arguments[1]):t}function Ci(t,n){var e,r,o=t.__data__;return("string"==(r=typeof(e=n))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==e:null===e)?o["string"==typeof n?"string":"hash"]:o.map}function Si(t){for(var n=Za(t),e=n.length;e--;){var r=n[e],o=t[r];n[e]=[r,o,Bi(o)]}return n}function Ii(t,n){var e=function(t,n){return null==t?i:t[n]}(t,n);return Qr(e)?e:i}var Pi=ke?function(t){return null==t?[]:(t=Jt(t),$n(ke(t),(function(n){return Sn.call(t,n)})))}:Rc,ki=ke?function(t){for(var n=[];t;)Vn(n,Pi(t)),t=An(t);return n}:Rc,Ri=Hr;function Di(t,n,e){for(var r=-1,o=(n=Fo(n,t)).length,i=!1;++r<o;){var u=nu(n[r]);if(!(i=null!=t&&e(t,u)))break;t=t[u]}return i||++r!=o?i:!!(o=null==t?0:t.length)&&_a(o)&&zi(u,o)&&(ca(t)||aa(t))}function Ui(t){return"function"!=typeof t.constructor||$i(t)?{}:ur(An(t))}function Ni(t){return ca(t)||aa(t)||!!(Xn&&t&&t[Xn])}function zi(t,n){var e=typeof t;return!!(n=null==n?C:n)&&("number"==e||"symbol"!=e&&Mt.test(t))&&t>-1&&t%1==0&&t<n}function Fi(t,n,e){if(!ga(e))return!1;var r=typeof n;return!!("number"==r?fa(e)&&zi(n,e.length):"string"==r&&n in e)&&oa(e[n],t)}function Li(t,n){if(ca(t))return!1;var e=typeof t;return!("number"!=e&&"symbol"!=e&&"boolean"!=e&&null!=t&&!Aa(t))||jt.test(t)||!xt.test(t)||null!=n&&t in Jt(n)}function qi(t){var n=Oi(t),e=ir[n];if("function"!=typeof e||!(n in sr.prototype))return!1;if(t===e)return!0;var r=Ei(e);return!!r&&t===r[0]}(Be&&Ri(new Be(new ArrayBuffer(1)))!=et||He&&Ri(new He)!=H||We&&"[object Promise]"!=Ri(We.resolve())||Ve&&Ri(new Ve)!=X||Ge&&Ri(new Ge)!=tt)&&(Ri=function(t){var n=Hr(t),e=n==G?t.constructor:i,r=e?eu(e):"";if(r)switch(r){case Ke:return et;case Ye:return H;case Qe:return"[object Promise]";case tr:return X;case nr:return tt}return n});var Mi=nn?va:Dc;function $i(t){var n=t&&t.constructor;return t===("function"==typeof n&&n.prototype||tn)}function Bi(t){return t==t&&!ga(t)}function Hi(t,n){return function(e){return null!=e&&e[t]===n&&(n!==i||t in Jt(e))}}function Wi(t,n,e){return n=ze(n===i?t.length-1:n,0),function(){for(var o=arguments,i=-1,u=ze(o.length-n,0),a=r(u);++i<u;)a[i]=o[n+i];i=-1;for(var c=r(n+1);++i<n;)c[i]=o[i];return c[n]=e(a),zn(t,this,c)}}function Vi(t,n){return n.length<2?t:$r(t,xo(n,0,-1))}function Gi(t,n){if(("constructor"!==n||"function"!=typeof t[n])&&"__proto__"!=n)return t[n]}var Ji=Yi(bo),Zi=Se||function(t,n){return On.setTimeout(t,n)},Xi=Yi(mo);function Ki(t,n,e){var r=n+"";return Xi(t,function(t,n){var e=n.length;if(!e)return t;var r=e-1;return n[r]=(e>1?"& ":"")+n[r],n=n.join(e>2?", ":" "),t.replace(It,"{\n/* [wrapped with "+n+"] */\n")}(r,function(t,n){return Ln(D,(function(e){var r="_."+e[0];n&e[1]&&!Bn(t,r)&&t.push(r)})),t.sort()}(function(t){var n=t.match(Pt);return n?n[1].split(kt):[]}(r),e)))}function Yi(t){var n=0,e=0;return function(){var r=Le(),o=A-(r-e);if(e=r,o>0){if(++n>=O)return arguments[0]}else n=0;return t.apply(i,arguments)}}function Qi(t,n){var e=-1,r=t.length,o=r-1;for(n=n===i?r:n;++e<n;){var u=po(e,o),a=t[u];t[u]=t[e],t[e]=a}return t.length=n,t}var tu=function(t){var n=Yu((function(t){var n=[];return 46===t.charCodeAt(0)&&n.push(""),t.replace(Et,(function(t,e,r,o){n.push(r?o.replace(Dt,"$1"):e||t)})),n}),(function(t){return 500===e.size&&e.clear(),t})),e=n.cache;return n}();function nu(t){if("string"==typeof t||Aa(t))return t;var n=t+"";return"0"==n&&1/t==-T?"-0":n}function eu(t){if(null!=t){try{return en.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function ru(t){if(t instanceof sr)return t.clone();var n=new cr(t.__wrapped__,t.__chain__);return n.__actions__=Jo(t.__actions__),n.__index__=t.__index__,n.__values__=t.__values__,n}var ou=vo((function(t,n){return la(t)?Ir(t,Nr(n,1,la,!0)):[]})),iu=vo((function(t,n){var e=du(n);return la(e)&&(e=i),la(t)?Ir(t,Nr(n,1,la,!0),Ti(e,2)):[]})),uu=vo((function(t,n){var e=du(n);return la(e)&&(e=i),la(t)?Ir(t,Nr(n,1,la,!0),i,e):[]}));function au(t,n,e){var r=null==t?0:t.length;if(!r)return-1;var o=null==e?0:ka(e);return o<0&&(o=ze(r+o,0)),Yn(t,Ti(n,3),o)}function cu(t,n,e){var r=null==t?0:t.length;if(!r)return-1;var o=r-1;return e!==i&&(o=ka(e),o=e<0?ze(r+o,0):Fe(o,r-1)),Yn(t,Ti(n,3),o,!0)}function su(t){return null!=t&&t.length?Nr(t,1):[]}function fu(t){return t&&t.length?t[0]:i}var lu=vo((function(t){var n=Wn(t,No);return n.length&&n[0]===t[0]?Jr(n):[]})),pu=vo((function(t){var n=du(t),e=Wn(t,No);return n===du(e)?n=i:e.pop(),e.length&&e[0]===t[0]?Jr(e,Ti(n,2)):[]})),hu=vo((function(t){var n=du(t),e=Wn(t,No);return(n="function"==typeof n?n:i)&&e.pop(),e.length&&e[0]===t[0]?Jr(e,i,n):[]}));function du(t){var n=null==t?0:t.length;return n?t[n-1]:i}var vu=vo(yu);function yu(t,n){return t&&t.length&&n&&n.length?fo(t,n):t}var _u=wi((function(t,n){var e=null==t?0:t.length,r=Or(t,n);return lo(t,Wn(n,(function(t){return zi(t,e)?+t:t})).sort(Wo)),r}));function gu(t){return null==t?t:$e.call(t)}var bu=vo((function(t){return So(Nr(t,1,la,!0))})),mu=vo((function(t){var n=du(t);return la(n)&&(n=i),So(Nr(t,1,la,!0),Ti(n,2))})),wu=vo((function(t){var n=du(t);return n="function"==typeof n?n:i,So(Nr(t,1,la,!0),i,n)}));function xu(t){if(!t||!t.length)return[];var n=0;return t=$n(t,(function(t){if(la(t))return n=ze(t.length,n),!0})),ae(n,(function(n){return Wn(t,re(n))}))}function ju(t,n){if(!t||!t.length)return[];var e=xu(t);return null==n?e:Wn(e,(function(t){return zn(n,i,t)}))}var Eu=vo((function(t,n){return la(t)?Ir(t,n):[]})),Ou=vo((function(t){return Do($n(t,la))})),Au=vo((function(t){var n=du(t);return la(n)&&(n=i),Do($n(t,la),Ti(n,2))})),Tu=vo((function(t){var n=du(t);return n="function"==typeof n?n:i,Do($n(t,la),i,n)})),Cu=vo(xu),Su=vo((function(t){var n=t.length,e=n>1?t[n-1]:i;return e="function"==typeof e?(t.pop(),e):i,ju(t,e)}));function Iu(t){var n=ir(t);return n.__chain__=!0,n}function Pu(t,n){return n(t)}var ku=wi((function(t){var n=t.length,e=n?t[0]:0,r=this.__wrapped__,o=function(n){return Or(n,t)};return!(n>1||this.__actions__.length)&&r instanceof sr&&zi(e)?((r=r.slice(e,+e+(n?1:0))).__actions__.push({func:Pu,args:[o],thisArg:i}),new cr(r,this.__chain__).thru((function(t){return n&&!t.length&&t.push(i),t}))):this.thru(o)})),Ru=Xo((function(t,n,e){rn.call(t,e)?++t[e]:Er(t,e,1)})),Du=ri(au),Uu=ri(cu);function Nu(t,n){return(ca(t)?Ln:Pr)(t,Ti(n,3))}function zu(t,n){return(ca(t)?qn:kr)(t,Ti(n,3))}var Fu=Xo((function(t,n,e){rn.call(t,e)?t[e].push(n):Er(t,e,[n])})),Lu=vo((function(t,n,e){var o=-1,i="function"==typeof n,u=fa(t)?r(t.length):[];return Pr(t,(function(t){u[++o]=i?zn(n,t,e):Zr(t,n,e)})),u})),qu=Xo((function(t,n,e){Er(t,e,n)}));function Mu(t,n){return(ca(t)?Wn:ro)(t,Ti(n,3))}var $u=Xo((function(t,n,e){t[e?0:1].push(n)}),(function(){return[[],[]]})),Bu=vo((function(t,n){if(null==t)return[];var e=n.length;return e>1&&Fi(t,n[0],n[1])?n=[]:e>2&&Fi(n[0],n[1],n[2])&&(n=[n[0]]),co(t,Nr(n,1),[])})),Hu=Ce||function(){return On.Date.now()};function Wu(t,n,e){return n=e?i:n,n=t&&null==n?t.length:n,yi(t,x,i,i,i,i,n)}function Vu(t,n){var e;if("function"!=typeof n)throw new Kt(a);return t=ka(t),function(){return--t>0&&(e=n.apply(this,arguments)),t<=1&&(n=i),e}}var Gu=vo((function(t,n,e){var r=v;if(e.length){var o=be(e,Ai(Gu));r|=m}return yi(t,r,n,e,o)})),Ju=vo((function(t,n,e){var r=v|y;if(e.length){var o=be(e,Ai(Ju));r|=m}return yi(n,r,t,e,o)}));function Zu(t,n,e){var r,o,u,c,s,f,l=0,p=!1,h=!1,d=!0;if("function"!=typeof t)throw new Kt(a);function v(n){var e=r,u=o;return r=o=i,l=n,c=t.apply(u,e)}function y(t){var e=t-f;return f===i||e>=n||e<0||h&&t-l>=u}function _(){var t=Hu();if(y(t))return g(t);s=Zi(_,function(t){var e=n-(t-f);return h?Fe(e,u-(t-l)):e}(t))}function g(t){return s=i,d&&r?v(t):(r=o=i,c)}function b(){var t=Hu(),e=y(t);if(r=arguments,o=this,f=t,e){if(s===i)return function(t){return l=t,s=Zi(_,n),p?v(t):c}(f);if(h)return Mo(s),s=Zi(_,n),v(f)}return s===i&&(s=Zi(_,n)),c}return n=Da(n)||0,ga(e)&&(p=!!e.leading,u=(h="maxWait"in e)?ze(Da(e.maxWait)||0,n):u,d="trailing"in e?!!e.trailing:d),b.cancel=function(){s!==i&&Mo(s),l=0,r=f=o=s=i},b.flush=function(){return s===i?c:g(Hu())},b}var Xu=vo((function(t,n){return Sr(t,1,n)})),Ku=vo((function(t,n,e){return Sr(t,Da(n)||0,e)}));function Yu(t,n){if("function"!=typeof t||null!=n&&"function"!=typeof n)throw new Kt(a);var e=function(){var r=arguments,o=n?n.apply(this,r):r[0],i=e.cache;if(i.has(o))return i.get(o);var u=t.apply(this,r);return e.cache=i.set(o,u)||i,u};return e.cache=new(Yu.Cache||pr),e}function Qu(t){if("function"!=typeof t)throw new Kt(a);return function(){var n=arguments;switch(n.length){case 0:return!t.call(this);case 1:return!t.call(this,n[0]);case 2:return!t.call(this,n[0],n[1]);case 3:return!t.call(this,n[0],n[1],n[2])}return!t.apply(this,n)}}Yu.Cache=pr;var ta=Lo((function(t,n){var e=(n=1==n.length&&ca(n[0])?Wn(n[0],ce(Ti())):Wn(Nr(n,1),ce(Ti()))).length;return vo((function(r){for(var o=-1,i=Fe(r.length,e);++o<i;)r[o]=n[o].call(this,r[o]);return zn(t,this,r)}))})),na=vo((function(t,n){var e=be(n,Ai(na));return yi(t,m,i,n,e)})),ea=vo((function(t,n){var e=be(n,Ai(ea));return yi(t,w,i,n,e)})),ra=wi((function(t,n){return yi(t,j,i,i,i,n)}));function oa(t,n){return t===n||t!=t&&n!=n}var ia=li(Wr),ua=li((function(t,n){return t>=n})),aa=Xr(function(){return arguments}())?Xr:function(t){return ba(t)&&rn.call(t,"callee")&&!Sn.call(t,"callee")},ca=r.isArray,sa=Pn?ce(Pn):function(t){return ba(t)&&Hr(t)==nt};function fa(t){return null!=t&&_a(t.length)&&!va(t)}function la(t){return ba(t)&&fa(t)}var pa=Re||Dc,ha=kn?ce(kn):function(t){return ba(t)&&Hr(t)==L};function da(t){if(!ba(t))return!1;var n=Hr(t);return n==M||n==q||"string"==typeof t.message&&"string"==typeof t.name&&!xa(t)}function va(t){if(!ga(t))return!1;var n=Hr(t);return n==$||n==B||n==z||n==J}function ya(t){return"number"==typeof t&&t==ka(t)}function _a(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=C}function ga(t){var n=typeof t;return null!=t&&("object"==n||"function"==n)}function ba(t){return null!=t&&"object"==typeof t}var ma=Rn?ce(Rn):function(t){return ba(t)&&Ri(t)==H};function wa(t){return"number"==typeof t||ba(t)&&Hr(t)==W}function xa(t){if(!ba(t)||Hr(t)!=G)return!1;var n=An(t);if(null===n)return!0;var e=rn.call(n,"constructor")&&n.constructor;return"function"==typeof e&&e instanceof e&&en.call(e)==cn}var ja=Dn?ce(Dn):function(t){return ba(t)&&Hr(t)==Z},Ea=Un?ce(Un):function(t){return ba(t)&&Ri(t)==X};function Oa(t){return"string"==typeof t||!ca(t)&&ba(t)&&Hr(t)==K}function Aa(t){return"symbol"==typeof t||ba(t)&&Hr(t)==Y}var Ta=Nn?ce(Nn):function(t){return ba(t)&&_a(t.length)&&!!gn[Hr(t)]},Ca=li(eo),Sa=li((function(t,n){return t<=n}));function Ia(t){if(!t)return[];if(fa(t))return Oa(t)?xe(t):Jo(t);if(oe&&t[oe])return function(t){for(var n,e=[];!(n=t.next()).done;)e.push(n.value);return e}(t[oe]());var n=Ri(t);return(n==H?_e:n==X?me:oc)(t)}function Pa(t){return t?(t=Da(t))===T||t===-T?(t<0?-1:1)*S:t==t?t:0:0===t?t:0}function ka(t){var n=Pa(t),e=n%1;return n==n?e?n-e:n:0}function Ra(t){return t?Ar(ka(t),0,P):0}function Da(t){if("number"==typeof t)return t;if(Aa(t))return I;if(ga(t)){var n="function"==typeof t.valueOf?t.valueOf():t;t=ga(n)?n+"":n}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(Tt,"");var e=Ft.test(t);return e||qt.test(t)?xn(t.slice(2),e?2:8):zt.test(t)?I:+t}function Ua(t){return Zo(t,Xa(t))}function Na(t){return null==t?"":Co(t)}var za=Ko((function(t,n){if($i(n)||fa(n))Zo(n,Za(n),t);else for(var e in n)rn.call(n,e)&&mr(t,e,n[e])})),Fa=Ko((function(t,n){Zo(n,Xa(n),t)})),La=Ko((function(t,n,e,r){Zo(n,Xa(n),t,r)})),qa=Ko((function(t,n,e,r){Zo(n,Za(n),t,r)})),Ma=wi(Or),$a=vo((function(t,n){t=Jt(t);var e=-1,r=n.length,o=r>2?n[2]:i;for(o&&Fi(n[0],n[1],o)&&(r=1);++e<r;)for(var u=n[e],a=Xa(u),c=-1,s=a.length;++c<s;){var f=a[c],l=t[f];(l===i||oa(l,tn[f])&&!rn.call(t,f))&&(t[f]=u[f])}return t})),Ba=vo((function(t){return t.push(i,gi),zn(Ya,i,t)}));function Ha(t,n,e){var r=null==t?i:$r(t,n);return r===i?e:r}function Wa(t,n){return null!=t&&Di(t,n,Gr)}var Va=ui((function(t,n,e){null!=n&&"function"!=typeof n.toString&&(n=an.call(n)),t[n]=e}),gc(wc)),Ga=ui((function(t,n,e){null!=n&&"function"!=typeof n.toString&&(n=an.call(n)),rn.call(t,n)?t[n].push(e):t[n]=[e]}),Ti),Ja=vo(Zr);function Za(t){return fa(t)?vr(t):no(t)}function Xa(t){return fa(t)?vr(t,!0):function(t){if(!ga(t))return function(t){var n=[];if(null!=t)for(var e in Jt(t))n.push(e);return n}(t);var n=$i(t),e=[];for(var r in t)("constructor"!=r||!n&&rn.call(t,r))&&e.push(r);return e}(t)}var Ka=Ko((function(t,n,e){uo(t,n,e)})),Ya=Ko((function(t,n,e,r){uo(t,n,e,r)})),Qa=wi((function(t,n){var e={};if(null==t)return e;var r=!1;n=Wn(n,(function(n){return n=Fo(n,t),r||(r=n.length>1),n})),Zo(t,ji(t),e),r&&(e=Tr(e,f|l|p,bi));for(var o=n.length;o--;)Io(e,n[o]);return e})),tc=wi((function(t,n){return null==t?{}:function(t,n){return so(t,n,(function(n,e){return Wa(t,e)}))}(t,n)}));function nc(t,n){if(null==t)return{};var e=Wn(ji(t),(function(t){return[t]}));return n=Ti(n),so(t,e,(function(t,e){return n(t,e[0])}))}var ec=vi(Za),rc=vi(Xa);function oc(t){return null==t?[]:se(t,Za(t))}var ic=ni((function(t,n,e){return n=n.toLowerCase(),t+(e?uc(n):n)}));function uc(t){return dc(Na(t).toLowerCase())}function ac(t){return(t=Na(t))&&t.replace($t,he).replace(ln,"")}var cc=ni((function(t,n,e){return t+(e?"-":"")+n.toLowerCase()})),sc=ni((function(t,n,e){return t+(e?" ":"")+n.toLowerCase()})),fc=ti("toLowerCase"),lc=ni((function(t,n,e){return t+(e?"_":"")+n.toLowerCase()})),pc=ni((function(t,n,e){return t+(e?" ":"")+dc(n)})),hc=ni((function(t,n,e){return t+(e?" ":"")+n.toUpperCase()})),dc=ti("toUpperCase");function vc(t,n,e){return t=Na(t),(n=e?i:n)===i?function(t){return vn.test(t)}(t)?function(t){return t.match(hn)||[]}(t):function(t){return t.match(Rt)||[]}(t):t.match(n)||[]}var yc=vo((function(t,n){try{return zn(t,i,n)}catch(t){return da(t)?t:new Wt(t)}})),_c=wi((function(t,n){return Ln(n,(function(n){n=nu(n),Er(t,n,Gu(t[n],t))})),t}));function gc(t){return function(){return t}}var bc=oi(),mc=oi(!0);function wc(t){return t}function xc(t){return to("function"==typeof t?t:Tr(t,f))}var jc=vo((function(t,n){return function(e){return Zr(e,t,n)}})),Ec=vo((function(t,n){return function(e){return Zr(t,e,n)}}));function Oc(t,n,e){var r=Za(n),o=Mr(n,r);null!=e||ga(n)&&(o.length||!r.length)||(e=n,n=t,t=this,o=Mr(n,Za(n)));var i=!(ga(e)&&"chain"in e&&!e.chain),u=va(t);return Ln(o,(function(e){var r=n[e];t[e]=r,u&&(t.prototype[e]=function(){var n=this.__chain__;if(i||n){var e=t(this.__wrapped__),o=e.__actions__=Jo(this.__actions__);return o.push({func:r,args:arguments,thisArg:t}),e.__chain__=n,e}return r.apply(t,Vn([this.value()],arguments))})})),t}function Ac(){}var Tc=ci(Wn),Cc=ci(Mn),Sc=ci(Zn);function Ic(t){return Li(t)?re(nu(t)):function(t){return function(n){return $r(n,t)}}(t)}var Pc=fi(),kc=fi(!0);function Rc(){return[]}function Dc(){return!1}var Uc,Nc=ai((function(t,n){return t+n}),0),zc=hi("ceil"),Fc=ai((function(t,n){return t/n}),1),Lc=hi("floor"),qc=ai((function(t,n){return t*n}),1),Mc=hi("round"),$c=ai((function(t,n){return t-n}),0);return ir.after=function(t,n){if("function"!=typeof n)throw new Kt(a);return t=ka(t),function(){if(--t<1)return n.apply(this,arguments)}},ir.ary=Wu,ir.assign=za,ir.assignIn=Fa,ir.assignInWith=La,ir.assignWith=qa,ir.at=Ma,ir.before=Vu,ir.bind=Gu,ir.bindAll=_c,ir.bindKey=Ju,ir.castArray=function(){if(!arguments.length)return[];var t=arguments[0];return ca(t)?t:[t]},ir.chain=Iu,ir.chunk=function(t,n,e){n=(e?Fi(t,n,e):n===i)?1:ze(ka(n),0);var o=null==t?0:t.length;if(!o||n<1)return[];for(var u=0,a=0,c=r(Ie(o/n));u<o;)c[a++]=xo(t,u,u+=n);return c},ir.compact=function(t){for(var n=-1,e=null==t?0:t.length,r=0,o=[];++n<e;){var i=t[n];i&&(o[r++]=i)}return o},ir.concat=function(){var t=arguments.length;if(!t)return[];for(var n=r(t-1),e=arguments[0],o=t;o--;)n[o-1]=arguments[o];return Vn(ca(e)?Jo(e):[e],Nr(n,1))},ir.cond=function(t){var n=null==t?0:t.length,e=Ti();return t=n?Wn(t,(function(t){if("function"!=typeof t[1])throw new Kt(a);return[e(t[0]),t[1]]})):[],vo((function(e){for(var r=-1;++r<n;){var o=t[r];if(zn(o[0],this,e))return zn(o[1],this,e)}}))},ir.conforms=function(t){return function(t){var n=Za(t);return function(e){return Cr(e,t,n)}}(Tr(t,f))},ir.constant=gc,ir.countBy=Ru,ir.create=function(t,n){var e=ur(t);return null==n?e:jr(e,n)},ir.curry=function t(n,e,r){var o=yi(n,g,i,i,i,i,i,e=r?i:e);return o.placeholder=t.placeholder,o},ir.curryRight=function t(n,e,r){var o=yi(n,b,i,i,i,i,i,e=r?i:e);return o.placeholder=t.placeholder,o},ir.debounce=Zu,ir.defaults=$a,ir.defaultsDeep=Ba,ir.defer=Xu,ir.delay=Ku,ir.difference=ou,ir.differenceBy=iu,ir.differenceWith=uu,ir.drop=function(t,n,e){var r=null==t?0:t.length;return r?xo(t,(n=e||n===i?1:ka(n))<0?0:n,r):[]},ir.dropRight=function(t,n,e){var r=null==t?0:t.length;return r?xo(t,0,(n=r-(n=e||n===i?1:ka(n)))<0?0:n):[]},ir.dropRightWhile=function(t,n){return t&&t.length?ko(t,Ti(n,3),!0,!0):[]},ir.dropWhile=function(t,n){return t&&t.length?ko(t,Ti(n,3),!0):[]},ir.fill=function(t,n,e,r){var o=null==t?0:t.length;return o?(e&&"number"!=typeof e&&Fi(t,n,e)&&(e=0,r=o),function(t,n,e,r){var o=t.length;for((e=ka(e))<0&&(e=-e>o?0:o+e),(r=r===i||r>o?o:ka(r))<0&&(r+=o),r=e>r?0:Ra(r);e<r;)t[e++]=n;return t}(t,n,e,r)):[]},ir.filter=function(t,n){return(ca(t)?$n:Ur)(t,Ti(n,3))},ir.flatMap=function(t,n){return Nr(Mu(t,n),1)},ir.flatMapDeep=function(t,n){return Nr(Mu(t,n),T)},ir.flatMapDepth=function(t,n,e){return e=e===i?1:ka(e),Nr(Mu(t,n),e)},ir.flatten=su,ir.flattenDeep=function(t){return null!=t&&t.length?Nr(t,T):[]},ir.flattenDepth=function(t,n){return null!=t&&t.length?Nr(t,n=n===i?1:ka(n)):[]},ir.flip=function(t){return yi(t,E)},ir.flow=bc,ir.flowRight=mc,ir.fromPairs=function(t){for(var n=-1,e=null==t?0:t.length,r={};++n<e;){var o=t[n];r[o[0]]=o[1]}return r},ir.functions=function(t){return null==t?[]:Mr(t,Za(t))},ir.functionsIn=function(t){return null==t?[]:Mr(t,Xa(t))},ir.groupBy=Fu,ir.initial=function(t){return null!=t&&t.length?xo(t,0,-1):[]},ir.intersection=lu,ir.intersectionBy=pu,ir.intersectionWith=hu,ir.invert=Va,ir.invertBy=Ga,ir.invokeMap=Lu,ir.iteratee=xc,ir.keyBy=qu,ir.keys=Za,ir.keysIn=Xa,ir.map=Mu,ir.mapKeys=function(t,n){var e={};return n=Ti(n,3),Lr(t,(function(t,r,o){Er(e,n(t,r,o),t)})),e},ir.mapValues=function(t,n){var e={};return n=Ti(n,3),Lr(t,(function(t,r,o){Er(e,r,n(t,r,o))})),e},ir.matches=function(t){return oo(Tr(t,f))},ir.matchesProperty=function(t,n){return io(t,Tr(n,f))},ir.memoize=Yu,ir.merge=Ka,ir.mergeWith=Ya,ir.method=jc,ir.methodOf=Ec,ir.mixin=Oc,ir.negate=Qu,ir.nthArg=function(t){return t=ka(t),vo((function(n){return ao(n,t)}))},ir.omit=Qa,ir.omitBy=function(t,n){return nc(t,Qu(Ti(n)))},ir.once=function(t){return Vu(2,t)},ir.orderBy=function(t,n,e,r){return null==t?[]:(ca(n)||(n=null==n?[]:[n]),ca(e=r?i:e)||(e=null==e?[]:[e]),co(t,n,e))},ir.over=Tc,ir.overArgs=ta,ir.overEvery=Cc,ir.overSome=Sc,ir.partial=na,ir.partialRight=ea,ir.partition=$u,ir.pick=tc,ir.pickBy=nc,ir.property=Ic,ir.propertyOf=function(t){return function(n){return null==t?i:$r(t,n)}},ir.pull=vu,ir.pullAll=yu,ir.pullAllBy=function(t,n,e){return t&&t.length&&n&&n.length?fo(t,n,Ti(e,2)):t},ir.pullAllWith=function(t,n,e){return t&&t.length&&n&&n.length?fo(t,n,i,e):t},ir.pullAt=_u,ir.range=Pc,ir.rangeRight=kc,ir.rearg=ra,ir.reject=function(t,n){return(ca(t)?$n:Ur)(t,Qu(Ti(n,3)))},ir.remove=function(t,n){var e=[];if(!t||!t.length)return e;var r=-1,o=[],i=t.length;for(n=Ti(n,3);++r<i;){var u=t[r];n(u,r,t)&&(e.push(u),o.push(r))}return lo(t,o),e},ir.rest=function(t,n){if("function"!=typeof t)throw new Kt(a);return vo(t,n=n===i?n:ka(n))},ir.reverse=gu,ir.sampleSize=function(t,n,e){return n=(e?Fi(t,n,e):n===i)?1:ka(n),(ca(t)?_r:_o)(t,n)},ir.set=function(t,n,e){return null==t?t:go(t,n,e)},ir.setWith=function(t,n,e,r){return r="function"==typeof r?r:i,null==t?t:go(t,n,e,r)},ir.shuffle=function(t){return(ca(t)?gr:wo)(t)},ir.slice=function(t,n,e){var r=null==t?0:t.length;return r?(e&&"number"!=typeof e&&Fi(t,n,e)?(n=0,e=r):(n=null==n?0:ka(n),e=e===i?r:ka(e)),xo(t,n,e)):[]},ir.sortBy=Bu,ir.sortedUniq=function(t){return t&&t.length?Ao(t):[]},ir.sortedUniqBy=function(t,n){return t&&t.length?Ao(t,Ti(n,2)):[]},ir.split=function(t,n,e){return e&&"number"!=typeof e&&Fi(t,n,e)&&(n=e=i),(e=e===i?P:e>>>0)?(t=Na(t))&&("string"==typeof n||null!=n&&!ja(n))&&!(n=Co(n))&&ye(t)?qo(xe(t),0,e):t.split(n,e):[]},ir.spread=function(t,n){if("function"!=typeof t)throw new Kt(a);return n=null==n?0:ze(ka(n),0),vo((function(e){var r=e[n],o=qo(e,0,n);return r&&Vn(o,r),zn(t,this,o)}))},ir.tail=function(t){var n=null==t?0:t.length;return n?xo(t,1,n):[]},ir.take=function(t,n,e){return t&&t.length?xo(t,0,(n=e||n===i?1:ka(n))<0?0:n):[]},ir.takeRight=function(t,n,e){var r=null==t?0:t.length;return r?xo(t,(n=r-(n=e||n===i?1:ka(n)))<0?0:n,r):[]},ir.takeRightWhile=function(t,n){return t&&t.length?ko(t,Ti(n,3),!1,!0):[]},ir.takeWhile=function(t,n){return t&&t.length?ko(t,Ti(n,3)):[]},ir.tap=function(t,n){return n(t),t},ir.throttle=function(t,n,e){var r=!0,o=!0;if("function"!=typeof t)throw new Kt(a);return ga(e)&&(r="leading"in e?!!e.leading:r,o="trailing"in e?!!e.trailing:o),Zu(t,n,{leading:r,maxWait:n,trailing:o})},ir.thru=Pu,ir.toArray=Ia,ir.toPairs=ec,ir.toPairsIn=rc,ir.toPath=function(t){return ca(t)?Wn(t,nu):Aa(t)?[t]:Jo(tu(Na(t)))},ir.toPlainObject=Ua,ir.transform=function(t,n,e){var r=ca(t),o=r||pa(t)||Ta(t);if(n=Ti(n,4),null==e){var i=t&&t.constructor;e=o?r?new i:[]:ga(t)&&va(i)?ur(An(t)):{}}return(o?Ln:Lr)(t,(function(t,r,o){return n(e,t,r,o)})),e},ir.unary=function(t){return Wu(t,1)},ir.union=bu,ir.unionBy=mu,ir.unionWith=wu,ir.uniq=function(t){return t&&t.length?So(t):[]},ir.uniqBy=function(t,n){return t&&t.length?So(t,Ti(n,2)):[]},ir.uniqWith=function(t,n){return n="function"==typeof n?n:i,t&&t.length?So(t,i,n):[]},ir.unset=function(t,n){return null==t||Io(t,n)},ir.unzip=xu,ir.unzipWith=ju,ir.update=function(t,n,e){return null==t?t:Po(t,n,zo(e))},ir.updateWith=function(t,n,e,r){return r="function"==typeof r?r:i,null==t?t:Po(t,n,zo(e),r)},ir.values=oc,ir.valuesIn=function(t){return null==t?[]:se(t,Xa(t))},ir.without=Eu,ir.words=vc,ir.wrap=function(t,n){return na(zo(n),t)},ir.xor=Ou,ir.xorBy=Au,ir.xorWith=Tu,ir.zip=Cu,ir.zipObject=function(t,n){return Uo(t||[],n||[],mr)},ir.zipObjectDeep=function(t,n){return Uo(t||[],n||[],go)},ir.zipWith=Su,ir.entries=ec,ir.entriesIn=rc,ir.extend=Fa,ir.extendWith=La,Oc(ir,ir),ir.add=Nc,ir.attempt=yc,ir.camelCase=ic,ir.capitalize=uc,ir.ceil=zc,ir.clamp=function(t,n,e){return e===i&&(e=n,n=i),e!==i&&(e=(e=Da(e))==e?e:0),n!==i&&(n=(n=Da(n))==n?n:0),Ar(Da(t),n,e)},ir.clone=function(t){return Tr(t,p)},ir.cloneDeep=function(t){return Tr(t,f|p)},ir.cloneDeepWith=function(t,n){return Tr(t,f|p,n="function"==typeof n?n:i)},ir.cloneWith=function(t,n){return Tr(t,p,n="function"==typeof n?n:i)},ir.conformsTo=function(t,n){return null==n||Cr(t,n,Za(n))},ir.deburr=ac,ir.defaultTo=function(t,n){return null==t||t!=t?n:t},ir.divide=Fc,ir.endsWith=function(t,n,e){t=Na(t),n=Co(n);var r=t.length,o=e=e===i?r:Ar(ka(e),0,r);return(e-=n.length)>=0&&t.slice(e,o)==n},ir.eq=oa,ir.escape=function(t){return(t=Na(t))&&gt.test(t)?t.replace(yt,de):t},ir.escapeRegExp=function(t){return(t=Na(t))&&At.test(t)?t.replace(Ot,"\\$&"):t},ir.every=function(t,n,e){var r=ca(t)?Mn:Rr;return e&&Fi(t,n,e)&&(n=i),r(t,Ti(n,3))},ir.find=Du,ir.findIndex=au,ir.findKey=function(t,n){return Kn(t,Ti(n,3),Lr)},ir.findLast=Uu,ir.findLastIndex=cu,ir.findLastKey=function(t,n){return Kn(t,Ti(n,3),qr)},ir.floor=Lc,ir.forEach=Nu,ir.forEachRight=zu,ir.forIn=function(t,n){return null==t?t:zr(t,Ti(n,3),Xa)},ir.forInRight=function(t,n){return null==t?t:Fr(t,Ti(n,3),Xa)},ir.forOwn=function(t,n){return t&&Lr(t,Ti(n,3))},ir.forOwnRight=function(t,n){return t&&qr(t,Ti(n,3))},ir.get=Ha,ir.gt=ia,ir.gte=ua,ir.has=function(t,n){return null!=t&&Di(t,n,Vr)},ir.hasIn=Wa,ir.head=fu,ir.identity=wc,ir.includes=function(t,n,e,r){t=fa(t)?t:oc(t),e=e&&!r?ka(e):0;var o=t.length;return e<0&&(e=ze(o+e,0)),Oa(t)?e<=o&&t.indexOf(n,e)>-1:!!o&&Qn(t,n,e)>-1},ir.indexOf=function(t,n,e){var r=null==t?0:t.length;if(!r)return-1;var o=null==e?0:ka(e);return o<0&&(o=ze(r+o,0)),Qn(t,n,o)},ir.inRange=function(t,n,e){return n=Pa(n),e===i?(e=n,n=0):e=Pa(e),function(t,n,e){return t>=Fe(n,e)&&t<ze(n,e)}(t=Da(t),n,e)},ir.invoke=Ja,ir.isArguments=aa,ir.isArray=ca,ir.isArrayBuffer=sa,ir.isArrayLike=fa,ir.isArrayLikeObject=la,ir.isBoolean=function(t){return!0===t||!1===t||ba(t)&&Hr(t)==F},ir.isBuffer=pa,ir.isDate=ha,ir.isElement=function(t){return ba(t)&&1===t.nodeType&&!xa(t)},ir.isEmpty=function(t){if(null==t)return!0;if(fa(t)&&(ca(t)||"string"==typeof t||"function"==typeof t.splice||pa(t)||Ta(t)||aa(t)))return!t.length;var n=Ri(t);if(n==H||n==X)return!t.size;if($i(t))return!no(t).length;for(var e in t)if(rn.call(t,e))return!1;return!0},ir.isEqual=function(t,n){return Kr(t,n)},ir.isEqualWith=function(t,n,e){var r=(e="function"==typeof e?e:i)?e(t,n):i;return r===i?Kr(t,n,i,e):!!r},ir.isError=da,ir.isFinite=function(t){return"number"==typeof t&&De(t)},ir.isFunction=va,ir.isInteger=ya,ir.isLength=_a,ir.isMap=ma,ir.isMatch=function(t,n){return t===n||Yr(t,n,Si(n))},ir.isMatchWith=function(t,n,e){return e="function"==typeof e?e:i,Yr(t,n,Si(n),e)},ir.isNaN=function(t){return wa(t)&&t!=+t},ir.isNative=function(t){if(Mi(t))throw new Wt("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Qr(t)},ir.isNil=function(t){return null==t},ir.isNull=function(t){return null===t},ir.isNumber=wa,ir.isObject=ga,ir.isObjectLike=ba,ir.isPlainObject=xa,ir.isRegExp=ja,ir.isSafeInteger=function(t){return ya(t)&&t>=-C&&t<=C},ir.isSet=Ea,ir.isString=Oa,ir.isSymbol=Aa,ir.isTypedArray=Ta,ir.isUndefined=function(t){return t===i},ir.isWeakMap=function(t){return ba(t)&&Ri(t)==tt},ir.isWeakSet=function(t){return ba(t)&&"[object WeakSet]"==Hr(t)},ir.join=function(t,n){return null==t?"":Ue.call(t,n)},ir.kebabCase=cc,ir.last=du,ir.lastIndexOf=function(t,n,e){var r=null==t?0:t.length;if(!r)return-1;var o=r;return e!==i&&(o=(o=ka(e))<0?ze(r+o,0):Fe(o,r-1)),n==n?function(t,n,e){for(var r=e+1;r--;)if(t[r]===n)return r;return r}(t,n,o):Yn(t,ne,o,!0)},ir.lowerCase=sc,ir.lowerFirst=fc,ir.lt=Ca,ir.lte=Sa,ir.max=function(t){return t&&t.length?Dr(t,wc,Wr):i},ir.maxBy=function(t,n){return t&&t.length?Dr(t,Ti(n,2),Wr):i},ir.mean=function(t){return ee(t,wc)},ir.meanBy=function(t,n){return ee(t,Ti(n,2))},ir.min=function(t){return t&&t.length?Dr(t,wc,eo):i},ir.minBy=function(t,n){return t&&t.length?Dr(t,Ti(n,2),eo):i},ir.stubArray=Rc,ir.stubFalse=Dc,ir.stubObject=function(){return{}},ir.stubString=function(){return""},ir.stubTrue=function(){return!0},ir.multiply=qc,ir.nth=function(t,n){return t&&t.length?ao(t,ka(n)):i},ir.noConflict=function(){return On._===this&&(On._=sn),this},ir.noop=Ac,ir.now=Hu,ir.pad=function(t,n,e){t=Na(t);var r=(n=ka(n))?we(t):0;if(!n||r>=n)return t;var o=(n-r)/2;return si(Pe(o),e)+t+si(Ie(o),e)},ir.padEnd=function(t,n,e){t=Na(t);var r=(n=ka(n))?we(t):0;return n&&r<n?t+si(n-r,e):t},ir.padStart=function(t,n,e){t=Na(t);var r=(n=ka(n))?we(t):0;return n&&r<n?si(n-r,e)+t:t},ir.parseInt=function(t,n,e){return e||null==n?n=0:n&&(n=+n),qe(Na(t).replace(Ct,""),n||0)},ir.random=function(t,n,e){if(e&&"boolean"!=typeof e&&Fi(t,n,e)&&(n=e=i),e===i&&("boolean"==typeof n?(e=n,n=i):"boolean"==typeof t&&(e=t,t=i)),t===i&&n===i?(t=0,n=1):(t=Pa(t),n===i?(n=t,t=0):n=Pa(n)),t>n){var r=t;t=n,n=r}if(e||t%1||n%1){var o=Me();return Fe(t+o*(n-t+wn("1e-"+((o+"").length-1))),n)}return po(t,n)},ir.reduce=function(t,n,e){var r=ca(t)?Gn:ie,o=arguments.length<3;return r(t,Ti(n,4),e,o,Pr)},ir.reduceRight=function(t,n,e){var r=ca(t)?Jn:ie,o=arguments.length<3;return r(t,Ti(n,4),e,o,kr)},ir.repeat=function(t,n,e){return n=(e?Fi(t,n,e):n===i)?1:ka(n),ho(Na(t),n)},ir.replace=function(){var t=arguments,n=Na(t[0]);return t.length<3?n:n.replace(t[1],t[2])},ir.result=function(t,n,e){var r=-1,o=(n=Fo(n,t)).length;for(o||(o=1,t=i);++r<o;){var u=null==t?i:t[nu(n[r])];u===i&&(r=o,u=e),t=va(u)?u.call(t):u}return t},ir.round=Mc,ir.runInContext=t,ir.sample=function(t){return(ca(t)?yr:yo)(t)},ir.size=function(t){if(null==t)return 0;if(fa(t))return Oa(t)?we(t):t.length;var n=Ri(t);return n==H||n==X?t.size:no(t).length},ir.snakeCase=lc,ir.some=function(t,n,e){var r=ca(t)?Zn:jo;return e&&Fi(t,n,e)&&(n=i),r(t,Ti(n,3))},ir.sortedIndex=function(t,n){return Eo(t,n)},ir.sortedIndexBy=function(t,n,e){return Oo(t,n,Ti(e,2))},ir.sortedIndexOf=function(t,n){var e=null==t?0:t.length;if(e){var r=Eo(t,n);if(r<e&&oa(t[r],n))return r}return-1},ir.sortedLastIndex=function(t,n){return Eo(t,n,!0)},ir.sortedLastIndexBy=function(t,n,e){return Oo(t,n,Ti(e,2),!0)},ir.sortedLastIndexOf=function(t,n){if(null!=t&&t.length){var e=Eo(t,n,!0)-1;if(oa(t[e],n))return e}return-1},ir.startCase=pc,ir.startsWith=function(t,n,e){return t=Na(t),e=null==e?0:Ar(ka(e),0,t.length),n=Co(n),t.slice(e,e+n.length)==n},ir.subtract=$c,ir.sum=function(t){return t&&t.length?ue(t,wc):0},ir.sumBy=function(t,n){return t&&t.length?ue(t,Ti(n,2)):0},ir.template=function(t,n,e){var r=ir.templateSettings;e&&Fi(t,n,e)&&(n=i),t=Na(t),n=La({},n,r,_i);var o,u,a=La({},n.imports,r.imports,_i),c=Za(a),s=se(a,c),f=0,l=n.interpolate||Bt,p="__p += '",h=Zt((n.escape||Bt).source+"|"+l.source+"|"+(l===wt?Ut:Bt).source+"|"+(n.evaluate||Bt).source+"|$","g"),d="//# sourceURL="+(rn.call(n,"sourceURL")?(n.sourceURL+"").replace(/[\r\n]/g," "):"lodash.templateSources["+ ++_n+"]")+"\n";t.replace(h,(function(n,e,r,i,a,c){return r||(r=i),p+=t.slice(f,c).replace(Ht,ve),e&&(o=!0,p+="' +\n__e("+e+") +\n'"),a&&(u=!0,p+="';\n"+a+";\n__p += '"),r&&(p+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),f=c+n.length,n})),p+="';\n";var v=rn.call(n,"variable")&&n.variable;v||(p="with (obj) {\n"+p+"\n}\n"),p=(u?p.replace(pt,""):p).replace(ht,"$1").replace(dt,"$1;"),p="function("+(v||"obj")+") {\n"+(v?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(o?", __e = _.escape":"")+(u?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+p+"return __p\n}";var y=yc((function(){return Vt(c,d+"return "+p).apply(i,s)}));if(y.source=p,da(y))throw y;return y},ir.times=function(t,n){if((t=ka(t))<1||t>C)return[];var e=P,r=Fe(t,P);n=Ti(n),t-=P;for(var o=ae(r,n);++e<t;)n(e);return o},ir.toFinite=Pa,ir.toInteger=ka,ir.toLength=Ra,ir.toLower=function(t){return Na(t).toLowerCase()},ir.toNumber=Da,ir.toSafeInteger=function(t){return t?Ar(ka(t),-C,C):0===t?t:0},ir.toString=Na,ir.toUpper=function(t){return Na(t).toUpperCase()},ir.trim=function(t,n,e){if((t=Na(t))&&(e||n===i))return t.replace(Tt,"");if(!t||!(n=Co(n)))return t;var r=xe(t),o=xe(n);return qo(r,le(r,o),pe(r,o)+1).join("")},ir.trimEnd=function(t,n,e){if((t=Na(t))&&(e||n===i))return t.replace(St,"");if(!t||!(n=Co(n)))return t;var r=xe(t);return qo(r,0,pe(r,xe(n))+1).join("")},ir.trimStart=function(t,n,e){if((t=Na(t))&&(e||n===i))return t.replace(Ct,"");if(!t||!(n=Co(n)))return t;var r=xe(t);return qo(r,le(r,xe(n))).join("")},ir.truncate=function(t,n){var e=30,r="...";if(ga(n)){var o="separator"in n?n.separator:o;e="length"in n?ka(n.length):e,r="omission"in n?Co(n.omission):r}var u=(t=Na(t)).length;if(ye(t)){var a=xe(t);u=a.length}if(e>=u)return t;var c=e-we(r);if(c<1)return r;var s=a?qo(a,0,c).join(""):t.slice(0,c);if(o===i)return s+r;if(a&&(c+=s.length-c),ja(o)){if(t.slice(c).search(o)){var f,l=s;for(o.global||(o=Zt(o.source,Na(Nt.exec(o))+"g")),o.lastIndex=0;f=o.exec(l);)var p=f.index;s=s.slice(0,p===i?c:p)}}else if(t.indexOf(Co(o),c)!=c){var h=s.lastIndexOf(o);h>-1&&(s=s.slice(0,h))}return s+r},ir.unescape=function(t){return(t=Na(t))&&_t.test(t)?t.replace(vt,je):t},ir.uniqueId=function(t){var n=++on;return Na(t)+n},ir.upperCase=hc,ir.upperFirst=dc,ir.each=Nu,ir.eachRight=zu,ir.first=fu,Oc(ir,(Uc={},Lr(ir,(function(t,n){rn.call(ir.prototype,n)||(Uc[n]=t)})),Uc),{chain:!1}),ir.VERSION="4.17.15",Ln(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(t){ir[t].placeholder=ir})),Ln(["drop","take"],(function(t,n){sr.prototype[t]=function(e){e=e===i?1:ze(ka(e),0);var r=this.__filtered__&&!n?new sr(this):this.clone();return r.__filtered__?r.__takeCount__=Fe(e,r.__takeCount__):r.__views__.push({size:Fe(e,P),type:t+(r.__dir__<0?"Right":"")}),r},sr.prototype[t+"Right"]=function(n){return this.reverse()[t](n).reverse()}})),Ln(["filter","map","takeWhile"],(function(t,n){var e=n+1,r=1==e||3==e;sr.prototype[t]=function(t){var n=this.clone();return n.__iteratees__.push({iteratee:Ti(t,3),type:e}),n.__filtered__=n.__filtered__||r,n}})),Ln(["head","last"],(function(t,n){var e="take"+(n?"Right":"");sr.prototype[t]=function(){return this[e](1).value()[0]}})),Ln(["initial","tail"],(function(t,n){var e="drop"+(n?"":"Right");sr.prototype[t]=function(){return this.__filtered__?new sr(this):this[e](1)}})),sr.prototype.compact=function(){return this.filter(wc)},sr.prototype.find=function(t){return this.filter(t).head()},sr.prototype.findLast=function(t){return this.reverse().find(t)},sr.prototype.invokeMap=vo((function(t,n){return"function"==typeof t?new sr(this):this.map((function(e){return Zr(e,t,n)}))})),sr.prototype.reject=function(t){return this.filter(Qu(Ti(t)))},sr.prototype.slice=function(t,n){t=ka(t);var e=this;return e.__filtered__&&(t>0||n<0)?new sr(e):(t<0?e=e.takeRight(-t):t&&(e=e.drop(t)),n!==i&&(e=(n=ka(n))<0?e.dropRight(-n):e.take(n-t)),e)},sr.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},sr.prototype.toArray=function(){return this.take(P)},Lr(sr.prototype,(function(t,n){var e=/^(?:filter|find|map|reject)|While$/.test(n),r=/^(?:head|last)$/.test(n),o=ir[r?"take"+("last"==n?"Right":""):n],u=r||/^find/.test(n);o&&(ir.prototype[n]=function(){var n=this.__wrapped__,a=r?[1]:arguments,c=n instanceof sr,s=a[0],f=c||ca(n),l=function(t){var n=o.apply(ir,Vn([t],a));return r&&p?n[0]:n};f&&e&&"function"==typeof s&&1!=s.length&&(c=f=!1);var p=this.__chain__,h=!!this.__actions__.length,d=u&&!p,v=c&&!h;if(!u&&f){n=v?n:new sr(this);var y=t.apply(n,a);return y.__actions__.push({func:Pu,args:[l],thisArg:i}),new cr(y,p)}return d&&v?t.apply(this,a):(y=this.thru(l),d?r?y.value()[0]:y.value():y)})})),Ln(["pop","push","shift","sort","splice","unshift"],(function(t){var n=Yt[t],e=/^(?:push|sort|unshift)$/.test(t)?"tap":"thru",r=/^(?:pop|shift)$/.test(t);ir.prototype[t]=function(){var t=arguments;if(r&&!this.__chain__){var o=this.value();return n.apply(ca(o)?o:[],t)}return this[e]((function(e){return n.apply(ca(e)?e:[],t)}))}})),Lr(sr.prototype,(function(t,n){var e=ir[n];if(e){var r=e.name+"";rn.call(Xe,r)||(Xe[r]=[]),Xe[r].push({name:n,func:e})}})),Xe[ii(i,y).name]=[{name:"wrapper",func:i}],sr.prototype.clone=function(){var t=new sr(this.__wrapped__);return t.__actions__=Jo(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=Jo(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=Jo(this.__views__),t},sr.prototype.reverse=function(){if(this.__filtered__){var t=new sr(this);t.__dir__=-1,t.__filtered__=!0}else(t=this.clone()).__dir__*=-1;return t},sr.prototype.value=function(){var t=this.__wrapped__.value(),n=this.__dir__,e=ca(t),r=n<0,o=e?t.length:0,i=function(t,n,e){for(var r=-1,o=e.length;++r<o;){var i=e[r],u=i.size;switch(i.type){case"drop":t+=u;break;case"dropRight":n-=u;break;case"take":n=Fe(n,t+u);break;case"takeRight":t=ze(t,n-u)}}return{start:t,end:n}}(0,o,this.__views__),u=i.start,a=i.end,c=a-u,s=r?a:u-1,f=this.__iteratees__,l=f.length,p=0,h=Fe(c,this.__takeCount__);if(!e||!r&&o==c&&h==c)return Ro(t,this.__actions__);var d=[];t:for(;c--&&p<h;){for(var v=-1,y=t[s+=n];++v<l;){var _=f[v],g=_.iteratee,b=_.type,m=g(y);if(2==b)y=m;else if(!m){if(1==b)continue t;break t}}d[p++]=y}return d},ir.prototype.at=ku,ir.prototype.chain=function(){return Iu(this)},ir.prototype.commit=function(){return new cr(this.value(),this.__chain__)},ir.prototype.next=function(){this.__values__===i&&(this.__values__=Ia(this.value()));var t=this.__index__>=this.__values__.length;return{done:t,value:t?i:this.__values__[this.__index__++]}},ir.prototype.plant=function(t){for(var n,e=this;e instanceof ar;){var r=ru(e);r.__index__=0,r.__values__=i,n?o.__wrapped__=r:n=r;var o=r;e=e.__wrapped__}return o.__wrapped__=t,n},ir.prototype.reverse=function(){var t=this.__wrapped__;if(t instanceof sr){var n=t;return this.__actions__.length&&(n=new sr(this)),(n=n.reverse()).__actions__.push({func:Pu,args:[gu],thisArg:i}),new cr(n,this.__chain__)}return this.thru(gu)},ir.prototype.toJSON=ir.prototype.valueOf=ir.prototype.value=function(){return Ro(this.__wrapped__,this.__actions__)},ir.prototype.first=ir.prototype.head,oe&&(ir.prototype[oe]=function(){return this}),ir}();On._=Ee,(o=function(){return Ee}.call(n,e,n,r))===i||(r.exports=o)}).call(this)}).call(this,e(11),e(14)(t))},function(t,n,e){var r=e(87);t.exports={Graph:r.Graph,json:e(213),alg:e(214),version:r.version}},function(t,n,e){t.exports={Graph:e(28),version:e(212)}},function(t,n,e){var r=e(89);t.exports=function(t){return r(t,4)}},function(t,n,e){var r=e(29),o=e(33),i=e(48),u=e(118),a=e(124),c=e(127),s=e(128),f=e(129),l=e(130),p=e(58),h=e(131),d=e(10),v=e(135),y=e(136),_=e(141),g=e(0),b=e(12),m=e(142),w=e(5),x=e(144),j=e(6),E="[object Arguments]",O="[object Function]",A="[object Object]",T={};T[E]=T["[object Array]"]=T["[object ArrayBuffer]"]=T["[object DataView]"]=T["[object Boolean]"]=T["[object Date]"]=T["[object Float32Array]"]=T["[object Float64Array]"]=T["[object Int8Array]"]=T["[object Int16Array]"]=T["[object Int32Array]"]=T["[object Map]"]=T["[object Number]"]=T[A]=T["[object RegExp]"]=T["[object Set]"]=T["[object String]"]=T["[object Symbol]"]=T["[object Uint8Array]"]=T["[object Uint8ClampedArray]"]=T["[object Uint16Array]"]=T["[object Uint32Array]"]=!0,T["[object Error]"]=T[O]=T["[object WeakMap]"]=!1,t.exports=function t(n,e,C,S,I,P){var k,R=1&e,D=2&e,U=4&e;if(C&&(k=I?C(n,S,I,P):C(n)),void 0!==k)return k;if(!w(n))return n;var N=g(n);if(N){if(k=v(n),!R)return s(n,k)}else{var z=d(n),F=z==O||"[object GeneratorFunction]"==z;if(b(n))return c(n,R);if(z==A||z==E||F&&!I){if(k=D||F?{}:_(n),!R)return D?l(n,a(k,n)):f(n,u(k,n))}else{if(!T[z])return I?n:{};k=y(n,z,R)}}P||(P=new r);var L=P.get(n);if(L)return L;P.set(n,k),x(n)?n.forEach((function(r){k.add(t(r,e,C,r,n,P))})):m(n)&&n.forEach((function(r,o){k.set(o,t(r,e,C,o,n,P))}));var q=U?D?h:p:D?keysIn:j,M=N?void 0:q(n);return o(M||n,(function(r,o){M&&(r=n[o=r]),i(k,o,t(r,e,C,o,n,P))})),k}},function(t,n){t.exports=function(){this.__data__=[],this.size=0}},function(t,n,e){var r=e(16),o=Array.prototype.splice;t.exports=function(t){var n=this.__data__,e=r(n,t);return!(e<0||(e==n.length-1?n.pop():o.call(n,e,1),--this.size,0))}},function(t,n,e){var r=e(16);t.exports=function(t){var n=this.__data__,e=r(n,t);return e<0?void 0:n[e][1]}},function(t,n,e){var r=e(16);t.exports=function(t){return r(this.__data__,t)>-1}},function(t,n,e){var r=e(16);t.exports=function(t,n){var e=this.__data__,o=r(e,t);return o<0?(++this.size,e.push([t,n])):e[o][1]=n,this}},function(t,n,e){var r=e(15);t.exports=function(){this.__data__=new r,this.size=0}},function(t,n){t.exports=function(t){var n=this.__data__,e=n.delete(t);return this.size=n.size,e}},function(t,n){t.exports=function(t){return this.__data__.get(t)}},function(t,n){t.exports=function(t){return this.__data__.has(t)}},function(t,n,e){var r=e(15),o=e(31),i=e(32);t.exports=function(t,n){var e=this.__data__;if(e instanceof r){var u=e.__data__;if(!o||u.length<199)return u.push([t,n]),this.size=++e.size,this;e=this.__data__=new i(u)}return e.set(t,n),this.size=e.size,this}},function(t,n,e){var r=e(17),o=e(103),i=e(5),u=e(47),a=/^\[object .+?Constructor\]$/,c=Function.prototype,s=Object.prototype,f=c.toString,l=s.hasOwnProperty,p=RegExp("^"+f.call(l).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");t.exports=function(t){return!(!i(t)||o(t))&&(r(t)?p:a).test(u(t))}},function(t,n,e){var r=e(9),o=Object.prototype,i=o.hasOwnProperty,u=o.toString,a=r?r.toStringTag:void 0;t.exports=function(t){var n=i.call(t,a),e=t[a];try{t[a]=void 0;var r=!0}catch(t){}var o=u.call(t);return r&&(n?t[a]=e:delete t[a]),o}},function(t,n){var e=Object.prototype.toString;t.exports=function(t){return e.call(t)}},function(t,n,e){var r,o=e(104),i=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";t.exports=function(t){return!!i&&i in t}},function(t,n,e){var r=e(2)["__core-js_shared__"];t.exports=r},function(t,n){t.exports=function(t,n){return null==t?void 0:t[n]}},function(t,n,e){var r=e(107),o=e(15),i=e(31);t.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(t,n,e){var r=e(108),o=e(109),i=e(110),u=e(111),a=e(112);function c(t){var n=-1,e=null==t?0:t.length;for(this.clear();++n<e;){var r=t[n];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=u,c.prototype.set=a,t.exports=c},function(t,n,e){var r=e(18);t.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(t,n){t.exports=function(t){var n=this.has(t)&&delete this.__data__[t];return this.size-=n?1:0,n}},function(t,n,e){var r=e(18),o=Object.prototype.hasOwnProperty;t.exports=function(t){var n=this.__data__;if(r){var e=n[t];return"__lodash_hash_undefined__"===e?void 0:e}return o.call(n,t)?n[t]:void 0}},function(t,n,e){var r=e(18),o=Object.prototype.hasOwnProperty;t.exports=function(t){var n=this.__data__;return r?void 0!==n[t]:o.call(n,t)}},function(t,n,e){var r=e(18);t.exports=function(t,n){var e=this.__data__;return this.size+=this.has(t)?0:1,e[t]=r&&void 0===n?"__lodash_hash_undefined__":n,this}},function(t,n,e){var r=e(19);t.exports=function(t){var n=r(this,t).delete(t);return this.size-=n?1:0,n}},function(t,n){t.exports=function(t){var n=typeof t;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==t:null===t}},function(t,n,e){var r=e(19);t.exports=function(t){return r(this,t).get(t)}},function(t,n,e){var r=e(19);t.exports=function(t){return r(this,t).has(t)}},function(t,n,e){var r=e(19);t.exports=function(t,n){var e=r(this,t),o=e.size;return e.set(t,n),this.size+=e.size==o?0:1,this}},function(t,n,e){var r=e(20),o=e(6);t.exports=function(t,n){return t&&r(n,o(n),t)}},function(t,n){t.exports=function(t,n){for(var e=-1,r=Array(t);++e<t;)r[e]=n(e);return r}},function(t,n,e){var r=e(8),o=e(3);t.exports=function(t){return o(t)&&"[object Arguments]"==r(t)}},function(t,n){t.exports=function(){return!1}},function(t,n,e){var r=e(8),o=e(34),i=e(3),u={};u["[object Float32Array]"]=u["[object Float64Array]"]=u["[object Int8Array]"]=u["[object Int16Array]"]=u["[object Int32Array]"]=u["[object Uint8Array]"]=u["[object Uint8ClampedArray]"]=u["[object Uint16Array]"]=u["[object Uint32Array]"]=!0,u["[object Arguments]"]=u["[object Array]"]=u["[object ArrayBuffer]"]=u["[object Boolean]"]=u["[object DataView]"]=u["[object Date]"]=u["[object Error]"]=u["[object Function]"]=u["[object Map]"]=u["[object Number]"]=u["[object Object]"]=u["[object RegExp]"]=u["[object Set]"]=u["[object String]"]=u["[object WeakMap]"]=!1,t.exports=function(t){return i(t)&&o(t.length)&&!!u[r(t)]}},function(t,n,e){var r=e(53)(Object.keys,Object);t.exports=r},function(t,n,e){var r=e(20),o=e(54);t.exports=function(t,n){return t&&r(n,o(n),t)}},function(t,n,e){var r=e(5),o=e(23),i=e(126),u=Object.prototype.hasOwnProperty;t.exports=function(t){if(!r(t))return i(t);var n=o(t),e=[];for(var a in t)("constructor"!=a||!n&&u.call(t,a))&&e.push(a);return e}},function(t,n){t.exports=function(t){var n=[];if(null!=t)for(var e in Object(t))n.push(e);return n}},function(t,n,e){(function(t){var r=e(2),o=n&&!n.nodeType&&n,i=o&&"object"==typeof t&&t&&!t.nodeType&&t,u=i&&i.exports===o?r.Buffer:void 0,a=u?u.allocUnsafe:void 0;t.exports=function(t,n){if(n)return t.slice();var e=t.length,r=a?a(e):new t.constructor(e);return t.copy(r),r}}).call(this,e(14)(t))},function(t,n){t.exports=function(t,n){var e=-1,r=t.length;for(n||(n=Array(r));++e<r;)n[e]=t[e];return n}},function(t,n,e){var r=e(20),o=e(38);t.exports=function(t,n){return r(t,o(t),n)}},function(t,n,e){var r=e(20),o=e(57);t.exports=function(t,n){return r(t,o(t),n)}},function(t,n,e){var r=e(59),o=e(57),i=e(54);t.exports=function(t){return r(t,i,o)}},function(t,n,e){var r=e(4)(e(2),"DataView");t.exports=r},function(t,n,e){var r=e(4)(e(2),"Promise");t.exports=r},function(t,n,e){var r=e(4)(e(2),"WeakMap");t.exports=r},function(t,n){var e=Object.prototype.hasOwnProperty;t.exports=function(t){var n=t.length,r=new t.constructor(n);return n&&"string"==typeof t[0]&&e.call(t,"index")&&(r.index=t.index,r.input=t.input),r}},function(t,n,e){var r=e(41),o=e(137),i=e(138),u=e(139),a=e(140);t.exports=function(t,n,e){var c=t.constructor;switch(n){case"[object ArrayBuffer]":return r(t);case"[object Boolean]":case"[object Date]":return new c(+t);case"[object DataView]":return o(t,e);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return a(t,e);case"[object Map]":return new c;case"[object Number]":case"[object String]":return new c(t);case"[object RegExp]":return i(t);case"[object Set]":return new c;case"[object Symbol]":return u(t)}}},function(t,n,e){var r=e(41);t.exports=function(t,n){var e=n?r(t.buffer):t.buffer;return new t.constructor(e,t.byteOffset,t.byteLength)}},function(t,n){var e=/\w*$/;t.exports=function(t){var n=new t.constructor(t.source,e.exec(t));return n.lastIndex=t.lastIndex,n}},function(t,n,e){var r=e(9),o=r?r.prototype:void 0,i=o?o.valueOf:void 0;t.exports=function(t){return i?Object(i.call(t)):{}}},function(t,n,e){var r=e(41);t.exports=function(t,n){var e=n?r(t.buffer):t.buffer;return new t.constructor(e,t.byteOffset,t.length)}},function(t,n,e){var r=e(62),o=e(40),i=e(23);t.exports=function(t){return"function"!=typeof t.constructor||i(t)?{}:r(o(t))}},function(t,n,e){var r=e(143),o=e(35),i=e(36),u=i&&i.isMap,a=u?o(u):r;t.exports=a},function(t,n,e){var r=e(10),o=e(3);t.exports=function(t){return o(t)&&"[object Map]"==r(t)}},function(t,n,e){var r=e(145),o=e(35),i=e(36),u=i&&i.isSet,a=u?o(u):r;t.exports=a},function(t,n,e){var r=e(10),o=e(3);t.exports=function(t){return o(t)&&"[object Set]"==r(t)}},function(t,n,e){t.exports=e(147)},function(t,n,e){var r=e(33),o=e(24),i=e(151),u=e(0);t.exports=function(t,n){return(u(t)?r:o)(t,i(n))}},function(t,n,e){var r=e(149)();t.exports=r},function(t,n){t.exports=function(t){return function(n,e,r){for(var o=-1,i=Object(n),u=r(n),a=u.length;a--;){var c=u[t?a:++o];if(!1===e(i[c],c,i))break}return n}}},function(t,n,e){var r=e(7);t.exports=function(t,n){return function(e,o){if(null==e)return e;if(!r(e))return t(e,o);for(var i=e.length,u=n?i:-1,a=Object(e);(n?u--:++u<i)&&!1!==o(a[u],u,a););return e}}},function(t,n,e){var r=e(25);t.exports=function(t){return"function"==typeof t?t:r}},function(t,n,e){var r=e(55),o=e(153),i=e(26),u=e(0);t.exports=function(t,n){return(u(t)?r:o)(t,i(n,3))}},function(t,n,e){var r=e(24);t.exports=function(t,n){var e=[];return r(t,(function(t,r,o){n(t,r,o)&&e.push(t)})),e}},function(t,n,e){var r=e(155),o=e(163),i=e(70);t.exports=function(t){var n=o(t);return 1==n.length&&n[0][2]?i(n[0][0],n[0][1]):function(e){return e===t||r(e,t,n)}}},function(t,n,e){var r=e(29),o=e(65);t.exports=function(t,n,e,i){var u=e.length,a=u,c=!i;if(null==t)return!a;for(t=Object(t);u--;){var s=e[u];if(c&&s[2]?s[1]!==t[s[0]]:!(s[0]in t))return!1}for(;++u<a;){var f=(s=e[u])[0],l=t[f],p=s[1];if(c&&s[2]){if(void 0===l&&!(f in t))return!1}else{var h=new r;if(i)var d=i(l,p,f,t,n,h);if(!(void 0===d?o(p,l,3,i,h):d))return!1}}return!0}},function(t,n,e){var r=e(29),o=e(66),i=e(160),u=e(162),a=e(10),c=e(0),s=e(12),f=e(22),l="[object Arguments]",p="[object Array]",h="[object Object]",d=Object.prototype.hasOwnProperty;t.exports=function(t,n,e,v,y,_){var g=c(t),b=c(n),m=g?p:a(t),w=b?p:a(n),x=(m=m==l?h:m)==h,j=(w=w==l?h:w)==h,E=m==w;if(E&&s(t)){if(!s(n))return!1;g=!0,x=!1}if(E&&!x)return _||(_=new r),g||f(t)?o(t,n,e,v,y,_):i(t,n,m,e,v,y,_);if(!(1&e)){var O=x&&d.call(t,"__wrapped__"),A=j&&d.call(n,"__wrapped__");if(O||A){var T=O?t.value():t,C=A?n.value():n;return _||(_=new r),y(T,C,e,v,_)}}return!!E&&(_||(_=new r),u(t,n,e,v,y,_))}},function(t,n){t.exports=function(t){return this.__data__.set(t,"__lodash_hash_undefined__"),this}},function(t,n){t.exports=function(t){return this.__data__.has(t)}},function(t,n){t.exports=function(t,n){for(var e=-1,r=null==t?0:t.length;++e<r;)if(n(t[e],e,t))return!0;return!1}},function(t,n,e){var r=e(9),o=e(61),i=e(30),u=e(66),a=e(161),c=e(42),s=r?r.prototype:void 0,f=s?s.valueOf:void 0;t.exports=function(t,n,e,r,s,l,p){switch(e){case"[object DataView]":if(t.byteLength!=n.byteLength||t.byteOffset!=n.byteOffset)return!1;t=t.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(t.byteLength!=n.byteLength||!l(new o(t),new o(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+t,+n);case"[object Error]":return t.name==n.name&&t.message==n.message;case"[object RegExp]":case"[object String]":return t==n+"";case"[object Map]":var h=a;case"[object Set]":var d=1&r;if(h||(h=c),t.size!=n.size&&!d)return!1;var v=p.get(t);if(v)return v==n;r|=2,p.set(t,n);var y=u(h(t),h(n),r,s,l,p);return p.delete(t),y;case"[object Symbol]":if(f)return f.call(t)==f.call(n)}return!1}},function(t,n){t.exports=function(t){var n=-1,e=Array(t.size);return t.forEach((function(t,r){e[++n]=[r,t]})),e}},function(t,n,e){var r=e(58),o=Object.prototype.hasOwnProperty;t.exports=function(t,n,e,i,u,a){var c=1&e,s=r(t),f=s.length;if(f!=r(n).length&&!c)return!1;for(var l=f;l--;){var p=s[l];if(!(c?p in n:o.call(n,p)))return!1}var h=a.get(t);if(h&&a.get(n))return h==n;var d=!0;a.set(t,n),a.set(n,t);for(var v=c;++l<f;){var y=t[p=s[l]],_=n[p];if(i)var g=c?i(_,y,p,n,t,a):i(y,_,p,t,n,a);if(!(void 0===g?y===_||u(y,_,e,i,a):g)){d=!1;break}v||(v="constructor"==p)}if(d&&!v){var b=t.constructor,m=n.constructor;b!=m&&"constructor"in t&&"constructor"in n&&!("function"==typeof b&&b instanceof b&&"function"==typeof m&&m instanceof m)&&(d=!1)}return a.delete(t),a.delete(n),d}},function(t,n,e){var r=e(69),o=e(6);t.exports=function(t){for(var n=o(t),e=n.length;e--;){var i=n[e],u=t[i];n[e]=[i,u,r(u)]}return n}},function(t,n,e){var r=e(65),o=e(165),i=e(171),u=e(43),a=e(69),c=e(70),s=e(27);t.exports=function(t,n){return u(t)&&a(n)?c(s(t),n):function(e){var u=o(e,t);return void 0===u&&u===n?i(e,t):r(n,u,3)}}},function(t,n,e){var r=e(71);t.exports=function(t,n,e){var o=null==t?void 0:r(t,n);return void 0===o?e:o}},function(t,n,e){var r=e(167),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,u=r((function(t){var n=[];return 46===t.charCodeAt(0)&&n.push(""),t.replace(o,(function(t,e,r,o){n.push(r?o.replace(i,"$1"):e||t)})),n}));t.exports=u},function(t,n,e){var r=e(168);t.exports=function(t){var n=r(t,(function(t){return 500===e.size&&e.clear(),t})),e=n.cache;return n}},function(t,n,e){var r=e(32),o="Expected a function";function i(t,n){if("function"!=typeof t||null!=n&&"function"!=typeof n)throw new TypeError(o);var e=function(){var r=arguments,o=n?n.apply(this,r):r[0],i=e.cache;if(i.has(o))return i.get(o);var u=t.apply(this,r);return e.cache=i.set(o,u)||i,u};return e.cache=new(i.Cache||r),e}i.Cache=r,t.exports=i},function(t,n,e){var r=e(170);t.exports=function(t){return null==t?"":r(t)}},function(t,n,e){var r=e(9),o=e(45),i=e(0),u=e(44),a=r?r.prototype:void 0,c=a?a.toString:void 0;t.exports=function t(n){if("string"==typeof n)return n;if(i(n))return o(n,t)+"";if(u(n))return c?c.call(n):"";var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(t,n,e){var r=e(172),o=e(73);t.exports=function(t,n){return null!=t&&o(t,n,r)}},function(t,n){t.exports=function(t,n){return null!=t&&n in Object(t)}},function(t,n,e){var r=e(74),o=e(174),i=e(43),u=e(27);t.exports=function(t){return i(t)?r(u(t)):o(t)}},function(t,n,e){var r=e(71);t.exports=function(t){return function(n){return r(n,t)}}},function(t,n,e){var r=e(176),o=e(73);t.exports=function(t,n){return null!=t&&o(t,n,r)}},function(t,n){var e=Object.prototype.hasOwnProperty;t.exports=function(t,n){return null!=t&&e.call(t,n)}},function(t,n,e){var r=e(37),o=e(10),i=e(21),u=e(0),a=e(7),c=e(12),s=e(23),f=e(22),l=Object.prototype.hasOwnProperty;t.exports=function(t){if(null==t)return!0;if(a(t)&&(u(t)||"string"==typeof t||"function"==typeof t.splice||c(t)||f(t)||i(t)))return!t.length;var n=o(t);if("[object Map]"==n||"[object Set]"==n)return!t.size;if(s(t))return!r(t).length;for(var e in t)if(l.call(t,e))return!1;return!0}},function(t,n){t.exports=function(t){return void 0===t}},function(t,n,e){var r=e(45),o=e(26),i=e(180),u=e(0);t.exports=function(t,n){return(u(t)?r:i)(t,o(n,3))}},function(t,n,e){var r=e(24),o=e(7);t.exports=function(t,n){var e=-1,i=o(t)?Array(t.length):[];return r(t,(function(t,r,o){i[++e]=n(t,r,o)})),i}},function(t,n,e){var r=e(182),o=e(24),i=e(26),u=e(183),a=e(0);t.exports=function(t,n,e){var c=a(t)?r:u,s=arguments.length<3;return c(t,i(n,4),e,s,o)}},function(t,n){t.exports=function(t,n,e,r){var o=-1,i=null==t?0:t.length;for(r&&i&&(e=t[++o]);++o<i;)e=n(e,t[o],o,t);return e}},function(t,n){t.exports=function(t,n,e,r,o){return o(t,(function(t,o,i){e=r?(r=!1,t):n(e,t,o,i)})),e}},function(t,n,e){var r=e(37),o=e(10),i=e(7),u=e(185),a=e(186);t.exports=function(t){if(null==t)return 0;if(i(t))return u(t)?a(t):t.length;var n=o(t);return"[object Map]"==n||"[object Set]"==n?t.size:r(t).length}},function(t,n,e){var r=e(8),o=e(0),i=e(3);t.exports=function(t){return"string"==typeof t||!o(t)&&i(t)&&"[object String]"==r(t)}},function(t,n,e){var r=e(187),o=e(188),i=e(189);t.exports=function(t){return o(t)?i(t):r(t)}},function(t,n,e){var r=e(74)("length");t.exports=r},function(t,n){var e=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");t.exports=function(t){return e.test(t)}},function(t,n){var e="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",r="\\ud83c[\\udffb-\\udfff]",o="[^\\ud800-\\udfff]",i="(?:\\ud83c[\\udde6-\\uddff]){2}",u="[\\ud800-\\udbff][\\udc00-\\udfff]",a="(?:"+e+"|"+r+")?",c="[\\ufe0e\\ufe0f]?"+a+"(?:\\u200d(?:"+[o,i,u].join("|")+")[\\ufe0e\\ufe0f]?"+a+")*",s="(?:"+[o+e+"?",e,i,u,"[\\ud800-\\udfff]"].join("|")+")",f=RegExp(r+"(?="+r+")|"+s+c,"g");t.exports=function(t){for(var n=f.lastIndex=0;f.test(t);)++n;return n}},function(t,n,e){var r=e(33),o=e(62),i=e(64),u=e(26),a=e(40),c=e(0),s=e(12),f=e(17),l=e(5),p=e(22);t.exports=function(t,n,e){var h=c(t),d=h||s(t)||p(t);if(n=u(n,4),null==e){var v=t&&t.constructor;e=d?h?new v:[]:l(t)&&f(v)?o(a(t)):{}}return(d?r:i)(t,(function(t,r,o){return n(e,t,r,o)})),e}},function(t,n,e){var r=e(192),o=e(194),i=e(200),u=e(209),a=o((function(t){return i(r(t,1,u,!0))}));t.exports=a},function(t,n,e){var r=e(39),o=e(193);t.exports=function t(n,e,i,u,a){var c=-1,s=n.length;for(i||(i=o),a||(a=[]);++c<s;){var f=n[c];e>0&&i(f)?e>1?t(f,e-1,i,u,a):r(a,f):u||(a[a.length]=f)}return a}},function(t,n,e){var r=e(9),o=e(21),i=e(0),u=r?r.isConcatSpreadable:void 0;t.exports=function(t){return i(t)||o(t)||!!(u&&t&&t[u])}},function(t,n,e){var r=e(25),o=e(195),i=e(197);t.exports=function(t,n){return i(o(t,n,r),t+"")}},function(t,n,e){var r=e(196),o=Math.max;t.exports=function(t,n,e){return n=o(void 0===n?t.length-1:n,0),function(){for(var i=arguments,u=-1,a=o(i.length-n,0),c=Array(a);++u<a;)c[u]=i[n+u];u=-1;for(var s=Array(n+1);++u<n;)s[u]=i[u];return s[n]=e(c),r(t,this,s)}}},function(t,n){t.exports=function(t,n,e){switch(e.length){case 0:return t.call(n);case 1:return t.call(n,e[0]);case 2:return t.call(n,e[0],e[1]);case 3:return t.call(n,e[0],e[1],e[2])}return t.apply(n,e)}},function(t,n,e){var r=e(198),o=e(199)(r);t.exports=o},function(t,n,e){var r=e(63),o=e(50),i=e(25),u=o?function(t,n){return o(t,"toString",{configurable:!0,enumerable:!1,value:r(n),writable:!0})}:i;t.exports=u},function(t,n){var e=Date.now;t.exports=function(t){var n=0,r=0;return function(){var o=e(),i=16-(o-r);if(r=o,i>0){if(++n>=800)return arguments[0]}else n=0;return t.apply(void 0,arguments)}}},function(t,n,e){var r=e(67),o=e(201),i=e(206),u=e(68),a=e(207),c=e(42);t.exports=function(t,n,e){var s=-1,f=o,l=t.length,p=!0,h=[],d=h;if(e)p=!1,f=i;else if(l>=200){var v=n?null:a(t);if(v)return c(v);p=!1,f=u,d=new r}else d=n?[]:h;t:for(;++s<l;){var y=t[s],_=n?n(y):y;if(y=e||0!==y?y:0,p&&_==_){for(var g=d.length;g--;)if(d[g]===_)continue t;n&&d.push(_),h.push(y)}else f(d,_,e)||(d!==h&&d.push(_),h.push(y))}return h}},function(t,n,e){var r=e(202);t.exports=function(t,n){return!(null==t||!t.length)&&r(t,n,0)>-1}},function(t,n,e){var r=e(203),o=e(204),i=e(205);t.exports=function(t,n,e){return n==n?i(t,n,e):r(t,o,e)}},function(t,n){t.exports=function(t,n,e,r){for(var o=t.length,i=e+(r?1:-1);r?i--:++i<o;)if(n(t[i],i,t))return i;return-1}},function(t,n){t.exports=function(t){return t!=t}},function(t,n){t.exports=function(t,n,e){for(var r=e-1,o=t.length;++r<o;)if(t[r]===n)return r;return-1}},function(t,n){t.exports=function(t,n,e){for(var r=-1,o=null==t?0:t.length;++r<o;)if(e(n,t[r]))return!0;return!1}},function(t,n,e){var r=e(60),o=e(208),i=e(42),u=r&&1/i(new r([,-0]))[1]==1/0?function(t){return new r(t)}:o;t.exports=u},function(t,n){t.exports=function(){}},function(t,n,e){var r=e(7),o=e(3);t.exports=function(t){return o(t)&&r(t)}},function(t,n,e){var r=e(211),o=e(6);t.exports=function(t){return null==t?[]:r(t,o(t))}},function(t,n,e){var r=e(45);t.exports=function(t,n){return r(n,(function(n){return t[n]}))}},function(t,n){t.exports="2.1.7"},function(t,n,e){var r=e(1),o=e(28);function i(t){return r.map(t.nodes(),(function(n){var e=t.node(n),o=t.parent(n),i={v:n};return r.isUndefined(e)||(i.value=e),r.isUndefined(o)||(i.parent=o),i}))}function u(t){return r.map(t.edges(),(function(n){var e=t.edge(n),o={v:n.v,w:n.w};return r.isUndefined(n.name)||(o.name=n.name),r.isUndefined(e)||(o.value=e),o}))}t.exports={write:function(t){var n={options:{directed:t.isDirected(),multigraph:t.isMultigraph(),compound:t.isCompound()},nodes:i(t),edges:u(t)};return r.isUndefined(t.graph())||(n.value=r.clone(t.graph())),n},read:function(t){var n=new o(t.options).setGraph(t.value);return r.each(t.nodes,(function(t){n.setNode(t.v,t.value),t.parent&&n.setParent(t.v,t.parent)})),r.each(t.edges,(function(t){n.setEdge({v:t.v,w:t.w,name:t.name},t.value)})),n}}},function(t,n,e){t.exports={components:e(215),dijkstra:e(75),dijkstraAll:e(216),findCycles:e(217),floydWarshall:e(218),isAcyclic:e(219),postorder:e(220),preorder:e(221),prim:e(222),tarjan:e(77),topsort:e(78)}},function(t,n,e){var r=e(1);t.exports=function(t){var n,e={},o=[];function i(o){r.has(e,o)||(e[o]=!0,n.push(o),r.each(t.successors(o),i),r.each(t.predecessors(o),i))}return r.each(t.nodes(),(function(t){n=[],i(t),n.length&&o.push(n)})),o}},function(t,n,e){var r=e(75),o=e(1);t.exports=function(t,n,e){return o.transform(t.nodes(),(function(o,i){o[i]=r(t,i,n,e)}),{})}},function(t,n,e){var r=e(1),o=e(77);t.exports=function(t){return r.filter(o(t),(function(n){return n.length>1||1===n.length&&t.hasEdge(n[0],n[0])}))}},function(t,n,e){var r=e(1);t.exports=function(t,n,e){return function(t,n,e){var r={},o=t.nodes();return o.forEach((function(t){r[t]={},r[t][t]={distance:0},o.forEach((function(n){t!==n&&(r[t][n]={distance:Number.POSITIVE_INFINITY})})),e(t).forEach((function(e){var o=e.v===t?e.w:e.v,i=n(e);r[t][o]={distance:i,predecessor:t}}))})),o.forEach((function(t){var n=r[t];o.forEach((function(e){var i=r[e];o.forEach((function(e){var r=i[t],o=n[e],u=i[e],a=r.distance+o.distance;a<u.distance&&(u.distance=a,u.predecessor=o.predecessor)}))}))})),r}(t,n||o,e||function(n){return t.outEdges(n)})};var o=r.constant(1)},function(t,n,e){var r=e(78);t.exports=function(t){try{r(t)}catch(t){if(t instanceof r.CycleException)return!1;throw t}return!0}},function(t,n,e){var r=e(79);t.exports=function(t,n){return r(t,n,"post")}},function(t,n,e){var r=e(79);t.exports=function(t,n){return r(t,n,"pre")}},function(t,n,e){var r=e(1),o=e(28),i=e(76);t.exports=function(t,n){var e,u=new o,a={},c=new i;function s(t){var r=t.v===e?t.w:t.v,o=c.priority(r);if(void 0!==o){var i=n(t);i<o&&(a[r]=e,c.decrease(r,i))}}if(0===t.nodeCount())return u;r.each(t.nodes(),(function(t){c.add(t,Number.POSITIVE_INFINITY),u.setNode(t)})),c.decrease(t.nodes()[0],0);for(var f=!1;c.size()>0;){if(e=c.removeMin(),r.has(a,e))u.setEdge(e,a[e]);else{if(f)throw new Error("Input graph is not connected: "+t);f=!0}t.nodeEdges(e).forEach(s)}return u}},function(t,n,e){(function(t){function e(t,n){for(var e=0,r=t.length-1;r>=0;r--){var o=t[r];"."===o?t.splice(r,1):".."===o?(t.splice(r,1),e++):e&&(t.splice(r,1),e--)}if(n)for(;e--;e)t.unshift("..");return t}function r(t,n){if(t.filter)return t.filter(n);for(var e=[],r=0;r<t.length;r++)n(t[r],r,t)&&e.push(t[r]);return e}n.resolve=function(){for(var n="",o=!1,i=arguments.length-1;i>=-1&&!o;i--){var u=i>=0?arguments[i]:t.cwd();if("string"!=typeof u)throw new TypeError("Arguments to path.resolve must be strings");u&&(n=u+"/"+n,o="/"===u.charAt(0))}return(o?"/":"")+(n=e(r(n.split("/"),(function(t){return!!t})),!o).join("/"))||"."},n.normalize=function(t){var i=n.isAbsolute(t),u="/"===o(t,-1);return(t=e(r(t.split("/"),(function(t){return!!t})),!i).join("/"))||i||(t="."),t&&u&&(t+="/"),(i?"/":"")+t},n.isAbsolute=function(t){return"/"===t.charAt(0)},n.join=function(){var t=Array.prototype.slice.call(arguments,0);return n.normalize(r(t,(function(t,n){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t})).join("/"))},n.relative=function(t,e){function r(t){for(var n=0;n<t.length&&""===t[n];n++);for(var e=t.length-1;e>=0&&""===t[e];e--);return n>e?[]:t.slice(n,e-n+1)}t=n.resolve(t).substr(1),e=n.resolve(e).substr(1);for(var o=r(t.split("/")),i=r(e.split("/")),u=Math.min(o.length,i.length),a=u,c=0;c<u;c++)if(o[c]!==i[c]){a=c;break}var s=[];for(c=a;c<o.length;c++)s.push("..");return(s=s.concat(i.slice(a))).join("/")},n.sep="/",n.delimiter=":",n.dirname=function(t){if("string"!=typeof t&&(t+=""),0===t.length)return".";for(var n=t.charCodeAt(0),e=47===n,r=-1,o=!0,i=t.length-1;i>=1;--i)if(47===(n=t.charCodeAt(i))){if(!o){r=i;break}}else o=!1;return-1===r?e?"/":".":e&&1===r?"/":t.slice(0,r)},n.basename=function(t,n){var e=function(t){"string"!=typeof t&&(t+="");var n,e=0,r=-1,o=!0;for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!o){e=n+1;break}}else-1===r&&(o=!1,r=n+1);return-1===r?"":t.slice(e,r)}(t);return n&&e.substr(-1*n.length)===n&&(e=e.substr(0,e.length-n.length)),e},n.extname=function(t){"string"!=typeof t&&(t+="");for(var n=-1,e=0,r=-1,o=!0,i=0,u=t.length-1;u>=0;--u){var a=t.charCodeAt(u);if(47!==a)-1===r&&(o=!1,r=u+1),46===a?-1===n?n=u:1!==i&&(i=1):-1!==n&&(i=-1);else if(!o){e=u+1;break}}return-1===n||-1===r||0===i||1===i&&n===r-1&&n===e+1?"":t.slice(n,r)};var o="b"==="ab".substr(-1)?function(t,n,e){return t.substr(n,e)}:function(t,n,e){return n<0&&(n=t.length+n),t.substr(n,e)}}).call(this,e(13))},function(t,n,e){"use strict";var r={file:e(225),http:e(80),https:e(80)},o="object"==typeof window||"function"==typeof importScripts?r.http:r.file;"undefined"==typeof Promise&&e(82),t.exports.load=function(t,n){var e=Promise.resolve();return void 0===n&&(n={}),(e=e.then((function(){if(void 0===t)throw new TypeError("location is required");if("string"!=typeof t)throw new TypeError("location must be a string");if(void 0!==n){if("object"!=typeof n)throw new TypeError("options must be an object");if(void 0!==n.processContent&&"function"!=typeof n.processContent)throw new TypeError("options.processContent must be a function")}}))).then((function(){return new Promise((function(e,i){(function(t){var n=function(t){return void 0!==t&&(t=-1===t.indexOf("://")?"":t.split("://")[0]),t}(t),e=r[n];if(void 0===e){if(""!==n)throw new Error("Unsupported scheme: "+n);e=o}return e})(t).load(t,n||{},(function(t,n){t?i(t):e(n)}))}))})).then((function(e){return n.processContent?new Promise((function(r,o){"object"!=typeof e&&(e={text:e}),e.location=t,n.processContent(e,(function(t,n){t?o(t):r(n)}))})):"object"==typeof e?e.text:e}))}},function(t,n,e){"use strict";var r=new TypeError("The 'file' scheme is not supported in the browser");t.exports.getBase=function(){throw r},t.exports.load=function(){var t=arguments[arguments.length-1];if("function"!=typeof t)throw r;t(r)}},function(t,n,e){var r;"undefined"!=typeof window?r=window:"undefined"!=typeof self?r=self:(console.warn("Using browser-only version of superagent in non-browser environment"),r=this);var o=e(227),i=e(228),u=e(81),a=e(229),c=e(231);function s(){}var f=n=t.exports=function(t,e){return"function"==typeof e?new n.Request("GET",t).end(e):1==arguments.length?new n.Request("GET",t):new n.Request(t,e)};n.Request=_,f.getXHR=function(){if(!(!r.XMLHttpRequest||r.location&&"file:"==r.location.protocol&&r.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(t){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(t){}throw Error("Browser-only version of superagent could not find XHR")};var l="".trim?function(t){return t.trim()}:function(t){return t.replace(/(^\s*|\s*$)/g,"")};function p(t){if(!u(t))return t;var n=[];for(var e in t)h(n,e,t[e]);return n.join("&")}function h(t,n,e){if(null!=e)if(Array.isArray(e))e.forEach((function(e){h(t,n,e)}));else if(u(e))for(var r in e)h(t,n+"["+r+"]",e[r]);else t.push(encodeURIComponent(n)+"="+encodeURIComponent(e));else null===e&&t.push(encodeURIComponent(n))}function d(t){for(var n,e,r={},o=t.split("&"),i=0,u=o.length;i<u;++i)-1==(e=(n=o[i]).indexOf("="))?r[decodeURIComponent(n)]="":r[decodeURIComponent(n.slice(0,e))]=decodeURIComponent(n.slice(e+1));return r}function v(t){return/[\/+]json($|[^-\w])/.test(t)}function y(t){this.req=t,this.xhr=this.req.xhr,this.text="HEAD"!=this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||void 0===this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText;var n=this.xhr.status;1223===n&&(n=204),this._setStatusProperties(n),this.header=this.headers=function(t){for(var n,e,r,o,i=t.split(/\r?\n/),u={},a=0,c=i.length;a<c;++a)-1!==(n=(e=i[a]).indexOf(":"))&&(r=e.slice(0,n).toLowerCase(),o=l(e.slice(n+1)),u[r]=o);return u}(this.xhr.getAllResponseHeaders()),this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this._setHeaderProperties(this.header),null===this.text&&t._responseType?this.body=this.xhr.response:this.body="HEAD"!=this.req.method?this._parseBody(this.text?this.text:this.xhr.response):null}function _(t,n){var e=this;this._query=this._query||[],this.method=t,this.url=n,this.header={},this._header={},this.on("end",(function(){var t,n=null,r=null;try{r=new y(e)}catch(t){return(n=new Error("Parser is unable to parse the response")).parse=!0,n.original=t,e.xhr?(n.rawResponse=void 0===e.xhr.responseType?e.xhr.responseText:e.xhr.response,n.status=e.xhr.status?e.xhr.status:null,n.statusCode=n.status):(n.rawResponse=null,n.status=null),e.callback(n)}e.emit("response",r);try{e._isResponseOK(r)||(t=new Error(r.statusText||"Unsuccessful HTTP response"))}catch(n){t=n}t?(t.original=n,t.response=r,t.status=r.status,e.callback(t,r)):e.callback(null,r)}))}function g(t,n,e){var r=f("DELETE",t);return"function"==typeof n&&(e=n,n=null),n&&r.send(n),e&&r.end(e),r}f.serializeObject=p,f.parseString=d,f.types={html:"text/html",json:"application/json",xml:"text/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},f.serialize={"application/x-www-form-urlencoded":p,"application/json":JSON.stringify},f.parse={"application/x-www-form-urlencoded":d,"application/json":JSON.parse},a(y.prototype),y.prototype._parseBody=function(t){var n=f.parse[this.type];return this.req._parser?this.req._parser(this,t):(!n&&v(this.type)&&(n=f.parse["application/json"]),n&&t&&(t.length||t instanceof Object)?n(t):null)},y.prototype.toError=function(){var t=this.req,n=t.method,e=t.url,r="cannot "+n+" "+e+" ("+this.status+")",o=new Error(r);return o.status=this.status,o.method=n,o.url=e,o},f.Response=y,o(_.prototype),i(_.prototype),_.prototype.type=function(t){return this.set("Content-Type",f.types[t]||t),this},_.prototype.accept=function(t){return this.set("Accept",f.types[t]||t),this},_.prototype.auth=function(t,n,e){1===arguments.length&&(n=""),"object"==typeof n&&null!==n&&(e=n,n=""),e||(e={type:"function"==typeof btoa?"basic":"auto"});var r=function(t){if("function"==typeof btoa)return btoa(t);throw new Error("Cannot use basic auth, btoa is not a function")};return this._auth(t,n,e,r)},_.prototype.query=function(t){return"string"!=typeof t&&(t=p(t)),t&&this._query.push(t),this},_.prototype.attach=function(t,n,e){if(n){if(this._data)throw Error("superagent can't mix .send() and .attach()");this._getFormData().append(t,n,e||n.name)}return this},_.prototype._getFormData=function(){return this._formData||(this._formData=new r.FormData),this._formData},_.prototype.callback=function(t,n){if(this._shouldRetry(t,n))return this._retry();var e=this._callback;this.clearTimeout(),t&&(this._maxRetries&&(t.retries=this._retries-1),this.emit("error",t)),e(t,n)},_.prototype.crossDomainError=function(){var t=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");t.crossDomain=!0,t.status=this.status,t.method=this.method,t.url=this.url,this.callback(t)},_.prototype.buffer=_.prototype.ca=_.prototype.agent=function(){return console.warn("This is not supported in browser version of superagent"),this},_.prototype.pipe=_.prototype.write=function(){throw Error("Streaming is not supported in browser version of superagent")},_.prototype._isHost=function(t){return t&&"object"==typeof t&&!Array.isArray(t)&&"[object Object]"!==Object.prototype.toString.call(t)},_.prototype.end=function(t){return this._endCalled&&console.warn("Warning: .end() was called twice. This is not supported in superagent"),this._endCalled=!0,this._callback=t||s,this._finalizeQueryString(),this._end()},_.prototype._end=function(){var t=this,n=this.xhr=f.getXHR(),e=this._formData||this._data;this._setTimeouts(),n.onreadystatechange=function(){var e=n.readyState;if(e>=2&&t._responseTimeoutTimer&&clearTimeout(t._responseTimeoutTimer),4==e){var r;try{r=n.status}catch(t){r=0}if(!r){if(t.timedout||t._aborted)return;return t.crossDomainError()}t.emit("end")}};var r=function(n,e){e.total>0&&(e.percent=e.loaded/e.total*100),e.direction=n,t.emit("progress",e)};if(this.hasListeners("progress"))try{n.onprogress=r.bind(null,"download"),n.upload&&(n.upload.onprogress=r.bind(null,"upload"))}catch(t){}try{this.username&&this.password?n.open(this.method,this.url,!0,this.username,this.password):n.open(this.method,this.url,!0)}catch(t){return this.callback(t)}if(this._withCredentials&&(n.withCredentials=!0),!this._formData&&"GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof e&&!this._isHost(e)){var o=this._header["content-type"],i=this._serializer||f.serialize[o?o.split(";")[0]:""];!i&&v(o)&&(i=f.serialize["application/json"]),i&&(e=i(e))}for(var u in this.header)null!=this.header[u]&&this.header.hasOwnProperty(u)&&n.setRequestHeader(u,this.header[u]);return this._responseType&&(n.responseType=this._responseType),this.emit("request",this),n.send(void 0!==e?e:null),this},f.agent=function(){return new c},["GET","POST","OPTIONS","PATCH","PUT","DELETE"].forEach((function(t){c.prototype[t.toLowerCase()]=function(n,e){var r=new f.Request(t,n);return this._setDefaults(r),e&&r.end(e),r}})),c.prototype.del=c.prototype.delete,f.get=function(t,n,e){var r=f("GET",t);return"function"==typeof n&&(e=n,n=null),n&&r.query(n),e&&r.end(e),r},f.head=function(t,n,e){var r=f("HEAD",t);return"function"==typeof n&&(e=n,n=null),n&&r.query(n),e&&r.end(e),r},f.options=function(t,n,e){var r=f("OPTIONS",t);return"function"==typeof n&&(e=n,n=null),n&&r.send(n),e&&r.end(e),r},f.del=g,f.delete=g,f.patch=function(t,n,e){var r=f("PATCH",t);return"function"==typeof n&&(e=n,n=null),n&&r.send(n),e&&r.end(e),r},f.post=function(t,n,e){var r=f("POST",t);return"function"==typeof n&&(e=n,n=null),n&&r.send(n),e&&r.end(e),r},f.put=function(t,n,e){var r=f("PUT",t);return"function"==typeof n&&(e=n,n=null),n&&r.send(n),e&&r.end(e),r}},function(t,n,e){function r(t){if(t)return function(t){for(var n in r.prototype)t[n]=r.prototype[n];return t}(t)}t.exports=r,r.prototype.on=r.prototype.addEventListener=function(t,n){return this._callbacks=this._callbacks||{},(this._callbacks["$"+t]=this._callbacks["$"+t]||[]).push(n),this},r.prototype.once=function(t,n){function e(){this.off(t,e),n.apply(this,arguments)}return e.fn=n,this.on(t,e),this},r.prototype.off=r.prototype.removeListener=r.prototype.removeAllListeners=r.prototype.removeEventListener=function(t,n){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var e,r=this._callbacks["$"+t];if(!r)return this;if(1==arguments.length)return delete this._callbacks["$"+t],this;for(var o=0;o<r.length;o++)if((e=r[o])===n||e.fn===n){r.splice(o,1);break}return this},r.prototype.emit=function(t){this._callbacks=this._callbacks||{};var n=[].slice.call(arguments,1),e=this._callbacks["$"+t];if(e)for(var r=0,o=(e=e.slice(0)).length;r<o;++r)e[r].apply(this,n);return this},r.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks["$"+t]||[]},r.prototype.hasListeners=function(t){return!!this.listeners(t).length}},function(t,n,e){"use strict";var r=e(81);function o(t){if(t)return function(t){for(var n in o.prototype)t[n]=o.prototype[n];return t}(t)}t.exports=o,o.prototype.clearTimeout=function(){return clearTimeout(this._timer),clearTimeout(this._responseTimeoutTimer),delete this._timer,delete this._responseTimeoutTimer,this},o.prototype.parse=function(t){return this._parser=t,this},o.prototype.responseType=function(t){return this._responseType=t,this},o.prototype.serialize=function(t){return this._serializer=t,this},o.prototype.timeout=function(t){if(!t||"object"!=typeof t)return this._timeout=t,this._responseTimeout=0,this;for(var n in t)switch(n){case"deadline":this._timeout=t.deadline;break;case"response":this._responseTimeout=t.response;break;default:console.warn("Unknown timeout option",n)}return this},o.prototype.retry=function(t,n){return 0!==arguments.length&&!0!==t||(t=1),t<=0&&(t=0),this._maxRetries=t,this._retries=0,this._retryCallback=n,this};var i=["ECONNRESET","ETIMEDOUT","EADDRINFO","ESOCKETTIMEDOUT"];o.prototype._shouldRetry=function(t,n){if(!this._maxRetries||this._retries++>=this._maxRetries)return!1;if(this._retryCallback)try{var e=this._retryCallback(t,n);if(!0===e)return!0;if(!1===e)return!1}catch(t){console.error(t)}if(n&&n.status&&n.status>=500&&501!=n.status)return!0;if(t){if(t.code&&~i.indexOf(t.code))return!0;if(t.timeout&&"ECONNABORTED"==t.code)return!0;if(t.crossDomain)return!0}return!1},o.prototype._retry=function(){return this.clearTimeout(),this.req&&(this.req=null,this.req=this.request()),this._aborted=!1,this.timedout=!1,this._end()},o.prototype.then=function(t,n){if(!this._fullfilledPromise){var e=this;this._endCalled&&console.warn("Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises"),this._fullfilledPromise=new Promise((function(t,n){e.end((function(e,r){e?n(e):t(r)}))}))}return this._fullfilledPromise.then(t,n)},o.prototype.catch=function(t){return this.then(void 0,t)},o.prototype.use=function(t){return t(this),this},o.prototype.ok=function(t){if("function"!=typeof t)throw Error("Callback required");return this._okCallback=t,this},o.prototype._isResponseOK=function(t){return!!t&&(this._okCallback?this._okCallback(t):t.status>=200&&t.status<300)},o.prototype.get=function(t){return this._header[t.toLowerCase()]},o.prototype.getHeader=o.prototype.get,o.prototype.set=function(t,n){if(r(t)){for(var e in t)this.set(e,t[e]);return this}return this._header[t.toLowerCase()]=n,this.header[t]=n,this},o.prototype.unset=function(t){return delete this._header[t.toLowerCase()],delete this.header[t],this},o.prototype.field=function(t,n){if(null==t)throw new Error(".field(name, val) name can not be empty");if(this._data&&console.error(".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()"),r(t)){for(var e in t)this.field(e,t[e]);return this}if(Array.isArray(n)){for(var o in n)this.field(t,n[o]);return this}if(null==n)throw new Error(".field(name, val) val can not be empty");return"boolean"==typeof n&&(n=""+n),this._getFormData().append(t,n),this},o.prototype.abort=function(){return this._aborted?this:(this._aborted=!0,this.xhr&&this.xhr.abort(),this.req&&this.req.abort(),this.clearTimeout(),this.emit("abort"),this)},o.prototype._auth=function(t,n,e,r){switch(e.type){case"basic":this.set("Authorization","Basic "+r(t+":"+n));break;case"auto":this.username=t,this.password=n;break;case"bearer":this.set("Authorization","Bearer "+t)}return this},o.prototype.withCredentials=function(t){return null==t&&(t=!0),this._withCredentials=t,this},o.prototype.redirects=function(t){return this._maxRedirects=t,this},o.prototype.maxResponseSize=function(t){if("number"!=typeof t)throw TypeError("Invalid argument");return this._maxResponseSize=t,this},o.prototype.toJSON=function(){return{method:this.method,url:this.url,data:this._data,headers:this._header}},o.prototype.send=function(t){var n=r(t),e=this._header["content-type"];if(this._formData&&console.error(".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"),n&&!this._data)Array.isArray(t)?this._data=[]:this._isHost(t)||(this._data={});else if(t&&this._data&&this._isHost(this._data))throw Error("Can't merge these send calls");if(n&&r(this._data))for(var o in t)this._data[o]=t[o];else"string"==typeof t?(e||this.type("form"),e=this._header["content-type"],this._data="application/x-www-form-urlencoded"==e?this._data?this._data+"&"+t:t:(this._data||"")+t):this._data=t;return!n||this._isHost(t)?this:(e||this.type("json"),this)},o.prototype.sortQuery=function(t){return this._sort=void 0===t||t,this},o.prototype._finalizeQueryString=function(){var t=this._query.join("&");if(t&&(this.url+=(this.url.indexOf("?")>=0?"&":"?")+t),this._query.length=0,this._sort){var n=this.url.indexOf("?");if(n>=0){var e=this.url.substring(n+1).split("&");"function"==typeof this._sort?e.sort(this._sort):e.sort(),this.url=this.url.substring(0,n)+"?"+e.join("&")}}},o.prototype._appendQueryString=function(){console.trace("Unsupported")},o.prototype._timeoutError=function(t,n,e){if(!this._aborted){var r=new Error(t+n+"ms exceeded");r.timeout=n,r.code="ECONNABORTED",r.errno=e,this.timedout=!0,this.abort(),this.callback(r)}},o.prototype._setTimeouts=function(){var t=this;this._timeout&&!this._timer&&(this._timer=setTimeout((function(){t._timeoutError("Timeout of ",t._timeout,"ETIME")}),this._timeout)),this._responseTimeout&&!this._responseTimeoutTimer&&(this._responseTimeoutTimer=setTimeout((function(){t._timeoutError("Response timeout of ",t._responseTimeout,"ETIMEDOUT")}),this._responseTimeout))}},function(t,n,e){"use strict";var r=e(230);function o(t){if(t)return function(t){for(var n in o.prototype)t[n]=o.prototype[n];return t}(t)}t.exports=o,o.prototype.get=function(t){return this.header[t.toLowerCase()]},o.prototype._setHeaderProperties=function(t){var n=t["content-type"]||"";this.type=r.type(n);var e=r.params(n);for(var o in e)this[o]=e[o];this.links={};try{t.link&&(this.links=r.parseLinks(t.link))}catch(t){}},o.prototype._setStatusProperties=function(t){var n=t/100|0;this.status=this.statusCode=t,this.statusType=n,this.info=1==n,this.ok=2==n,this.redirect=3==n,this.clientError=4==n,this.serverError=5==n,this.error=(4==n||5==n)&&this.toError(),this.created=201==t,this.accepted=202==t,this.noContent=204==t,this.badRequest=400==t,this.unauthorized=401==t,this.notAcceptable=406==t,this.forbidden=403==t,this.notFound=404==t,this.unprocessableEntity=422==t}},function(t,n,e){"use strict";n.type=function(t){return t.split(/ *; */).shift()},n.params=function(t){return t.split(/ *; */).reduce((function(t,n){var e=n.split(/ *= */),r=e.shift(),o=e.shift();return r&&o&&(t[r]=o),t}),{})},n.parseLinks=function(t){return t.split(/ *, */).reduce((function(t,n){var e=n.split(/ *; */),r=e[0].slice(1,-1);return t[e[1].split(/ *= */)[1].slice(1,-1)]=r,t}),{})},n.cleanHeader=function(t,n){return delete t["content-type"],delete t["content-length"],delete t["transfer-encoding"],delete t.host,n&&(delete t.authorization,delete t.cookie),t}},function(t,n){function e(){this._defaults=[]}["use","on","once","set","query","type","accept","auth","withCredentials","sortQuery","retry","ok","redirects","timeout","buffer","serialize","parse","ca","key","pfx","cert"].forEach((function(t){e.prototype[t]=function(){return this._defaults.push({fn:t,arguments:arguments}),this}})),e.prototype._setDefaults=function(t){this._defaults.forEach((function(n){t[n.fn].apply(t,n.arguments)}))},t.exports=e},function(t,n,e){(function(t){var r=void 0!==t&&t||"undefined"!=typeof self&&self||window,o=Function.prototype.apply;function i(t,n){this._id=t,this._clearFn=n}n.setTimeout=function(){return new i(o.call(setTimeout,r,arguments),clearTimeout)},n.setInterval=function(){return new i(o.call(setInterval,r,arguments),clearInterval)},n.clearTimeout=n.clearInterval=function(t){t&&t.close()},i.prototype.unref=i.prototype.ref=function(){},i.prototype.close=function(){this._clearFn.call(r,this._id)},n.enroll=function(t,n){clearTimeout(t._idleTimeoutId),t._idleTimeout=n},n.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},n._unrefActive=n.active=function(t){clearTimeout(t._idleTimeoutId);var n=t._idleTimeout;n>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),n))},e(233),n.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,n.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,e(11))},function(t,n,e){(function(t,n){!function(t,e){"use strict";if(!t.setImmediate){var r,o,i,u,a,c=1,s={},f=!1,l=t.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(t);p=p&&p.setTimeout?p:t,"[object process]"==={}.toString.call(t.process)?r=function(t){n.nextTick((function(){d(t)}))}:function(){if(t.postMessage&&!t.importScripts){var n=!0,e=t.onmessage;return t.onmessage=function(){n=!1},t.postMessage("","*"),t.onmessage=e,n}}()?(u="setImmediate$"+Math.random()+"$",a=function(n){n.source===t&&"string"==typeof n.data&&0===n.data.indexOf(u)&&d(+n.data.slice(u.length))},t.addEventListener?t.addEventListener("message",a,!1):t.attachEvent("onmessage",a),r=function(n){t.postMessage(u+n,"*")}):t.MessageChannel?((i=new MessageChannel).port1.onmessage=function(t){d(t.data)},r=function(t){i.port2.postMessage(t)}):l&&"onreadystatechange"in l.createElement("script")?(o=l.documentElement,r=function(t){var n=l.createElement("script");n.onreadystatechange=function(){d(t),n.onreadystatechange=null,o.removeChild(n),n=null},o.appendChild(n)}):r=function(t){setTimeout(d,0,t)},p.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var n=new Array(arguments.length-1),e=0;e<n.length;e++)n[e]=arguments[e+1];var o={callback:t,args:n};return s[c]=o,r(c),c++},p.clearImmediate=h}function h(t){delete s[t]}function d(t){if(f)setTimeout(d,0,t);else{var n=s[t];if(n){f=!0;try{!function(t){var n=t.callback,r=t.args;switch(r.length){case 0:n();break;case 1:n(r[0]);break;case 2:n(r[0],r[1]);break;case 3:n(r[0],r[1],r[2]);break;default:n.apply(e,r)}}(n)}finally{h(t),f=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,e(11),e(13))},function(t,n,e){"use strict";n.decode=n.parse=e(235),n.encode=n.stringify=e(236)},function(t,n,e){"use strict";function r(t,n){return Object.prototype.hasOwnProperty.call(t,n)}t.exports=function(t,n,e,i){n=n||"&",e=e||"=";var u={};if("string"!=typeof t||0===t.length)return u;var a=/\+/g;t=t.split(n);var c=1e3;i&&"number"==typeof i.maxKeys&&(c=i.maxKeys);var s=t.length;c>0&&s>c&&(s=c);for(var f=0;f<s;++f){var l,p,h,d,v=t[f].replace(a,"%20"),y=v.indexOf(e);y>=0?(l=v.substr(0,y),p=v.substr(y+1)):(l=v,p=""),h=decodeURIComponent(l),d=decodeURIComponent(p),r(u,h)?o(u[h])?u[h].push(d):u[h]=[u[h],d]:u[h]=d}return u};var o=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},function(t,n,e){"use strict";var r=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}};t.exports=function(t,n,e,a){return n=n||"&",e=e||"=",null===t&&(t=void 0),"object"==typeof t?i(u(t),(function(u){var a=encodeURIComponent(r(u))+e;return o(t[u])?i(t[u],(function(t){return a+encodeURIComponent(r(t))})).join(n):a+encodeURIComponent(r(t[u]))})).join(n):a?encodeURIComponent(r(a))+e+encodeURIComponent(r(t)):""};var o=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};function i(t,n){if(t.map)return t.map(n);for(var e=[],r=0;r<t.length;r++)e.push(n(t[r],r));return e}var u=Object.keys||function(t){var n=[];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&n.push(e);return n}},function(t,n,e){"use strict";t.exports=t=>{const n=/^\\\\\?\\/.test(t),e=/[^\u0000-\u0080]+/.test(t);return n||e?t:t.replace(/\\/g,"/")}},function(t,n,e){
/** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */
!function(t){"use strict";function n(){for(var t=arguments.length,n=Array(t),e=0;e<t;e++)n[e]=arguments[e];if(n.length>1){n[0]=n[0].slice(0,-1);for(var r=n.length-1,o=1;o<r;++o)n[o]=n[o].slice(1,-1);return n[r]=n[r].slice(1),n.join("")}return n[0]}function e(t){return"(?:"+t+")"}function r(t){return void 0===t?"undefined":null===t?"null":Object.prototype.toString.call(t).split(" ").pop().split("]").shift().toLowerCase()}function o(t){return t.toUpperCase()}function i(t){var r=n("[0-9]","[A-Fa-f]"),o=e(e("%[EFef]"+r+"%"+r+r+"%"+r+r)+"|"+e("%[89A-Fa-f]"+r+"%"+r+r)+"|"+e("%"+r+r)),i="[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]",u=n("[\\:\\/\\?\\#\\[\\]\\@]",i),a=t?"[\\uE000-\\uF8FF]":"[]",c=n("[A-Za-z]","[0-9]","[\\-\\.\\_\\~]",t?"[\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]":"[]"),s=e("[A-Za-z]"+n("[A-Za-z]","[0-9]","[\\+\\-\\.]")+"*"),f=e(e(o+"|"+n(c,i,"[\\:]"))+"*"),l=(e(e("25[0-5]")+"|"+e("2[0-4][0-9]")+"|"+e("1[0-9][0-9]")+"|"+e("[1-9][0-9]")+"|[0-9]"),e(e("25[0-5]")+"|"+e("2[0-4][0-9]")+"|"+e("1[0-9][0-9]")+"|"+e("0?[1-9][0-9]")+"|0?0?[0-9]")),p=e(l+"\\."+l+"\\."+l+"\\."+l),h=e(r+"{1,4}"),d=e(e(h+"\\:"+h)+"|"+p),v=e(e(h+"\\:")+"{6}"+d),y=e("\\:\\:"+e(h+"\\:")+"{5}"+d),_=e(e(h)+"?\\:\\:"+e(h+"\\:")+"{4}"+d),g=e(e(e(h+"\\:")+"{0,1}"+h)+"?\\:\\:"+e(h+"\\:")+"{3}"+d),b=e(e(e(h+"\\:")+"{0,2}"+h)+"?\\:\\:"+e(h+"\\:")+"{2}"+d),m=e(e(e(h+"\\:")+"{0,3}"+h)+"?\\:\\:"+h+"\\:"+d),w=e(e(e(h+"\\:")+"{0,4}"+h)+"?\\:\\:"+d),x=e(e(e(h+"\\:")+"{0,5}"+h)+"?\\:\\:"+h),j=e(e(e(h+"\\:")+"{0,6}"+h)+"?\\:\\:"),E=e([v,y,_,g,b,m,w,x,j].join("|")),O=e(e(c+"|"+o)+"+"),A=(e(E+"\\%25"+O),e(E+e("\\%25|\\%(?!"+r+"{2})")+O)),T=e("[vV]"+r+"+\\."+n(c,i,"[\\:]")+"+"),C=e("\\["+e(A+"|"+E+"|"+T)+"\\]"),S=e(e(o+"|"+n(c,i))+"*"),I=e(C+"|"+p+"(?!"+S+")|"+S),P=e("[0-9]*"),k=e(e(f+"@")+"?"+I+e("\\:"+P)+"?"),R=e(o+"|"+n(c,i,"[\\:\\@]")),D=e(R+"*"),U=e(R+"+"),N=e(e(o+"|"+n(c,i,"[\\@]"))+"+"),z=e(e("\\/"+D)+"*"),F=e("\\/"+e(U+z)+"?"),L=e(N+z),q=e(U+z),M="(?!"+R+")",$=(e(z+"|"+F+"|"+L+"|"+q+"|"+M),e(e(R+"|"+n("[\\/\\?]",a))+"*")),B=e(e(R+"|[\\/\\?]")+"*"),H=e(e("\\/\\/"+k+z)+"|"+F+"|"+q+"|"+M),W=e(s+"\\:"+H+e("\\?"+$)+"?"+e("\\#"+B)+"?"),V=e(e("\\/\\/"+k+z)+"|"+F+"|"+L+"|"+M),G=e(V+e("\\?"+$)+"?"+e("\\#"+B)+"?");return e(W+"|"+G),e(s+"\\:"+H+e("\\?"+$)+"?"),e(e("\\/\\/("+e("("+f+")@")+"?("+I+")"+e("\\:("+P+")")+"?)")+"?("+z+"|"+F+"|"+q+"|"+M+")"),e("\\?("+$+")"),e("\\#("+B+")"),e(e("\\/\\/("+e("("+f+")@")+"?("+I+")"+e("\\:("+P+")")+"?)")+"?("+z+"|"+F+"|"+L+"|"+M+")"),e("\\?("+$+")"),e("\\#("+B+")"),e(e("\\/\\/("+e("("+f+")@")+"?("+I+")"+e("\\:("+P+")")+"?)")+"?("+z+"|"+F+"|"+q+"|"+M+")"),e("\\?("+$+")"),e("\\#("+B+")"),e("("+f+")@"),e("\\:("+P+")"),{NOT_SCHEME:new RegExp(n("[^]","[A-Za-z]","[0-9]","[\\+\\-\\.]"),"g"),NOT_USERINFO:new RegExp(n("[^\\%\\:]",c,i),"g"),NOT_HOST:new RegExp(n("[^\\%\\[\\]\\:]",c,i),"g"),NOT_PATH:new RegExp(n("[^\\%\\/\\:\\@]",c,i),"g"),NOT_PATH_NOSCHEME:new RegExp(n("[^\\%\\/\\@]",c,i),"g"),NOT_QUERY:new RegExp(n("[^\\%]",c,i,"[\\:\\@\\/\\?]",a),"g"),NOT_FRAGMENT:new RegExp(n("[^\\%]",c,i,"[\\:\\@\\/\\?]"),"g"),ESCAPE:new RegExp(n("[^]",c,i),"g"),UNRESERVED:new RegExp(c,"g"),OTHER_CHARS:new RegExp(n("[^\\%]",c,u),"g"),PCT_ENCODED:new RegExp(o,"g"),IPV4ADDRESS:new RegExp("^("+p+")$"),IPV6ADDRESS:new RegExp("^\\[?("+E+")"+e(e("\\%25|\\%(?!"+r+"{2})")+"("+O+")")+"?\\]?$")}}var u=i(!1),a=i(!0),c=function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return function(t,n){var e=[],r=!0,o=!1,i=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(e.push(u.value),!n||e.length!==n);r=!0);}catch(t){o=!0,i=t}finally{try{!r&&a.return&&a.return()}finally{if(o)throw i}}return e}(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")},s=2147483647,f=/^xn--/,l=/[^\0-\x7E]/,p=/[\x2E\u3002\uFF0E\uFF61]/g,h={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},d=Math.floor,v=String.fromCharCode;function y(t){throw new RangeError(h[t])}function _(t,n){var e=t.split("@"),r="";e.length>1&&(r=e[0]+"@",t=e[1]);var o=function(t,n){for(var e=[],r=t.length;r--;)e[r]=n(t[r]);return e}((t=t.replace(p,".")).split("."),n).join(".");return r+o}function g(t){for(var n=[],e=0,r=t.length;e<r;){var o=t.charCodeAt(e++);if(o>=55296&&o<=56319&&e<r){var i=t.charCodeAt(e++);56320==(64512&i)?n.push(((1023&o)<<10)+(1023&i)+65536):(n.push(o),e--)}else n.push(o)}return n}var b=function(t,n){return t+22+75*(t<26)-((0!=n)<<5)},m=function(t,n,e){var r=0;for(t=e?d(t/700):t>>1,t+=d(t/n);t>455;r+=36)t=d(t/35);return d(r+36*t/(t+38))},w=function(t){var n,e=[],r=t.length,o=0,i=128,u=72,a=t.lastIndexOf("-");a<0&&(a=0);for(var c=0;c<a;++c)t.charCodeAt(c)>=128&&y("not-basic"),e.push(t.charCodeAt(c));for(var f=a>0?a+1:0;f<r;){for(var l=o,p=1,h=36;;h+=36){f>=r&&y("invalid-input");var v=(n=t.charCodeAt(f++))-48<10?n-22:n-65<26?n-65:n-97<26?n-97:36;(v>=36||v>d((s-o)/p))&&y("overflow"),o+=v*p;var _=h<=u?1:h>=u+26?26:h-u;if(v<_)break;var g=36-_;p>d(s/g)&&y("overflow"),p*=g}var b=e.length+1;u=m(o-l,b,0==l),d(o/b)>s-i&&y("overflow"),i+=d(o/b),o%=b,e.splice(o++,0,i)}return String.fromCodePoint.apply(String,e)},x=function(t){var n=[],e=(t=g(t)).length,r=128,o=0,i=72,u=!0,a=!1,c=void 0;try{for(var f,l=t[Symbol.iterator]();!(u=(f=l.next()).done);u=!0){var p=f.value;p<128&&n.push(v(p))}}catch(t){a=!0,c=t}finally{try{!u&&l.return&&l.return()}finally{if(a)throw c}}var h=n.length,_=h;for(h&&n.push("-");_<e;){var w=s,x=!0,j=!1,E=void 0;try{for(var O,A=t[Symbol.iterator]();!(x=(O=A.next()).done);x=!0){var T=O.value;T>=r&&T<w&&(w=T)}}catch(t){j=!0,E=t}finally{try{!x&&A.return&&A.return()}finally{if(j)throw E}}var C=_+1;w-r>d((s-o)/C)&&y("overflow"),o+=(w-r)*C,r=w;var S=!0,I=!1,P=void 0;try{for(var k,R=t[Symbol.iterator]();!(S=(k=R.next()).done);S=!0){var D=k.value;if(D<r&&++o>s&&y("overflow"),D==r){for(var U=o,N=36;;N+=36){var z=N<=i?1:N>=i+26?26:N-i;if(U<z)break;var F=U-z,L=36-z;n.push(v(b(z+F%L,0))),U=d(F/L)}n.push(v(b(U,0))),i=m(o,C,_==h),o=0,++_}}}catch(t){I=!0,P=t}finally{try{!S&&R.return&&R.return()}finally{if(I)throw P}}++o,++r}return n.join("")},j={version:"2.1.0",ucs2:{decode:g,encode:function(t){return String.fromCodePoint.apply(String,function(t){if(Array.isArray(t)){for(var n=0,e=Array(t.length);n<t.length;n++)e[n]=t[n];return e}return Array.from(t)}(t))}},decode:w,encode:x,toASCII:function(t){return _(t,(function(t){return l.test(t)?"xn--"+x(t):t}))},toUnicode:function(t){return _(t,(function(t){return f.test(t)?w(t.slice(4).toLowerCase()):t}))}},E={};function O(t){var n=t.charCodeAt(0);return n<16?"%0"+n.toString(16).toUpperCase():n<128?"%"+n.toString(16).toUpperCase():n<2048?"%"+(n>>6|192).toString(16).toUpperCase()+"%"+(63&n|128).toString(16).toUpperCase():"%"+(n>>12|224).toString(16).toUpperCase()+"%"+(n>>6&63|128).toString(16).toUpperCase()+"%"+(63&n|128).toString(16).toUpperCase()}function A(t){for(var n="",e=0,r=t.length;e<r;){var o=parseInt(t.substr(e+1,2),16);if(o<128)n+=String.fromCharCode(o),e+=3;else if(o>=194&&o<224){if(r-e>=6){var i=parseInt(t.substr(e+4,2),16);n+=String.fromCharCode((31&o)<<6|63&i)}else n+=t.substr(e,6);e+=6}else if(o>=224){if(r-e>=9){var u=parseInt(t.substr(e+4,2),16),a=parseInt(t.substr(e+7,2),16);n+=String.fromCharCode((15&o)<<12|(63&u)<<6|63&a)}else n+=t.substr(e,9);e+=9}else n+=t.substr(e,3),e+=3}return n}function T(t,n){function e(t){var e=A(t);return e.match(n.UNRESERVED)?e:t}return t.scheme&&(t.scheme=String(t.scheme).replace(n.PCT_ENCODED,e).toLowerCase().replace(n.NOT_SCHEME,"")),void 0!==t.userinfo&&(t.userinfo=String(t.userinfo).replace(n.PCT_ENCODED,e).replace(n.NOT_USERINFO,O).replace(n.PCT_ENCODED,o)),void 0!==t.host&&(t.host=String(t.host).replace(n.PCT_ENCODED,e).toLowerCase().replace(n.NOT_HOST,O).replace(n.PCT_ENCODED,o)),void 0!==t.path&&(t.path=String(t.path).replace(n.PCT_ENCODED,e).replace(t.scheme?n.NOT_PATH:n.NOT_PATH_NOSCHEME,O).replace(n.PCT_ENCODED,o)),void 0!==t.query&&(t.query=String(t.query).replace(n.PCT_ENCODED,e).replace(n.NOT_QUERY,O).replace(n.PCT_ENCODED,o)),void 0!==t.fragment&&(t.fragment=String(t.fragment).replace(n.PCT_ENCODED,e).replace(n.NOT_FRAGMENT,O).replace(n.PCT_ENCODED,o)),t}function C(t){return t.replace(/^0*(.*)/,"$1")||"0"}function S(t,n){var e=t.match(n.IPV4ADDRESS)||[],r=c(e,2)[1];return r?r.split(".").map(C).join("."):t}function I(t,n){var e=t.match(n.IPV6ADDRESS)||[],r=c(e,3),o=r[1],i=r[2];if(o){for(var u=o.toLowerCase().split("::").reverse(),a=c(u,2),s=a[0],f=a[1],l=f?f.split(":").map(C):[],p=s.split(":").map(C),h=n.IPV4ADDRESS.test(p[p.length-1]),d=h?7:8,v=p.length-d,y=Array(d),_=0;_<d;++_)y[_]=l[_]||p[v+_]||"";h&&(y[d-1]=S(y[d-1],n));var g=y.reduce((function(t,n,e){if(!n||"0"===n){var r=t[t.length-1];r&&r.index+r.length===e?r.length++:t.push({index:e,length:1})}return t}),[]).sort((function(t,n){return n.length-t.length}))[0],b=void 0;if(g&&g.length>1){var m=y.slice(0,g.index),w=y.slice(g.index+g.length);b=m.join(":")+"::"+w.join(":")}else b=y.join(":");return i&&(b+="%"+i),b}return t}var P=/^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?(\[[^\/?#\]]+\]|[^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#((?:.|\n|\r)*))?/i,k=void 0==="".match(/(){0}/)[1];function R(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e={},r=!1!==n.iri?a:u;"suffix"===n.reference&&(t=(n.scheme?n.scheme+":":"")+"//"+t);var o=t.match(P);if(o){k?(e.scheme=o[1],e.userinfo=o[3],e.host=o[4],e.port=parseInt(o[5],10),e.path=o[6]||"",e.query=o[7],e.fragment=o[8],isNaN(e.port)&&(e.port=o[5])):(e.scheme=o[1]||void 0,e.userinfo=-1!==t.indexOf("@")?o[3]:void 0,e.host=-1!==t.indexOf("//")?o[4]:void 0,e.port=parseInt(o[5],10),e.path=o[6]||"",e.query=-1!==t.indexOf("?")?o[7]:void 0,e.fragment=-1!==t.indexOf("#")?o[8]:void 0,isNaN(e.port)&&(e.port=t.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/)?o[4]:void 0)),e.host&&(e.host=I(S(e.host,r),r)),void 0!==e.scheme||void 0!==e.userinfo||void 0!==e.host||void 0!==e.port||e.path||void 0!==e.query?void 0===e.scheme?e.reference="relative":void 0===e.fragment?e.reference="absolute":e.reference="uri":e.reference="same-document",n.reference&&"suffix"!==n.reference&&n.reference!==e.reference&&(e.error=e.error||"URI is not a "+n.reference+" reference.");var i=E[(n.scheme||e.scheme||"").toLowerCase()];if(n.unicodeSupport||i&&i.unicodeSupport)T(e,r);else{if(e.host&&(n.domainHost||i&&i.domainHost))try{e.host=j.toASCII(e.host.replace(r.PCT_ENCODED,A).toLowerCase())}catch(t){e.error=e.error||"Host's domain name can not be converted to ASCII via punycode: "+t}T(e,u)}i&&i.parse&&i.parse(e,n)}else e.error=e.error||"URI can not be parsed.";return e}var D=/^\.\.?\//,U=/^\/\.(\/|$)/,N=/^\/\.\.(\/|$)/,z=/^\/?(?:.|\n)*?(?=\/|$)/;function F(t){for(var n=[];t.length;)if(t.match(D))t=t.replace(D,"");else if(t.match(U))t=t.replace(U,"/");else if(t.match(N))t=t.replace(N,"/"),n.pop();else if("."===t||".."===t)t="";else{var e=t.match(z);if(!e)throw new Error("Unexpected dot segment condition");var r=e[0];t=t.slice(r.length),n.push(r)}return n.join("")}function L(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=n.iri?a:u,r=[],o=E[(n.scheme||t.scheme||"").toLowerCase()];if(o&&o.serialize&&o.serialize(t,n),t.host)if(e.IPV6ADDRESS.test(t.host));else if(n.domainHost||o&&o.domainHost)try{t.host=n.iri?j.toUnicode(t.host):j.toASCII(t.host.replace(e.PCT_ENCODED,A).toLowerCase())}catch(e){t.error=t.error||"Host's domain name can not be converted to "+(n.iri?"Unicode":"ASCII")+" via punycode: "+e}T(t,e),"suffix"!==n.reference&&t.scheme&&(r.push(t.scheme),r.push(":"));var i=function(t,n){var e=!1!==n.iri?a:u,r=[];return void 0!==t.userinfo&&(r.push(t.userinfo),r.push("@")),void 0!==t.host&&r.push(I(S(String(t.host),e),e).replace(e.IPV6ADDRESS,(function(t,n,e){return"["+n+(e?"%25"+e:"")+"]"}))),"number"==typeof t.port&&(r.push(":"),r.push(t.port.toString(10))),r.length?r.join(""):void 0}(t,n);if(void 0!==i&&("suffix"!==n.reference&&r.push("//"),r.push(i),t.path&&"/"!==t.path.charAt(0)&&r.push("/")),void 0!==t.path){var c=t.path;n.absolutePath||o&&o.absolutePath||(c=F(c)),void 0===i&&(c=c.replace(/^\/\//,"/%2F")),r.push(c)}return void 0!==t.query&&(r.push("?"),r.push(t.query)),void 0!==t.fragment&&(r.push("#"),r.push(t.fragment)),r.join("")}function q(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r={};return arguments[3]||(t=R(L(t,e),e),n=R(L(n,e),e)),!(e=e||{}).tolerant&&n.scheme?(r.scheme=n.scheme,r.userinfo=n.userinfo,r.host=n.host,r.port=n.port,r.path=F(n.path||""),r.query=n.query):(void 0!==n.userinfo||void 0!==n.host||void 0!==n.port?(r.userinfo=n.userinfo,r.host=n.host,r.port=n.port,r.path=F(n.path||""),r.query=n.query):(n.path?("/"===n.path.charAt(0)?r.path=F(n.path):(void 0===t.userinfo&&void 0===t.host&&void 0===t.port||t.path?t.path?r.path=t.path.slice(0,t.path.lastIndexOf("/")+1)+n.path:r.path=n.path:r.path="/"+n.path,r.path=F(r.path)),r.query=n.query):(r.path=t.path,void 0!==n.query?r.query=n.query:r.query=t.query),r.userinfo=t.userinfo,r.host=t.host,r.port=t.port),r.scheme=t.scheme),r.fragment=n.fragment,r}function M(t,n){return t&&t.toString().replace(n&&n.iri?a.PCT_ENCODED:u.PCT_ENCODED,A)}var $={scheme:"http",domainHost:!0,parse:function(t,n){return t.host||(t.error=t.error||"HTTP URIs must have a host."),t},serialize:function(t,n){return t.port!==("https"!==String(t.scheme).toLowerCase()?80:443)&&""!==t.port||(t.port=void 0),t.path||(t.path="/"),t}},B={scheme:"https",domainHost:$.domainHost,parse:$.parse,serialize:$.serialize},H={},W="[A-Za-z0-9\\-\\.\\_\\~\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]",V="[0-9A-Fa-f]",G=e(e("%[EFef][0-9A-Fa-f]%"+V+V+"%"+V+V)+"|"+e("%[89A-Fa-f][0-9A-Fa-f]%"+V+V)+"|"+e("%"+V+V)),J=n("[\\!\\$\\%\\'\\(\\)\\*\\+\\,\\-\\.0-9\\<\\>A-Z\\x5E-\\x7E]",'[\\"\\\\]'),Z=new RegExp(W,"g"),X=new RegExp(G,"g"),K=new RegExp(n("[^]","[A-Za-z0-9\\!\\$\\%\\'\\*\\+\\-\\^\\_\\`\\{\\|\\}\\~]","[\\.]",'[\\"]',J),"g"),Y=new RegExp(n("[^]",W,"[\\!\\$\\'\\(\\)\\*\\+\\,\\;\\:\\@]"),"g"),Q=Y;function tt(t){var n=A(t);return n.match(Z)?n:t}var nt={scheme:"mailto",parse:function(t,n){var e=t,r=e.to=e.path?e.path.split(","):[];if(e.path=void 0,e.query){for(var o=!1,i={},u=e.query.split("&"),a=0,c=u.length;a<c;++a){var s=u[a].split("=");switch(s[0]){case"to":for(var f=s[1].split(","),l=0,p=f.length;l<p;++l)r.push(f[l]);break;case"subject":e.subject=M(s[1],n);break;case"body":e.body=M(s[1],n);break;default:o=!0,i[M(s[0],n)]=M(s[1],n)}}o&&(e.headers=i)}e.query=void 0;for(var h=0,d=r.length;h<d;++h){var v=r[h].split("@");if(v[0]=M(v[0]),n.unicodeSupport)v[1]=M(v[1],n).toLowerCase();else try{v[1]=j.toASCII(M(v[1],n).toLowerCase())}catch(t){e.error=e.error||"Email address's domain name can not be converted to ASCII via punycode: "+t}r[h]=v.join("@")}return e},serialize:function(t,n){var e,r=t,i=null!=(e=t.to)?e instanceof Array?e:"number"!=typeof e.length||e.split||e.setInterval||e.call?[e]:Array.prototype.slice.call(e):[];if(i){for(var u=0,a=i.length;u<a;++u){var c=String(i[u]),s=c.lastIndexOf("@"),f=c.slice(0,s).replace(X,tt).replace(X,o).replace(K,O),l=c.slice(s+1);try{l=n.iri?j.toUnicode(l):j.toASCII(M(l,n).toLowerCase())}catch(t){r.error=r.error||"Email address's domain name can not be converted to "+(n.iri?"Unicode":"ASCII")+" via punycode: "+t}i[u]=f+"@"+l}r.path=i.join(",")}var p=t.headers=t.headers||{};t.subject&&(p.subject=t.subject),t.body&&(p.body=t.body);var h=[];for(var d in p)p[d]!==H[d]&&h.push(d.replace(X,tt).replace(X,o).replace(Y,O)+"="+p[d].replace(X,tt).replace(X,o).replace(Q,O));return h.length&&(r.query=h.join("&")),r}},et=/^([^\:]+)\:(.*)/,rt={scheme:"urn",parse:function(t,n){var e=t.path&&t.path.match(et),r=t;if(e){var o=n.scheme||r.scheme||"urn",i=e[1].toLowerCase(),u=e[2],a=o+":"+(n.nid||i),c=E[a];r.nid=i,r.nss=u,r.path=void 0,c&&(r=c.parse(r,n))}else r.error=r.error||"URN can not be parsed.";return r},serialize:function(t,n){var e=n.scheme||t.scheme||"urn",r=t.nid,o=e+":"+(n.nid||r),i=E[o];i&&(t=i.serialize(t,n));var u=t,a=t.nss;return u.path=(r||n.nid)+":"+a,u}},ot=/^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/,it={scheme:"urn:uuid",parse:function(t,n){var e=t;return e.uuid=e.nss,e.nss=void 0,n.tolerant||e.uuid&&e.uuid.match(ot)||(e.error=e.error||"UUID is not valid."),e},serialize:function(t,n){var e=t;return e.nss=(t.uuid||"").toLowerCase(),e}};E[$.scheme]=$,E[B.scheme]=B,E[nt.scheme]=nt,E[rt.scheme]=rt,E[it.scheme]=it,t.SCHEMES=E,t.pctEncChar=O,t.pctDecChars=A,t.parse=R,t.removeDotSegments=F,t.serialize=L,t.resolveComponents=q,t.resolve=function(t,n,e){var r=function(t,n){var e={scheme:"null"};if(n)for(var r in n)e[r]=n[r];return e}(0,e);return L(q(R(t,r),R(n,r),r,!0),r)},t.normalize=function(t,n){return"string"==typeof t?t=L(R(t,n),n):"object"===r(t)&&(t=R(L(t,n),n)),t},t.equal=function(t,n,e){return"string"==typeof t?t=L(R(t,e),e):"object"===r(t)&&(t=L(t,e)),"string"==typeof n?n=L(R(n,e),e):"object"===r(n)&&(n=L(n,e)),t===n},t.escapeComponent=function(t,n){return t&&t.toString().replace(n&&n.iri?a.ESCAPE:u.ESCAPE,O)},t.unescapeComponent=M,Object.defineProperty(t,"__esModule",{value:!0})}(n)},function(t,n){var e=/~/,r=/~[01]/g;function o(t){switch(t){case"~1":return"/";case"~0":return"~"}throw new Error("Invalid tilde escape: "+t)}function i(t){return e.test(t)?t.replace(r,o):t}function u(t){if("string"==typeof t){if(""===(t=t.split("/"))[0])return t;throw new Error("Invalid JSON pointer.")}if(Array.isArray(t))return t;throw new Error("Invalid JSON pointer.")}function a(t,n){if("object"!=typeof t)throw new Error("Invalid input object.");var e=(n=u(n)).length;if(1===e)return t;for(var r=1;r<e;){if(t=t[i(n[r++])],e===r)return t;if("object"!=typeof t)return}}function c(t,n,e){if("object"!=typeof t)throw new Error("Invalid input object.");if(0===(n=u(n)).length)throw new Error("Invalid JSON pointer for set.");return function(t,n,e){for(var r,o,u=1,a=n.length;u<a&&(r=i(n[u++]),o=a>u,void 0===t[r]&&(Array.isArray(t)&&"-"===r&&(r=t.length),o&&(""!==n[u]&&n[u]<1/0||"-"===n[u]?t[r]=[]:t[r]={})),o);)t=t[r];var c=t[r];return void 0===e?delete t[r]:t[r]=e,c}(t,n,e)}n.get=a,n.set=c,n.compile=function(t){var n=u(t);return{get:function(t){return a(t,n)},set:function(t,e){return c(t,n,e)}}}}]);;
/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-L30, 5725-Z22
 *
 * (C) Copyright IBM Corporation 2016, 2019
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/

(function ($) {
    'use strict';

    function CommonAPI(api) {

        var self = this;

        self.api = api;

    }

    /**
     * Does this operation only return XML and not JSON?
     * @param api
     * @param operation
     * @returns {boolean}
     */
    CommonAPI.prototype.returnsXML = function (api, operation) {
        if (operation.produces && ($.inArray('application/xml', operation.produces) !== -1 || $.inArray('application/xml+soap', operation.produces) !== -1 || $.inArray('text/xml', operation.produces) !== -1) && $.inArray('application/json', operation.produces) === -1) {
            return true;
        } else if (!operation.produces && api.produces && ($.inArray('application/xml', api.produces) !== -1 || $.inArray('application/xml+soap', api.produces) !== -1 || $.inArray('text/xml', api.produces) !== -1) && $.inArray('application/json', api.produces) === -1) {
            return true;
        } else {
            return false;
        }
    };
    /**
     * Does this operation only accept XML and not JSON?
     * @param api
     * @param operation
     * @returns {boolean}
     */
    CommonAPI.prototype.acceptsXML = function (api, operation) {
        if (operation.consumes && ($.inArray('application/xml', operation.consumes) !== -1 || $.inArray('application/xml+soap', operation.consumes) !== -1 || $.inArray('text/xml', operation.consumes) !== -1) && $.inArray('application/json', operation.consumes) === -1) {
            return true;
        } else if (!operation.consumes && api.consumes && ($.inArray('application/xml', api.consumes) !== -1 || $.inArray('application/xml+soap', api.consumes) !== -1 || $.inArray('text/xml', api.consumes) !== -1) && $.inArray('application/json', api.consumes) === -1) {
            return true;
        } else {
            return false;
        }
    };

    /**
     * Create sample data for given property
     * @param propertyName
     * @param property
     * @param empty
     * @returns {*}
     */
    CommonAPI.prototype.createDummyValue = function (propertyName, property, empty) {
        var defaultValues = {
            string: '',
            object: {},
            number: 0.0,
            integer: 0,
            boolean: true,
            date: '1970-01-01',
            dateTime: '1970-01-01T00:00:00Z',
            'date-time': '1970-01-01T00:00:00Z',
            password: '',
            binary: '00000000',
            byte: 0
        };
        if (!property.type) {
            property.type = 'string';
        }
        if (empty == true) {
            if (typeof(defaultValues[property.type]) !== 'undefined') {
                if (property.type == 'string') {
                    if (property.format && (property.format == 'date' || property.format == 'date-time' || property.format == 'password' || property.format == 'binary' || property.format == 'byte')) {
                        return defaultValues[property.format];
                    } else {
                        return defaultValues[property.type];
                    }
                } else {
                    return defaultValues[property.type];
                }
            } else {
                return null;
            }
        } else {
            if (property.enum && property.enum.length > 0) {
                var enumLength = property.enum.length - 1;
                var index = chance.natural({min: 0, max: enumLength});
                return property.enum[index];
            } else if (property.type == 'integer') {
                var max = 100;
                var min = 1;
                if (propertyName && (propertyName.toLowerCase().indexOf('quantity') > -1 || propertyName.toLowerCase().indexOf('number') > -1)) {
                    if (property.maximum) {
                        if (property.exclusiveMaximum) {
                            max = property.maximum;
                        } else {
                            max = property.maximum - 1;
                        }
                    }
                    if (property.minimum) {
                        if (property.exclusiveMinimum) {
                            min = property.minimum;
                        } else {
                            min = property.minimum + 1;
                        }
                    }
                    return chance.integer({min: min, max: max});
                } else {
                    // int32 && int64
                    max = 99999999;
                    min = 10000000;
                    if (property.maximum) {
                        if (property.exclusiveMaximum) {
                            max = property.maximum;
                        } else {
                            max = property.maximum - 1;
                        }
                    }
                    if (property.minimum) {
                        if (property.exclusiveMinimum) {
                            min = property.minimum;
                        } else {
                            min = property.minimum + 1;
                        }
                    }
                    return chance.natural({min: min, max: max});
                }
            } else if (property.type == 'boolean') {
                // random boolean
                return chance.bool();
            } else if (property.type == 'number') {
                return chance.floating({min: 0, max: 100, fixed: 8});
            } else if (property.type == 'object') {
                return {'id': chance.natural()};
            } else {
                // string
                if (property.format && (property.format == 'date' || property.format == 'date-time')) {
                    // random date (or date time) between 2000 and now
                    var start = new Date(2000, 0, 1);
                    var end = new Date();
                    var date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
                    if (property.format == 'date-time') {
                        return date.toISOString();
                    } else {
                        return date.toDateString().slice(0, 10);
                    }
                } else if (property.format && property.format == 'password') {
                    return 'Passw0rd';
                } else if (property.format && property.format == 'binary') {
                    return (Math.floor(Math.random() * (127 - 1) + 1)).toString(2);
                } else if (property.format && property.format == 'byte') {
                    return (Math.floor(Math.random() * (8 - 1) + 1)).toString(16);
                } else {
                    if (propertyName) {
                        var lowerCasePropName = propertyName.toLowerCase();
                        if (lowerCasePropName.indexOf('address') > -1) {
                            return chance.address();
                        } else if (lowerCasePropName.indexOf('phone') > -1) {
                            return chance.phone();
                        } else if (lowerCasePropName.indexOf('areacode') > -1) {
                            return chance.areacode();
                        } else if (lowerCasePropName.indexOf('post') > -1) {
                            return chance.postal();
                        } else if (lowerCasePropName.indexOf('city') > -1) {
                            return chance.city();
                        } else if (lowerCasePropName.indexOf('province') > -1) {
                            return chance.province();
                        } else if (lowerCasePropName.indexOf('street') > -1) {
                            return chance.street();
                        } else if (lowerCasePropName.indexOf('state') > -1) {
                            return chance.state();
                        } else if (lowerCasePropName.indexOf('country') > -1) {
                            return chance.country({full: true});
                        } else if (lowerCasePropName.indexOf('zip') > -1) {
                            return chance.zip();
                        } else if (lowerCasePropName.indexOf('coordinate') > -1) {
                            return chance.coordinates();
                        } else if (lowerCasePropName.indexOf('latitude') > -1) {
                            return chance.latitude().toString();
                        } else if (lowerCasePropName.indexOf('longitude') > -1) {
                            return chance.longitude().toString();
                        } else if (lowerCasePropName.indexOf('cc') > -1 || lowerCasePropName.indexOf('credit') > -1) {
                            return chance.cc();
                        } else if (lowerCasePropName.indexOf('expiry') > -1) {
                            return chance.exp();
                        } else if (lowerCasePropName.indexOf('currency') > -1) {
                            return chance.currency().code;
                        } else if (lowerCasePropName.indexOf('color') > -1 || lowerCasePropName.indexOf('colour') > -1) {
                            return chance.color({format: 'hex'});
                        } else if (lowerCasePropName.indexOf('domain') > -1) {
                            return chance.domain();
                        } else if (lowerCasePropName.indexOf('email') > -1 || lowerCasePropName.indexOf('e-mail') > -1) {
                            return chance.email();
                        } else if (lowerCasePropName.indexOf('url') > -1) {
                            return chance.url();
                        } else if (lowerCasePropName.indexOf('twitter') > -1) {
                            return chance.twitter();
                        } else if (lowerCasePropName.indexOf('birth') > -1 || lowerCasePropName.indexOf('bday') > -1) {
                            return chance.birthday({string: true});
                        } else if (lowerCasePropName.indexOf('age') > -1) {
                            return chance.age().toString();
                        } else if (lowerCasePropName.indexOf('first') > -1 || lowerCasePropName.indexOf('fname') > -1 || lowerCasePropName.indexOf('user') > -1) {
                            return chance.first();
                        } else if (lowerCasePropName.indexOf('last') > -1 || lowerCasePropName.indexOf('lname') > -1) {
                            return chance.last();
                        } else if (lowerCasePropName.indexOf('gender') > -1 || lowerCasePropName.indexOf('sex') > -1) {
                            return chance.gender();
                        } else if (lowerCasePropName.indexOf('prefix') > -1) {
                            return chance.prefix();
                        } else if (lowerCasePropName.indexOf('ssn') > -1 || lowerCasePropName.indexOf('social') > -1) {
                            return chance.ssn();
                        } else if (lowerCasePropName.indexOf('token') > -1) {
                            return chance.apple_token();
                        } else if (lowerCasePropName.indexOf('number') > -1) {
                            return chance.natural().toString();
                        } else if (lowerCasePropName.indexOf('temp') > -1) {
                            return change.natural({min: 0, max: 100}) + ' C';
                        } else if (lowerCasePropName.indexOf('pressure') > -1) {
                            return change.natural({min: 500, max: 1500}) + ' hPa';
                        } else if (lowerCasePropName.indexOf('humidity') > -1) {
                            return change.natural({min: 0, max: 100}) + ' %';
                        } else if (lowerCasePropName.indexOf('year') > -1) {
                            return chance.year({min: 1900, max: 2100}).toString();
                        } else if (lowerCasePropName.indexOf('month') > -1) {
                            return chance.month();
                        } else if (lowerCasePropName.indexOf('date') > -1) {
                            return chance.date({string: true});
                        } else if (lowerCasePropName.indexOf('timestamp') > -1) {
                            return chance.timestamp().toString();
                        } else if (lowerCasePropName.indexOf('time') > -1) {
                            return chance.hour({twentyfour: true}) + ':' + chance.minute();
                        } else if (lowerCasePropName.indexOf('hour') > -1) {
                            return chance.hour({twentyfour: true}).toString();
                        } else if (lowerCasePropName.indexOf('minute') > -1) {
                            return chance.minute().toString();
                        } else if (lowerCasePropName.indexOf('sunrise') > -1) {
                            return change.natural({min: 5, max: 10}) + ':' + chance.minute();
                        } else if (lowerCasePropName.indexOf('sunset') > -1) {
                            return change.natural({min: 17, max: 22}) + ':' + chance.minute();
                        } else if (lowerCasePropName.indexOf('string') > -1) {
                            return chance.string();
                        } else if (lowerCasePropName.indexOf('desc') > -1) {
                            return chance.paragraph({sentences: 1});
                        } else if (lowerCasePropName.indexOf('message') > -1) {
                            return chance.sentence();
                        } else if (lowerCasePropName.indexOf('name') > -1) {
                            return chance.name();
                        } else if (lowerCasePropName.indexOf('ip') > -1) {
                            return chance.ip();
                        } else if (lowerCasePropName.indexOf('id') > -1) {
                            return chance.natural().toString();
                        } else {
                            var stringMax = 8;
                            var stringMin = 4;
                            if (property.maxLength) {
                                stringMax = property.maxLength;
                            }
                            if (property.minLength) {
                                stringMin = property.minLength;
                            }
                            var length = chance.natural({min: stringMin, max: stringMax});
                            return chance.word({length: length});
                        }
                    } else {
                        var mystringMax = 8;
                        var mystringMin = 4;
                        if (property.maxLength) {
                            mystringMax = property.maxLength;
                        }
                        if (property.minLength) {
                            mystringMin = property.minLength;
                        }
                        var mylength = chance.natural({min: mystringMin, max: mystringMax});
                        return chance.word({length: mylength});
                    }
                }
            }
        }
    };

    /**
     * Generates an empty object for the specified schema
     * @param schema
     * @param empty
     * @param depth
     *
     * @returns {*}
     */
    CommonAPI.prototype.createExampleObject = function (schema, empty, depth) {
        if (empty == null) {
            empty = false;
        }
        if (depth == null) {
            depth = 0;
        }
        depth++;
        var result = {};
        // handle loose schema'd objects which are missing their 'type'
        if (!schema.type && (schema.properties || schema.allOf)) {
            schema.type = 'object';
        }

        // depth checking to ensure we don't loop infinitely - only descend x levels into a model
        if (depth >= 9) {
            return 'ERROR_MAXDEPTH';
        }

        if (schema.type === 'object') {
            // If schema has no properties (loose schema), return the empty object
            if (!schema.properties) {
                if (schema.allOf) {
                    // loop
                    Object.keys(schema.allOf).forEach(function (key) {
                        if (schema.allOf[key].allOf) {
                            // loop again
                            Object.keys(schema.allOf[key].allOf).forEach(function (key2) {
                                if (schema.allOf[key].allOf[key2].allOf) {

                                } else if (schema.allOf[key].allOf[key2].type === 'object') {
                                    if (schema.allOf[key].allOf[key2].properties) {
                                        Object.keys(schema.allOf[key].allOf[key2].properties).forEach(function (propertyName) {
                                            // if this property is an object itself, recurse
                                            if (schema.allOf[key].allOf[key2].properties[propertyName].type === 'object' || schema.allOf[key].allOf[key2].properties[propertyName].type === 'array' || (!schema.allOf[key].allOf[key2].properties[propertyName].type && schema.allOf[key].allOf[key2].properties[propertyName].properties)) {
                                                // handle loose schema'd objects which are missing their 'type'
                                                if (!schema.allOf[key].allOf[key2].properties[propertyName].type) {
                                                    schema.allOf[key].allOf[key2].properties[propertyName].type = 'object';
                                                }
                                                result[propertyName] =
                                                    CommonAPI.prototype.createExampleObject(schema.allOf[key].allOf[key2].properties[propertyName], empty, depth);
                                                // otherwise use the defaultValues hash
                                            } else {
                                                if (typeof(schema.allOf[key].allOf[key2].properties[propertyName].default) !== 'undefined') {
                                                    result[propertyName] = schema.allOf[key].allOf[key2].properties[propertyName].default;
                                                } else if (typeof(schema.allOf[key].allOf[key2].properties[propertyName].example) !== 'undefined') {
                                                    result[propertyName] = schema.allOf[key].allOf[key2].properties[propertyName].example;
                                                } else {
                                                    result[propertyName] = CommonAPI.prototype.createDummyValue(propertyName, schema.allOf[key].allOf[key2].properties[propertyName], empty);
                                                }
                                            }
                                        });
                                    }
                                }
                            });
                        } else if (schema.allOf[key].type === 'object') {
                            if (schema.allOf[key].properties) {
                                Object.keys(schema.allOf[key].properties).forEach(function (propertyName) {
                                    // if this property is an object itself, recurse
                                    if (schema.allOf[key].properties[propertyName].type === 'object' || schema.allOf[key].properties[propertyName].type === 'array' || (!schema.allOf[key].properties[propertyName].type && schema.allOf[key].properties[propertyName].properties)) {
                                        // handle loose schema'd objects which are missing their 'type'
                                        if (!schema.allOf[key].properties[propertyName].type) {
                                            schema.allOf[key].properties[propertyName].type = 'object';
                                        }
                                        result[propertyName] =
                                            CommonAPI.prototype.createExampleObject(schema.allOf[key].properties[propertyName], empty, depth);
                                        // otherwise use the defaultValues hash
                                    } else {
                                        if (typeof(schema.allOf[key].properties[propertyName].default) !== 'undefined') {
                                            result[propertyName] = schema.allOf[key].properties[propertyName].default;
                                        } else if (typeof(schema.allOf[key].properties[propertyName].example) !== 'undefined') {
                                            result[propertyName] = schema.allOf[key].properties[propertyName].example;
                                        } else {
                                            result[propertyName] = CommonAPI.prototype.createDummyValue(propertyName, schema.allOf[key].properties[propertyName], empty);
                                        }
                                    }
                                });
                            }
                        }
                    });
                } else if (typeof(schema.default) !== 'undefined') {
                    result = schema.default;
                } else if (typeof(schema.example) !== 'undefined') {
                    result = schema.example;
                } else {
                    result = CommonAPI.prototype.createDummyValue("", schema, empty);
                }
            } else {
                Object.keys(schema.properties).forEach(function (propertyName) {
                    // if this property is an object itself, recurse
                    if (schema.properties[propertyName].type === 'object' || schema.properties[propertyName].type === 'array' || (!schema.properties[propertyName].type && schema.properties[propertyName].properties)) {
                        // handle loose schema'd objects which are missing their 'type'
                        if (!schema.properties[propertyName].type) {
                            schema.properties[propertyName].type = 'object';
                        }
                        result[propertyName] =
                            CommonAPI.prototype.createExampleObject(schema.properties[propertyName], empty, depth);
                        // otherwise use the dummy values
                    } else {
                        if (typeof(schema.properties[propertyName].default) !== 'undefined') {
                            result[propertyName] = schema.properties[propertyName].default;
                        } else if (typeof(schema.properties[propertyName].example) !== 'undefined') {
                            result[propertyName] = schema.properties[propertyName].example;
                        } else {
                            result[propertyName] = CommonAPI.prototype.createDummyValue(propertyName, schema.properties[propertyName], empty);
                        }
                    }
                });
            }
            return result;
        } else if (schema.type === 'array') {
            var list = [];
            if (!schema.items) {
                return list;
            }
            var obj = schema.items;
            // If schema has no properties (loose schema), return the empty object
            if (!obj.properties) {
                if (obj.allOf) {
                    // loop
                    Object.keys(obj.allOf).forEach(function (key) {
                        if (obj.allOf[key].allOf) {
                            Object.keys(obj.allOf[key].allOf).forEach(function (key2) {
                                // loop again
                                Object.keys(obj.allOf[key].allOf).forEach(function (key2) {
                                    if (obj.allOf[key].allOf[key2].allOf) {

                                    } else if (obj.allOf[key].allOf[key2].type === 'object') {
                                        if (obj.allOf[key].allOf[key2].properties) {
                                            Object.keys(obj.allOf[key].allOf[key2].properties).forEach(function (propertyName) {
                                                // if this property is an object itself, recurse
                                                if (obj.allOf[key].allOf[key2].properties[propertyName].type === 'object' || obj.allOf[key].allOf[key2].properties[propertyName].type === 'array' || (!obj.allOf[key].allOf[key2].properties[propertyName].type && obj.allOf[key].allOf[key2].properties[propertyName].properties)) {
                                                    // handle loose schema'd objects which are missing their 'type'
                                                    if (!obj.allOf[key].allOf[key2].properties[propertyName].type) {
                                                        obj.allOf[key].allOf[key2].properties[propertyName].type = 'object';
                                                    }
                                                    result[propertyName] =
                                                        CommonAPI.prototype.createExampleObject(obj.allOf[key].allOf[key2].properties[propertyName], empty, depth);
                                                    // otherwise use the defaultValues hash
                                                } else {
                                                    if (typeof(obj.allOf[key].allOf[key2].properties[propertyName].default) !== 'undefined') {
                                                        result[propertyName] = obj.allOf[key].allOf[key2].properties[propertyName].default;
                                                    } else if (typeof(obj.allOf[key].allOf[key2].properties[propertyName].example) !== 'undefined') {
                                                        result[propertyName] = obj.allOf[key].allOf[key2].properties[propertyName].example;
                                                    } else {
                                                        result[propertyName] = CommonAPI.prototype.createDummyValue(propertyName, obj.allOf[key].allOf[key2].properties[propertyName], empty);
                                                    }
                                                }
                                            });
                                        }
                                    }
                                });
                            });
                        } else if (obj.allOf[key].type === 'object') {
                            if (obj.allOf[key].properties) {
                                Object.keys(obj.allOf[key].properties).forEach(function (propertyName) {
                                    // if this property is an object itself, recurse
                                    if (obj.allOf[key].properties[propertyName].type === 'object' || obj.allOf[key].properties[propertyName].type === 'array' || (!obj.allOf[key].properties[propertyName].type && obj.allOf[key].properties[propertyName].properties)) {
                                        // handle loose schema'd objects which are missing their 'type'
                                        if (!obj.allOf[key].properties[propertyName].type) {
                                            obj.allOf[key].properties[propertyName].type = 'object';
                                        }
                                        result[propertyName] =
                                            CommonAPI.prototype.createExampleObject(obj.allOf[key].properties[propertyName], empty, depth);
                                        // otherwise use the defaultValues hash
                                    } else {
                                        if (typeof(obj.allOf[key].properties[propertyName].default) !== 'undefined') {
                                            result[propertyName] = obj.allOf[key].properties[propertyName].default;
                                        } else if (typeof(obj.allOf[key].properties[propertyName].example) !== 'undefined') {
                                            result[propertyName] = obj.allOf[key].properties[propertyName].example;
                                        } else {
                                            result[propertyName] = CommonAPI.prototype.createDummyValue(propertyName, obj.allOf[key].properties[propertyName], empty);
                                        }
                                    }
                                });
                            }
                        }
                    });
                } else if (typeof(obj.default) !== 'undefined') {
                    result = obj.default;
                } else if (typeof(obj.example) !== 'undefined') {
                    result = obj.example;
                } else {
                    result = CommonAPI.prototype.createDummyValue("", obj, empty);
                }
            } else {
                Object.keys(obj.properties).forEach(function (propertyName) {
                    // if this property is an object itself, recurse
                    if (obj.properties[propertyName].type === 'object' || obj.properties[propertyName].type === 'array' || (!obj.properties[propertyName].type && obj.properties[propertyName].properties)) {
                        // handle loose schema'd objects which are missing their 'type'
                        if (!obj.properties[propertyName].type) {
                            obj.properties[propertyName].type = 'object';
                        }
                        result[propertyName] =
                            CommonAPI.prototype.createExampleObject(obj.properties[propertyName], empty, depth);
                        // otherwise use the defaultValues hash
                    } else {
                        if (typeof(obj.properties[propertyName].default) !== 'undefined') {
                            result[propertyName] = obj.properties[propertyName].default;
                        } else if (typeof(obj.properties[propertyName].example) !== 'undefined') {
                            result[propertyName] = obj.properties[propertyName].example;
                        } else {
                            result[propertyName] = CommonAPI.prototype.createDummyValue(propertyName, obj.properties[propertyName], empty);
                        }
                    }
                });
            }
            list.push(result);
            return list;
        } else if (schema.type === 'string' || schema.type === 'integer' || schema.type === 'number' || schema.type === 'boolean') {
            return CommonAPI.prototype.createDummyValue('', schema, empty)
        }
        else {
            throw new TypeError('schema should be an object or array schema.');
        }
    };

    /**
     * Update security config now picked a flow type
     * @param config
     * @param oauthDef
     * @returns {*}
     */
    CommonAPI.prototype.updateConfigurationForOauth = function (config, oauthDef) {
        if (oauthDef.type !== "oauth2") return config;
        config.requiresOauth = true;
        config.oauthFlow = oauthDef.flow;
        config.requiresClientId = true;
        if (oauthDef.flow == 'application' || oauthDef.flow == 'accessCode') {
            config.requiresClientSecret = true;
        }
        if (oauthDef.authorizationUrl) {
            config.oauthAuthUrl = oauthDef.authorizationUrl;
        }
        if (oauthDef.tokenUrl) {
            config.oauthTokenUrl = oauthDef.tokenUrl;
        }
        if (oauthDef.scopes && Object.keys(oauthDef.scopes).length !== 0) {
            config.oauthScopes = Object.keys(oauthDef.scopes);
        }
        return config;
    };

    /**
     * look through the operation and api and determine the various configuration options required for the operation
     **/
    CommonAPI.prototype.getConfigurationForOperation = function (operation, path, api, securityFlow) {

        var config = {};

        // check security requirements
        config.requiresClientId = false;
        delete config.clientIdLocation;
        delete config.clientIdName;
        config.requiresClientSecret = false;
        delete config.clientSecretLocation;
        delete config.clientSecretName;
        config.requiresBasicAuth = false;
        config.requiresOauth = false;
        config.securityFlows = [];

        config.requiresSecuritySection = false;
        config.requiresIdentificationSection = false;
        config.requiresAuthorizationSection = false;
        config.requiresRefreshToken = false;
        config.requiresUserCredentials = false;
        config.requiresRedirectUri = false;
        config.externalApiKeys = {};

        delete config.oauthFlow;
        delete config.oauthAuthUrl;
        delete config.oauthTokenUrl;
        delete config.oauthScopes;

        var security = {};
        var securityDefinitions = operation.security;
        if (!securityDefinitions) securityDefinitions = api.security;
        if (securityDefinitions) {
            securityDefinitions.forEach(function (securityDefs) {
                var label = Object.keys(securityDefs).filter(function (key) {
                    return (key.indexOf('$$') !== 0);
                }).join(", ");
                securityDefs.$$label = label;
                config.securityFlows.push(securityDefs);

                // if a security flow has been selected, switch on all
                // the necessary security flags for the given flow
                if (securityFlow === securityDefs) {
                    Object.keys(securityDefs).forEach(function (securityDef) {
                        var thisDef = api.securityDefinitions[securityDef];
                        if (!thisDef) return;
                        security[securityDef] = thisDef;
                        if (thisDef.type === "apiKey") {
                            if (thisDef.name === "client_id" ||
                                thisDef.name === "X-IBM-Client-Id" ||
                                (thisDef['x-key-type'] && thisDef['x-key-type'] === "clientId")) {
                                config.requiresClientId = true;
                                config.clientIdLocation = thisDef["in"];
                                config.clientIdName = thisDef["name"];
                            } else if (thisDef.name === "client_secret" ||
                                thisDef.name === "X-IBM-Client-Secret" ||
                                (thisDef['x-key-type'] && thisDef['x-key-type'] === "clientSecret")) {
                                config.requiresClientSecret = true;
                                config.clientSecretLocation = thisDef["in"];
                                config.clientSecretName = thisDef["name"];
                            } else {
                                // it's an external api key
                                config.externalApiKeys[securityDef] = thisDef;
                            }
                        }
                        if (thisDef.type == "basic") {
                            config.requiresBasicAuth = true;
                        }
                        if (thisDef.type == "oauth2") {
                            config.requiresOauth = true;
                            config.requiresClientId = true;
                            config.oauthFlow = thisDef.flow;
                            if (thisDef.flow == 'application' || thisDef.flow == 'accessCode' || thisDef.flow == 'password') {
                                config.requiresClientSecret = true;
                            }
                            if (thisDef.flow == 'implicit' || thisDef.flow == 'accessCode') {
                                config.requiresRedirectUri = true;
                            }
                            if (thisDef.authorizationUrl) {
                                config.oauthAuthUrl = thisDef.authorizationUrl;
                                config.requiresAuthorizationSection = true;
                            }
                            if (thisDef.tokenUrl) {
                                config.oauthTokenUrl = thisDef.tokenUrl;
                                config.requiresAuthorizationSection = true;
                            }
                            if (thisDef.scopes && Object.keys(thisDef.scopes).length !== 0) {
                                config.oauthScopes = Object.keys(thisDef.scopes);
                            }
                        }
                    });
                }
            });
        }
        if (!_.isEmpty(security)) config.security = security;

        // any security requirements at all?
        if (config.requiresClientId || config.requiresClientSecret || config.requiresBasicAuth || config.requiresOauth) {
            config.requiresSecuritySection = true;
        }

        // any requirement for identification?
        if (config.requiresClientId || config.requiresClientSecret) {
            config.requiresIdentificationSection = true;
        }

        // any requirement for authorization?
        if (config.requiresBasicAuth || config.oauthFlow === "password") {
            config.requiresAuthorizationSection = true;
            config.requiresUserCredentials = true;
        }

        // any requirement for token refresh?
        if (config.oauthFlow === "accessCode") {
            config.requiresRefreshToken = true;
        }

        // figure out which parameters apply here
        var parameters = [];
        var dereferencedParameters = {};
        if (operation.parameters) parameters = parameters.concat(operation.parameters);
        if (path.parameters) parameters = parameters.concat(path.parameters);

        parameters.forEach(function (parameter) {
            if (parameter.$ref) {
                var parameterName = parameter.$ref.replace("#/parameters/", "");
                dereferencedParameters[parameterName] = api.parameters[parameterName];
                dereferencedParameters[parameterName].$$tmpId = Math.random();
            } else {
                dereferencedParameters[parameter.name] = parameter;
                dereferencedParameters[parameter.name].$$tmpId = Math.random();
            }
        });
        if (!_.isEmpty(dereferencedParameters)) {
            config.parameters = dereferencedParameters;
            var asArray = [];
            Object.keys(dereferencedParameters).forEach(function (parameterName) {
                asArray.push(dereferencedParameters[parameterName]);
            });
            config.parametersArray = asArray;
            config.requiresParametersSection = true;
        }

        // any SOAP specific content?
        if (operation['x-ibm-soap']) {
            if (operation['x-ibm-soap']['soap-action'] !== undefined) {
                config.soapAction = operation['x-ibm-soap']['soap-action'];
            }
        }

        // content types
        if (operation.consumes) {
            config.contentTypes = operation.consumes;
        } else if (api.consumes) {
            config.contentTypes = api.consumes;
        } else {
            config.contentTypes = ['application/json'];
        }
        if (operation.produces) {
            config.accepts = operation.produces;
        } else if (api.produces) {
            config.accepts = api.produces;
        } else {
            config.accepts = ['application/json'];
        }

        return config;
    };

    window.CommonAPI = CommonAPI;

    $(document).ready(function () {
        window.CommonAPI = new CommonAPI(window.apiJson);
    });
}(jQuery));
;
/*! highlight.js v9.4.0 | BSD3 License | git.io/hljslicense */
!function (e) {
    var n = "object" == typeof window && window || "object" == typeof self && self;
    "undefined" != typeof exports ? e(exports) : n && (n.hljs = e({}), "function" == typeof define && define.amd && define([], function () {
        return n.hljs
    }))
}(function (e) {
    function n(e) {
        return e.replace(/&/gm, "&amp;").replace(/</gm, "&lt;").replace(/>/gm, "&gt;")
    }

    function t(e) {
        return e.nodeName.toLowerCase()
    }

    function r(e, n) {
        var t = e && e.exec(n);
        return t && 0 == t.index
    }

    function a(e) {
        return /^(no-?highlight|plain|text)$/i.test(e)
    }

    function i(e) {
        var n, t, r, i = e.className + " ";
        if (i += e.parentNode ? e.parentNode.className : "", t = /\blang(?:uage)?-([\w-]+)\b/i.exec(i))return w(t[1]) ? t[1] : "no-highlight";
        for (i = i.split(/\s+/), n = 0, r = i.length; r > n; n++)if (w(i[n]) || a(i[n]))return i[n]
    }

    function o(e, n) {
        var t, r = {};
        for (t in e)r[t] = e[t];
        if (n)for (t in n)r[t] = n[t];
        return r
    }

    function u(e) {
        var n = [];
        return function r(e, a) {
            for (var i = e.firstChild; i; i = i.nextSibling)3 == i.nodeType ? a += i.nodeValue.length : 1 == i.nodeType && (n.push({
                event: "start",
                offset: a,
                node: i
            }), a = r(i, a), t(i).match(/br|hr|img|input/) || n.push({event: "stop", offset: a, node: i}));
            return a
        }(e, 0), n
    }

    function c(e, r, a) {
        function i() {
            return e.length && r.length ? e[0].offset != r[0].offset ? e[0].offset < r[0].offset ? e : r : "start" == r[0].event ? e : r : e.length ? e : r
        }

        function o(e) {
            function r(e) {
                return " " + e.nodeName + '="' + n(e.value) + '"'
            }

            f += "<" + t(e) + Array.prototype.map.call(e.attributes, r).join("") + ">"
        }

        function u(e) {
            f += "</" + t(e) + ">"
        }

        function c(e) {
            ("start" == e.event ? o : u)(e.node)
        }

        for (var s = 0, f = "", l = []; e.length || r.length;) {
            var g = i();
            if (f += n(a.substr(s, g[0].offset - s)), s = g[0].offset, g == e) {
                l.reverse().forEach(u);
                do c(g.splice(0, 1)[0]), g = i(); while (g == e && g.length && g[0].offset == s);
                l.reverse().forEach(o)
            } else"start" == g[0].event ? l.push(g[0].node) : l.pop(), c(g.splice(0, 1)[0])
        }
        return f + n(a.substr(s))
    }

    function s(e) {
        function n(e) {
            return e && e.source || e
        }

        function t(t, r) {
            return new RegExp(n(t), "m" + (e.cI ? "i" : "") + (r ? "g" : ""))
        }

        function r(a, i) {
            if (!a.compiled) {
                if (a.compiled = !0, a.k = a.k || a.bK, a.k) {
                    var u = {}, c = function (n, t) {
                        e.cI && (t = t.toLowerCase()), t.split(" ").forEach(function (e) {
                            var t = e.split("|");
                            u[t[0]] = [n, t[1] ? Number(t[1]) : 1]
                        })
                    };
                    "string" == typeof a.k ? c("keyword", a.k) : Object.keys(a.k).forEach(function (e) {
                        c(e, a.k[e])
                    }), a.k = u
                }
                a.lR = t(a.l || /\w+/, !0), i && (a.bK && (a.b = "\\b(" + a.bK.split(" ").join("|") + ")\\b"), a.b || (a.b = /\B|\b/), a.bR = t(a.b), a.e || a.eW || (a.e = /\B|\b/), a.e && (a.eR = t(a.e)), a.tE = n(a.e) || "", a.eW && i.tE && (a.tE += (a.e ? "|" : "") + i.tE)), a.i && (a.iR = t(a.i)), void 0 === a.r && (a.r = 1), a.c || (a.c = []);
                var s = [];
                a.c.forEach(function (e) {
                    e.v ? e.v.forEach(function (n) {
                        s.push(o(e, n))
                    }) : s.push("self" == e ? a : e)
                }), a.c = s, a.c.forEach(function (e) {
                    r(e, a)
                }), a.starts && r(a.starts, i);
                var f = a.c.map(function (e) {
                    return e.bK ? "\\.?(" + e.b + ")\\.?" : e.b
                }).concat([a.tE, a.i]).map(n).filter(Boolean);
                a.t = f.length ? t(f.join("|"), !0) : {
                    exec: function () {
                        return null
                    }
                }
            }
        }

        r(e)
    }

    function f(e, t, a, i) {
        function o(e, n) {
            for (var t = 0; t < n.c.length; t++)if (r(n.c[t].bR, e))return n.c[t]
        }

        function u(e, n) {
            if (r(e.eR, n)) {
                for (; e.endsParent && e.parent;)e = e.parent;
                return e
            }
            return e.eW ? u(e.parent, n) : void 0
        }

        function c(e, n) {
            return !a && r(n.iR, e)
        }

        function g(e, n) {
            var t = N.cI ? n[0].toLowerCase() : n[0];
            return e.k.hasOwnProperty(t) && e.k[t]
        }

        function p(e, n, t, r) {
            var a = r ? "" : E.classPrefix, i = '<span class="' + a, o = t ? "" : "</span>";
            return i += e + '">', i + n + o
        }

        function h() {
            if (!k.k)return n(M);
            var e = "", t = 0;
            k.lR.lastIndex = 0;
            for (var r = k.lR.exec(M); r;) {
                e += n(M.substr(t, r.index - t));
                var a = g(k, r);
                a ? (B += a[1], e += p(a[0], n(r[0]))) : e += n(r[0]), t = k.lR.lastIndex, r = k.lR.exec(M)
            }
            return e + n(M.substr(t))
        }

        function d() {
            var e = "string" == typeof k.sL;
            if (e && !R[k.sL])return n(M);
            var t = e ? f(k.sL, M, !0, y[k.sL]) : l(M, k.sL.length ? k.sL : void 0);
            return k.r > 0 && (B += t.r), e && (y[k.sL] = t.top), p(t.language, t.value, !1, !0)
        }

        function b() {
            L += void 0 !== k.sL ? d() : h(), M = ""
        }

        function v(e, n) {
            L += e.cN ? p(e.cN, "", !0) : "", k = Object.create(e, {parent: {value: k}})
        }

        function m(e, n) {
            if (M += e, void 0 === n)return b(), 0;
            var t = o(n, k);
            if (t)return t.skip ? M += n : (t.eB && (M += n), b(), t.rB || t.eB || (M = n)), v(t, n), t.rB ? 0 : n.length;
            var r = u(k, n);
            if (r) {
                var a = k;
                a.skip ? M += n : (a.rE || a.eE || (M += n), b(), a.eE && (M = n));
                do k.cN && (L += "</span>"), k.skip || (B += k.r), k = k.parent; while (k != r.parent);
                return r.starts && v(r.starts, ""), a.rE ? 0 : n.length
            }
            if (c(n, k))throw new Error('Illegal lexeme "' + n + '" for mode "' + (k.cN || "<unnamed>") + '"');
            return M += n, n.length || 1
        }

        var N = w(e);
        if (!N)throw new Error('Unknown language: "' + e + '"');
        s(N);
        var x, k = i || N, y = {}, L = "";
        for (x = k; x != N; x = x.parent)x.cN && (L = p(x.cN, "", !0) + L);
        var M = "", B = 0;
        try {
            for (var C, j, I = 0; ;) {
                if (k.t.lastIndex = I, C = k.t.exec(t), !C)break;
                j = m(t.substr(I, C.index - I), C[0]), I = C.index + j
            }
            for (m(t.substr(I)), x = k; x.parent; x = x.parent)x.cN && (L += "</span>");
            return {r: B, value: L, language: e, top: k}
        } catch (O) {
            if (-1 != O.message.indexOf("Illegal"))return {r: 0, value: n(t)};
            throw O
        }
    }

    function l(e, t) {
        t = t || E.languages || Object.keys(R);
        var r = {r: 0, value: n(e)}, a = r;
        return t.filter(w).forEach(function (n) {
            var t = f(n, e, !1);
            t.language = n, t.r > a.r && (a = t), t.r > r.r && (a = r, r = t)
        }), a.language && (r.second_best = a), r
    }

    function g(e) {
        return E.tabReplace && (e = e.replace(/^((<[^>]+>|\t)+)/gm, function (e, n) {
            return n.replace(/\t/g, E.tabReplace)
        })), E.useBR && (e = e.replace(/\n/g, "<br>")), e
    }

    function p(e, n, t) {
        var r = n ? x[n] : t, a = [e.trim()];
        return e.match(/\bhljs\b/) || a.push("hljs"), -1 === e.indexOf(r) && a.push(r), a.join(" ").trim()
    }

    function h(e) {
        var n = i(e);
        if (!a(n)) {
            var t;
            E.useBR ? (t = document.createElementNS("http://www.w3.org/1999/xhtml", "div"), t.innerHTML = e.innerHTML.replace(/\n/g, "").replace(/<br[ \/]*>/g, "\n")) : t = e;
            var r = t.textContent, o = n ? f(n, r, !0) : l(r), s = u(t);
            if (s.length) {
                var h = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
                h.innerHTML = o.value, o.value = c(s, u(h), r)
            }
            o.value = g(o.value), e.innerHTML = o.value, e.className = p(e.className, n, o.language), e.result = {
                language: o.language,
                re: o.r
            }, o.second_best && (e.second_best = {language: o.second_best.language, re: o.second_best.r})
        }
    }

    function d(e) {
        E = o(E, e)
    }

    function b() {
        if (!b.called) {
            b.called = !0;
            var e = document.querySelectorAll("pre code");
            Array.prototype.forEach.call(e, h)
        }
    }

    function v() {
        addEventListener("DOMContentLoaded", b, !1), addEventListener("load", b, !1)
    }

    function m(n, t) {
        var r = R[n] = t(e);
        r.aliases && r.aliases.forEach(function (e) {
            x[e] = n
        })
    }

    function N() {
        return Object.keys(R)
    }

    function w(e) {
        return e = (e || "").toLowerCase(), R[e] || R[x[e]]
    }

    var E = {classPrefix: "hljs-", tabReplace: null, useBR: !1, languages: void 0}, R = {}, x = {};
    return e.highlight = f, e.highlightAuto = l, e.fixMarkup = g, e.highlightBlock = h, e.configure = d, e.initHighlighting = b, e.initHighlightingOnLoad = v, e.registerLanguage = m, e.listLanguages = N, e.getLanguage = w, e.inherit = o, e.IR = "[a-zA-Z]\\w*", e.UIR = "[a-zA-Z_]\\w*", e.NR = "\\b\\d+(\\.\\d+)?", e.CNR = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)", e.BNR = "\\b(0b[01]+)", e.RSR = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~", e.BE = {
        b: "\\\\[\\s\\S]",
        r: 0
    }, e.ASM = {cN: "string", b: "'", e: "'", i: "\\n", c: [e.BE]}, e.QSM = {
        cN: "string",
        b: '"',
        e: '"',
        i: "\\n",
        c: [e.BE]
    }, e.PWM = {b: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|like)\b/}, e.C = function (n, t, r) {
        var a = e.inherit({cN: "comment", b: n, e: t, c: []}, r || {});
        return a.c.push(e.PWM), a.c.push({cN: "doctag", b: "(?:TODO|FIXME|NOTE|BUG|XXX):", r: 0}), a
    }, e.CLCM = e.C("//", "$"), e.CBCM = e.C("/\\*", "\\*/"), e.HCM = e.C("#", "$"), e.NM = {
        cN: "number",
        b: e.NR,
        r: 0
    }, e.CNM = {cN: "number", b: e.CNR, r: 0}, e.BNM = {cN: "number", b: e.BNR, r: 0}, e.CSSNM = {
        cN: "number",
        b: e.NR + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
        r: 0
    }, e.RM = {
        cN: "regexp",
        b: /\//,
        e: /\/[gimuy]*/,
        i: /\n/,
        c: [e.BE, {b: /\[/, e: /\]/, r: 0, c: [e.BE]}]
    }, e.TM = {cN: "title", b: e.IR, r: 0}, e.UTM = {
        cN: "title",
        b: e.UIR,
        r: 0
    }, e.METHOD_GUARD = {b: "\\.\\s*" + e.UIR, r: 0}, e
});
hljs.registerLanguage("swift", function (e) {
    var t = {
        keyword: "__COLUMN__ __FILE__ __FUNCTION__ __LINE__ as as! as? associativity break case catch class continue convenience default defer deinit didSet do dynamic dynamicType else enum extension fallthrough false final for func get guard if import in indirect infix init inout internal is lazy left let mutating nil none nonmutating operator optional override postfix precedence prefix private protocol Protocol public repeat required rethrows return right self Self set static struct subscript super switch throw throws true try try! try? Type typealias unowned var weak where while willSet",
        literal: "true false nil",
        built_in: "abs advance alignof alignofValue anyGenerator assert assertionFailure bridgeFromObjectiveC bridgeFromObjectiveCUnconditional bridgeToObjectiveC bridgeToObjectiveCUnconditional c contains count countElements countLeadingZeros debugPrint debugPrintln distance dropFirst dropLast dump encodeBitsAsWords enumerate equal fatalError filter find getBridgedObjectiveCType getVaList indices insertionSort isBridgedToObjectiveC isBridgedVerbatimToObjectiveC isUniquelyReferenced isUniquelyReferencedNonObjC join lazy lexicographicalCompare map max maxElement min minElement numericCast overlaps partition posix precondition preconditionFailure print println quickSort readLine reduce reflect reinterpretCast reverse roundUpToAlignment sizeof sizeofValue sort split startsWith stride strideof strideofValue swap toString transcode underestimateCount unsafeAddressOf unsafeBitCast unsafeDowncast unsafeUnwrap unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer withUnsafePointerToObject withUnsafeMutablePointer withUnsafeMutablePointers withUnsafePointer withUnsafePointers withVaList zip"
    }, i = {cN: "type", b: "\\b[A-Z][\\w']*", r: 0}, n = e.C("/\\*", "\\*/", {c: ["self"]}), r = {
        cN: "subst",
        b: /\\\(/,
        e: "\\)",
        k: t,
        c: []
    }, a = {
        cN: "number",
        b: "\\b([\\d_]+(\\.[\\deE_]+)?|0x[a-fA-F0-9_]+(\\.[a-fA-F0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b",
        r: 0
    }, o = e.inherit(e.QSM, {c: [r, e.BE]});
    return r.c = [a], {
        k: t,
        c: [o, e.CLCM, n, i, a, {
            cN: "function",
            bK: "func",
            e: "{",
            eE: !0,
            c: [e.inherit(e.TM, {b: /[A-Za-z$_][0-9A-Za-z$_]*/}), {b: /</, e: />/}, {
                cN: "params",
                b: /\(/,
                e: /\)/,
                endsParent: !0,
                k: t,
                c: ["self", a, o, e.CBCM, {b: ":"}],
                i: /["']/
            }],
            i: /\[|%/
        }, {
            cN: "class",
            bK: "struct protocol class extension enum",
            k: t,
            e: "\\{",
            eE: !0,
            c: [e.inherit(e.TM, {b: /[A-Za-z$_][0-9A-Za-z$_]*/})]
        }, {
            cN: "meta",
            b: "(@warn_unused_result|@exported|@lazy|@noescape|@NSCopying|@NSManaged|@objc|@convention|@required|@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|@infix|@prefix|@postfix|@autoclosure|@testable|@available|@nonobjc|@NSApplicationMain|@UIApplicationMain)"
        }, {bK: "import", e: /$/, c: [e.CLCM, n]}]
    }
});
hljs.registerLanguage("yaml", function (e) {
    var a = {literal: "{ } true false yes no Yes No True False null"}, b = "^[ \\-]*", r = "[a-zA-Z_][\\w\\-]*", t = {
        cN: "attr",
        v: [{b: b + r + ":"}, {b: b + '"' + r + '":'}, {b: b + "'" + r + "':"}]
    }, c = {cN: "template-variable", v: [{b: "{{", e: "}}"}, {b: "%{", e: "}"}]}, l = {
        cN: "string",
        r: 0,
        v: [{b: /'/, e: /'/}, {b: /"/, e: /"/}],
        c: [e.BE, c]
    };
    return {
        cI: !0,
        aliases: ["yml", "YAML", "yaml"],
        c: [t, {cN: "meta", b: "^---s*$", r: 10}, {
            cN: "string",
            b: "[\\|>] *$",
            rE: !0,
            c: l.c,
            e: t.v[0].b
        }, {b: "<%[%=-]?", e: "[%-]?%>", sL: "ruby", eB: !0, eE: !0, r: 0}, {cN: "type", b: "!!" + e.UIR}, {
            cN: "meta",
            b: "&" + e.UIR + "$"
        }, {cN: "meta", b: "\\*" + e.UIR + "$"}, {cN: "bullet", b: "^ *-", r: 0}, l, e.HCM, e.CNM],
        k: a
    }
});
hljs.registerLanguage("groovy", function (e) {
    return {
        k: {
            literal: "true false null",
            keyword: "byte short char int long boolean float double void def as in assert trait super this abstract static volatile transient public private protected synchronized final class interface enum if else for while switch case break default continue throw throws try catch finally implements extends new import package return instanceof"
        },
        c: [e.C("/\\*\\*", "\\*/", {
            r: 0,
            c: [{b: /\w+@/, r: 0}, {cN: "doctag", b: "@[A-Za-z]+"}]
        }), e.CLCM, e.CBCM, {cN: "string", b: '"""', e: '"""'}, {cN: "string", b: "'''", e: "'''"}, {
            cN: "string",
            b: "\\$/",
            e: "/\\$",
            r: 10
        }, e.ASM, {cN: "regexp", b: /~?\/[^\/\n]+\//, c: [e.BE]}, e.QSM, {
            cN: "meta",
            b: "^#!/usr/bin/env",
            e: "$",
            i: "\n"
        }, e.BNM, {
            cN: "class",
            bK: "class interface trait enum",
            e: "{",
            i: ":",
            c: [{bK: "extends implements"}, e.UTM]
        }, e.CNM, {cN: "meta", b: "@[A-Za-z]+"}, {cN: "string", b: /[^\?]{0}[A-Za-z0-9_$]+ *:/}, {
            b: /\?/,
            e: /\:/
        }, {cN: "symbol", b: "^\\s*[A-Za-z0-9_$]+:", r: 0}],
        i: /#|<\//
    }
});
hljs.registerLanguage("java", function (e) {
    var t = e.UIR + "(<" + e.UIR + "(\\s*,\\s*" + e.UIR + ")*>)?", a = "false synchronized int abstract float private char boolean static null if const for true while long strictfp finally protected import native final void enum else break transient catch instanceof byte super volatile case assert short package default double public try this switch continue throws protected public private module requires exports", r = "\\b(0[bB]([01]+[01_]+[01]+|[01]+)|0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)|(([\\d]+[\\d_]+[\\d]+|[\\d]+)(\\.([\\d]+[\\d_]+[\\d]+|[\\d]+))?|\\.([\\d]+[\\d_]+[\\d]+|[\\d]+))([eE][-+]?\\d+)?)[lLfF]?", s = {
        cN: "number",
        b: r,
        r: 0
    };
    return {
        aliases: ["jsp"],
        k: a,
        i: /<\/|#/,
        c: [e.C("/\\*\\*", "\\*/", {
            r: 0,
            c: [{b: /\w+@/, r: 0}, {cN: "doctag", b: "@[A-Za-z]+"}]
        }), e.CLCM, e.CBCM, e.ASM, e.QSM, {
            cN: "class",
            bK: "class interface",
            e: /[{;=]/,
            eE: !0,
            k: "class interface",
            i: /[:"\[\]]/,
            c: [{bK: "extends implements"}, e.UTM]
        }, {bK: "new throw return else", r: 0}, {
            cN: "function",
            b: "(" + t + "\\s+)+" + e.UIR + "\\s*\\(",
            rB: !0,
            e: /[{;=]/,
            eE: !0,
            k: a,
            c: [{b: e.UIR + "\\s*\\(", rB: !0, r: 0, c: [e.UTM]}, {
                cN: "params",
                b: /\(/,
                e: /\)/,
                k: a,
                r: 0,
                c: [e.ASM, e.QSM, e.CNM, e.CBCM]
            }, e.CLCM, e.CBCM]
        }, s, {cN: "meta", b: "@[A-Za-z]+"}]
    }
});
hljs.registerLanguage("php", function (e) {
    var c = {b: "\\$+[a-zA-Z_-Ã¿][a-zA-Z0-9_-Ã¿]*"}, i = {cN: "meta", b: /<\?(php)?|\?>/}, t = {
        cN: "string",
        c: [e.BE, i],
        v: [{b: 'b"', e: '"'}, {b: "b'", e: "'"}, e.inherit(e.ASM, {i: null}), e.inherit(e.QSM, {i: null})]
    }, a = {v: [e.BNM, e.CNM]};
    return {
        aliases: ["php3", "php4", "php5", "php6"],
        cI: !0,
        k: "and include_once list abstract global private echo interface as static endswitch array null if endwhile or const for endforeach self var while isset public protected exit foreach throw elseif include __FILE__ empty require_once do xor return parent clone use __CLASS__ __LINE__ else break print eval new catch __METHOD__ case exception default die require __FUNCTION__ enddeclare final try switch continue endfor endif declare unset true false trait goto instanceof insteadof __DIR__ __NAMESPACE__ yield finally",
        c: [e.HCM, e.C("//", "$", {c: [i]}), e.C("/\\*", "\\*/", {
            c: [{
                cN: "doctag",
                b: "@[A-Za-z]+"
            }]
        }), e.C("__halt_compiler.+?;", !1, {eW: !0, k: "__halt_compiler", l: e.UIR}), {
            cN: "string",
            b: /<<<['"]?\w+['"]?$/,
            e: /^\w+;?$/,
            c: [e.BE, {cN: "subst", v: [{b: /\$\w+/}, {b: /\{\$/, e: /\}/}]}]
        }, i, {
            cN: "keyword",
            b: /\$this\b/
        }, c, {b: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/}, {
            cN: "function",
            bK: "function",
            e: /[;{]/,
            eE: !0,
            i: "\\$|\\[|%",
            c: [e.UTM, {cN: "params", b: "\\(", e: "\\)", c: ["self", c, e.CBCM, t, a]}]
        }, {
            cN: "class",
            bK: "class interface",
            e: "{",
            eE: !0,
            i: /[:\(\$"]/,
            c: [{bK: "extends implements"}, e.UTM]
        }, {bK: "namespace", e: ";", i: /[\.']/, c: [e.UTM]}, {bK: "use", e: ";", c: [e.UTM]}, {b: "=>"}, t, a]
    }
});
hljs.registerLanguage("objectivec", function (e) {
    var t = {
        cN: "built_in",
        b: "\\b(AV|CA|CF|CG|CI|MK|MP|NS|UI|XC)\\w+"
    }, i = {
        keyword: "int float while char export sizeof typedef const struct for union unsigned long volatile static bool mutable if do return goto void enum else break extern asm case short default double register explicit signed typename this switch continue wchar_t inline readonly assign readwrite self @synchronized id typeof nonatomic super unichar IBOutlet IBAction strong weak copy in out inout bycopy byref oneway __strong __weak __block __autoreleasing @private @protected @public @try @property @end @throw @catch @finally @autoreleasepool @synthesize @dynamic @selector @optional @required",
        literal: "false true FALSE TRUE nil YES NO NULL",
        built_in: "BOOL dispatch_once_t dispatch_queue_t dispatch_sync dispatch_async dispatch_once"
    }, n = /[a-zA-Z@][a-zA-Z0-9_]*/, o = "@interface @class @protocol @implementation";
    return {
        aliases: ["mm", "objc", "obj-c"],
        k: i,
        l: n,
        i: "</",
        c: [t, e.CLCM, e.CBCM, e.CNM, e.QSM, {
            cN: "string",
            v: [{b: '@"', e: '"', i: "\\n", c: [e.BE]}, {b: "'", e: "[^\\\\]'", i: "[^\\\\][^']"}]
        }, {
            cN: "meta",
            b: "#",
            e: "$",
            c: [{cN: "meta-string", v: [{b: '"', e: '"'}, {b: "<", e: ">"}]}]
        }, {
            cN: "class",
            b: "(" + o.split(" ").join("|") + ")\\b",
            e: "({|$)",
            eE: !0,
            k: o,
            l: n,
            c: [e.UTM]
        }, {b: "\\." + e.UIR, r: 0}]
    }
});
hljs.registerLanguage("go", function (e) {
    var t = {
        keyword: "break default func interface select case map struct chan else goto package switch const fallthrough if range type continue for import return var go defer bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 uint16 uint32 uint64 int uint uintptr rune",
        literal: "true false iota nil",
        built_in: "append cap close complex copy imag len make new panic print println real recover delete"
    };
    return {
        aliases: ["golang"],
        k: t,
        i: "</",
        c: [e.CLCM, e.CBCM, {cN: "string", v: [e.QSM, {b: "'", e: "[^\\\\]'"}, {b: "`", e: "`"}]}, {
            cN: "number",
            v: [{b: e.CNR + "[dflsi]", r: 1}, e.CNM]
        }, {b: /:=/}, {
            cN: "function",
            bK: "func",
            e: /\s*\{/,
            eE: !0,
            c: [e.TM, {cN: "params", b: /\(/, e: /\)/, k: t, i: /["']/}]
        }]
    }
});
hljs.registerLanguage("coffeescript", function (e) {
    var c = {
        keyword: "in if for while finally new do return else break catch instanceof throw try this switch continue typeof delete debugger super then unless until loop of by when and or is isnt not",
        literal: "true false null undefined yes no on off",
        built_in: "npm require console print module global window document"
    }, n = "[A-Za-z$_][0-9A-Za-z$_]*", r = {
        cN: "subst",
        b: /#\{/,
        e: /}/,
        k: c
    }, s = [e.BNM, e.inherit(e.CNM, {starts: {e: "(\\s*/)?", r: 0}}), {
        cN: "string",
        v: [{b: /'''/, e: /'''/, c: [e.BE]}, {b: /'/, e: /'/, c: [e.BE]}, {b: /"""/, e: /"""/, c: [e.BE, r]}, {
            b: /"/,
            e: /"/,
            c: [e.BE, r]
        }]
    }, {
        cN: "regexp",
        v: [{b: "///", e: "///", c: [r, e.HCM]}, {b: "//[gim]*", r: 0}, {b: /\/(?![ *])(\\\/|.)*?\/[gim]*(?=\W|$)/}]
    }, {b: "@" + n}, {b: "`", e: "`", eB: !0, eE: !0, sL: "javascript"}];
    r.c = s;
    var i = e.inherit(e.TM, {b: n}), t = "(\\(.*\\))?\\s*\\B[-=]>", o = {
        cN: "params",
        b: "\\([^\\(]",
        rB: !0,
        c: [{b: /\(/, e: /\)/, k: c, c: ["self"].concat(s)}]
    };
    return {
        aliases: ["coffee", "cson", "iced"],
        k: c,
        i: /\/\*/,
        c: s.concat([e.C("###", "###"), e.HCM, {
            cN: "function",
            b: "^\\s*" + n + "\\s*=\\s*" + t,
            e: "[-=]>",
            rB: !0,
            c: [i, o]
        }, {b: /[:\(,=]\s*/, r: 0, c: [{cN: "function", b: t, e: "[-=]>", rB: !0, c: [o]}]}, {
            cN: "class",
            bK: "class",
            e: "$",
            i: /[:="\[\]]/,
            c: [{bK: "extends", eW: !0, i: /[:="\[\]]/, c: [i]}, i]
        }, {b: n + ":", e: ":", rB: !0, rE: !0, r: 0}])
    }
});
hljs.registerLanguage("json", function (e) {
    var i = {literal: "true false null"}, n = [e.QSM, e.CNM], r = {e: ",", eW: !0, eE: !0, c: n, k: i}, t = {
        b: "{",
        e: "}",
        c: [{cN: "attr", b: /"/, e: /"/, c: [e.BE], i: "\\n"}, e.inherit(r, {b: /:/})],
        i: "\\S"
    }, c = {b: "\\[", e: "\\]", c: [e.inherit(r)], i: "\\S"};
    return n.splice(n.length, 0, t, c), {c: n, k: i, i: "\\S"}
});
hljs.registerLanguage("css", function (e) {
    var c = "[a-zA-Z-][a-zA-Z0-9_-]*", t = {
        b: /[A-Z\_\.\-]+\s*:/,
        rB: !0,
        e: ";",
        eW: !0,
        c: [{
            cN: "attribute",
            b: /\S/,
            e: ":",
            eE: !0,
            starts: {
                eW: !0,
                eE: !0,
                c: [{
                    b: /[\w-]+\(/,
                    rB: !0,
                    c: [{cN: "built_in", b: /[\w-]+/}, {b: /\(/, e: /\)/, c: [e.ASM, e.QSM]}]
                }, e.CSSNM, e.QSM, e.ASM, e.CBCM, {cN: "number", b: "#[0-9A-Fa-f]+"}, {cN: "meta", b: "!important"}]
            }
        }]
    };
    return {
        cI: !0,
        i: /[=\/|'\$]/,
        c: [e.CBCM, {cN: "selector-id", b: /#[A-Za-z0-9_-]+/}, {
            cN: "selector-class",
            b: /\.[A-Za-z0-9_-]+/
        }, {cN: "selector-attr", b: /\[/, e: /\]/, i: "$"}, {
            cN: "selector-pseudo",
            b: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
        }, {b: "@(font-face|page)", l: "[a-z-]+", k: "font-face page"}, {
            b: "@",
            e: "[{;]",
            i: /:/,
            c: [{cN: "keyword", b: /\w+/}, {b: /\s/, eW: !0, eE: !0, r: 0, c: [e.ASM, e.QSM, e.CSSNM]}]
        }, {cN: "selector-tag", b: c, r: 0}, {b: "{", e: "}", i: /\S/, c: [e.CBCM, t]}]
    }
});
hljs.registerLanguage("ruby", function (e) {
    var r = "[a-zA-Z_]\\w*[!?=]?|[-+~]\\@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?", b = {
        keyword: "and then defined module in return redo if BEGIN retry end for self when next until do begin unless END rescue else break undef not super class case require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor",
        literal: "true false nil"
    }, c = {cN: "doctag", b: "@[A-Za-z]+"}, a = {
        b: "#<",
        e: ">"
    }, s = [e.C("#", "$", {c: [c]}), e.C("^\\=begin", "^\\=end", {
        c: [c],
        r: 10
    }), e.C("^__END__", "\\n$")], n = {cN: "subst", b: "#\\{", e: "}", k: b}, t = {
        cN: "string",
        c: [e.BE, n],
        v: [{b: /'/, e: /'/}, {b: /"/, e: /"/}, {b: /`/, e: /`/}, {b: "%[qQwWx]?\\(", e: "\\)"}, {
            b: "%[qQwWx]?\\[",
            e: "\\]"
        }, {b: "%[qQwWx]?{", e: "}"}, {b: "%[qQwWx]?<", e: ">"}, {b: "%[qQwWx]?/", e: "/"}, {
            b: "%[qQwWx]?%",
            e: "%"
        }, {b: "%[qQwWx]?-", e: "-"}, {
            b: "%[qQwWx]?\\|",
            e: "\\|"
        }, {b: /\B\?(\\\d{1,3}|\\x[A-Fa-f0-9]{1,2}|\\u[A-Fa-f0-9]{4}|\\?\S)\b/}]
    }, i = {cN: "params", b: "\\(", e: "\\)", endsParent: !0, k: b}, d = [t, a, {
        cN: "class",
        bK: "class module",
        e: "$|;",
        i: /=/,
        c: [e.inherit(e.TM, {b: "[A-Za-z_]\\w*(::\\w+)*(\\?|\\!)?"}), {
            b: "<\\s*",
            c: [{b: "(" + e.IR + "::)?" + e.IR}]
        }].concat(s)
    }, {
        cN: "function",
        bK: "def",
        e: "$|;",
        c: [e.inherit(e.TM, {b: r}), i].concat(s)
    }, {b: e.IR + "::"}, {cN: "symbol", b: e.UIR + "(\\!|\\?)?:", r: 0}, {
        cN: "symbol",
        b: ":(?!\\s)",
        c: [t, {b: r}],
        r: 0
    }, {
        cN: "number",
        b: "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
        r: 0
    }, {b: "(\\$\\W)|((\\$|\\@\\@?)(\\w+))"}, {cN: "params", b: /\|/, e: /\|/, k: b}, {
        b: "(" + e.RSR + ")\\s*",
        c: [a, {
            cN: "regexp",
            c: [e.BE, n],
            i: /\n/,
            v: [{b: "/", e: "/[a-z]*"}, {b: "%r{", e: "}[a-z]*"}, {b: "%r\\(", e: "\\)[a-z]*"}, {
                b: "%r!",
                e: "![a-z]*"
            }, {b: "%r\\[", e: "\\][a-z]*"}]
        }].concat(s),
        r: 0
    }].concat(s);
    n.c = d, i.c = d;
    var l = "[>?]>", o = "[\\w#]+\\(\\w+\\):\\d+:\\d+>", u = "(\\w+-)?\\d+\\.\\d+\\.\\d(p\\d+)?[^>]+>", w = [{
        b: /^\s*=>/,
        starts: {e: "$", c: d}
    }, {cN: "meta", b: "^(" + l + "|" + o + "|" + u + ")", starts: {e: "$", c: d}}];
    return {aliases: ["rb", "gemspec", "podspec", "thor", "irb"], k: b, i: /\/\*/, c: s.concat(w).concat(d)}
});
hljs.registerLanguage("perl", function (e) {
    var t = "getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qqfileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent shutdown dump chomp connect getsockname die socketpair close flock exists index shmgetsub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedirioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when", r = {
        cN: "subst",
        b: "[$@]\\{",
        e: "\\}",
        k: t
    }, s = {
        b: "->{",
        e: "}"
    }, n = {
        v: [{b: /\$\d/}, {b: /[\$%@](\^\w\b|#\w+(::\w+)*|{\w+}|\w+(::\w*)*)/}, {
            b: /[\$%@][^\s\w{]/,
            r: 0
        }]
    }, i = [e.BE, r, n], o = [n, e.HCM, e.C("^\\=\\w", "\\=cut", {eW: !0}), s, {
        cN: "string",
        c: i,
        v: [{b: "q[qwxr]?\\s*\\(", e: "\\)", r: 5}, {b: "q[qwxr]?\\s*\\[", e: "\\]", r: 5}, {
            b: "q[qwxr]?\\s*\\{",
            e: "\\}",
            r: 5
        }, {b: "q[qwxr]?\\s*\\|", e: "\\|", r: 5}, {b: "q[qwxr]?\\s*\\<", e: "\\>", r: 5}, {
            b: "qw\\s+q",
            e: "q",
            r: 5
        }, {b: "'", e: "'", c: [e.BE]}, {b: '"', e: '"'}, {b: "`", e: "`", c: [e.BE]}, {
            b: "{\\w+}",
            c: [],
            r: 0
        }, {b: "-?\\w+\\s*\\=\\>", c: [], r: 0}]
    }, {
        cN: "number",
        b: "(\\b0[0-7_]+)|(\\b0x[0-9a-fA-F_]+)|(\\b[1-9][0-9_]*(\\.[0-9_]+)?)|[0_]\\b",
        r: 0
    }, {
        b: "(\\/\\/|" + e.RSR + "|\\b(split|return|print|reverse|grep)\\b)\\s*",
        k: "split return print reverse grep",
        r: 0,
        c: [e.HCM, {cN: "regexp", b: "(s|tr|y)/(\\\\.|[^/])*/(\\\\.|[^/])*/[a-z]*", r: 10}, {
            cN: "regexp",
            b: "(m|qr)?/",
            e: "/[a-z]*",
            c: [e.BE],
            r: 0
        }]
    }, {cN: "function", bK: "sub", e: "(\\s*\\(.*?\\))?[;{]", eE: !0, r: 5, c: [e.TM]}, {
        b: "-\\w\\b",
        r: 0
    }, {b: "^__DATA__$", e: "^__END__$", sL: "mojolicious", c: [{b: "^@@.*", e: "$", cN: "comment"}]}];
    return r.c = o, s.c = o, {aliases: ["pl", "pm"], l: /[\w\.]+/, k: t, c: o}
});
hljs.registerLanguage("python", function (e) {
    var r = {cN: "meta", b: /^(>>>|\.\.\.) /}, b = {
        cN: "string",
        c: [e.BE],
        v: [{b: /(u|b)?r?'''/, e: /'''/, c: [r], r: 10}, {b: /(u|b)?r?"""/, e: /"""/, c: [r], r: 10}, {
            b: /(u|r|ur)'/,
            e: /'/,
            r: 10
        }, {b: /(u|r|ur)"/, e: /"/, r: 10}, {b: /(b|br)'/, e: /'/}, {b: /(b|br)"/, e: /"/}, e.ASM, e.QSM]
    }, a = {
        cN: "number",
        r: 0,
        v: [{b: e.BNR + "[lLjJ]?"}, {b: "\\b(0o[0-7]+)[lLjJ]?"}, {b: e.CNR + "[lLjJ]?"}]
    }, l = {cN: "params", b: /\(/, e: /\)/, c: ["self", r, a, b]};
    return {
        aliases: ["py", "gyp"],
        k: {
            keyword: "and elif is global as in if from raise for except finally print import pass return exec else break not with class assert yield try while continue del or def lambda async await nonlocal|10 None True False",
            built_in: "Ellipsis NotImplemented"
        },
        i: /(<\/|->|\?)/,
        c: [r, a, b, e.HCM, {
            v: [{cN: "function", bK: "def", r: 10}, {cN: "class", bK: "class"}],
            e: /:/,
            i: /[${=;\n,]/,
            c: [e.UTM, l, {b: /->/, eW: !0, k: "None"}]
        }, {cN: "meta", b: /^[\t ]*@/, e: /$/}, {b: /\b(print|exec)\(/}]
    }
});
hljs.registerLanguage("markdown", function (e) {
    return {
        aliases: ["md", "mkdown", "mkd"],
        c: [{cN: "section", v: [{b: "^#{1,6}", e: "$"}, {b: "^.+?\\n[=-]{2,}$"}]}, {
            b: "<",
            e: ">",
            sL: "xml",
            r: 0
        }, {cN: "bullet", b: "^([*+-]|(\\d+\\.))\\s+"}, {cN: "strong", b: "[*_]{2}.+?[*_]{2}"}, {
            cN: "emphasis",
            v: [{b: "\\*.+?\\*"}, {b: "_.+?_", r: 0}]
        }, {cN: "quote", b: "^>\\s+", e: "$"}, {
            cN: "code",
            v: [{b: "^```w*s*$", e: "^```s*$"}, {b: "`.+?`"}, {b: "^( {4}|	)", e: "$", r: 0}]
        }, {b: "^[-\\*]{3,}", e: "$"}, {
            b: "\\[.+?\\][\\(\\[].*?[\\)\\]]",
            rB: !0,
            c: [{cN: "string", b: "\\[", e: "\\]", eB: !0, rE: !0, r: 0}, {
                cN: "link",
                b: "\\]\\(",
                e: "\\)",
                eB: !0,
                eE: !0
            }, {cN: "symbol", b: "\\]\\[", e: "\\]", eB: !0, eE: !0}],
            r: 10
        }, {
            b: /^\[[^\n]+\]:/,
            rB: !0,
            c: [{cN: "symbol", b: /\[/, e: /\]/, eB: !0, eE: !0}, {cN: "link", b: /:\s*/, e: /$/, eB: !0}]
        }]
    }
});
hljs.registerLanguage("xml", function (s) {
    var e = "[A-Za-z0-9\\._:-]+", t = {
        eW: !0,
        i: /</,
        r: 0,
        c: [{cN: "attr", b: e, r: 0}, {
            b: /=\s*/,
            r: 0,
            c: [{cN: "string", endsParent: !0, v: [{b: /"/, e: /"/}, {b: /'/, e: /'/}, {b: /[^\s"'=<>`]+/}]}]
        }]
    };
    return {
        aliases: ["html", "xhtml", "rss", "atom", "xjb", "xsd", "xsl", "plist"],
        cI: !0,
        c: [{
            cN: "meta",
            b: "<!DOCTYPE",
            e: ">",
            r: 10,
            c: [{b: "\\[", e: "\\]"}]
        }, s.C("<!--", "-->", {r: 10}), {b: "<\\!\\[CDATA\\[", e: "\\]\\]>", r: 10}, {
            b: /<\?(php)?/,
            e: /\?>/,
            sL: "php",
            c: [{b: "/\\*", e: "\\*/", skip: !0}]
        }, {
            cN: "tag",
            b: "<style(?=\\s|>|$)",
            e: ">",
            k: {name: "style"},
            c: [t],
            starts: {e: "</style>", rE: !0, sL: ["css", "xml"]}
        }, {
            cN: "tag",
            b: "<script(?=\\s|>|$)",
            e: ">",
            k: {name: "script"},
            c: [t],
            starts: {e: "</script>", rE: !0, sL: ["actionscript", "javascript", "handlebars", "xml"]}
        }, {cN: "meta", v: [{b: /<\?xml/, e: /\?>/, r: 10}, {b: /<\?\w+/, e: /\?>/}]}, {
            cN: "tag",
            b: "</?",
            e: "/?>",
            c: [{cN: "name", b: /[^\/><\s]+/, r: 0}, t]
        }]
    }
});
hljs.registerLanguage("javascript", function (e) {
    return {
        aliases: ["js", "jsx"],
        k: {
            keyword: "in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as",
            literal: "true false null undefined NaN Infinity",
            built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"
        },
        c: [{cN: "meta", r: 10, b: /^\s*['"]use (strict|asm)['"]/}, {
            cN: "meta",
            b: /^#!/,
            e: /$/
        }, e.ASM, e.QSM, {
            cN: "string",
            b: "`",
            e: "`",
            c: [e.BE, {cN: "subst", b: "\\$\\{", e: "\\}"}]
        }, e.CLCM, e.CBCM, {
            cN: "number",
            v: [{b: "\\b(0[bB][01]+)"}, {b: "\\b(0[oO][0-7]+)"}, {b: e.CNR}],
            r: 0
        }, {
            b: "(" + e.RSR + "|\\b(case|return|throw)\\b)\\s*",
            k: "return throw case",
            c: [e.CLCM, e.CBCM, e.RM, {
                b: /</,
                e: /(\/\w+|\w+\/)>/,
                sL: "xml",
                c: [{b: /<\w+\s*\/>/, skip: !0}, {b: /<\w+/, e: /(\/\w+|\w+\/)>/, skip: !0, c: ["self"]}]
            }],
            r: 0
        }, {
            cN: "function",
            bK: "function",
            e: /\{/,
            eE: !0,
            c: [e.inherit(e.TM, {b: /[A-Za-z$_][0-9A-Za-z$_]*/}), {
                cN: "params",
                b: /\(/,
                e: /\)/,
                eB: !0,
                eE: !0,
                c: [e.CLCM, e.CBCM]
            }],
            i: /\[|%/
        }, {b: /\$[(.]/}, e.METHOD_GUARD, {
            cN: "class",
            bK: "class",
            e: /[{;=]/,
            eE: !0,
            i: /[:"\[\]]/,
            c: [{bK: "extends"}, e.UTM]
        }, {bK: "constructor", e: /\{/, eE: !0}],
        i: /#(?!!)/
    }
});
hljs.registerLanguage("cpp", function (t) {
    var e = {cN: "keyword", b: "\\b[a-z\\d_]*_t\\b"}, r = {
        cN: "string",
        v: [t.inherit(t.QSM, {b: '((u8?|U)|L)?"'}), {b: '(u8?|U)?R"', e: '"', c: [t.BE]}, {
            b: "'\\\\?.",
            e: "'",
            i: "."
        }]
    }, s = {
        cN: "number",
        v: [{b: "\\b(\\d+(\\.\\d*)?|\\.\\d+)(u|U|l|L|ul|UL|f|F)"}, {b: t.CNR}],
        r: 0
    }, i = {
        cN: "meta",
        b: /#[a-z]+\b/,
        e: /$/,
        k: {"meta-keyword": "if else elif endif define undef warning error line pragma ifdef ifndef include"},
        c: [{b: /\\\n/, r: 0}, t.inherit(r, {cN: "meta-string"}), {
            cN: "meta-string",
            b: "<",
            e: ">",
            i: "\\n"
        }, t.CLCM, t.CBCM]
    }, a = t.IR + "\\s*\\(", c = {
        keyword: "int float while private char catch export virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const struct for static_cast|10 union namespace unsigned long volatile static protected bool template mutable if public friend do goto auto void enum else break extern using class asm case typeid short reinterpret_cast|10 default double register explicit signed typename try this switch continue inline delete alignof constexpr decltype noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary atomic_bool atomic_char atomic_schar atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong atomic_ullong new throw return",
        built_in: "std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr",
        literal: "true false nullptr NULL"
    }, n = [e, t.CLCM, t.CBCM, s, r];
    return {
        aliases: ["c", "cc", "h", "c++", "h++", "hpp"],
        k: c,
        i: "</",
        c: n.concat([i, {
            b: "\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",
            e: ">",
            k: c,
            c: ["self", e]
        }, {b: t.IR + "::", k: c}, {
            v: [{b: /=/, e: /;/}, {b: /\(/, e: /\)/}, {bK: "new throw return else", e: /;/}],
            k: c,
            c: n.concat([{b: /\(/, e: /\)/, k: c, c: n.concat(["self"]), r: 0}]),
            r: 0
        }, {
            cN: "function",
            b: "(" + t.IR + "[\\*&\\s]+)+" + a,
            rB: !0,
            e: /[{;=]/,
            eE: !0,
            k: c,
            i: /[^\w\s\*&]/,
            c: [{b: a, rB: !0, c: [t.TM], r: 0}, {
                cN: "params",
                b: /\(/,
                e: /\)/,
                k: c,
                r: 0,
                c: [t.CLCM, t.CBCM, r, s, e]
            }, t.CLCM, t.CBCM, i]
        }]),
        exports: {preprocessor: i, strings: r, k: c}
    }
});
hljs.registerLanguage("http", function (e) {
    var t = "HTTP/[0-9\\.]+";
    return {
        aliases: ["https"],
        i: "\\S",
        c: [{b: "^" + t, e: "$", c: [{cN: "number", b: "\\b\\d{3}\\b"}]}, {
            b: "^[A-Z]+ (.*?) " + t + "$",
            rB: !0,
            e: "$",
            c: [{cN: "string", b: " ", e: " ", eB: !0, eE: !0}, {b: t}, {cN: "keyword", b: "[A-Z]+"}]
        }, {cN: "attribute", b: "^\\w", e: ": ", eE: !0, i: "\\n|\\s|=", starts: {e: "$", r: 0}}, {
            b: "\\n\\n",
            starts: {sL: [], eW: !0}
        }]
    }
});
hljs.registerLanguage("makefile", function (e) {
    var a = {cN: "variable", b: /\$\(/, e: /\)/, c: [e.BE]};
    return {
        aliases: ["mk", "mak"],
        c: [e.HCM, {
            b: /^\w+\s*\W*=/,
            rB: !0,
            r: 0,
            starts: {e: /\s*\W*=/, eE: !0, starts: {e: /$/, r: 0, c: [a]}}
        }, {cN: "section", b: /^[\w]+:\s*$/}, {
            cN: "meta",
            b: /^\.PHONY:/,
            e: /$/,
            k: {"meta-keyword": ".PHONY"},
            l: /[\.\w]+/
        }, {b: /^\t+/, e: /$/, r: 0, c: [e.QSM, a]}]
    }
});
hljs.registerLanguage("cs", function (e) {
    var i = {
        keyword: "abstract as base bool break byte case catch char checked const continue decimal dynamic default delegate do double else enum event explicit extern finally fixed float for foreach goto if implicit in int interface internal is lock long when object operator out override params private protected public readonly ref sbyte sealed short sizeof stackalloc static string struct switch this try typeof uint ulong unchecked unsafe ushort using virtual volatile void while async nameof ascending descending from get group into join let orderby partial select set value var where yield",
        literal: "null false true"
    }, r = {cN: "string", b: '@"', e: '"', c: [{b: '""'}]}, t = e.inherit(r, {i: /\n/}), n = {
        cN: "subst",
        b: "{",
        e: "}",
        k: i
    }, c = e.inherit(n, {i: /\n/}), a = {
        cN: "string",
        b: /\$"/,
        e: '"',
        i: /\n/,
        c: [{b: "{{"}, {b: "}}"}, e.BE, c]
    }, s = {cN: "string", b: /\$@"/, e: '"', c: [{b: "{{"}, {b: "}}"}, {b: '""'}, n]}, o = e.inherit(s, {
        i: /\n/,
        c: [{b: "{{"}, {b: "}}"}, {b: '""'}, c]
    });
    n.c = [s, a, r, e.ASM, e.QSM, e.CNM, e.CBCM], c.c = [o, a, t, e.ASM, e.QSM, e.CNM, e.inherit(e.CBCM, {i: /\n/})];
    var l = {v: [s, a, r, e.ASM, e.QSM]}, b = e.IR + "(<" + e.IR + ">)?(\\[\\])?";
    return {
        aliases: ["csharp"],
        k: i,
        i: /::/,
        c: [e.C("///", "$", {
            rB: !0,
            c: [{cN: "doctag", v: [{b: "///", r: 0}, {b: "<!--|-->"}, {b: "</?", e: ">"}]}]
        }), e.CLCM, e.CBCM, {
            cN: "meta",
            b: "#",
            e: "$",
            k: {"meta-keyword": "if else elif endif define undef warning error line region endregion pragma checksum"}
        }, l, e.CNM, {bK: "class interface", e: /[{;=]/, i: /[^\s:]/, c: [e.TM, e.CLCM, e.CBCM]}, {
            bK: "namespace",
            e: /[{;=]/,
            i: /[^\s:]/,
            c: [e.inherit(e.TM, {b: "[a-zA-Z](\\.?\\w)*"}), e.CLCM, e.CBCM]
        }, {bK: "new return throw await", r: 0}, {
            cN: "function",
            b: "(" + b + "\\s+)+" + e.IR + "\\s*\\(",
            rB: !0,
            e: /[{;=]/,
            eE: !0,
            k: i,
            c: [{b: e.IR + "\\s*\\(", rB: !0, c: [e.TM], r: 0}, {
                cN: "params",
                b: /\(/,
                e: /\)/,
                eB: !0,
                eE: !0,
                k: i,
                r: 0,
                c: [l, e.CNM, e.CBCM]
            }, e.CLCM, e.CBCM]
        }]
    }
});
hljs.registerLanguage("sql", function (e) {
    var t = e.C("--", "$");
    return {
        cI: !0,
        i: /[<>{}*#]/,
        c: [{
            bK: "begin end start commit rollback savepoint lock alter create drop rename call delete do handler insert load replace select truncate update set show pragma grant merge describe use explain help declare prepare execute deallocate release unlock purge reset change stop analyze cache flush optimize repair kill install uninstall checksum restore check backup revoke",
            e: /;/,
            eW: !0,
            l: /[\w\.]+/,
            k: {
                keyword: "abort abs absolute acc acce accep accept access accessed accessible account acos action activate add addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias allocate allow alter always analyze ancillary and any anydata anydataset anyschema anytype apply archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound buffer_cache buffer_pool build bulk by byte byteordermark bytes cache caching call calling cancel capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base char_length character_length characters characterset charindex charset charsetform charsetid check checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation collect colu colum column column_value columns columns_updated comment commit compact compatibility compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection consider consistent constant constraint constraints constructor container content contents context contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user cursor curtime customdatum cycle data database databases datafile datafiles datalength date_add date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor deterministic diagnostics difference dimension direct_load directory disable disable_all disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div do document domain dotnet double downgrade drop dumpfile duplicate duration each edition editionable editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding execu execut execute exempt exists exit exp expire explain export export_set extended extent external external_1 external_2 externally extract failed failed_login_attempts failover failure far fast feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final finish first first_value fixed flash_cache flashback floor flush following follows for forall force form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ftp full function general generated get get_format get_lock getdate getutcdate global global_name globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex hierarchy high high_priority hosts hour http id ident_current ident_incr ident_seed identified identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile initial initialized initially initrans inmemory inner innodb input insert install instance instantiable instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists keep keep_duplicates key keys kill language large last last_day last_insert_id last_value lax lcase lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit lines link list listagg little ln load load_file lob lobs local localtime localtimestamp locate locator lock locked log log10 log2 logfile logfiles logging logical logical_reads_per_call logoff logon logs long loop low low_priority lower lpad lrtrim ltrim main make_set makedate maketime managed management manual map mapping mask master master_pos_wait match matched materialized max maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans md5 measures median medium member memcompress memory merge microsecond mid migration min minextents minimum mining minus minute minvalue missing mod mode model modification modify module monitoring month months mount move movement multiset mutex name name_const names nan national native natural nav nchar nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck noswitch not nothing notice notrim novalidate now nowait nth_value nullif nulls num numb numbe nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary out outer outfile outline output over overflow overriding package pad parallel parallel_enable parameters parent parse partial partition partitions pascal passing password password_grace_time password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction prediction_cost prediction_details prediction_probability prediction_set prepare present preserve prior priority private private_sga privileges procedural procedure procedure_analyze processlist profiles project prompt protection public publishingservername purge quarter query quick quiesce quota quotename radians raise rand range rank raw read reads readsize rebuild record records recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy reject rekey relational relative relaylog release release_lock relies_on relocate rely rem remainder rename repair repeat replace replicate replication required reset resetlogs resize resource respect restore restricted result result_cache resumable resume retention return returning returns reuse reverse revoke right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll sdo_georaster sdo_topo_geometry search sec_to_time second section securefile security seed segment select self sequence sequential serializable server servererror session session_user sessions_per_user set sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone standby start starting startup statement static statistics stats_binomial_test stats_crosstab stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table tables tablespace tan tdo template temporary terminated tertiary_weights test than then thread through tier ties time time_format time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unpivot unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear wellformed when whene whenev wheneve whenever where while whitespace with within without work wrapped xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek",
                literal: "true false null",
                built_in: "array bigint binary bit blob boolean char character date dec decimal float int int8 integer interval number numeric real record serial serial8 smallint text varchar varying void"
            },
            c: [{cN: "string", b: "'", e: "'", c: [e.BE, {b: "''"}]}, {
                cN: "string",
                b: '"',
                e: '"',
                c: [e.BE, {b: '""'}]
            }, {cN: "string", b: "`", e: "`", c: [e.BE]}, e.CNM, e.CBCM, t]
        }, e.CBCM, t]
    }
});
hljs.registerLanguage("bash", function (e) {
    var t = {cN: "variable", v: [{b: /\$[\w\d#@][\w\d_]*/}, {b: /\$\{(.*?)}/}]}, s = {
        cN: "string",
        b: /"/,
        e: /"/,
        c: [e.BE, t, {cN: "variable", b: /\$\(/, e: /\)/, c: [e.BE]}]
    }, a = {cN: "string", b: /'/, e: /'/};
    return {
        aliases: ["sh", "zsh"],
        l: /-?[a-z\.]+/,
        k: {
            keyword: "if then else elif fi for while in do done case esac function",
            literal: "true false",
            built_in: "break cd continue eval exec exit export getopts hash pwd readonly return shift test times trap umask unset alias bind builtin caller command declare echo enable help let local logout mapfile printf read readarray source type typeset ulimit unalias set shopt autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate fc fg float functions getcap getln history integer jobs kill limit log noglob popd print pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse zsocket zstyle ztcp",
            _: "-ne -eq -lt -gt -f -d -e -s -l -a"
        },
        c: [{cN: "meta", b: /^#![^\n]+sh\s*$/, r: 10}, {
            cN: "function",
            b: /\w[\w\d_]*\s*\(\s*\)\s*\{/,
            rB: !0,
            c: [e.inherit(e.TM, {b: /\w[\w\d_]*/})],
            r: 0
        }, e.HCM, s, a, t]
    }
});;
/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-L30, 5725-Z22
 *
 * (C) Copyright IBM Corporation 2016, 2019
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/

(function ($) {
    'use strict';

    function API(apis, expandedapis) {

        var self = this;

        self.apis = apis;
        self.expandedapis = expandedapis;
        self.codeSnippets = window.codeSnippets;

        self.selectedPath = "product";

        var $window = $(window);

        function checkWidth() {
            var headerdiv = $("#header");
            if (headerdiv) {
                var headertop = headerdiv.offset().top;
                var scrolltop = $(document).scrollTop();
                var headerbottom = headertop - scrolltop + headerdiv.outerHeight(true);
                $("#columns").css({'margin-top': ((headerbottom) + 'px')});
                if ($("body").hasClass("page-comment-reply")) {
                    // move entire page over to allow comment content to appear at the top
                    $('#page').css({'margin-left': '180px'});
                } else {
                    // set toc top to height of header
                    $(".navigate-toc").css({
                        'top': ((headerbottom) + 'px'),
                        'height': ('calc(100% - ' + (headerbottom) + 'px)')
                    });
                }
            }

            var columnWidth = $('.readAndInteract .interact').width();
            $(".readAndInteract .rightHeader").css({'width': ((columnWidth) + 'px')});

            var windowsize = $window.width();
            if (windowsize < 800) {
                // use hamburger menu
                $("#hamburger").removeClass("hidden");
                $('.navigate-toc').addClass('hidden');
            } else {
                $("#hamburger").addClass("hidden");
                $('.navigate-toc').removeClass('hidden');
            }

            // set width of plans section
            var plansdiv = $(".plansSection .plans .plansinner");
            var apisdiv = $(".plansSection .apiList");
            var titlediv = $(".plansSection .plansectiontitle");
            if (apisdiv && titlediv && plansdiv) {
                var left = apisdiv.width();
                var width = titlediv.width();
                plansdiv.css({'max-width': ((width - left) + 'px')});
            }
        }

        // Execute on load
        setTimeout(function () {
            checkWidth();
        }, 0);
        // Bind hamburger event listener
        $window.resize(checkWidth);

        // Returns a function, that, as long as it continues to be invoked, will not
        // be triggered. The function will be called after it stops being called for
        // N milliseconds. If `immediate` is passed, trigger the function on the
        // leading edge, instead of the trailing.
        function debounce(func, wait, immediate) {
            var timeout;
            return function () {
                var context = this, args = arguments;
                var later = function () {
                    timeout = null;
                    if (!immediate) func.apply(context, args);
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) func.apply(context, args);
            };
        }

        var stickyCheck = debounce(function () {
            var headerdiv = $("#header");
            if (headerdiv) {
                var headertop = headerdiv.offset().top;
                var scrolltop = $(document).scrollTop();
                var headerbottom = headertop - scrolltop + headerdiv.outerHeight(true);
                //var div_top = $('.readAndInteract .rightHeader').offset().top;
                var div = $('.readAndInteract')[0];
                if (div) {
                    var div_top = div.getBoundingClientRect().top;
                    if (headerbottom >= div_top) {
                        $('.readAndInteract .rightHeader').addClass('stick').css({'top': ((headerbottom) + 'px')});
                    } else {
                        $('.readAndInteract .rightHeader').removeClass('stick');
                    }
                }
            }
        }, 100);

        window.addEventListener('scroll', stickyCheck);

        $("#hamburger").click(function () {
            $('.navigate-toc').removeClass('hidden');
        });

        // close the menu
        $('.navigate-toc').click(function () {
            var windowsize = $window.width();
            if (windowsize < 800) {
                $('.navigate-toc').addClass('hidden');
            }
        });
        $('.mesh-portal-product').click(function () {
            var windowsize = $window.width();
            if (windowsize < 800) {
                $('.navigate-toc').addClass('hidden');
            }
        });

        function cleanUpKey(key) {
            return key.replace(/\W/g, '');
        }

        function cleanUpClassName(input) {
            input = input.toLowerCase();
            input = input.replace(/ /g, "-").replace(/_/g, "-").replace(/\[/g, "-").replace(/]/g, "-");

            // As defined in http://www.w3.org/TR/html4/types.html#type-name, HTML IDs can
            // only contain letters, digits ([0-9]), hyphens ("-"), underscores ("_"),
            // colons (":"), and periods ("."). We strip out any character not in that
            // list. Note that the CSS spec doesn't allow colons or periods in identifiers
            // (http://www.w3.org/TR/CSS21/syndata.html#characters), so we strip those two
            // characters as well.
            input = input.replace(/[^A-Za-z0-9\-_]+/gi, '', input);

            return input;
        }

        /**
         * Populate the code snippets
         * @param api
         * @param path
         * @param verb
         */
        function populateCodeSnippets(api, path, verb) {
            var id = "apis_" + cleanUpClassName(api.info["x-ibm-name"] + api.info["version"]) + "_paths_" + cleanUpKey(path) + "_" + verb;
            var operation = api.paths[path][verb];
            var config;
            var tester = self.testers[api.info["x-ibm-name"] + api.info["version"] + "_" + verb + "_" + path];
            if (tester) {
                config = tester.config;
            } else {
                config = window.CommonAPI.getConfigurationForOperation(operation, api.paths[path], api);
            }

            var languages = ["curl", "ruby", "python", "php", "java", "node", "go", "swift", "c", "csharp"];
            var endpoint = self.getEndpoint(api);
            if (api.basePath) {
                endpoint = endpoint + api.basePath;
            }
            var content = window.exampleGenerator.generateCodeSnippets(api, path, verb, operation, config, 'REPLACE_THIS_KEY', 'REPLACE_THIS_KEY', languages, null, endpoint);

            var body = null;
            var parameters = [];
            if (operation.parameters) {
                parameters = parameters.concat(operation.parameters);
            }
            if (api.paths[path].parameters) {
                parameters = parameters.concat(api.paths[path].parameters);
            }

            // body
            var bodyParameters = parameters.filter(function (parameter) {
                return (parameter.in == "body");
            });
            if (bodyParameters.length > 0) {
                // use the first one only
                // should be inline schema by now
                try {
                    var example = window.exampleGenerator.generateExampleParameter(api, path, verb, bodyParameters[0], null, false);
                    $("#body_" + id + " textarea").val(example).height(150);
                } catch (e) {

                }
            }
            var truncated = '';
            if (codeSnippets.curl && codeSnippets.curl == 1) {
                if (content.curlContent.length > 2000) {
                    truncated = content.curlContent.substring(0, 2000);
                    $("#langtab-" + id + "-curl pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-curl pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-curl .popup-inner pre code").text(content.curlContent);
                    $("#langtab-" + id + "-curl .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-curl pre.truncatedPre code").text(content.curlContent);
                }
            }
            if (codeSnippets.ruby && codeSnippets.ruby == 1) {
                if (content.rubyContent.length > 2000) {
                    truncated = content.rubyContent.substring(0, 2000);
                    $("#langtab-" + id + "-ruby pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-ruby pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-ruby .popup-inner pre code").text(content.rubyContent);
                    $("#langtab-" + id + "-ruby .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-ruby pre.truncatedPre code").text(content.rubyContent);
                }
            }
            if (codeSnippets.python && codeSnippets.python == 1) {
                if (content.pythonContent.length > 2000) {
                    truncated = content.pythonContent.substring(0, 2000);
                    $("#langtab-" + id + "-python pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-python pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-python .popup-inner pre code").text(content.pythonContent);
                    $("#langtab-" + id + "-python .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-python pre.truncatedPre code").text(content.pythonContent);
                }
            }
            if (codeSnippets.php && codeSnippets.php == 1) {
                if (content.phpContent.length > 2000) {
                    truncated = content.phpContent.substring(0, 2000);
                    $("#langtab-" + id + "-php pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-php pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-php .popup-inner pre code").text(content.phpContent);
                    $("#langtab-" + id + "-php .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-php pre.truncatedPre code").text(content.phpContent);
                }
            }
            if (codeSnippets.java && codeSnippets.java == 1) {
                if (content.javaContent.length > 2000) {
                    truncated = content.javaContent.substring(0, 2000);
                    $("#langtab-" + id + "-java pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-java pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-java .popup-inner pre code").text(content.javaContent);
                    $("#langtab-" + id + "-java .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-java pre.truncatedPre code").text(content.javaContent);
                }
            }
            if (codeSnippets.node && codeSnippets.node == 1) {
                if (content.nodeContent.length > 2000) {
                    truncated = content.nodeContent.substring(0, 2000);
                    $("#langtab-" + id + "-node pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-node pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-node .popup-inner pre code").text(content.nodeContent);
                    $("#langtab-" + id + "-node .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-node pre.truncatedPre code").text(content.nodeContent);
                }
            }
            if (codeSnippets.go && codeSnippets.go == 1) {
                if (content.goContent.length > 2000) {
                    truncated = content.goContent.substring(0, 2000);
                    $("#langtab-" + id + "-go pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-go pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-go .popup-inner pre code").text(content.goContent);
                    $("#langtab-" + id + "-go .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-go pre.truncatedPre code").text(content.goContent);
                }
            }
            if (codeSnippets.swift && codeSnippets.swift == 1) {
                if (content.swiftContent.length > 2000) {
                    truncated = content.swiftContent.substring(0, 2000);
                    $("#langtab-" + id + "-swift pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-swift pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-swift .popup-inner pre code").text(content.swiftContent);
                    $("#langtab-" + id + "-swift .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-swift pre.truncatedPre code").text(content.swiftContent);
                }
            }
            if (codeSnippets.c && codeSnippets.c == 1) {
                if (content.cContent.length > 2000) {
                    truncated = content.cContent.substring(0, 2000);
                    $("#langtab-" + id + "-c pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-c pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-c .popup-inner pre code").text(content.cContent);
                    $("#langtab-" + id + "-c .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-c pre.truncatedPre code").text(content.cContent);
                }
            }
            if (codeSnippets.csharp && codeSnippets.csharp == 1) {
                if (content.csharpContent.length > 2000) {
                    truncated = content.csharpContent.substring(0, 2000);
                    $("#langtab-" + id + "-csharp pre.truncatedPre code").text(truncated);
                    $("#langtab-" + id + "-csharp pre.truncatedPre").addClass('truncate');
                    $("#langtab-" + id + "-csharp .popup-inner pre code").text(content.csharpContent);
                    $("#langtab-" + id + "-csharp .showMore").removeClass('hidden');
                } else {
                    $("#langtab-" + id + "-csharp pre.truncatedPre code").text(content.csharpContent);
                }
            }
        }

        /**
         * Generate the examples
         * @param api
         * @param path
         * @param verb
         */
        function generateExamples(api, path, verb) {
            var exampleid = "exampleresponse_apis_" + cleanUpClassName(api.info["x-ibm-name"] + api.info["version"]) + "_paths_" + cleanUpKey(path) + "_" + verb;

            function hideTab(api, path, verb) {
                var cleanedapiname = cleanUpClassName(api.info["x-ibm-name"] + api.info["version"]);
                var container = $(".navigate-apis_" + cleanedapiname + "_paths");
                // hide example section since nothing worthwhile putting in it
                var tabid = "tab-content_example_" + cleanedapiname + "_paths_" + cleanUpKey(path) + "_" + verb;
                $("#" + tabid, container).hide();
            }

            try {
                var example = window.exampleGenerator.generateExampleResponse(api, path, verb);
                if (example.length > 1000) {
                    var truncated = example.substring(0, 1000);
                    $("#" + exampleid + " pre.exampleResponsePre code").text(truncated);
                    $("#" + exampleid + " pre.exampleResponsePre").addClass('truncate');
                    $("#" + exampleid + " .popup-inner pre code").text(example);
                    $("#" + exampleid + " .showMore").removeClass('hidden');
                } else {
                    $("#" + exampleid + " pre.exampleResponsePre code").text(example);
                }
            } catch (e) {
                hideTab(api, path, verb);
            }
        }

        function populateCodeSnippetsTimeout(expanded, path, verb) {
            setTimeout(function () {
                populateCodeSnippets(expanded, path, verb);
            }, 0);
            // if multiple security requirements then watch for a change
            var id = "content-apis_" + cleanUpClassName(expanded.info["x-ibm-name"] + expanded.info["version"]) + "_paths_" + cleanUpKey(path) + "_" + verb;
            var requestForm = $("." + id + " form[name='request_" + cleanUpClassName(expanded.info["x-ibm-name"] + expanded.info["version"]) + "_" + cleanUpKey(path) + "_" + verb + "']");
            $(".securitySelectionSection .apimSecurityType .securityType", requestForm).change(
                function () {
                    // has to be on timeout to ensure the security config has been reparsed by the test tool code
                    setTimeout(function () {
                        populateCodeSnippets(expanded, path, verb);
                        $('.langtab pre').each(function (i, block) {
                            if (window.disable_highlightjs != 1) {
                                hljs.highlightBlock(block);
                            }
                        });
                    }, 0);
                }
            );
        }

        function generateExamplesTimeout(expanded, path, verb) {
            setTimeout(function () {
                generateExamples(expanded, path, verb);
            }, 0);
        }

        var waypoints = [
            {path: "product"},
            {path: "apis"}
        ];
        self.apis.forEach(function (api) {
            if (!api.basePath) {
                api.basePath = '';
            }
            var cleanedapiname = cleanUpClassName(api.info["x-ibm-name"] + api.info["version"]);
            // set the height of the expanded section in the plan table to match that of the expanded API ops
            var apidiv = $(".apiList .planapiwrapper-" + cleanedapiname);
            if (apidiv) {
                var headerbottom = apidiv.outerHeight(true);
                $(".plan .planapiwrapper-" + cleanedapiname).css({'height': (headerbottom + 'px')});
            }
            waypoints.push({
                path: "apis_" + cleanedapiname,
                expand: "apis_" + cleanedapiname
            });
            waypoints.push({
                path: "apis_" + cleanedapiname + "_definitions",
                expand: "apis_" + cleanedapiname
            });
            waypoints.push({
                path: "apis_" + cleanedapiname + "_security",
                expand: "apis_" + cleanedapiname
            });
            self.expandedapis.forEach(function (expanded) {
                if (expanded.info['x-ibm-name'] && expanded.info['x-ibm-name'] == api.info['x-ibm-name'] && expanded.info['version'] && expanded.info['version'] == api.info['version']) {
                    Object.keys(api.paths).forEach(function (path) {
                        Object.keys(api.paths[path]).forEach(function (verb) {
                            if (["PUT", "POST", "GET", "DELETE", "OPTIONS", "HEAD", "PATCH"].indexOf(verb.toUpperCase()) != -1) {
                                if (!expanded.basePath) {
                                    expanded.basePath = '';
                                }
                                waypoints.push({
                                    path: "apis_" + cleanedapiname + "_paths_" + cleanUpKey(path) + "_" + verb,
                                    verb: verb,
                                    offset: 16,
                                    expand: "apis_" + cleanedapiname
                                });
                                populateCodeSnippetsTimeout(expanded, path, verb);
                                generateExamplesTimeout(expanded, path, verb);
                            }
                        });
                    });
                    if (api.definitions) {
                        Object.keys(api.definitions).forEach(function (definition) {
                            waypoints.push({
                                path: "apis_" + cleanedapiname + "_definitions_" + definition.replace(/[^A-Za-z0-9_]+/gi, '').replace(/_/g, '-').toLowerCase(),
                                expand: "apis_" + cleanedapiname
                            });
                        });
                    }
                }
            });
        });
        /* On timeout so it runs after the code snippets and examples have been generated */
        setTimeout(function () {
            $('.langtab pre').each(function (i, block) {
                if (window.disable_highlightjs != 1) {
                    hljs.highlightBlock(block);
                }
            });
            $('.exampleRespData pre').each(function (i, block) {
                if (window.disable_highlightjs != 1) {
                    hljs.highlightBlock(block);
                }
            });
            $('pre.inlineSchema').each(function (i, block) {
                if (window.disable_highlightjs != 1) {
                    hljs.highlightBlock(block);
                }
            });
            $('.markdown pre').each(function (i, block) {
                $(this).addClass('inlineSchema');
                if (window.disable_highlightjs != 1) {
                    hljs.highlightBlock(block);
                }
            });
        }, 0);

        function registerWaypoints() {
            var headerHeight = ($("#header").height() + 1);
            waypoints.forEach(function (waypoint) {
                var element = document.querySelector(".navigate-" + waypoint.path);
                if (!element) return;
                new Waypoint({
                    element: element,
                    offset: (waypoint.offset) ? waypoint.offset + headerHeight : headerHeight,
                    handler: function (direction) {
                        if (self.userNavigate) {
                            setTimeout(function () {
                                self.userNavigate = false;
                            }, 100);
                            return;
                        }
                        self.setSelectedPath(waypoint.path, waypoint.verb, waypoint.expand);
                    }
                });
            });
        }

        registerWaypoints();

        function watchCodeList() {
            $(".langs-menu a").click(function (event) {
                event.preventDefault();
                $(this).parent().addClass("current");
                $(this).parent().siblings().removeClass("current");
                var tab = $(this).attr("href");
                tab = tab.replace(/^\#/g, '');
                $('.' + tab).siblings().removeClass("show");
                $('.' + tab).addClass("show").fadeIn();
            });
        }

        watchCodeList();

        function createTesters() {
            self.testers = {};
            self.expandedapis.forEach(function (api) {
                Object.keys(api.paths).forEach(function (path) {
                    var pathObject = api.paths[path];
                    Object.keys(pathObject).forEach(function (verb) {
                        if (["PUT", "POST", "GET", "DELETE", "OPTIONS", "HEAD", "PATCH"].indexOf(verb.toUpperCase()) != -1) {
                            self.testers[api['info']['x-ibm-name'] + api['info']['version'] + "_" + verb + "_" + path] = new Test({
                                    api: api,
                                    path: path,
                                    verb: verb,
                                    definition: pathObject[verb]
                                },
                                api,
                                self);
                        }
                    });
                });
            });
        }

        createTesters();

        function watchEndpoint() {
            $(".endpointSelect").change(function (event) {
                event.preventDefault();
                var endpoint = this.value;
                if (endpoint) {
                    self.setEndpoint(endpoint);
                    var apistring = this.dataset.api;
                    self.expandedapis.forEach(function (expanded) {
                        var cleanedapiname = cleanUpClassName(expanded.info["x-ibm-name"] + expanded.info["version"]);
                        if (cleanedapiname == apistring) {
                            Object.keys(expanded.paths).forEach(function (path) {
                                Object.keys(expanded.paths[path]).forEach(function (verb) {
                                    if (["PUT", "POST", "GET", "DELETE", "OPTIONS", "HEAD", "PATCH"].indexOf(verb.toUpperCase()) != -1) {
                                        if (!expanded.basePath) {
                                            expanded.basePath = '';
                                        }
                                        populateCodeSnippetsTimeout(expanded, path, verb);
                                        var exampleid = cleanUpClassName(expanded.info["x-ibm-name"] + expanded.info["version"]) + "_paths_" + cleanUpKey(path) + "_" + verb;
                                        var tryid = cleanUpClassName(expanded.info["x-ibm-name"] + expanded.info["version"]) + "_" + cleanUpKey(path) + "_" + verb;
                                        var url = endpoint + expanded['basePath'] + path;
                                        // remove any double slashes in the path of the URL
                                        url = url.replace(/([^:]\/)\/+/g, "$1");
                                        $("#tab-content_example_" + exampleid + " .exampleDefinition").text(verb.toUpperCase() + " " + url);
                                        $("#tab-content_try_" + tryid + " .apiURL").text(url);

                                        var tester = self.testers[expanded.info["x-ibm-name"] + expanded.info["version"] + "_" + verb + "_" + path];
                                        tester.parseSecurityConfig();
                                    }
                                });
                            });
                        }
                    });
                    setTimeout(function () {
                        $('.langtab pre').each(function (i, block) {
                            if (window.disable_highlightjs != 1) {
                                hljs.highlightBlock(block);
                            }
                        });
                    }, 0);
                }
            });
        }

        watchEndpoint();

        $('.definitionsSection pre code').each(function (i, block) {
            if (window.disable_highlightjs != 1) {
                hljs.highlightBlock(block);
            }
        });
    }

    API.prototype.test = function (apiname, verb, path) {
        path = path.replace(/%27/g, "\'");
        var tester = this.testers[apiname + "_" + verb + "_" + path];
        if (tester) {
            tester.test();
        }
        // prevent submit button from actually submitting the form
        if (event.preventDefault) {
            event.preventDefault();
        } else {
            event.returnValue = false; // for IE as doesn't support preventDefault;
        }
        return false;
    };

    API.prototype.authorize = function (apiname, verb, path) {
        path = path.replace(/%27/g, "\'");
        var tester = this.testers[apiname + "_" + verb + "_" + path];
        if (tester) {
            tester.authorize();
        }
        // prevent submit button from actually submitting the form
        if (event.preventDefault) {
            event.preventDefault();
        } else {
            event.returnValue = false; // for IE as doesn't support preventDefault;
        }
        return false;
    };

    API.prototype.getToken = function (apiname, verb, path) {
        path = path.replace(/%27/g, "\'");
        var tester = this.testers[apiname + "_" + verb + "_" + path];
        if (tester) {
            tester.getToken();
        }
        // prevent submit button from actually submitting the form
        if (event.preventDefault) {
            event.preventDefault();
        } else {
            event.returnValue = false; // for IE as doesn't support preventDefault;
        }
        return false;
    };

    API.prototype.refreshToken = function (apiname, verb, path) {
        path = path.replace(/%27/g, "\'");
        var tester = this.testers[apiname + "_" + verb + "_" + path];
        if (tester) {
            tester.refreshToken();
        }
        // prevent submit button from actually submitting the form
        if (event.preventDefault) {
            event.preventDefault();
        } else {
            event.returnValue = false; // for IE as doesn't support preventDefault;
        }
        return false;
    };

    API.prototype.forgetToken = function (apiname, verb, path) {
        var tester = this.testers[apiname + "_" + verb + "_" + path];
        if (tester) {
            tester.forgetToken();
        }
        // prevent submit button from actually submitting the form
        if (event.preventDefault) {
            event.preventDefault();
        } else {
            event.returnValue = false; // for IE as doesn't support preventDefault;
        }
        return false;
    };

    API.prototype.navigate = function (path, expand) {
        this.userNavigate = true;
        this.setSelectedPath(path, null, expand);
        var node = document.querySelector('.navigate-apis .navigate-' + path);
        if (node) {
            node.scrollIntoView();
            window.scrollBy(0, -150);
        }
    };

    API.prototype.navigateop = function (path, expand) {
        this.userNavigate = true;
        this.setSelectedPath(path, null, expand);
        var node = document.querySelector('.navigate-apis .navigate-' + path);
        if (node) {
            $(".opwrapper-" + path).addClass("open");
            node.scrollIntoView();
            window.scrollBy(0, -150);
        }
    };

    API.prototype.navigatedefs = function (api, def, expand) {
        $(".definitions_toggle_apis-" + api).addClass("open");
        this.userNavigate = true;
        this.setSelectedPath('apis_' + api + '_definitions_' + def, null, expand);
        var node = document.querySelector('.navigate-apis .navigate-' + 'apis_' + api + '_definitions_' + def);
        if (node) {
            node.scrollIntoView();
            window.scrollBy(0, -150);
        }
    };

    API.prototype.selecttag = function (api, tag) {
        $(".apis_" + api + " .operation").addClass("hidden");
        $(".apis_" + api + " .operation-tag-" + tag).removeClass("hidden");
        $(".apis_" + api + " .apiTag").addClass("hidden").removeClass("selected");
        $(".apis_" + api + " .apiTag." + tag).removeClass("hidden").addClass("selected");
        $(".apis_" + api + " .apiTag." + tag + " .unselect").removeClass("hidden");
        $(".apis_" + api + " .pathWrapper").each(function (index, value) {
            if ($(".readAndInteract.operation", this).not('.hidden').length < 1) {
                $(this).addClass("hidden");
            }
        });
    };
    API.prototype.unselecttag = function (api) {
        $(".apis_" + api + " .operation").removeClass("hidden");
        $(".apis_" + api + " .apiTag").removeClass("hidden").removeClass("selected");
        $(".apis_" + api + " .apiTag .unselect").addClass("hidden");
        $(".apis_" + api + " .pathWrapper").removeClass("hidden");
    };

    API.prototype.toggleplanapi = function (api) {
        $(".planapiwrapper-" + api).toggleClass("open");
        // set the height of the expanded section in the plan table to match that of the expanded API ops
        var apidiv = $(".apiList .planapiwrapper-" + api);
        var headerbottom = apidiv.outerHeight(true);
        $(".plan .planapiwrapper-" + api).css({'height': (headerbottom + 'px')});
    };

    API.prototype.togglesection = function (section) {
        $("." + section + "Container").toggleClass("open");
    };

    API.prototype.toggleop = function (operation) {
        $(".opwrapper-" + operation).toggleClass("open");
    };
    API.prototype.toggledefs = function (api) {
        $(".definitions_toggle_apis-" + api).toggleClass("open");
    };

    API.prototype.getSelectedPath = function () {
        return this.selectedPath;
    };

    API.prototype.setSelectedPath = function (path, verb, expand) {
        this.selectedPath = path;
        $('.mesh-portal-product .tocItem a.selected').removeClass('selected');
        $('.mesh-portal-product .tocItem.toc-' + path + ' > a').addClass('selected');
        if (expand) {
            $(".toc .toc-container-" + expand).removeClass("hidden");
        }
    };

    API.prototype.getEndpoint = function (api) {
        if (this.endpoint) {
            return this.endpoint;
        } else if (api && api['x-ibm-endpoints'] && api['x-ibm-endpoints'][0] && api['x-ibm-endpoints'][0].endpointUrl) {
            return api['x-ibm-endpoints'][0].endpointUrl;
        } else if (api && api.host){
            var endpoint = "://" + api.host;
            if (api.schemes) {
                endpoint = api.schemes[0] + endpoint;
            } else {
                endpoint = "https" + endpoint;
            }
            return endpoint;
        } else {
            return "";
        }
    };

    API.prototype.setEndpoint = function (string) {
        this.endpoint = string;
    };

    window.API = API;

    $(document).ready(function () {

        window.refResolver.resolveReferences(window.apiJson[0]).then(function(expandedapiJson) {

            let expandedApis = [expandedapiJson];
            window.API = new API(window.apiJson, expandedApis);
            // Handle the popups for large requests and responses
            //----- OPEN
            $('[data-popup-open]').on('click', function () {
                var targeted_popup_class = jQuery(this).attr('data-popup-open');
                $('[data-popup="' + targeted_popup_class + '"]').fadeIn(350);

                if (event.preventDefault) {
                    event.preventDefault();
                } else {
                    event.returnValue = false; // for IE as doesn't support preventDefault;
                }
                return false;
            });

            //----- CLOSE
            $('[data-popup-close]').on('click', function () {
                var targeted_popup_class = jQuery(this).attr('data-popup-close');
                $('[data-popup="' + targeted_popup_class + '"]').fadeOut(350);

                if (event.preventDefault) {
                    event.preventDefault();
                } else {
                    event.returnValue = false; // for IE as doesn't support preventDefault;
                }
                return false;
            });
        });

    });

    function Test(operation, api, apiObj) {

        var self = this;

        self.operation = operation;
        self.api = api;
        // the API instance
        self.apiObj = apiObj;

        function cleanUpKey(key) {
            return key.replace(/\W/g, '');
        }

        function cleanUpClassName(input) {
            input = input.toLowerCase();
            input = input.replace(/ /g, "-").replace(/_/g, "-").replace(/\[/g, "-").replace(/]/g, "-");

            // As defined in http://www.w3.org/TR/html4/types.html#type-name, HTML IDs can
            // only contain letters, digits ([0-9]), hyphens ("-"), underscores ("_"),
            // colons (":"), and periods ("."). We strip out any character not in that
            // list. Note that the CSS spec doesn't allow colons or periods in identifiers
            // (http://www.w3.org/TR/CSS21/syndata.html#characters), so we strip those two
            // characters as well.
            input = input.replace(/[^A-Za-z0-9\-_]+/gi, '', input);

            return input;
        }

        var id = "content-apis_" + cleanUpClassName(api.info["x-ibm-name"] + api.info["version"]) + "_paths_" + cleanUpKey(self.operation.path) + "_" + self.operation.verb;
        self.responseSection = $("." + id + " #response_" + cleanUpClassName(api.info["x-ibm-name"] + api.info["version"]) + '_' + cleanUpKey(self.operation.path) + "_" + self.operation.verb);
        self.requestForm = $("." + id + " form[name='request_" + cleanUpClassName(api.info["x-ibm-name"] + api.info["version"]) + "_" + cleanUpKey(self.operation.path) + "_" + self.operation.verb + "']");

        // check security requirements
        self.config = window.CommonAPI.getConfigurationForOperation(operation.definition, api.paths[operation.path], api);

        // any security requirements at all?
        if (self.config.requiresSecuritySection || (self.config.securityFlows && self.config.securityFlows.length > 0)) {
            $(".securitySection", self.requestForm).removeClass("hidden");
        }

        // select security type
        // TODO fix stuff below
        if (self.config.securityFlows && self.config.securityFlows.length > 1) {
            $(".securitySelectionSection", self.requestForm).removeClass("hidden");
            $.each(self.config.securityFlows, function (key, object) {
                var option = document.createElement('option');
                option.value = object.$$label;
                var optiontext = document.createTextNode(object.$$label);
                option.appendChild(optiontext);
                $(".securitySelectionSection .apimSecurityType .securityType", self.requestForm).append(option);
            });

            // set to first option by default
            self.config = window.CommonAPI.getConfigurationForOperation(operation.definition, api.paths[operation.path], api, self.config.securityFlows[0]);
            self.parseSecurityConfig();

            $(".securitySelectionSection .apimSecurityType .securityType", self.requestForm).change(
                function () {
                    var flow = $('.securitySelectionSection .apimSecurityType .securityType option:selected', self.requestForm).val();
                    // need to reparse the config now we know the security definition
                    $.each(self.config.securityFlows, function (key, object) {
                        if (object.$$label == flow) {
                            self.config = window.CommonAPI.getConfigurationForOperation(operation.definition, api.paths[operation.path], api, object);
                        }
                    });
                    self.parseSecurityConfig();
                    // empty the token field
                    $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val('');
                }
            );
        } else if (self.config.securityFlows && self.config.securityFlows.length == 1) {
            self.config = window.CommonAPI.getConfigurationForOperation(operation.definition, api.paths[operation.path], api, self.config.securityFlows[0]);
            self.parseSecurityConfig();
        }

        // any requirement for user credentials?
        if (self.config.requiresBasicAuth || (self.config.oauthFlow == "password")) {
            $(".authorizationSection .userCredentials", self.requestForm).removeClass("hidden");
        }

        function displayRedirectURIWarning() {
            var clientid = $(".identificationSection .clientId [name=apimClientId]").val();
            if (clientid) {
                if (self.config.requiresOauth && (self.config.oauthFlow == "accessCode" || self.config.oauthFlow == "implicit")) {
                    var redirect_uris = window.appJson;
                    var redirect_uri = redirect_uris[0][clientid];
                    if (!redirect_uri) {
                        $(".identificationSection .noRedirectURI", self.requestForm).removeClass("hidden");
                    } else {
                        $(".identificationSection .noRedirectURI", self.requestForm).addClass("hidden");
                    }
                } else {
                    $(".identificationSection .noRedirectURI", self.requestForm).addClass("hidden");
                }
            } else {
                $(".identificationSection .noRedirectURI", self.requestForm).addClass("hidden");
            }
        }

        displayRedirectURIWarning();

        $(".identificationSection .clientId [name=apimClientId]", self.requestForm).change(
            function () {
                displayRedirectURIWarning();
            });
    }

    Test.prototype.parseSecurityConfig = function () {
        var self = this;
        // any requirement for identification?
        if (self.config.requiresClientId || self.config.requiresClientSecret || !$.isEmptyObject(self.config.externalApiKeys)) {
            $(".identificationSection", self.requestForm).removeClass("hidden");
        }
        // any requirement for client ID?
        if (self.config.requiresClientId) {
            $(".identificationSection .clientId", self.requestForm).removeClass("hidden");
        }
        // any requirement for client secret?
        if (self.config.requiresClientSecret) {
            $(".identificationSection .clientSecret", self.requestForm).removeClass("hidden");
        }
        // any external apiKey security
        if (!$.isEmptyObject(self.config.externalApiKeys)) {
            $.each(self.config.externalApiKeys, function (key, value) {
                var keydiv = document.createElement('div');
                keydiv.className = "parameter externalSecurity";
                var labeldiv = document.createElement('div');
                labeldiv.className = 'parameterName';
                var labelText = document.createTextNode(value.name);
                labeldiv.appendChild(labelText);
                var input = document.createElement('input');
                input.setAttribute('type', 'password');
                input.setAttribute('name', value.name);
                input.setAttribute('id', key);
                input.className = 'parameterValue';
                keydiv.appendChild(labeldiv);
                keydiv.appendChild(input);
                $(".identificationSection .contrast", self.requestForm).append(keydiv);
            });
            if (!self.config.requiresClientId && !self.config.requiresClientSecret) {
                // hide the message to login if not using clientID or clientSecret
                $(".identificationSection .loginMessage", self.requestForm).addClass("hidden");
            }
        }
        // any requirement for authorization?
        if (self.config.requiresBasicAuth || self.config.requiresOauth) {
            $(".authorizationSection", self.requestForm).removeClass("hidden");
        }

        // any requirement for an authorization call-out?
        if (self.config.requiresOauth) {
            $(".authorizationSection .apimAuthorize", self.requestForm).removeClass("hidden");
            $(".authorizationSection .apimAuthUrl", self.requestForm).removeClass("hidden");
            $(".apimScopes", self.requestForm).removeClass("hidden");
            // show client type field
            // leave this hidden for now since assuming confidential client types everywhere
            // $(".authorizationSection .apimAuthUrl .apimClientType", self.requestForm).removeClass("hidden");

            if (self.config.oauthScopes) {
                $(".apimScopes .oauthscopes", self.requestForm).empty();

                var scopesList = [];
                // If there are no operation level scopes defined, then just use the API ones
                if (!self.operation.definition["security"]){
                    $.each(self.config.oauthScopes, function (key, value) {
                        scopesList.push(value);
                    });
                } else {
                    // check if an oauth flow has been selected - we only want to show the scopes from that flow
                    var flowName = null;
                    if ($('.securityType', self.requestForm).is(":visible")){
                        flowName = $('.securityType option:selected', self.requestForm).val();
                        if (!flowName){
                            // if not set by user, then just use the first one.
                            flowName = $('.securityType option:first-child', self.requestForm).val();
                        }
                    }
                    // loop through the security operations and add all those that are of type oauth and match the
                    // selected (or first if none selected) flow name.
                    for (var i=0; i<self.operation.definition.security.length; i++){
                        $.each(self.operation.definition.security[i], function (key, value) {
                            // check if key exists in api.securityDefinitions and check if it is type oauth
                            if (api.securityDefinitions[key]){
                                if (api.securityDefinitions[key].type == "oauth2"){
                                    // if flowname is not set then it means .securityType was not visible - so just
                                    // show scopes, otherwise only show scopes for selected flow.
                                    if (!flowName || (key == flowName)){
                                        for (var x=0; x<value.length; x++){
                                            scopesList.push(value[x]);
                                        }
                                    }
                                }
                            }
                        });
                    }
                }

                for (var i=0; i<scopesList.length; i++){
                    var inputdiv = document.createElement('div');
                    var input = document.createElement('input');
                    input.setAttribute('type', 'checkbox');
                    input.setAttribute('name', 'scope[]');
                    input.setAttribute('value', scopesList[i]);
                    input.setAttribute('checked', 'checked');
                    input.value = scopesList[i];
                    var inputText = document.createTextNode(scopesList[i]);
                    inputdiv.appendChild(input);
                    inputdiv.appendChild(inputText);
                    $(".apimScopes .oauthscopes", self.requestForm).append(inputdiv);
                }

            }
            // before filling out any OAuth URLs, replace any $(catalog.url) instances
            var endpoint = self.apiObj.getEndpoint(self.api);
            if (self.config.oauthAuthUrl) {
                if (!self.config.rawAuthUrl) {
                    self.config.rawAuthUrl = self.config.oauthAuthUrl;
                }
                self.config.oauthAuthUrl = self.config.rawAuthUrl.replace('$(catalog.url)', endpoint);
            }
            if (self.config.oauthTokenUrl) {
                if (!self.config.rawTokenUrl) {
                    self.config.rawTokenUrl = self.config.oauthTokenUrl;
                }
                self.config.oauthTokenUrl = self.config.rawTokenUrl.replace('$(catalog.url)', endpoint);
            }

            // any requirement for token refresh?
            if (self.config.oauthFlow == "accessCode") {
                $(".authorizationSection .apimAuthUrl .authurl", self.requestForm).text(self.config.oauthAuthUrl);
                $(".authorizationSection .apimAuthUrl .accessCodeFlow", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .tokenurl", self.requestForm).text(self.config.oauthTokenUrl);
                $(".authorizationSection .apimAuthUrl .threelegged", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .tokenBasedFlow", self.requestForm).removeClass("hidden");

                $(".authorizationSection .apimAuthUrl .implicitFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .passwordFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .applicationFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .twolegged", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .notAccessCodeFlow", self.requestForm).addClass("hidden");
            }
            if (self.config.oauthFlow == "implicit") {
                $(".authorizationSection .apimAuthUrl .authurl", self.requestForm).text(self.config.oauthAuthUrl);
                $(".authorizationSection .apimAuthUrl .implicitFlow", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .threelegged", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .notAccessCodeFlow", self.requestForm).removeClass("hidden");

                $(".authorizationSection .apimAuthUrl .accessCodeFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .passwordFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .applicationFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .tokenBasedFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .twolegged", self.requestForm).addClass("hidden");
            }
            if (self.config.oauthFlow == "application") {
                $(".authorizationSection .apimAuthUrl .applicationFlow", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .twolegged", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .tokenBasedFlow", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .notAccessCodeFlow", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .tokenurl", self.requestForm).text(self.config.oauthTokenUrl);

                $(".authorizationSection .apimAuthUrl .accessCodeFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .implicitFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .passwordFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .threelegged", self.requestForm).addClass("hidden");
            }
            if (self.config.oauthFlow == "password") {
                $(".authorizationSection .apimAuthUrl .passwordFlow", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .twolegged", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .tokenBasedFlow", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .notAccessCodeFlow", self.requestForm).removeClass("hidden");
                $(".authorizationSection .apimAuthUrl .tokenurl", self.requestForm).text(self.config.oauthTokenUrl);

                $(".authorizationSection .apimAuthUrl .accessCodeFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .implicitFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .applicationFlow", self.requestForm).addClass("hidden");
                $(".authorizationSection .apimAuthUrl .threelegged", self.requestForm).addClass("hidden");
            }
        } else {
            $(".authorizationSection .apimAuthorize", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl", self.requestForm).addClass("hidden");
            $(".apimScopes", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .twolegged", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .accessCodeFlow", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .implicitFlow", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .applicationFlow", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .passwordFlow", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .threelegged", self.requestForm).addClass("hidden");
        }

        if (self.config.requiresBasicAuth || (self.config.oauthFlow == "password")) {
            $(".authorizationSection .userCredentials", self.requestForm).removeClass("hidden");
        } else {
            $(".authorizationSection .userCredentials", self.requestForm).addClass("hidden");
        }
    };
    Test.prototype.authorize = function () {
        var requestForm = {};
        this.requestForm.serializeArray().forEach(function (parameter) {
            requestForm[parameter.name] = parameter.value;
        });
        var headers = {};

        var self = this;

        function clearResponse() {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val('');
            $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
            $(".authorizationSection .refreshButton .refreshDone", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.mixedContentWarning", self.responseSection).addClass("hidden");
            $(".authorizationSection .oauthMessage.corsWarning", self.responseSection).addClass("hidden");
        }

        function errorHandler(xhrObj, textStatus, error) {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            // detect MixedContent
            if (self.config.oauthTokenUrl.lastIndexOf(window.location.protocol, 0) === 0) {
                $(".authorizationSection .oauthMessage.mixedContentWarning", self.requestForm).addClass("hidden");
                if (xhrObj.status && xhrObj.status == 0) {
                    $(".authorizationSection .oauthMessage.corsWarning", self.requestForm).removeClass("hidden");
                } else {
                    $(".authorizationSection .oauthMessage.corsWarning", self.requestForm).addClass("hidden");
                    if (xhrObj.status && xhrObj.status == 401) {
                        $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).removeClass("hidden");
                        $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
                    } else {
                        $(".authorizationSection .oauthMessage.oauthError", self.requestForm).removeClass("hidden");
                        $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
                    }
                }
            } else {
                $(".authorizationSection .oauthMessage.mixedContentWarning", self.requestForm).removeClass("hidden");
            }
        }

        function successHandler(data, status, xhrObj) {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.mixedContentWarning", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.corsWarning", self.requestForm).addClass("hidden");
            if (self.config.oauthFlow == "accessCode") {
                if (data.access_token) {
                    $(".authorizationSection .apimAuthUrl .accesscode .result", self.requestForm).val(data.access_token);
                } else {
                    $(".authorizationSection .apimAuthUrl .accesscode .result", self.requestForm).val(data);
                }
            } else {
                if (data.access_token) {
                    $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val(data.access_token);
                } else {
                    $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val(data);
                }
            }
            if (data.refresh_token) {
                self.refresh_token = data.refresh_token;
                $(".authorizationSection .refreshButton", self.requestForm).removeClass("hidden");
            } else {
                $(".authorizationSection .refreshButton", self.requestForm).addClass("hidden");
            }
        }

        var authurl = this.config.oauthTokenUrl;
        var scope = '';
        $.each($(".apimScopes .oauthscopes input[name='scope[]']:checked", self.requestForm), function () {
            scope += $(this).val() + ' ';
        });
        scope = scope.trim();
        var redirect_uri = '';
        if (requestForm.apimClientId) {
            var redirect_uris = window.appJson;
            redirect_uri = redirect_uris[0][requestForm.apimClientId];
        }
        if (this.config.oauthFlow == "application") {
            authurl += '?grant_type=client_credentials';
            if (scope) {
                authurl += '&scope=' + scope;
            }
        } else if (this.config.oauthFlow == "password") {
            var data = 'grant_type=password';
            if (scope) {
                data += '&scope=' + scope;
            }
            if (requestForm.apimUsername && requestForm.apimPassword) {
                data += '&username=' + requestForm.apimUsername + "&password=" + requestForm.apimPassword;
            }
        } else if (this.config.oauthFlow == "implicit") {
            authurl = this.config.oauthAuthUrl;
            authurl += '?response_type=token&client_id=' + requestForm.apimClientId + "&redirect_uri=" + redirect_uri;
            if (scope) {
                authurl += '&scope=' + scope;
            }
        } else if (this.config.oauthFlow == "accessCode") {
            authurl = this.config.oauthAuthUrl;
            authurl += '?response_type=code&client_id=' + requestForm.apimClientId + "&redirect_uri=" + redirect_uri;
            if (scope) {
                authurl += '&scope=' + scope;
            }
        }
        if (self.config.oauthFlow == "accessCode" || self.config.oauthFlow == "implicit") {
            window.open(authurl, '_blank');
        } else {
            // application or password flows we can invoke direct
            if (requestForm.apimClientId && requestForm.apimClientSecret) {
                headers['Authorization'] = "Basic " + btoa(requestForm.apimClientId + ":" + requestForm.apimClientSecret);
                headers["Content-Type"] = "application/x-www-form-urlencoded";
            }

            var oauthXhrOpts = {
                headers: headers,
                error: errorHandler,
                success: successHandler
            };
            var recentJQuery = false;
            if ($.fn.jquery) {
                var vernums = $.fn.jquery.split('.');
                if (parseInt(vernums[0]) == 1 && parseInt(vernums[1]) >= 9 || parseInt(vernums[0]) > 1) {
                    oauthXhrOpts.method = 'POST';
                    recentJQuery = true;
                }
            }
            if (recentJQuery == false) {
                oauthXhrOpts.type = 'POST';
            }
            if (self.config.oauthFlow == "password" && data) {
                oauthXhrOpts.data = data;
            }

            clearResponse();

            this.oauthXhrOpts = oauthXhrOpts;

            $.ajax(authurl, oauthXhrOpts);
        }
    };

    /**
     * Used to convert the access code into an access token when using accessCode oauth flow
     */
    Test.prototype.getToken = function () {
        var requestForm = {};
        this.requestForm.serializeArray().forEach(function (parameter) {
            requestForm[parameter.name] = parameter.value;
        });
        var headers = {};

        var self = this;

        function clearResponse() {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val('');
            $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
            $(".authorizationSection .refreshButton .refreshDone", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.mixedContentWarning", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.corsWarning", self.requestForm).addClass("hidden");
        }

        function errorHandler(xhrObj, textStatus, error) {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            // detect MixedContent
            if (self.config.oauthTokenUrl.lastIndexOf(window.location.protocol, 0) === 0) {
                $(".authorizationSection .oauthMessage.mixedContentWarning", self.requestForm).addClass("hidden");
                if (xhrObj.status && xhrObj.status == 0) {
                    $(".authorizationSection .oauthMessage.corsWarning", self.requestForm).removeClass("hidden");
                } else {
                    $(".authorizationSection .oauthMessage.corsWarning", self.requestForm).addClass("hidden");
                    if (xhrObj.status && xhrObj.status == 401) {
                        $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).removeClass("hidden");
                        $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
                    } else {
                        $(".authorizationSection .oauthMessage.oauthError", self.requestForm).removeClass("hidden");
                        $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
                    }
                }
            } else {
                $(".authorizationSection .oauthMessage.mixedContentWarning", self.requestForm).removeClass("hidden");
            }
        }

        function successHandler(data, status, xhrObj) {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.mixedContentWarning", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.corsWarning", self.requestForm).addClass("hidden");
            if (data.access_token) {
                $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val(data.access_token);
            } else {
                $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val(data);
            }
            if (data.refresh_token) {
                self.refresh_token = data.refresh_token;
            }
        }

        var authurl = this.config.oauthTokenUrl;
        var scope = '';
        $.each($(".apimScopes .oauthscopes input[name='scope[]']:checked", self.requestForm), function () {
            scope += $(this).val() + ' ';
        });
        scope = scope.trim();

        if (requestForm.apimClientId && requestForm.apimClientSecret) {
            headers['Authorization'] = "Basic " + btoa(requestForm.apimClientId + ":" + requestForm.apimClientSecret);
        }
        headers["Content-Type"] = "application/x-www-form-urlencoded";
        var oauthXhrOpts = {
            headers: headers,
            error: errorHandler,
            success: successHandler
        };
        var recentJQuery = false;
        if ($.fn.jquery) {
            var vernums = $.fn.jquery.split('.');
            if (parseInt(vernums[0]) == 1 && parseInt(vernums[1]) >= 9 || parseInt(vernums[0]) > 1) {
                oauthXhrOpts.method = 'POST';
                recentJQuery = true;
            }
        }
        if (recentJQuery == false) {
            oauthXhrOpts.type = 'POST';
        }
        var authCode = $(".authorizationSection .apimAuthUrl .accesscode .result", self.requestForm).val();
        var redirect_uri = '';
        if (requestForm.apimClientId) {
            var redirect_uris = window.appJson;
            redirect_uri = redirect_uris[0][requestForm.apimClientId];
        }
        oauthXhrOpts.data = "grant_type=authorization_code&code=" + encodeURIComponent(authCode) +
            "&redirect_uri=" + redirect_uri + "&scope=" + scope;

        clearResponse();

        $.ajax(authurl, oauthXhrOpts);
    };

    Test.prototype.refreshToken = function () {
        var requestForm = {};
        this.requestForm.serializeArray().forEach(function (parameter) {
            requestForm[parameter.name] = parameter.value;
        });
        var headers = {};

        var self = this;

        function clearResponse() {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val('');
            $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
            $(".authorizationSection .refreshButton .refreshDone", self.requestForm).addClass("hidden");
        }

        function errorHandler(xhrObj, textStatus, error) {
            if (xhrObj.status && xhrObj.status == 401) {
                $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
                $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).removeClass("hidden");
                $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
            } else {
                $(".authorizationSection .oauthMessage.oauthError", self.requestForm).removeClass("hidden");
                $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
            }
        }

        function successHandler(data, status, xhrObj) {
            $(".authorizationSection .refreshButton .refreshDone", self.requestForm).removeClass("hidden");
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.oauthError", self.requestForm).addClass("hidden");
            $(".authorizationSection .oauthMessage.unauthorized", self.requestForm).addClass("hidden");
            if (data.access_token) {
                $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val(data.access_token);
            } else {
                $(".authorizationSection .apimAuthUrl .accesstoken .result", self.requestForm).val(data);
            }
            if (data.refresh_token) {
                self.refresh_token = data.refresh_token;
            }
        }

        var authurl = this.config.oauthTokenUrl;

        headers["Content-Type"] = "application/x-www-form-urlencoded";
        var oauthXhrOpts = {
            headers: headers,
            error: errorHandler,
            success: successHandler
        };
        var recentJQuery = false;
        if ($.fn.jquery) {
            var vernums = $.fn.jquery.split('.');
            if (parseInt(vernums[0]) == 1 && parseInt(vernums[1]) >= 9 || parseInt(vernums[0]) > 1) {
                oauthXhrOpts.method = 'POST';
                recentJQuery = true;
            }
        }
        if (recentJQuery == false) {
            oauthXhrOpts.type = 'POST';
        }

        clearResponse();

        if (this.refresh_token) {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).addClass("hidden");
            oauthXhrOpts.data = "grant_type=refresh_token&refresh_token=" + this.refresh_token +
                "&client_id=" + requestForm.apimClientId + "&client_secret=" + requestForm.apimClientSecret;
        } else {
            $(".authorizationSection .oauthMessage.norefresh", self.requestForm).removeClass("hidden");
        }

        $.ajax(authurl, oauthXhrOpts);
    };

    Test.prototype.forgetToken = function () {
        $(".authorizationSection .apimAuthUrl .accesstoken .result", this.requestForm).val('');
    };

    Test.prototype.test = function () {
        var requestForm = {};
        this.requestForm.serializeArray().forEach(function (parameter) {
            requestForm[parameter.name] = parameter.value;
        });
        if (!this.api.basePath) {
            this.api.basePath = '';
        }

        var scheme = "https";
        if (requestForm.scheme) {
            scheme = requestForm.scheme;
        }
        var targetUrl = window.API.getEndpoint(this.api);
        if (!targetUrl) {
            targetUrl = scheme + "://" + this.api.host;
        }
        targetUrl = targetUrl + this.api.basePath + this.operation.path;

        // set up headers
        var headers = {};
        if (this.config.requiresBasicAuth) {
            headers['Authorization'] = "Basic " + btoa(requestForm.apimUsername + ":" + requestForm.apimPassword);
        }
        if (this.config.requiresOauth && requestForm.authToken) {
            headers["Authorization"] = "Bearer " + requestForm.authToken;
        }
        if (this.config.requiresClientId && this.config.clientIdLocation == "header" && requestForm.apimClientId) {
            if (this.config.clientIdName) {
                headers[this.config.clientIdName] = requestForm.apimClientId;
            } else {
                headers["X-IBM-Client-Id"] = requestForm.apimClientId;
            }
        }
        if (this.config.requiresClientSecret && this.config.clientSecretLocation == "header" && requestForm.apimClientSecret) {
            if (this.config.clientSecretName) {
                headers[this.config.clientSecretName] = requestForm.apimClientSecret;
            } else {
                headers["X-IBM-Client-Secret"] = requestForm.apimClientSecret;
            }
        }

        if (this.config.soapAction !== undefined) {
            headers["SOAPAction"] = this.config.soapAction;
        }
        // is this SOAP? if so, ditch the operationId from the end...
        if (this.operation.definition['x-ibm-soap'] && this.operation.definition && this.operation.definition.operationId && targetUrl.endsWith("/" + this.operation.definition.operationId)) {
            targetUrl = targetUrl.substring(0, targetUrl.length - (this.operation.definition.operationId.length + 1));
        }

        var parameters = [];
        if (this.operation.definition.parameters) {
            parameters = parameters.concat(this.operation.definition.parameters);
        }
        if (this.api.paths[this.operation.path].parameters) {
            parameters = parameters.concat(this.api.paths[this.operation.path].parameters);
        }

        // path parameters
        var pathParameters = parameters.filter(function (parameter) {
            return (parameter.in == "path");
        });
        if (pathParameters.length > 0) {
            pathParameters.forEach(function (parameter) {
                targetUrl = targetUrl.replace("{" + parameter.name + "}", requestForm['param' + parameter.name]);
            });
        }
        // remove double //
        targetUrl = targetUrl.replace(/(https?:\/\/)|(\/)+/g, "$1$2");

        // query parameters
        var queryParameters = parameters.filter(function (parameter) {
            return (parameter.in == "query");
        });
        var queryParametersAdded = (targetUrl.indexOf('?') >= 0);
        if (queryParameters.length > 0) {
            targetUrl += (queryParametersAdded) ? "&" : "?";
            queryParameters.forEach(function (parameter) {
                if (parameter.name) {
                    // if boolean then must be set to true or false
                    if ((requestForm['param' + parameter.name] !== undefined && (!parameter.type || (parameter.type != "boolean" && !parameter.enum && requestForm['param' + parameter.name]))) || (parameter.type && parameter.type == "boolean" && (requestForm['param' + parameter.name] == "true" || requestForm['param' + parameter.name] == "false")) || (parameter.enum && parameter.enum.indexOf(requestForm['param' + parameter.name]) != -1) || (parameter.enum && parameter.type === "integer" && parameter.enum.indexOf(parseInt(requestForm['param' + parameter.name])) != -1)) {
                        targetUrl += parameter.name + "=" + requestForm['param' + parameter.name] + "&";
                        queryParametersAdded = true;
                    } else if (parameter.type && parameter.type == "boolean" && parameter.required) {
                        // purely here to catch required boolean fields that are set to false
                        targetUrl += parameter.name + "=false&";
                        queryParametersAdded = true;
                    }
                }
            });
            targetUrl = targetUrl.substring(0, targetUrl.length - 1);
        }
        if (this.config.requiresClientId && this.config.clientIdLocation == "query" && requestForm.apimClientId) {
            var clientIdName = 'client_id';
            if (this.config.clientIdName) {
                clientIdName = this.config.clientIdName;
            }
            if (queryParametersAdded) {
                targetUrl += "&" + clientIdName + "=" + requestForm.apimClientId;
            } else {
                targetUrl += "?" + clientIdName + "=" + requestForm.apimClientId;
                queryParametersAdded = true;
            }
        }
        if (this.config.requiresClientSecret && this.config.clientSecretLocation == "query" && requestForm.apimClientSecret) {
            var clientSecretName = 'client_secret';
            if (this.config.clientSecretName) {
                clientSecretName = this.config.clientSecretName;
            }
            if (queryParametersAdded) {
                targetUrl += "&" + clientSecretName + "=" + requestForm.apimClientSecret;
            } else {
                targetUrl += "?" + clientSecretName + "=" + requestForm.apimClientSecret;
                queryParametersAdded = true;
            }
        }

        // headers
        if (requestForm['content-type']) {
            headers['content-type'] = requestForm['content-type'];
        }
        headers['accept'] = requestForm['accept'];
        var headerParameters = parameters.filter(function (parameter) {
            return (parameter.in == "header");
        });
        if (headerParameters.length > 0) {
            headerParameters.forEach(function (parameter) {
                if (
                    // parameter type only allowed to be undefined if it's type is either boolean, enum, or not assigned.
                    (requestForm['param' + parameter.name] !== undefined && (!parameter.type || (parameter.type != "boolean" &&!parameter.enum)) && (requestForm['param' + parameter.name].length > 0)) ||

                    // parameter type boolean can only be true or false. 
                    (parameter.type && parameter.type == "boolean" && (requestForm['param' + parameter.name] == "true" || requestForm ['param' + parameter.name] == "false")) ||

                    // parameter is enum and param value exists in it
                    (parameter.enum && parameter.enum.indexOf(requestForm['param' + parameter.name]) != -1)
                ) {
                    headers[parameter.name] = requestForm['param' + parameter.name];
                } else if (parameter.type && parameter.type == "boolean" && parameter.required) {
                    // purely here to catch required boolean fields that are set to false
                    headers[parameter.name] = "false";
                }
            });
        }

        // handle external security
        if (!$.isEmptyObject(this.config.externalApiKeys)) {
            $.each(this.config.externalApiKeys, function (key, value) {
                if (value.in == 'query') {
                    if (queryParametersAdded) {
                        targetUrl += "&" + value.name + "=" + requestForm[key];
                    } else {
                        targetUrl += "?" + value.name + "=" + requestForm[key];
                        queryParametersAdded = true;
                    }
                } else if (value.in == 'header') {
                    headers[value.name] = requestForm[key];
                }
            });
        }

        // body
        var body;
        var bodyParameters = parameters.filter(function (parameter) {
            return (parameter.in == "body");
        });
        var formDataParameters = parameters.filter(function (parameter) {
            return (parameter.in == "formData");
        });
        if (bodyParameters.length > 0) {
            // use the first one only
            body = requestForm['param' + bodyParameters[0].name];
        } else if (formDataParameters.length > 0) {
            var formDataArray = [];
            formDataParameters.forEach(function (parameter) {
                if ((requestForm['param' + parameter.name] !== undefined && (!parameter.type || (parameter.type != "boolean" && !parameter.enum))) || (parameter.type && parameter.type == "boolean" && (requestForm['param' + parameter.name] == "true" || requestForm['param' + parameter.name] == "false")) || (parameter.enum && parameter.enum.indexOf(requestForm['param' + parameter.name]) != -1)) {
                    formDataArray.push(encodeURIComponent(parameter.name).replace(/%20/g, '+') + '=' + encodeURIComponent(requestForm['param' + parameter.name]).replace(/%20/g, '+'));
                } else if (parameter.type && parameter.type == "boolean" && parameter.required) {
                    // purely here to catch required boolean fields that are set to false
                    formDataArray.push(encodeURIComponent(parameter.name).replace(/%20/g, '+') + "=" + encodeURIComponent("false"));
                }
            });
            body = formDataArray.join('&');
        }

        var self = this;

        function clearResponse() {
            $(".requestDetails", self.responseSection).text("");
            $(".responseDetails.responseStatus", self.responseSection).text("");
            $(".responseDetails.responseHeaders", self.responseSection).text("");
            $(".responseDetails.responseBody", self.responseSection).text("");
            $(".responseDetails.corsWarning", self.responseSection).addClass("hidden");
            self.responseSection.addClass("hidden");
        }

        function stringifyRequest() {
            $(".requestDetails.requestUrl", self.responseSection).text(self.operation.verb.toUpperCase() + " " + self.targetUrl);
            var requestHeaders = "";
            if (self.xhrOpts && self.xhrOpts.headers) {
                Object.keys(self.xhrOpts.headers).forEach(function (headerName) {
                    if (headerName == 'X-IBM-Client-Secret' || (self.config.clientSecretName && headerName == self.config.clientSecretName)) {
                        requestHeaders += headerName + ": ââââââââââââââââââââââââââââââââââââ\n";
                    } else if (headerName == 'Authorization') {
                        if (self.xhrOpts.headers[headerName].toLowerCase().indexOf("bearer") >= 0) {
                            requestHeaders += headerName + ": Bearer ââââââââââââââââââââââââââââââââââââ\n";
                        } else {
                            requestHeaders += headerName + ": ââââââââââââââââââââââââââââââââââââ\n";
                        }
                    } else {
                        requestHeaders += headerName + ": " + self.xhrOpts.headers[headerName] + "\n";
                    }
                });
                $(".requestDetails.requestHeaders", self.responseSection).text(requestHeaders);
            }
        }

        function stringifyResponse(xhrObj) {
            /**
             * XmlHttpRequest's getAllResponseHeaders() method returns a string of response
             * headers according to the format described here:
             * http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method
             * This method parses that string into a user-friendly key/value pair object.
             */
            function parseResponseHeaders(headerStr) {
                var headers = {};
                if (!headerStr) {
                    return headers;
                }
                var headerPairs = headerStr.split('\u000d\u000a');
                for (var i = 0; i < headerPairs.length; i++) {
                    var headerPair = headerPairs[i];
                    // Can't use split() here because it does the wrong thing
                    // if the header value has the string ": " in it.
                    var index = headerPair.indexOf('\u003a\u0020');
                    if (index > 0) {
                        var key = headerPair.substring(0, index);
                        headers[key] = headerPair.substring(index + 2);
                    }
                }
                return headers;
            }

            $(".responseDetails.responseStatus", self.responseSection).text(xhrObj.status + " " + xhrObj.statusText);
            // detect MixedContent
            if (self.targetUrl.lastIndexOf(window.location.protocol, 0) === 0) {
                $(".responseDetails.mixedContentWarning", self.responseSection).addClass("hidden");
                if (xhrObj.status == 0) {
                    $(".responseDetails.corsWarning", self.responseSection).removeClass("hidden");
                } else {
                    $(".responseDetails.corsWarning", self.responseSection).addClass("hidden");
                }
            } else {
                $(".responseDetails.mixedContentWarning", self.responseSection).removeClass("hidden");
            }

            var responseHeaders = xhrObj.getAllResponseHeaders();
            var responseHeaderArray = parseResponseHeaders(responseHeaders);
            if (responseHeaders && responseHeaders !== "") {
                $(".responseDetails.responseHeaders", self.responseSection).text(responseHeaders);
            }
            if (xhrObj.responseText && xhrObj.responseText !== "") {
                if ((responseHeaderArray['content-type'] || responseHeaderArray['Content-Type']) && (responseHeaderArray['content-type'] == 'application/json' || responseHeaderArray['Content-Type'] == 'application/json')) {
                    var parsedJsonResponse = window.vkbeautify.json(xhrObj.responseText);
                    if (!parsedJsonResponse) {
                        parsedJsonResponse = xhrObj.responseText;
                    }
                    $(".responseDetails.responseBody", self.responseSection).text(parsedJsonResponse);
                } else if ((responseHeaderArray['content-type'] || responseHeaderArray['Content-Type']) && (responseHeaderArray['content-type'] == 'application/xml' || responseHeaderArray['Content-Type'] == 'application/xml')) {
                    var parsedXmlResponse = window.vkbeautify.xml(xhrObj.responseText);
                    if (!parsedXmlResponse) {
                        parsedXmlResponse = xhrObj.responseText;
                    }
                    $(".responseDetails.responseBody", self.responseSection).text(parsedXmlResponse);
                } else {
                    $(".responseDetails.responseBody", self.responseSection).text(xhrObj.responseText);
                }
            }
            $('pre code', self.responseSection).each(function (i, block) {
                if (window.disable_highlightjs != 1) {
                    hljs.highlightBlock(block);
                }
            });
        }

        function errorHandler(xhrObj, textStatus, error) {
            stringifyRequest();
            stringifyResponse(xhrObj);
            self.responseSection.removeClass("hidden");
        }

        function successHandler(data, status, xhrObj) {
            stringifyRequest();
            stringifyResponse(xhrObj);
            self.responseSection.removeClass("hidden");
        }

        var xhrOpts = {
            headers: headers,
            error: errorHandler,
            success: successHandler
        };
        var recentJQuery = false;
        if ($.fn.jquery) {
            var vernums = $.fn.jquery.split('.');
            if (parseInt(vernums[0]) == 1 && parseInt(vernums[1]) >= 9 || parseInt(vernums[0]) > 1) {
                xhrOpts.method = this.operation.verb;
                recentJQuery = true;
            }
        }
        if (recentJQuery == false) {
            xhrOpts.type = this.operation.verb;
        }
        if (body) xhrOpts.data = body;

        clearResponse();

        self.targetUrl = targetUrl;
        self.xhrOpts = xhrOpts;

        $.ajax(targetUrl, xhrOpts);
    };

    window.Test = Test;

}(jQuery));
;
/**
 * @file
 * A JavaScript file for the theme.
 * This file should be used as a template for your other js files.
 * It defines a drupal behavior the "Drupal way".
 *
 */

// JavaScript should be made compatible with libraries other than jQuery by
// wrapping it with an "anonymous closure". See:
// - https://drupal.org/node/1446420
// - http://www.adequatelygood.com/2010/3/JavaScript-Module-Pattern-In-Depth

(function ($, Drupal, window, document, undefined) {
  'use strict';

  // To understand behaviors, see https://drupal.org/node/756722#behaviors
  Drupal.behaviors.hideSubmitBlockit = {
    attach: function(context) {
      var timeoutId = null;
      $('form', context).once('hideSubmitButton', function () {
        var $form = $(this);

        // Bind to input elements.
        if (Drupal.settings.hide_submit.hide_submit_method === 'indicator') {
          // Replace input elements with buttons.
          $('input.form-submit', $form).each(function(index, el) {
            var attrs = {};

            $.each($(this)[0].attributes, function(idx, attr) {
                attrs[attr.nodeName] = attr.nodeValue;
            });

            $(this).replaceWith(function() {
                return $("<button/>", attrs).append($(this).attr('value'));
            });
          });
          // Add needed attributes to the submit buttons.
          $('button.form-submit', $form).each(function(index, el) {
            $(this).addClass('ladda-button button').attr({
              'data-style': Drupal.settings.hide_submit.hide_submit_indicator_style,
              'data-spinner-color': Drupal.settings.hide_submit.hide_submit_spinner_color,
              'data-spinner-lines': Drupal.settings.hide_submit.hide_submit_spinner_lines
            });
          });
          Ladda.bind('.ladda-button', $form, {
            timeout: Drupal.settings.hide_submit.hide_submit_reset_time
          });
        }
        else {
          $('input.form-submit, button.form-submit', $form).click(function (e) {
            var el = $(this);
            el.after('<input type="hidden" name="' + el.attr('name') + '" value="' + el.attr('value') + '" />');
            return true;
          });
        }

        // Bind to form submit.
        $('form', context).submit(function (e) {
          var $inp;
          if (!e.isPropagationStopped()) {
            if (Drupal.settings.hide_submit.hide_submit_method === 'disable') {
              $('input.form-submit, button.form-submit', $form).attr('disabled', 'disabled').each(function (i) {
                var $button = $(this);
                if (Drupal.settings.hide_submit.hide_submit_css) {
                  $button.addClass(Drupal.settings.hide_submit.hide_submit_css);
                }
                if (Drupal.settings.hide_submit.hide_submit_abtext) {
                  $button.val($button.val() + ' ' + Drupal.settings.hide_submit.hide_submit_abtext);
                }
                $inp = $button;
              });

              if ($inp && Drupal.settings.hide_submit.hide_submit_atext) {
                $inp.after('<span class="hide-submit-text">' + Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_atext) + '</span>');
              }
            }
            else if (Drupal.settings.hide_submit.hide_submit_method !== 'indicator'){
              var pdiv = '<div class="hide-submit-text' + (Drupal.settings.hide_submit.hide_submit_hide_css ? ' ' + Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_hide_css) + '"' : '') + '>' + Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_hide_text) + '</div>';
              if (Drupal.settings.hide_submit.hide_submit_hide_fx) {
                $('input.form-submit, button.form-submit', $form).addClass(Drupal.settings.hide_submit.hide_submit_css).fadeOut(100).eq(0).after(pdiv);
                $('input.form-submit, button.form-submit', $form).next().fadeIn(100);
              }
              else {
                $('input.form-submit, button.form-submit', $form).addClass(Drupal.settings.hide_submit.hide_submit_css).hide().eq(0).after(pdiv);
              }
            }
            // Add a timeout to reset the buttons (if needed).
            if (Drupal.settings.hide_submit.hide_submit_reset_time) {
              timeoutId = window.setTimeout(function() {
                hideSubmitResetButtons(null, $form);
              }, Drupal.settings.hide_submit.hide_submit_reset_time);
            }
          }
          return true;
        });
      });

      // Bind to clientsideValidationFormHasErrors to support clientside validation.
      // $(document).bind('clientsideValidationFormHasErrors', function(event, form) {
        //hideSubmitResetButtons(event, form.form);
      // });

      // Reset all buttons.
      function hideSubmitResetButtons(event, form) {
        // Clear timer.
        window.clearTimeout(timeoutId);
        timeoutId = null;
        switch (Drupal.settings.hide_submit.hide_submit_method) {
          case 'disable':
            $('input.' + Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_css) + ', button.' + Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_css), form)
              .each(function (i, el) {
                $(el).removeClass(Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_hide_css))
                  .removeAttr('disabled');
              });
            $('.hide-submit-text', form).remove();
            break;

          case 'indicator':
            Ladda.stopAll();
            break;

          default:
            $('input.' + Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_css) + ', button.' + Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_css), form)
              .each(function (i, el) {
                $(el).stop()
                  .removeClass(Drupal.checkPlain(Drupal.settings.hide_submit.hide_submit_hide_css))
                  .show();
              });
            $('.hide-submit-text', form).remove();
        }
      }
    }
  };

})(jQuery, Drupal, window, this.document);
;
